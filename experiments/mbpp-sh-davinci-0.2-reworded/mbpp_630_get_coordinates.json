{
  "name": "mbpp_630_get_coordinates",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to extract all the adjacent coordinates of the given coordinate list.\n#\n# $1 is a space-separated list\nget_coordinates() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    get_coordinates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 4\") = \"2 3\\n2 4\\n2 5\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\" ]]\n    [[ $(candidate \"4 5\") = \"3 4\\n3 5\\n3 6\\n4 4\\n4 5\\n4 6\\n5 4\\n5 5\\n5 6\" ]]\n    [[ $(candidate \"5 6\") = \"4 5\\n4 6\\n4 7\\n5 5\\n5 6\\n5 7\\n6 5\\n6 6\\n6 7\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local coordinates=$1\n    local x=0\n    local y=0\n    local result=\"\"\n\n    for coordinate in $coordinates; do\n        x=$(echo $coordinate | cut -d, -f1)\n        y=$(echo $coordinate | cut -d, -f2)\n\n        result=\"$result $((x-1)),$((y-1)) $((x-1)),$y $((x-1)),$((y+1)) $x,$((y-1)) $x,$((y+1)) $((x+1)),$((y-1)) $((x+1)),$y $((x+1)),$((y+1))\"\n    done\n\n    echo $result",
    "    local coordinates=$1\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo $((x-1)),$((y-1)) $((x-1)),$y $((x-1)),$((y+1)) $x,$((y-1)) $x,$((y+1)) $((x+1)),$((y-1)) $((x+1)),$y $((x+1)),$((y+1))\n    done",
    "    local coordinates=$1\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo \"$((x-1)),$((y-1))\"\n        echo \"$((x-1)),$y\"\n        echo \"$((x-1)),$((y+1))\"\n        echo \"$x,$((y-1))\"\n        echo \"$x,$((y+1))\"\n        echo \"$((x+1)),$((y-1))\"\n        echo \"$((x+1)),$y\"\n        echo \"$((x+1)),$((y+1))\"\n    done",
    "  echo \"$1\" | sed -e 's/[^0-9 ]//g' | tr ' ' '\\n' | sort -u",
    "    local -a coordinates\n    local -a adjacent_coordinates\n    local -a adjacent_coordinate\n    local -a coordinate\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a x_coordinate\n    local -a y_coordinate\n    local -a x_adjacent_coordinates\n    local -a y_adjacent_coordinates\n    local -a x_adjacent_coordinate\n    local -a y_adjacent_coordinate\n    local -a x_adjacent_coordinate_list\n    local -a y_adjacent_coordinate_list\n    local -a adjacent_coordinate_list\n    local -a adjacent_coordinate_list_list\n    local -a adjacent_coordinate_list_list_list\n    local -a adjacent_coordinate_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n    local -a adjacent_coordinate_list_list_list_list_list_list_list_list_list_list_list_list_",
    "    local coordinates=$1\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo $((x - 1)),$((y - 1))\n        echo $((x - 1)),$y\n        echo $((x - 1)),$((y + 1))\n        echo $x,$((y - 1))\n        echo $x,$((y + 1))\n        echo $((x + 1)),$((y - 1))\n        echo $((x + 1)),$y\n        echo $((x + 1)),$((y + 1))\n    done",
    "    local coordinates=$1\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo $(($x - 1)),$y\n        echo $(($x + 1)),$y\n        echo $x,$(($y - 1))\n        echo $x,$(($y + 1))\n    done",
    "  local coordinates=$1\n  local x=0\n  local y=0\n  local coordinates_list=()\n  for coordinate in $coordinates; do\n    if [ $x -eq 0 ]; then\n      x=$coordinate\n    else\n      y=$coordinate\n      coordinates_list+=(\"$x $y\")\n      x=0\n    fi\n  done\n  echo \"${coordinates_list[@]}\"",
    "    local coord_list=\"$1\"\n    local coord\n    local x\n    local y\n    local adj_coord\n    local adj_coord_list\n    for coord in $coord_list; do\n        x=${coord:0:1}\n        y=${coord:1:1}\n        adj_coord_list=\"$adj_coord_list $x$((y-1)) $x$((y+1)) $((x-1))$y $((x+1))$y\"\n    done\n    echo \"$adj_coord_list\"",
    "    local coordinates=\"$1\"\n    local x y\n    for coordinate in $coordinates; do\n        x=$(echo $coordinate | cut -d, -f1)\n        y=$(echo $coordinate | cut -d, -f2)\n        echo \"$((x-1)),$((y-1))\"\n        echo \"$((x-1)),$y\"\n        echo \"$((x-1)),$((y+1))\"\n        echo \"$x,$((y-1))\"\n        echo \"$x,$((y+1))\"\n        echo \"$((x+1)),$((y-1))\"\n        echo \"$((x+1)),$y\"\n        echo \"$((x+1)),$((y+1))\"\n    done",
    "    local list=\"$1\"\n    local coordinates=\"\"\n    local coordinate=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local i=\"\"\n    local j=\"\"\n    local k=\"\"\n    local x_min=\"\"\n    local x_max=\"\"\n    local y_min=\"\"\n    local y_max=\"\"\n    local z_min=\"\"\n    local z_max=\"\"\n    local x_min_coordinate=\"\"\n    local x_max_coordinate=\"\"\n    local y_min_coordinate=\"\"\n    local y_max_coordinate=\"\"\n    local z_min_coordinate=\"\"\n    local z_max_coordinate=\"\"\n    local x_min_coordinate_adjacent=\"\"\n    local x_max_coordinate_adjacent=\"\"\n    local y_min_coordinate_adjacent=\"\"\n    local y_max_coordinate_adjacent=\"\"\n    local z_min_coordinate_adjacent=\"\"\n    local z_max_coordinate_adjacent=\"\"\n\n    for coordinate in $list; do\n        x=$(echo $coordinate | cut -d, -f1)\n        y=$(echo $coordinate | cut -d, -f2)\n        z=$(echo $coordinate | cut -d, -f3)\n\n        if [ -z \"$x_min\" ] || [ \"$x\" -lt \"$x_min\" ]; then\n            x_min=\"$x\"\n            x_min_coordinate=\"$coordinate\"\n        fi\n\n        if [ -z \"$x_max\" ] || [ \"$x\" -gt \"$x_max\" ]; then\n            x_max=\"$x\"\n            x_max_coordinate=\"$coordinate\"\n        fi\n\n        if [ -z \"$y_min\" ] || [ \"$y\" -lt \"$y_min\" ]; then\n            y_min=\"$y\"\n            y_min_coordinate=\"$coordinate\"\n        fi\n\n        if [ -z \"$y_max\" ] || [ \"$y\" -gt \"$y_max\" ]; then\n            y_max=\"$y\"\n            y_max_coordinate=\"$coordinate\"\n        fi\n\n        if [ -z \"$z_min\" ] || [ \"$z\"",
    "    local -a coordinates\n    local -a adjacent\n    local -a result\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -i dddd\n   ",
    "    local coordinates=$1\n    local x=0\n    local y=0\n    local x_min=0\n    local x_max=0\n    local y_min=0\n    local y_max=0\n    local coordinates_adjacent=()\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        if [ $x -lt $x_min ]; then\n            x_min=$x\n        fi\n        if [ $x -gt $x_max ]; then\n            x_max=$x\n        fi\n        if [ $y -lt $y_min ]; then\n            y_min=$y\n        fi\n        if [ $y -gt $y_max ]; then\n            y_max=$y\n        fi\n    done\n    for (( x=$x_min-1; x<=$x_max+1; x++ )); do\n        for (( y=$y_min-1; y<=$y_max+1; y++ )); do\n            coordinates_adjacent+=(\"$x,$y\")\n        done\n    done\n    echo \"${coordinates_adjacent[@]}\"",
    "    local coordinates=$1\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo $((x-1)),$((y-1)) $((x-1)),$y $((x-1)),$((y+1)) $x,$((y-1)) $x,$((y+1)) $((x+1)),$((y-1)) $((x+1)),$y $((x+1)),$((y+1))\n    done",
    "    local x y\n    for i in $1; do\n        x=${i:0:1}\n        y=${i:1:1}\n        echo $((x-1))$y $((x+1))$y $x$((y-1)) $x$((y+1))\n    done",
    "    local x y\n    for xy in $1; do\n        x=${xy%%,*}\n        y=${xy##*,}\n        echo \"$x,$((y-1))\"\n        echo \"$x,$((y+1))\"\n        echo \"$((x-1)),$y\"\n        echo \"$((x+1)),$y\"\n    done",
    "    local coords=\"$1\"\n    local x\n    local y\n    local x_min\n    local x_max\n    local y_min\n    local y_max\n    local x_coord\n    local y_coord\n    local x_coord_min\n    local x_coord_max\n    local y_coord_min\n    local y_coord_max\n    local x_coord_min_adj\n    local x_coord_max_adj\n    local y_coord_min_adj\n    local y_coord_max_adj\n    local x_coord_adj\n    local y_coord_adj\n    local adj_coords\n    local adj_coords_sorted\n    local adj_coords_sorted_uniq\n    local adj_coords_sorted_uniq_joined\n\n    # Get the x and y coordinates\n    x=$(echo \"$coords\" | cut -d ',' -f 1)\n    y=$(echo \"$coords\" | cut -d ',' -f 2)\n\n    # Get the min and max x and y coordinates\n    x_min=$(echo \"$x\" | sort -n | head -n 1)\n    x_max=$(echo \"$x\" | sort -n | tail -n 1)\n    y_min=$(echo \"$y\" | sort -n | head -n 1)\n    y_max=$(echo \"$y\" | sort -n | tail -n 1)\n\n    # Get the x and y coordinates of the min and max x and y coordinates\n    x_coord=$(echo \"$coords\" | cut -d ',' -f 1 | sort -n)\n    y_coord=$(echo \"$coords\" | cut -d ',' -f 2 | sort -n)\n    x_coord_min=$(echo \"$x_coord\" | head -n 1)\n    x_coord_max=$(echo \"$x_coord\" | tail -n 1)\n    y_coord_min=$(echo \"$y_coord\" | head -n 1)\n    y_coord_max=$(echo \"$y_coord\" | tail -n 1)\n\n    # Get the adjacent coordinates of the min and max x and y coordinates\n    x_coord_min_adj=$(",
    "    local coordinates=\"$1\"\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo $((x-1)),$((y-1)) $((x-1)),$y $((x-1)),$((y+1)) $x,$((y-1)) $x,$((y+1)) $((x+1)),$((y-1)) $((x+1)),$y $((x+1)),$((y+1))\n    done",
    "    local -a coordinates\n    local -a coordinates_list\n    local -a coordinates_list_adjacent\n    local -a coordinates_list_adjacent_unique\n    local -a coordinates_list_adjacent_unique_sorted\n    local -a coordinates_list_adjacent_unique_sorted_string\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted_string\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted_string_adjacent_unique_sorted_string\n    local -a coordinates_list_adjacent_unique_sorted_string_adjacent_unique_sorted",
    "    local coordinates=\"$1\"\n    local x y\n    for coordinate in $coordinates; do\n        x=${coordinate%%,*}\n        y=${coordinate##*,}\n        echo \"$((x-1)),$((y-1))\"\n        echo \"$((x-1)),$y\"\n        echo \"$((x-1)),$((y+1))\"\n        echo \"$x,$((y-1))\"\n        echo \"$x,$((y+1))\"\n        echo \"$((x+1)),$((y-1))\"\n        echo \"$((x+1)),$y\"\n        echo \"$((x+1)),$((y+1))\"\n    done"
  ]
}
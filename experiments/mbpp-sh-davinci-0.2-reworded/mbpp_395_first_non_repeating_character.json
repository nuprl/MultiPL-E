{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the first non-repeated character in a given string.\n#\n# $1 is a string\nfirst_non_repeating_character() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    first_non_repeating_character \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"abcabc\") = \"None\" ]]\n    [[ $(candidate \"abc\") = \"a\" ]]\n    [[ $(candidate \"ababc\") = \"c\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local string=$1\n    local char\n    for ((i=0; i<${#string}; i++)); do\n        char=${string:$i:1}\n        if [[ \"${string/$char/}\" == \"$string\" ]]; then\n            echo \"$char\"\n            return\n        fi\n    done\n    echo \"No non-repeating characters found.\"",
    "  local string=\"$1\"\n  local char\n  for (( i=0; i<${#string}; i++ )); do\n    char=\"${string:i:1}\"\n    if [[ \"${string/$char/}\" == \"$string\" ]]; then\n      echo \"$char\"\n      return\n    fi\n  done",
    "    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n    local -i count=0\n    local -i found=0\n    local -a arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n    local -a arr66\n    local",
    "    local string=$1\n    local -i i\n    local -i j\n    local -i len=${#string}\n    local -i count\n    local char\n\n    for (( i=0; i<len; i++ )); do\n        char=${string:i:1}\n        count=0\n        for (( j=0; j<len; j++ )); do\n            if [[ ${string:j:1} == $char ]]; then\n                (( count++ ))\n            fi\n        done\n        if [[ $count -eq 1 ]]; then\n            echo $char\n            return\n        fi\n    done\n    echo \"No non-repeating character found\"",
    "    local -i i=0\n    local -i j=0\n    local -i len=${#1}\n    local -i count=0\n    local -i index=0\n    local -i flag=0\n    local -a arr\n    local -a arr1\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65",
    "    local string=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i len=${#string}\n    local -i count=0\n    local -i found=0\n    local -i index=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i",
    "  local -a characters\n  local -a counts\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i count=0\n  local -i index=0\n  local -i first_non_repeating_index=0\n  local -i first_non_repeating_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_index=0\n  local -i",
    "    local string=\"$1\"\n    local char\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:i:1}\"\n        if [[ \"${string/$char/}\" == \"$string\" ]]; then\n            echo \"$char\"\n            return\n        fi\n    done\n    echo \"No non-repeating characters found\"",
    "    local string=\"$1\"\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"${string/$char/}\" == \"${string}\" ]]; then\n            echo \"$char\"\n            return\n        fi\n    done\n    echo \"No non-repeating characters found.\"",
    "    local string=\"$1\"\n    local char\n    local count\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:i:1}\"\n        count=\"$(grep -o \"$char\" <<< \"$string\" | wc -l)\"\n        if [[ $count -eq 1 ]]; then\n            echo \"$char\"\n            return\n        fi\n    done\n    echo \"No non-repeating characters found.\"",
    "    local string=\"$1\"\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:i:1}\"\n        if [[ \"${string/$char}\" == \"${string}\" ]]; then\n            echo \"$char\"\n            return\n        fi\n    done",
    "    local string=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i length=${#string}\n    local -i count=0\n    local -i flag=0\n    local -i index=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n   ",
    "    local string=\"$1\"\n    local char\n    local count\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        count=$(echo \"$string\" | grep -o \"$char\" | wc -l)\n        if [ \"$count\" -eq 1 ]; then\n            echo \"$char\"\n            return 0\n        fi\n    done\n\n    return 1",
    "    local string=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i length=${#string}\n    local -i count=0\n    local -i found=0\n    local -i index=0\n    local -i first=0\n    local -i last=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_count=0\n    local -i last_count=0\n    local -i first_found=0\n    local -i last_found=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_index=0\n    local -i first_index=0\n    local -i last_",
    "    local string=\"$1\"\n    local char\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:i:1}\"\n        if [[ \"${string/$char/}\" == \"${string}\" ]]; then\n            echo \"$char\"\n            return\n        fi\n    done\n    echo \"No non-repeating characters found.\"",
    "  local string=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=${#string}\n  local -i count=0\n  local -i found=0\n  local -i index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_count=0\n  local -i first_non_repeating_character_found=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating_character_index=0\n  local -i first_non_repeating",
    "  local string=\"$1\"\n  local char\n  local -i i\n  local -i j\n  local -i len=${#string}\n  local -i found=0\n\n  for ((i=0; i<len; i++)); do\n    char=\"${string:i:1}\"\n    found=0\n    for ((j=0; j<len; j++)); do\n      if [[ \"${string:j:1}\" == \"$char\" ]]; then\n        ((found++))\n      fi\n    done\n    if [[ $found -eq 1 ]]; then\n      echo \"$char\"\n      return 0\n    fi\n  done\n  return 1",
    "    local string=\"$1\"\n    local char\n    local count\n    for (( i=0; i<${#string}; i++ )); do\n        char=${string:$i:1}\n        count=$(echo \"$string\" | grep -o \"$char\" | wc -l)\n        if [ $count -eq 1 ]; then\n            echo \"$char\"\n            return 0\n        fi\n    done\n    return 1",
    "    local string=\"$1\"\n    local -a char_counts\n    local i\n    local -i char_count\n    local -i j\n    local -i k\n\n    for ((i=0; i<${#string}; i++)); do\n        char_counts[${string:$i:1}]=0\n    done\n\n    for ((i=0; i<${#string}; i++)); do\n        char_counts[${string:$i:1}]=$((char_counts[${string:$i:1}] + 1))\n    done\n\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${char_counts[${string:$i:1}]} -eq 1 ]]; then\n            echo \"${string:$i:1}\"\n            return\n        fi\n    done",
    "    local string=$1\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=${string:$i:1}\n        if [[ \"${string/$char/}\" == \"$string\" ]]; then\n            echo \"$char\"\n            return 0\n        fi\n    done\n    return 1"
  ]
}
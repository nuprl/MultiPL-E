{
  "name": "mbpp_412_remove_odd",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to remove odd numbers from a given list.\n#\n# $1 is a space-separated list\nremove_odd() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    remove_odd \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\") = \"2\" ]]\n    [[ $(candidate \"2 4 6\") = \"2 4 6\" ]]\n    [[ $(candidate \"10 20 3\") = \"10 20\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local new_list=\"\"\n    for i in $list; do\n        if [ $(($i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list",
    "    local list=\"$1\"\n    local new_list=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo \"$new_list\"",
    "    local list=\"$1\"\n    local new_list=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo \"$new_list\"",
    "  local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $((i % 2)) -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result",
    "    local list=$1\n    local new_list=\"\"\n    for i in $list; do\n        if [ $((i%2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list",
    "  local list=\"$1\"\n  local result=\"\"\n\n  for i in $list; do\n    if [ $(($i % 2)) -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n\n  echo \"$result\"",
    "    local list=$1\n    local result=''\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local new_list=\"\"\n    for i in $list; do\n        if [ $(($i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list",
    "    local list=$1\n    local new_list=''\n\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n\n    echo $new_list",
    "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "    # $1 is a space-separated list\n    # $2 is the separator\n    # $3 is the output separator\n    # $4 is the output variable name\n    local input=\"$1\"\n    local sep=\"$2\"\n    local out_sep=\"$3\"\n    local out_var=\"$4\"\n    local out=\"\"\n    for i in $(echo \"$input\" | tr \"$sep\" \"\\n\"); do\n        if [ $(expr $i % 2) -eq 0 ]; then\n            out=\"$out$out_sep$i\"\n        fi\n    done\n    eval \"$out_var=\\\"$out\\\"\"",
    "    local list=\"$1\"\n    local new_list=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list",
    "    local list=\"$1\"\n    local result=\"\"\n    local n\n    for n in $list; do\n        if [ $((n % 2)) -eq 0 ]; then\n            result=\"$result $n\"\n        fi\n    done\n    echo \"$result\"",
    "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if [ $(($i % 2)) -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local result=''\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [ $((i%2)) -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local new_list=\"\"\n    for i in $list; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list",
    "    local list=\"$1\"\n    local result=\"\"\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            result=\"$result $num\"\n        fi\n    done\n    echo \"$result\"",
    "    local list=$1\n    local new_list=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list",
    "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo $result"
  ]
}
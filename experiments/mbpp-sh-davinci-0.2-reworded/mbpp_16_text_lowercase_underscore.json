{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\n#\n# $1 is a string\ntext_lowercase_underscore() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    text_lowercase_underscore \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aab_cbbbc\") = \"true\" ]]\n    [[ $(candidate \"aab_Abbbc\") = \"false\" ]]\n    [[ $(candidate \"Aaab_abbbc\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local text=\"$1\"\n  local regex=\"^[a-z]+(_[a-z]+)*$\"\n  [[ $text =~ $regex ]] && echo \"true\" || echo \"false\"",
    "  if [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local text=\"$1\"\n  local regex=\"^[a-z]+(_[a-z]+)*$\"\n  if [[ \"$text\" =~ $regex ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "    [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  if [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "    [[ $1 =~ ^[a-z_]+$ ]]",
    "    [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "    [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "    [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "    echo \"$1\" | grep -q '^[a-z_]*$'",
    "    local text=\"$1\"\n    [[ \"$text\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]] && echo \"true\" || echo \"false\"",
    "    [[ $1 =~ ^[a-z]+(_[a-z]+)*$ ]]",
    "  if [[ \"$1\" =~ ^[a-z]+(_[a-z]+)*$ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi"
  ]
}
{
  "name": "mbpp_223_is_majority",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\n#\n# $1 is a space-separated list\n# $2 is an integer\n# $3 is an integer\nis_majority() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_majority \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 3 3 3 10\" \"7\" \"3\") = \"true\" ]]\n    [[ $(candidate \"1 1 2 4 4 4 6 6\" \"8\" \"4\") = \"false\" ]]\n    [[ $(candidate \"1 1 1 2 2\" \"5\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1 1 2 2\" \"5\" \"1\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i mid\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"$2\"\n    element=\"$3\"\n\n    count=0\n    mid=$((n / 2))\n\n    for ((i = 0; i < n; i++)); do\n        if [[ \"${array[i]}\" -eq \"$element\" ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ \"$count\" -gt \"$mid\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local mid=$((n / 2))\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count + 1))\n    fi\n    if [ $count -gt $mid ]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i + 1))\n  done\n  echo \"false\"",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local list=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${list[@]}\"; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local j=$((n-1))\n  local mid=0\n  local count=0\n  while [ $i -le $j ]; do\n    mid=$(((i+j)/2))\n    if [ ${arr[$mid]} -eq $x ]; then\n      count=$((count+1))\n      i=$((i+1))\n    elif [ ${arr[$mid]} -lt $x ]; then\n      i=$((i+1))\n    else\n      j=$((j-1))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=$((n-1))\n    local mid=0\n    local count=0\n    while [ $i -le $j ]\n    do\n        mid=$(((i+j)/2))\n        if [ ${arr[$mid]} -eq $x ]\n        then\n            count=$((count+1))\n            i=$((i+1))\n        elif [ ${arr[$mid]} -gt $x ]\n        then\n            j=$((j-1))\n        else\n            i=$((i+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a array\n  local -i n\n  local -i element\n  local -i i\n  local -i count\n  local -i majority_count\n\n  array=($1)\n  n=$2\n  element=$3\n\n  count=0\n  majority_count=$((n / 2))\n  for ((i=0; i<n; i++)); do\n    if [[ ${array[i]} -eq $element ]]; then\n      ((count++))\n    fi\n  done\n\n  if [[ $count -gt $majority_count ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i r\n    array=($1)\n    n=$2\n    x=$3\n    i=0\n    j=$((n-1))\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        if ((array[k] == x)); then\n            l=$((k-1))\n            while ((l >= 0 && array[l] == x)); do\n                l=$((l-1))\n            done\n            m=$((k+1))\n            while ((m < n && array[m] == x)); do\n                m=$((m+1))\n            done\n            r=$((m-l-1))\n            if ((r > n/2)); then\n                return 0\n            else\n                return 1\n            fi\n        elif ((array[k] < x)); then\n            i=$((k+1))\n        else\n            j=$((k-1))\n        fi\n    done\n    return 1",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local element=$3\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i mid=0\n    local -i mid_element=0\n    local -i mid_element_count=0\n\n    if [ $n -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    if [ $n -eq 1 ]; then\n        if [ ${arr[0]} -eq $element ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n        return\n    fi\n\n    i=0\n    j=$((n-1))\n    while [ $i -le $j ]; do\n        mid=$(((i+j)/2))\n        mid_element=${arr[$mid]}\n        if [ $mid_element -eq $element ]; then\n            k=$mid\n            l=$mid\n            while [ $k -ge $i ]; do\n                if [ ${arr[$k]} -eq $element ]; then\n                    k=$((k-1))\n                else\n                    break\n                fi\n            done\n            while [ $l -le $j ]; do\n                if [ ${arr[$l]} -eq $element ]; then\n                    l=$((l+1))\n                else\n                    break\n                fi\n            done\n            mid_element_count=$((l-k-1))\n            if [ $mid_element_count -gt $((n/2)) ]; then\n                echo \"true\"\n            else\n                echo \"false\"\n            fi\n            return\n        elif [ $mid_element -lt $element ]; then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    echo \"false\"",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local elem=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local x=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n / 2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[$i]} -eq $elem ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n/2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi"
  ]
}
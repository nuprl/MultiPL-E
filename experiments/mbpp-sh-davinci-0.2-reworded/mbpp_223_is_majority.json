{
  "name": "mbpp_223_is_majority",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\n#\n# $1 is a space-separated list\n# $2 is an integer\n# $3 is an integer\nis_majority() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_majority \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 3 3 3 10\" \"7\" \"3\") = \"true\" ]]\n    [[ $(candidate \"1 1 2 4 4 4 6 6\" \"8\" \"4\") = \"false\" ]]\n    [[ $(candidate \"1 1 1 2 2\" \"5\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1 1 2 2\" \"5\" \"1\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i mid\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"$2\"\n    element=\"$3\"\n\n    count=0\n    mid=$((n / 2))\n\n    for ((i = 0; i < n; i++)); do\n        if [[ \"${array[i]}\" -eq \"$element\" ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ \"$count\" -gt \"$mid\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local mid=$((n / 2))\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count + 1))\n    fi\n    if [ $count -gt $mid ]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i + 1))\n  done\n  echo \"false\"",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local list=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${list[@]}\"; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local j=$((n-1))\n  local mid=0\n  local count=0\n  while [ $i -le $j ]; do\n    mid=$(((i+j)/2))\n    if [ ${arr[$mid]} -eq $x ]; then\n      count=$((count+1))\n      i=$((i+1))\n    elif [ ${arr[$mid]} -lt $x ]; then\n      i=$((i+1))\n    else\n      j=$((j-1))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=$((n-1))\n    local mid=0\n    local count=0\n    while [ $i -le $j ]\n    do\n        mid=$(((i+j)/2))\n        if [ ${arr[$mid]} -eq $x ]\n        then\n            count=$((count+1))\n            i=$((i+1))\n        elif [ ${arr[$mid]} -gt $x ]\n        then\n            j=$((j-1))\n        else\n            i=$((i+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a array\n  local -i n\n  local -i element\n  local -i i\n  local -i count\n  local -i majority_count\n\n  array=($1)\n  n=$2\n  element=$3\n\n  count=0\n  majority_count=$((n / 2))\n  for ((i=0; i<n; i++)); do\n    if [[ ${array[i]} -eq $element ]]; then\n      ((count++))\n    fi\n  done\n\n  if [[ $count -gt $majority_count ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i r\n    array=($1)\n    n=$2\n    x=$3\n    i=0\n    j=$((n-1))\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        if ((array[k] == x)); then\n            l=$((k-1))\n            while ((l >= 0 && array[l] == x)); do\n                l=$((l-1))\n            done\n            m=$((k+1))\n            while ((m < n && array[m] == x)); do\n                m=$((m+1))\n            done\n            r=$((m-l-1))\n            if ((r > n/2)); then\n                return 0\n            else\n                return 1\n            fi\n        elif ((array[k] < x)); then\n            i=$((k+1))\n        else\n            j=$((k-1))\n        fi\n    done\n    return 1",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local element=$3\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i mid=0\n    local -i mid_element=0\n    local -i mid_element_count=0\n\n    if [ $n -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    if [ $n -eq 1 ]; then\n        if [ ${arr[0]} -eq $element ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n        return\n    fi\n\n    i=0\n    j=$((n-1))\n    while [ $i -le $j ]; do\n        mid=$(((i+j)/2))\n        mid_element=${arr[$mid]}\n        if [ $mid_element -eq $element ]; then\n            k=$mid\n            l=$mid\n            while [ $k -ge $i ]; do\n                if [ ${arr[$k]} -eq $element ]; then\n                    k=$((k-1))\n                else\n                    break\n                fi\n            done\n            while [ $l -le $j ]; do\n                if [ ${arr[$l]} -eq $element ]; then\n                    l=$((l+1))\n                else\n                    break\n                fi\n            done\n            mid_element_count=$((l-k-1))\n            if [ $mid_element_count -gt $((n/2)) ]; then\n                echo \"true\"\n            else\n                echo \"false\"\n            fi\n            return\n        elif [ $mid_element -lt $element ]; then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    echo \"false\"",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local elem=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local x=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n / 2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[$i]} -eq $elem ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n/2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local length\n    local element\n    local i\n    local count\n    array=($1)\n    length=$2\n    element=$3\n    count=0\n    for ((i=0; i<length; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $length/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [ $i -eq $element ]; then\n      count=$((count + 1))\n    fi\n  done\n  if [ $count -gt $((n / 2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"$@\")\n    local n=${#arr[@]}\n    local x=$3\n    local i=$((n/2))\n    local j=$((i+1))\n    if [ ${arr[$i]} -eq $x ]\n    then\n        echo \"true\"\n    elif [ ${arr[$j]} -eq $x ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"\n    do\n        if [ $i -eq $element ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local array=($1)\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $x ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n / 2)) ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i n=$2\n    local -i element=$3\n    local -i count=0\n    local -i i=0\n    local -i mid=$((n/2))\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local mid=$((n / 2))\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local count=0\n\n    # Binary search for x\n    while [[ $i -le $n ]]; do\n        j=$((i + (n - i) / 2))\n        if [[ ${arr[j]} -eq $x ]]; then\n            break\n        elif [[ ${arr[j]} -lt $x ]]; then\n            i=$((j + 1))\n        else\n            n=$((j - 1))\n        fi\n    done\n\n    # If x is not found, return 0\n    if [[ $i -gt $n ]]; then\n        echo 0\n        return\n    fi\n\n    # Count the number of occurrences of x\n    k=$((j - 1))\n    while [[ $k -ge 0 ]]; do\n        if [[ ${arr[k]} -eq $x ]]; then\n            ((count++))\n        else\n            break\n        fi\n        ((k--))\n    done\n    l=$((j + 1))\n    while [[ $l -le $n ]]; do\n        if [[ ${arr[l]} -eq $x ]]; then\n            ((count++))\n        else\n            break\n        fi\n        ((l++))\n    done\n\n    # If x occurs more than n/2 times, return 1\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=($1)\n  local n=$2\n  local el=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $el ]\n    then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]\n  then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a array=($1)\n    local length=$2\n    local element=$3\n    local -i count=0\n    local -i i=0\n    local -i mid=$((length / 2))\n\n    for ((i = 0; i < length; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local arr=($1)\n    local len=$2\n    local elem=$3\n    local count=0\n    local i=0\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((len / 2)) ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local elem=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [ \"$i\" -eq \"$elem\" ]; then\n      ((count++))\n    fi\n  done\n  if [ \"$count\" -gt \"$((n / 2))\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${array[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]; then\n            echo 1\n            return\n        fi\n        i=$((i+1))\n    done\n    echo 0",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i count\n    local -i mid_count\n\n    arr=($1)\n    n=$2\n    x=$3\n    mid=$((n / 2))\n    left=0\n    right=$((n - 1))\n\n    while [[ $left -le $right ]]; do\n        mid=$((left + (right - left) / 2))\n        if [[ ${arr[$mid]} -eq $x ]]; then\n            count=0\n            mid_count=0\n            for ((i = 0; i < n; i++)); do\n                if [[ ${arr[$i]} -eq $x ]]; then\n                    ((count++))\n                fi\n                if [[ $i -eq $mid ]]; then\n                    mid_count=$count\n                fi\n            done\n            if [[ $mid_count -gt $mid ]]; then\n                echo 1\n                return\n            else\n                echo 0\n                return\n            fi\n        elif [[ ${arr[$mid]} -lt $x ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    echo 0",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]; then\n            echo \"1\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"0\"",
    "  local list=\"$1\"\n  local n=\"$2\"\n  local element=\"$3\"\n  local count=0\n  for i in $list; do\n    if [ \"$i\" -eq \"$element\" ]; then\n      ((count++))\n    fi\n  done\n  if [ \"$count\" -gt \"$((n/2))\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"$@\")\n    local n=${#arr[@]}\n    local x=${arr[$n-1]}\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while (( i < n )) && (( arr[i] <= x )); do\n        if (( arr[i] == x )); then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    if (( count > n / 2 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n\n    local left=0\n    local right=$((n - 1))\n    local mid=$((left + (right - left) / 2))\n\n    while [[ $left <= $right ]]; do\n        if [[ ${arr[$mid]} == $x ]]; then\n            local count=1\n            local i=$((mid - 1))\n            while [[ $i >= 0 && ${arr[$i]} == $x ]]; do\n                ((count++))\n                ((i--))\n            done\n            i=$((mid + 1))\n            while [[ $i < $n && ${arr[$i]} == $x ]]; do\n                ((count++))\n                ((i++))\n            done\n            if [[ $count > $((n / 2)) ]]; then\n                echo 1\n                return\n            fi\n            echo 0\n            return\n        elif [[ ${arr[$mid]} < $x ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n        mid=$((left + (right - left) / 2))\n    done\n    echo 0",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    local mid=$((n/2))\n\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $mid ]; then\n            echo 1\n            return\n        fi\n        i=$((i+1))\n    done\n    echo 0",
    "    local -a arr=(\"$@\")\n    local n=${#arr[@]}\n    local x=$3\n    local i=$((n/2))\n    local j=$((i-1))\n    local k=$((i+1))\n    if [ ${arr[$i]} -eq $x ]; then\n        echo \"YES\"\n    elif [ ${arr[$j]} -eq $x ]; then\n        echo \"YES\"\n    elif [ ${arr[$k]} -eq $x ]; then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local elem=$3\n    local mid=$((n/2))\n    local count=0\n    local i=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $mid ]; then\n            echo 1\n            return\n        fi\n        i=$((i+1))\n    done\n    echo 0",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local mid=$((n / 2))\n    local i=0\n    local j=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]; then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1",
    "    local -a arr\n    local n\n    local x\n    local i\n    local count\n    arr=($1)\n    n=$2\n    x=$3\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for i in $list; do\n        if [ $i -eq $elem ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    local mid=$((n/2))\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $mid ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local left=$(binary_search \"$1\" \"$2\" \"$3\" \"left\")\n    local right=$(binary_search \"$1\" \"$2\" \"$3\" \"right\")\n    if [[ $left == -1 || $right == -1 ]]; then\n        echo \"false\"\n    else\n        local count=$((right - left + 1))\n        if [[ $count > $((n / 2)) ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i length\n    local -i middle\n    local -i count\n\n    array=($1)\n    n=$2\n    element=$3\n    length=${#array[@]}\n    middle=$((length / 2))\n    count=0\n\n    for ((i = 0; i < length; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $middle ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i mid_element\n    local -i mid_count\n    local -i left_count\n    local -i right_count\n\n    array=($1)\n    n=$2\n    x=$3\n    mid=$((n / 2))\n    left=$((mid - 1))\n    right=$((mid + 1))\n    mid_element=${array[$mid]}\n    mid_count=0\n    left_count=0\n    right_count=0\n\n    if [ $mid_element -ne $x ]; then\n        return 1\n    fi\n\n    for ((i = 0; i < n; i++)); do\n        if [ ${array[$i]} -eq $x ]; then\n            mid_count=$((mid_count + 1))\n        fi\n    done\n\n    if [ $mid_count -gt $mid ]; then\n        return 0\n    fi\n\n    return 1",
    "  local -a arr\n  local -i len\n  local -i el\n  local -i i\n  local -i mid\n  local -i count\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n  len=\"$2\"\n  el=\"$3\"\n\n  mid=\"$((len / 2))\"\n  count=0\n  for ((i = 0; i < len; i++)); do\n    if [[ \"${arr[i]}\" -eq \"$el\" ]]; then\n      ((count++))\n    fi\n  done\n\n  if [[ \"$count\" -gt \"$mid\" ]]; then\n    echo 'true'\n  else\n    echo 'false'\n  fi",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local mid=$((n/2))\n    local i=0\n    local j=0\n    local found=0\n    local count=0\n\n    while [ $i -lt $n ] && [ $j -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            ((i++))\n            ((count++))\n        elif [ ${arr[$j]} -eq $elem ]; then\n            ((j--))\n            ((count++))\n        elif [ ${arr[$i]} -lt $elem ]; then\n            ((i++))\n        else\n            ((j--))\n        fi\n    done\n\n    if [ $count -gt $mid ]; then\n        found=1\n    fi\n\n    echo $found",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]; then\n            echo 1\n            return\n        fi\n        i=$((i+1))\n    done\n    echo 0",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    arr=($1)\n    n=$2\n    x=$3\n    count=0\n    for i in \"${arr[@]}\"\n    do\n        if [ $i -eq $x ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i middle\n    local -i count\n    array=($1)\n    n=$2\n    element=$3\n    middle=$((n/2))\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $middle ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr\n  local -i n\n  local -i x\n  local -i i\n  local -i mid\n  local -i low\n  local -i high\n  local -i count\n  arr=($1)\n  n=$2\n  x=$3\n  mid=$((n / 2))\n  low=0\n  high=$((n - 1))\n  while ((low <= high))\n  do\n    i=$(((low + high) / 2))\n    if ((arr[i] == x))\n    then\n      count=0\n      while ((arr[i] == x))\n      do\n        ((count++))\n        ((i++))\n      done\n      if ((count > mid))\n      then\n        echo 1\n        return\n      else\n        echo 0\n        return\n      fi\n    elif ((arr[i] < x))\n    then\n      low=$((i + 1))\n    else\n      high=$((i - 1))\n    fi\n  done\n  echo 0",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n\n    array=($1)\n    n=$2\n    element=$3\n\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${#arr[@]}\n    local x=${arr[$n-1]}\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local n=$2\n    local elem=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [ $i -eq $x ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    local n\n    local x\n    local i\n    local mid\n    local len\n\n    arr=($1)\n    n=$2\n    x=$3\n    len=${#arr[@]}\n    mid=$((len / 2))\n\n    if [ ${arr[$mid]} -eq $x ]; then\n        for ((i=0; i<$mid; i++)); do\n            if [ ${arr[$i]} -eq $x ]; then\n                return 0\n            fi\n        done\n    else\n        return 1\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local mid=$((n/2))\n    local i=0\n    local j=$((n-1))\n    local count=0\n    while [ $i -le $j ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ ${arr[$j]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n        j=$((j-1))\n    done\n    if [ $count -gt $mid ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local -i low=0\n  local -i high=$((n-1))\n  local -i mid\n  local -i count=0\n  while [[ low -le high ]]; do\n    mid=$((low + (high-low)/2))\n    if [[ ${arr[mid]} -eq x ]]; then\n      count=$((count + 1))\n      break\n    elif [[ ${arr[mid]} -gt x ]]; then\n      high=$((mid-1))\n    else\n      low=$((mid+1))\n    fi\n  done\n  if [[ count -eq 0 ]]; then\n    echo \"false\"\n  else\n    local -i first=mid\n    local -i last=mid\n    while [[ ${arr[first]} -eq x ]]; do\n      count=$((count + 1))\n      first=$((first-1))\n    done\n    while [[ ${arr[last]} -eq x ]]; do\n      count=$((count + 1))\n      last=$((last+1))\n    done\n    if [[ count -gt n/2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local n=\"$2\"\n    local element=\"$3\"\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n / 2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i count\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    n=\"$2\"\n    x=\"$3\"\n    mid=$((n / 2))\n    low=0\n    high=$((n - 1))\n    count=0\n\n    while [ $low -le $high ]\n    do\n        i=$(((low + high) / 2))\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count + 1))\n            if [ $count -gt $mid ]\n            then\n                echo 1\n                return\n            fi\n        fi\n        if [ ${arr[$i]} -lt $x ]\n        then\n            low=$((i + 1))\n        else\n            high=$((i - 1))\n        fi\n    done\n    echo 0",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  if [ $count -gt $((n / 2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr\n    local -i n\n    local -i elem\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i count\n    local -i mid_count\n    local -i left_count\n    local -i right_count\n\n    arr=($1)\n    n=$2\n    elem=$3\n    mid=$((n / 2))\n    left=$((mid - 1))\n    right=$((mid + 1))\n    count=0\n    mid_count=0\n    left_count=0\n    right_count=0\n\n    for (( i = 0; i < n; i++ )); do\n        if [[ ${arr[$i]} -eq $elem ]]; then\n            (( count++ ))\n            if [[ $i -eq $mid ]]; then\n                (( mid_count++ ))\n            elif [[ $i -eq $left ]]; then\n                (( left_count++ ))\n            elif [[ $i -eq $right ]]; then\n                (( right_count++ ))\n            fi\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    elif [[ $mid_count -eq 1 && $left_count -eq 1 && $right_count -eq 1 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i mid_element\n    local -i mid_element_count\n    local -i mid_element_left_count\n    local -i mid_element_right_count\n    local -i count\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"$2\"\n    x=\"$3\"\n\n    mid=$((n / 2))\n    left=$((mid - 1))\n    right=$((mid + 1))\n    mid_element=\"${array[$mid]}\"\n    mid_element_count=1\n    mid_element_left_count=0\n    mid_element_right_count=0\n\n    for ((i = 0; i < n; i++)); do\n        if [[ \"${array[$i]}\" -eq \"$x\" ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ \"$count\" -gt \"$mid\" ]]; then\n        echo \"true\"\n        return\n    fi\n\n    echo \"false\"",
    "  local -a array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n    if [ ${array[$i]} -eq $element ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count + 1))\n    fi\n    if [ $count -gt $((n / 2)) ]; then\n      echo 1\n      return\n    fi\n    i=$((i + 1))\n  done\n  echo 0",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local n=\"$2\"\n    local element=\"$3\"\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count+1))\n    fi\n    if [ $count -gt $((n/2)) ]; then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local -i i=0\n  local -i j=0\n  local -i mid=0\n  local -i count=0\n  local -i first=0\n  local -i last=0\n\n  first=0\n  last=$((n-1))\n  mid=$(((first+last)/2))\n\n  while ((first <= last))\n  do\n    if ((arr[mid] == x))\n    then\n      break\n    elif ((arr[mid] < x))\n    then\n      first=$((mid+1))\n    else\n      last=$((mid-1))\n    fi\n    mid=$(((first+last)/2))\n  done\n\n  if ((first > last))\n  then\n    echo \"false\"\n    return\n  fi\n\n  i=$((mid-1))\n  while ((i >= 0 && arr[i] == x))\n  do\n    ((i--))\n  done\n  ((i++))\n\n  j=$((mid+1))\n  while ((j < n && arr[j] == x))\n  do\n    ((j++))\n  done\n  ((j--))\n\n  count=$((j-i+1))\n  if ((count > n/2))\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a arr=(\"$@\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ \"${arr[$i]}\" -eq \"$x\" ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local -i low=0\n    local -i high=$((n-1))\n    local -i mid\n    while low <= high; do\n        mid=$((low + (high-low)/2))\n        if [ ${arr[mid]} -eq $x ]; then\n            if [ $((mid+n/2)) -le $((n-1)) ] && [ ${arr[mid+n/2]} -eq $x ]; then\n                echo \"1\"\n                return\n            fi\n            if [ $((mid-n/2)) -ge 0 ] && [ ${arr[mid-n/2]} -eq $x ]; then\n                echo \"1\"\n                return\n            fi\n            echo \"0\"\n            return\n        elif [ ${arr[mid]} -lt $x ]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n    done\n    echo \"0\"",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq $x ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $(( n / 2 )) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local list=$1\n  local n=$2\n  local element=$3\n  local count=0\n  for i in $list; do\n    if [[ $i -eq $element ]]; then\n      count=$((count+1))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [ $i -eq $x ]; then\n      count=$((count + 1))\n    fi\n  done\n  if [ $count -gt $((n / 2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local array=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${array[$i]} -eq $x ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a array=($1)\n    local length=$2\n    local element=$3\n    local middle=$((length / 2))\n    local middle_element=${array[$middle]}\n    if [ $element -eq $middle_element ]; then\n        if [ $((middle + middle)) -lt $length ]; then\n            if [ $element -eq ${array[$((middle + middle))]} ]; then\n                echo 1\n                return\n            fi\n        else\n            echo 1\n            return\n        fi\n    fi\n    if [ $element -lt $middle_element ]; then\n        is_majority \"${array[@]:0:$middle}\" $middle $element\n    else\n        is_majority \"${array[@]:$((middle + 1)):$length}\" $((length - middle - 1)) $element\n    fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local j=0\n  local count=0\n  local mid=$((n/2))\n\n  while [ $i -lt $n ] && [ $j -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $x ]\n    then\n      ((count++))\n      ((i++))\n    else\n      ((j++))\n    fi\n  done\n\n  if [ $count -gt $mid ]\n  then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local elem=$3\n  local count=0\n  local half=$((n / 2))\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $elem ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $half ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local left=0\n    local right=$((n - 1))\n    local mid\n    while [[ $left <= $right ]]; do\n        mid=$((left + (right - left) / 2))\n        if [[ ${arr[$mid]} == $x ]]; then\n            if [[ $((mid + n / 2)) -le $((n - 1)) ]]; then\n                if [[ ${arr[$((mid + n / 2))]} == $x ]]; then\n                    return 0\n                fi\n            else\n                return 0\n            fi\n            right=$((mid - 1))\n        elif [[ ${arr[$mid]} -gt $x ]]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    return 1",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i mid\n\n    array=($1)\n    n=$2\n    element=$3\n    count=0\n    mid=$((n / 2))\n\n    for ((i = 0; i < n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            count=$((count + 1))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local cnt=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq $x ]]; then\n      (( cnt++ ))\n    fi\n  done\n  if [[ $cnt -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a array=(\"$@\")\n  local length=$2\n  local element=$3\n  local count=0\n  local i=0\n  while [ $i -lt $length ]; do\n    if [ ${array[$i]} -eq $element ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  if [ $count -gt $((length / 2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ \"$i\" -lt \"$n\" ]; do\n        if [ \"${arr[$i]}\" -eq \"$x\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i count\n    local -i mid\n    local -i mid_index\n\n    array=($1)\n    n=$2\n    x=$3\n    count=0\n    mid=$((n / 2))\n    mid_index=$((n / 2))\n\n    for ((i = 0; i < n; i++)); do\n        if [[ ${array[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local mid=0\n    local left=0\n    local right=0\n    local count=0\n\n    mid=$((n / 2))\n    left=$((mid - 1))\n    right=$((mid + 1))\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            j=$i\n            break\n        fi\n    done\n\n    if [[ $j -eq $left ]]; then\n        count=$((count + 1))\n        for ((k=j+1; k<=right; k++)); do\n            if [[ ${arr[k]} -eq $x ]]; then\n                count=$((count + 1))\n            fi\n        done\n    elif [[ $j -eq $right ]]; then\n        count=$((count + 1))\n        for ((k=j-1; k>=left; k--)); do\n            if [[ ${arr[k]} -eq $x ]]; then\n                count=$((count + 1))\n            fi\n        done\n    else\n        count=$((count + 1))\n        for ((k=j-1; k>=left; k--)); do\n            if [[ ${arr[k]} -eq $x ]]; then\n                count=$((count + 1))\n            fi\n        done\n        for ((k=j+1; k<=right; k++)); do\n            if [[ ${arr[k]} -eq $x ]]; then\n                count=$((count + 1))\n            fi\n        done\n    fi\n\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            let count++\n        fi\n        let i++\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local cnt=0\n    for i in ${arr[@]}; do\n        if [ $i -eq $x ]; then\n            cnt=$((cnt + 1))\n        fi\n    done\n    if [ $cnt -gt $((n / 2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local y=0\n    local z=0\n\n    # Binary search for the first occurrence of x\n    i=$((n-1))\n    j=0\n    while [[ $i -ge $j ]]; do\n        k=$(((i+j)/2))\n        if [[ ${arr[k]} -lt $x ]]; then\n            j=$((k+1))\n        elif [[ ${arr[k]} -gt $x ]]; then\n            i=$((k-1))\n        else\n            l=$k\n            while [[ $l -ge 0 ]]; do\n                if [[ ${arr[l]} -eq $x ]]; then\n                    l=$((l-1))\n                else\n                    break\n                fi\n            done\n            l=$((l+1))\n            break\n        fi\n    done\n\n    # Binary search for the last occurrence of x\n    m=$((n-1))\n    r=$((n-1))\n    while [[ $m -ge $r ]]; do\n        s=$(((m+r)/2))\n        if [[ ${arr[s]} -lt $x ]]; then\n            r=$((s+1))\n        elif [[ ${arr[s]} -gt $x ]]; then\n            m=$((s-1))\n        else\n            t=$s\n            while [[ $t -lt $n ]]; do\n                if [[ ${arr[t]} -eq $x ]]; then\n                    t=$((t+1))\n                else\n                    break\n                fi\n            done\n            t=$((t-1))\n            break\n        fi\n    done\n\n    # Check if x is the majority element\n    u=$((t-l+1))\n    v=$((n/2))\n    if [[ $u -gt $v ]]; then\n        w=1\n    else\n        w=0\n",
    "  local list=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${list[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=$((n-1))\n    while ((i <= j)); do\n        local mid=$(((i+j)/2))\n        if ((arr[mid] == x)); then\n            local count=0\n            local k=$mid\n            while ((k >= 0 && arr[k] == x)); do\n                ((count++))\n                ((k--))\n            done\n            k=$((mid+1))\n            while ((k < n && arr[k] == x)); do\n                ((count++))\n                ((k++))\n            done\n            ((count > n/2)) && return 0\n            return 1\n        elif ((arr[mid] > x)); then\n            j=$((mid-1))\n        else\n            i=$((mid+1))\n        fi\n    done\n    return 1",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local x=$3\n    local i\n    local j\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            let count++\n        fi\n        let i++\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      let count++\n    fi\n    let i++\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n\n    local i\n    local j\n    local count=0\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    local -i n\n    local -i elem\n    local -i i\n    local -i count\n    local -i half\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    n=\"$2\"\n    elem=\"$3\"\n    half=\"$((n / 2))\"\n\n    for ((i = 0; i < n; i++)); do\n        if [[ \"${arr[i]}\" -eq \"$elem\" ]]; then\n            ((count++))\n            if [[ \"$count\" -gt \"$half\" ]]; then\n                echo \"true\"\n                return 0\n            fi\n        fi\n    done\n\n    echo \"false\"",
    "  local -a array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    local mid=$((n/2))\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[0]}\n    local x=${arr[1]}\n    local i=2\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local l=0\n    local r=$((n-1))\n    local mid=0\n    local count=0\n    while [[ $l <= $r ]]; do\n        mid=$(((l+r)/2))\n        if [[ ${arr[$mid]} -eq $x ]]; then\n            count=$((count+1))\n            break\n        elif [[ ${arr[$mid]} -lt $x ]]; then\n            l=$((mid+1))\n        else\n            r=$((mid-1))\n        fi\n    done\n    if [[ $count -eq 0 ]]; then\n        echo \"false\"\n        return\n    fi\n    l=$((mid-1))\n    r=$((mid+1))\n    while [[ $l >= 0 && ${arr[$l]} -eq $x ]]; do\n        count=$((count+1))\n        l=$((l-1))\n    done\n    while [[ $r < $n && ${arr[$r]} -eq $x ]]; do\n        count=$((count+1))\n        r=$((r+1))\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local -i low=0\n    local -i high=n-1\n    local -i mid\n    while [[ low -le high ]]; do\n        mid=$(( (low+high)/2 ))\n        if [[ ${arr[mid]} -eq x ]]; then\n            local -i count=0\n            for (( i=0; i<n; i++ )); do\n                if [[ ${arr[i]} -eq x ]]; then\n                    (( count++ ))\n                fi\n            done\n            if [[ count -gt n/2 ]]; then\n                echo \"1\"\n            else\n                echo \"0\"\n            fi\n            return\n        elif [[ ${arr[mid]} -gt x ]]; then\n            high=$(( mid-1 ))\n        else\n            low=$(( mid+1 ))\n        fi\n    done\n    echo \"0\"",
    "    local -a arr=($1)\n    local n=$2\n    local element=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $element ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local count=0\n  local i\n  for (( i=0; i<n; i++ )); do\n    if [[ ${arr[$i]} -eq $x ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"$@\")\n    local n=${#arr[@]}\n    local x=$3\n    local i=$((n/2))\n    if [ ${arr[$i]} -eq $x ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local elem=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $elem ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[0]}\n    local x=${arr[1]}\n    local -i left=0\n    local -i right=n-1\n    local -i mid\n    local -i count\n    while [ $left -le $right ]; do\n        mid=$((left + (right - left) / 2))\n        if [ ${arr[mid]} -eq $x ]; then\n            count=$((mid - left + 1))\n            if [ $count -gt $((n / 2)) ]; then\n                echo 1\n                return\n            fi\n            right=$((mid - 1))\n        elif [ ${arr[mid]} -gt $x ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo 0",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for (( i = 0; i < n; i++ )); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n / 2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i count\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    n=\"$2\"\n    x=\"$3\"\n\n    mid=\"$((n / 2))\"\n    count=0\n\n    for ((i = 0; i < n; i++)); do\n        if [[ \"${arr[i]}\" -eq \"$x\" ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ \"$count\" -gt \"$mid\" ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local mid=$((n / 2))\n\n    while ((i < n)) && ((arr[i] <= x)); do\n        ((i++))\n    done\n\n    j=$i\n    while ((j < n)) && ((arr[j] == x)); do\n        ((j++))\n    done\n\n    k=$((j - i))\n    if ((k > mid)); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      count=$((count+1))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]; then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local j=$((n-1))\n  local mid\n  while ((i <= j)); do\n    mid=$(((i+j)/2))\n    if ((arr[mid] == x)); then\n      if ((mid == 0 || arr[mid-1] != x)); then\n        if ((mid == n-1 || arr[mid+1] != x)); then\n          return 0\n        fi\n        i=$((mid+1))\n      else\n        j=$((mid-1))\n      fi\n    elif ((arr[mid] < x)); then\n      i=$((mid+1))\n    else\n      j=$((mid-1))\n    fi\n  done\n  return 1",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local left=$(binary_search \"$1\" $2 $3 0 $((n-1)))\n    if [[ $left -eq -1 ]]; then\n        echo \"false\"\n        return\n    fi\n    local right=$((left+n/2))\n    if [[ $right -lt $n && ${arr[$right]} -eq $x ]]; then\n        echo \"true\"\n        return\n    fi\n    echo \"false\"",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            let count++\n        fi\n        let i++\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [[ $i -lt $n ]]; do\n    if [[ ${arr[$i]} -eq $x ]]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [ $i -eq $element ]; then\n      ((count++))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n\n    for i in ${array[@]}; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i mid\n    local -i count\n    local -i result\n\n    array=($1)\n    n=$2\n    element=$3\n    mid=$((n / 2))\n    count=0\n    result=1\n\n    for ((i = 0; i < n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -le $mid ]]; then\n        result=0\n    fi\n\n    echo $result",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local elem=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $elem ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            count=$((count + 1))\n        fi\n    done\n    if [[ $count -gt $((n / 2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    arr=($1)\n    n=$2\n    x=$3\n    i=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local element=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $element ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    # your code here\n    # declare -a arr=($1)\n    # echo ${arr[@]}\n    # echo ${#arr[@]}\n    # echo ${arr[0]}\n    # echo ${arr[1]}\n    # echo ${arr[2]}\n    # echo ${arr[3]}\n    # echo ${arr[4]}\n    # echo ${arr[5]}\n    # echo ${arr[6]}\n    # echo ${arr[7]}\n    # echo ${arr[8]}\n    # echo ${arr[9]}\n    # echo ${arr[10]}\n    # echo ${arr[11]}\n    # echo ${arr[12]}\n    # echo ${arr[13]}\n    # echo ${arr[14]}\n    # echo ${arr[15]}\n    # echo ${arr[16]}\n    # echo ${arr[17]}\n    # echo ${arr[18]}\n    # echo ${arr[19]}\n    # echo ${arr[20]}\n    # echo ${arr[21]}\n    # echo ${arr[22]}\n    # echo ${arr[23]}\n    # echo ${arr[24]}\n    # echo ${arr[25]}\n    # echo ${arr[26]}\n    # echo ${arr[27]}\n    # echo ${arr[28]}\n    # echo ${arr[29]}\n    # echo ${arr[30]}\n    # echo ${arr[31]}\n    # echo ${arr[32]}\n    # echo ${arr[33]}\n    # echo ${arr[34]}\n    # echo ${arr[35]}\n    # echo ${arr[36]}\n    # echo ${arr[37]}\n    # echo ${arr[38]}\n    # echo ${arr[39]}\n    # echo ${arr[40]}\n    # echo ${arr[41]}\n    # echo ${arr[42]}\n    # echo ${arr[43]}\n    # echo ${arr[44]}\n    # echo ${arr[45]}\n    # echo ${arr[46]}\n    # echo ${arr[47]}\n    # echo ${arr[48]}\n    # echo ${arr[49]}\n    # echo ${arr[50]}\n    # echo ${arr[51]}\n    # echo ${arr[52",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i r\n    local -i mid\n    local -i mid_val\n    local -i mid_count\n    local -i mid_count_left\n    local -i mid_count_right\n    local -i mid_count_left_right\n\n    arr=($1)\n    n=$2\n    x=$3\n\n    i=0\n    j=$((n-1))\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        l=$((k-1))\n        m=$((k+1))\n        r=$((k+n/2))\n        mid=$(((i+j)/2))\n        mid_val=${arr[$mid]}\n        mid_count=$((r-mid+1))\n        mid_count_left=$((mid-i+1))\n        mid_count_right=$((j-mid+1))\n        mid_count_left_right=$((mid_count_left+mid_count_right))\n        if ((mid_val == x)); then\n            if ((mid_count > n/2)); then\n                return 0\n            elif ((mid_count_left > n/2)); then\n                j=$l\n            elif ((mid_count_right > n/2)); then\n                i=$m\n            else\n                return 1\n            fi\n        elif ((mid_val < x)); then\n            i=$m\n        else\n            j=$l\n        fi\n    done\n    return 1",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local m=0\n    local l=0\n    local r=0\n    local mid=0\n    local count=0\n    local majority=0\n    local found=0\n\n    l=0\n    r=$((n-1))\n    while [ $l -le $r ]; do\n        mid=$(((l+r)/2))\n        if [ ${arr[$mid]} -eq $x ]; then\n            i=$mid\n            j=$mid\n            while [ $i -ge 0 ] && [ ${arr[$i]} -eq $x ]; do\n                i=$((i-1))\n            done\n            while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; do\n                j=$((j+1))\n            done\n            count=$((j-i-1))\n            if [ $count -gt $((n/2)) ]; then\n                found=1\n                break\n            fi\n        elif [ ${arr[$mid]} -gt $x ]; then\n            r=$((mid-1))\n        else\n            l=$((mid+1))\n        fi\n    done\n    echo $found",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    # Write your code here\n    local -n arr=$1\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [ $i -eq $x ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for (( i = 0; i < n; i++ )); do\n        if [[ ${arr[$i]} -eq $elem ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n / 2 )) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local list=\"$1\"\n  local n=\"$2\"\n  local element=\"$3\"\n  local count=0\n  for i in $list; do\n    if [ $i -eq $element ]; then\n      ((count++))\n    fi\n  done\n  if [ $count -gt $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local element=$3\n    local mid=$((n/2))\n    local left=0\n    local right=$((n-1))\n    local index=-1\n\n    while [[ $left -le $right ]]; do\n        local mid=$(((left+right)/2))\n        if [[ ${arr[mid]} -eq $element ]]; then\n            index=$mid\n            break\n        elif [[ ${arr[mid]} -gt $element ]]; then\n            right=$((mid-1))\n        else\n            left=$((mid+1))\n        fi\n    done\n\n    if [[ $index -eq -1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local left_count=0\n    local right_count=0\n    for ((i=0; i<$n; i++)); do\n        if [[ ${arr[i]} -eq $element ]]; then\n            if [[ $i -lt $index ]]; then\n                ((left_count++))\n            else\n                ((right_count++))\n            fi\n        fi\n    done\n\n    if [[ $left_count -gt $mid ]]; then\n        echo \"true\"\n    elif [[ $right_count -gt $mid ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${list[@]}; do\n        if [[ $i -eq $element ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local array=($1)\n    local length=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $((length/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [[ $i -lt $n ]]; do\n    if [[ ${arr[$i]} -eq $x ]]; then\n      (( count++ ))\n    fi\n    (( i++ ))\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [[ $i -lt $n ]]; do\n    if [[ ${arr[$i]} -eq $x ]]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=$((n-1))\n    local mid=0\n    local count=0\n    while [ $i -le $j ]\n    do\n        mid=$((i + (j-i)/2))\n        if [ ${arr[$mid]} -eq $x ]\n        then\n            count=$((count+1))\n            break\n        elif [ ${arr[$mid]} -lt $x ]\n        then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    if [ $count -eq 0 ]\n    then\n        return 1\n    fi\n    i=$((mid-1))\n    while [ $i -ge 0 ] && [ ${arr[$i]} -eq $x ]\n    do\n        count=$((count+1))\n        i=$((i-1))\n    done\n    j=$((mid+1))\n    while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]\n    do\n        count=$((count+1))\n        j=$((j+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        return 0\n    else\n        return 1\n    fi",
    "    local -a array\n    local -i n\n    local -i elem\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i mid_elem\n\n    array=($1)\n    n=$2\n    elem=$3\n    mid=$((n / 2))\n    left=0\n    right=$((n - 1))\n\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        mid_elem=${array[mid]}\n        if ((mid_elem == elem)); then\n            if ((mid > 0 && array[mid - 1] == elem)); then\n                right=$((mid - 1))\n            elif ((mid < n - 1 && array[mid + 1] == elem)); then\n                left=$((mid + 1))\n            else\n                return 0\n            fi\n        elif ((mid_elem > elem)); then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n\n    return 1",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local element=\"$3\"\n    local count=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            ((count++))\n        fi\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "  local -a array\n  local -i n\n  local -i element\n  local -i i\n  local -i count\n  local -i majority_count\n  local -i is_majority\n\n  array=($1)\n  n=$2\n  element=$3\n  count=0\n  majority_count=$((n / 2))\n  is_majority=0\n\n  for ((i=0; i<n; i++)); do\n    if [[ ${array[i]} -eq $element ]]; then\n      ((count++))\n    fi\n  done\n\n  if [[ $count -gt $majority_count ]]; then\n    is_majority=1\n  fi\n\n  echo $is_majority",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i mid\n    local -i left\n    local -i right\n    local -i count\n\n    arr=($1)\n    n=$2\n    x=$3\n\n    i=0\n    j=$((n-1))\n    while ((i <= j)); do\n        mid=$(((i+j)/2))\n        if ((arr[mid] == x)); then\n            left=$mid\n            right=$mid\n            while ((left >= 0 && arr[left] == x)); do\n                ((left--))\n            done\n            while ((right < n && arr[right] == x)); do\n                ((right++))\n            done\n            count=$((right-left-1))\n            if ((count > n/2)); then\n                echo 1\n                return 0\n            else\n                echo 0\n                return 0\n            fi\n        elif ((arr[mid] < x)); then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    echo 0\n    return 0",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  if [ $count -gt $((n / 2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local el=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $el ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  if [ $count -gt $((n / 2)) ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $((n/2)) ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local x=\"$3\"\n    local count=0\n    for i in $list; do\n        if [ $i -eq $x ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[0]}\n    local x=${arr[1]}\n    local i=0\n    local count=0\n    for ((i=2; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local elem=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq $elem ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $x ]\n    then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local elem=$3\n  local count=0\n  for (( i=0; i<n; i++ )); do\n    if [[ ${arr[$i]} -eq $elem ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $(( n/2 )) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}\n    do\n        if [ $i -eq $x ]\n        then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]\n        then\n            echo \"1\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"0\"",
    "  local list=($1)\n  local n=$2\n  local elem=$3\n  local count=0\n  local i\n  for ((i=0; i<n; i++)); do\n    if [[ ${list[$i]} -eq $elem ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local -a array\n  local -i n\n  local -i element\n  local -i i\n  local -i count\n  local -i majority\n  local -i half\n\n  array=($1)\n  n=$2\n  element=$3\n\n  count=0\n  half=$((n / 2))\n  for ((i=0; i<n; i++)); do\n    if [[ ${array[i]} -eq $element ]]; then\n      count=$((count + 1))\n    fi\n  done\n\n  if [[ $count -gt $half ]]; then\n    majority=1\n  else\n    majority=0\n  fi\n\n  echo $majority",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${array[$i]} -eq $element ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a array\n  local -i n\n  local -i x\n  local -i mid\n  local -i low\n  local -i high\n  local -i index\n  local -i count\n  array=($1)\n  n=$2\n  x=$3\n  low=0\n  high=$((n - 1))\n  mid=$(((low + high) / 2))\n  while [ $low -le $high ]\n  do\n    if [ ${array[$mid]} -eq $x ]\n    then\n      index=$mid\n      break\n    elif [ ${array[$mid]} -lt $x ]\n    then\n      low=$((mid + 1))\n    else\n      high=$((mid - 1))\n    fi\n    mid=$(((low + high) / 2))\n  done\n  if [ $low -gt $high ]\n  then\n    echo \"false\"\n    return\n  fi\n  count=1\n  while [ $((index - 1)) -ge 0 ] && [ ${array[$((index - 1))]} -eq $x ]\n  do\n    count=$((count + 1))\n    index=$((index - 1))\n  done\n  while [ $((index + 1)) -lt $n ] && [ ${array[$((index + 1))]} -eq $x ]\n  do\n    count=$((count + 1))\n    index=$((index + 1))\n  done\n  if [ $((count * 2)) -gt $n ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi"
  ]
}
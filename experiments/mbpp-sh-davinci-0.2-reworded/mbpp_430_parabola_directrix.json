{
  "name": "mbpp_430_parabola_directrix",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the directrix of a parabola.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nparabola_directrix() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    parabola_directrix \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\" \"3\" \"2\") = \"-198\" ]]\n    [[ $(candidate \"9\" \"8\" \"4\") = \"-2336\" ]]\n    [[ $(candidate \"2\" \"4\" \"6\") = \"-130\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local a=$1\n    local b=$2\n    local c=$3\n    echo $(( -a * b / (2 * a) ))",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$(echo \"scale=2; -$c / $b\" | bc)\n    echo \"The directrix of the parabola is y = $directrix\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local directrix=$(echo \"scale=2; -$b/(2*$a)\" | bc)\n  echo \"The directrix of the parabola is $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$(echo \"scale=2; -$c/$b\" | bc)\n    echo \"The directrix of the parabola y = $a x^2 + $b x + $c is x = $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$(echo \"scale=2; -$c/$b\" | bc)\n    echo \"The directrix is y = $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$((a*a*b*b-4*a*c))\n    if [[ $directrix -lt 0 ]]; then\n        echo \"The directrix is imaginary.\"\n    else\n        echo \"The directrix is $((-b+directrix**0.5)).\"\n    fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$(echo \"scale=2; -$c/$b\" | bc)\n    echo \"The directrix of the parabola is: $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$((-b / (2 * a)))\n    echo $directrix",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local d=$(echo \"scale=2; -$b / (2 * $a)\" | bc)\n  local e=$(echo \"scale=2; $a * $d * $d + $b * $d + $c\" | bc)\n  echo \"Directrix: y = $e\"",
    "    # Write your code here\n    #\n    # Input:\n    # $1 is an integer\n    # $2 is an integer\n    # $3 is an integer\n    #\n    # Output:\n    # The directrix of the parabola.\n    #\n    # Example:\n    # parabola_directrix 1 2 3\n    # -1\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output.\n    #\n    # Hint:\n    # Use bc to do floating point arithmetic.\n    #\n    # Hint:\n    # Use echo to print the output",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$(echo \"scale=2; -$c/$b\" | bc)\n    echo \"The directrix of the parabola is y = $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local x=$(echo \"scale=2; -$b/(2*$a)\" | bc)\n    local y=$(echo \"scale=2; $a*$x^2 + $b*$x + $c\" | bc)\n    echo \"The directrix is the line x = $x, y = $y\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local directrix=$(echo \"scale=2; -$c/$b\" | bc)\n  echo \"The directrix of the parabola is y = $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$((-c/b))\n    echo $directrix",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 a b c\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -eq 0 ]; then\n        echo \"a cannot be 0\"\n        return 1\n    fi\n\n    local d=$(( -4 * a * c ))\n    local e=$(( b * b ))\n    local f=$(( e - d ))\n\n    if [ $f -lt 0 ]; then\n        echo \"No real solution\"\n        return 1\n    fi\n\n    local g=$(( -b + f ** 0.5 ))\n    local h=$(( 2 * a ))\n    local i=$(( g / h ))\n\n    echo \"Directrix: y = $i\"",
    "    # Write your code here\n    #\n    # The following lines read the values of a, b and c\n    # from the command line and store them in variables\n    # a, b and c.\n    a=$1\n    b=$2\n    c=$3\n    #\n    # The following line prints the directrix of the\n    # parabola.\n    #\n    # You need to replace the following line with your\n    # code.\n    echo \"Your code here\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix\n    directrix=$((-b / (2 * a)))\n    echo \"$directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$(echo \"scale=2; -$c / $b\" | bc)\n    echo \"The directrix of the parabola is: $directrix\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local directrix=$((b * b - 4 * a * c))\n    if [[ $directrix -lt 0 ]]; then\n        echo \"No real roots\"\n    else\n        echo \"The directrix is $((-b / (2 * a))) units from the vertex.\"\n    fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local d=$((-b / (2 * a)))\n    local e=$((c - (b * b) / (4 * a)))\n    echo \"The directrix of the parabola is y = $d - $e\""
  ]
}
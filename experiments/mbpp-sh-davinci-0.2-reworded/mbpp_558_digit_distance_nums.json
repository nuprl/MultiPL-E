{
  "name": "mbpp_558_digit_distance_nums",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum",
    "    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum",
    "  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1\n  local -i digit2\n  local -i diff\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum",
    "  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1\n  local -i digit2\n  local -i diff\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$((num1 % 10))\n    digit2=$((num2 % 10))\n    diff=$((digit1 - digit2))\n    if [ $diff -lt 0 ]; then\n      diff=$((-diff))\n    fi\n    sum=$((sum + diff))\n    num1=$((num1 / 10))\n    num2=$((num2 / 10))\n  done\n  echo $sum",
    "    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        (( sum += (num1 % 10) - (num2 % 10) ))\n        (( num1 /= 10 ))\n        (( num2 /= 10 ))\n    done\n    echo $sum",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(($1-$2))",
    "    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    local -i diff=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        diff=$((digit1 - digit2))\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n\n    echo $sum",
    "  local -i num1=${1}\n  local -i num2=${2}\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i distance\n  while [ ${num1} -gt 0 ] || [ ${num2} -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    distance=$(( digit1 - digit2 ))\n    if [ ${distance} -lt 0 ]; then\n      distance=$(( -distance ))\n    fi\n    sum=$(( sum + distance ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo ${sum}",
    "    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1=0\n    local digit2=0\n    local distance=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num_len=0\n    local i=0\n\n    if [ $num1_len -gt $num2_len ]; then\n        num_len=$num1_len\n    else\n        num_len=$num2_len\n    fi\n\n    for ((i=0; i<num_len; i++)); do\n        digit1=${num1:$i:1}\n        digit2=${num2:$i:1}\n        if [ -z \"$digit1\" ]; then\n            digit1=0\n        fi\n        if [ -z \"$digit2\" ]; then\n            digit2=0\n        fi\n        distance=$((digit1 - digit2))\n        if [ $distance -lt 0 ]; then\n            distance=$((-distance))\n        fi\n        sum=$((sum + distance))\n    done\n\n    echo $sum",
    "  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    local -i digit1=$(( num1 % 10 ))\n    local -i digit2=$(( num2 % 10 ))\n    sum=$(( sum + abs(digit1 - digit2) ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum",
    "    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum",
    "    local -i num1=$1 num2=$2\n    local -i sum=0\n    local -i digit1 digit2\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        (( sum += abs(digit1 - digit2) ))\n        (( num1 /= 10 ))\n        (( num2 /= 10 ))\n    done\n    echo $sum",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"42\"",
    "    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i num1_digit\n    local -i num2_digit\n    local -i distance\n    while [ $num1 -gt 0 ]; do\n        num1_digit=$((num1 % 10))\n        num2_digit=$((num2 % 10))\n        distance=$((num1_digit - num2_digit))\n        sum=$((sum + distance))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum",
    "    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n\n    echo $sum",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $1 $2",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $(($1-$2))",
    "    local n1=$1\n    local n2=$2\n    local sum=0\n    local i=0\n    local d1=0\n    local d2=0\n    local d=0\n    local len1=${#n1}\n    local len2=${#n2}\n    local len=$((len1>len2?len1:len2))\n    for ((i=0; i<len; i++))\n    do\n        d1=${n1:i:1}\n        d2=${n2:i:1}\n        d=$((d1>d2?d1-d2:d2-d1))\n        sum=$((sum+d))\n    done\n    echo $sum",
    "  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum",
    "    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum"
  ]
}
{
  "name": "mbpp_284_check_element",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for i in $list; do\n    if [[ $i != $element ]]; then\n      result=0\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=($@)\n    for i in ${list[@]}; do\n        if [[ $i != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for i in $list; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local list_length=$(echo $list | wc -w)\n  local counter=0\n  for item in $list; do\n    if [[ $item == $element ]]; then\n      counter=$((counter + 1))\n    fi\n  done\n  if [[ $counter == $list_length ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local -n list=$1\n    local element=$2\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp9kalxllg.sh: line 7: local: `green orange black white': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=0\n\n    for item in $list; do\n        if [ $item != $element ]; then\n            result=1\n            break\n        fi\n    done\n\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=(\"${@:2}\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local list_element\n    for (( i=1; i<=$list_length; i++ ))\n    do\n        list_element=$(echo $list | cut -d ' ' -f $i)\n        if [ $list_element != $element ]\n        then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppzmkmjqs.sh: line 14: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=\"$1\"\n  local element=\"$2\"\n  local result=1\n  for item in $list; do\n    if [ \"$item\" != \"$element\" ]; then\n      result=0\n    fi\n  done\n  return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for i in $list; do\n        if [[ $i != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for i in $list; do\n        if [[ $i != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  if [[ $1 == $2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo \"$list\" | wc -w)\n    local counter=0\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n        counter=$((counter + 1))\n    done\n    if [ \"$counter\" != \"$list_length\" ]; then\n        return 1\n    fi\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local list_element\n    for ((i=1; i<=$list_length; i++)); do\n        list_element=$(echo $list | cut -d \" \" -f $i)\n        if [ \"$list_element\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  for i in $1; do\n    if [ \"$i\" != \"$2\" ]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local all_equal=true\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            all_equal=false\n            break\n        fi\n    done\n    echo $all_equal\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for i in $list; do\n        if [ $i != $element ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for i in $list; do\n        if [ $i != $element ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=0\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=1\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  local list=(\"$@\")\n  for item in \"${list[@]}\"; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local count=0\n    for item in $list; do\n        if [[ $item == $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count == $list_length ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for i in $list; do\n        if [ $i != $element ]; then\n            result=0\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppjtvoaf5.sh: line 11: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=($@)\n    for item in ${list[@]}; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo \"$list\" | wc -w)\n    local count=0\n    for i in $list; do\n        if [ \"$i\" == \"$element\" ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ \"$count\" == \"$list_length\" ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n\n  local item\n  for item in $list; do\n    if [ \"$item\" != \"$element\" ]; then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n    for item in $list; do\n        if [ $item != $element ]; then\n            return 1\n        fi\n        counter=$((counter + 1))\n    done\n    if [ $counter -eq $list_length ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6oj1z5uf.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=\"$1\"\n  local element=\"$2\"\n\n  for item in $list; do\n    if [ \"$item\" != \"$element\" ]; then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for i in $list; do\n    if [[ $i != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local result=0\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=1\n      break\n    fi\n  done\n  return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=\"$1\"\n  shift\n  local list=(\"$@\")\n\n  for item in \"${list[@]}\"; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n\n    for item in $list; do\n        if [[ $item == $element ]]; then\n            ((counter++))\n        fi\n    done\n\n    if [[ $counter == $list_length ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local is_equal=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      is_equal=0\n      break\n    fi\n  done\n  echo $is_equal\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  local list=($@)\n  for item in ${list[@]}; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local list_length=$(echo $list | wc -w)\n  local counter=0\n  for item in $list; do\n    if [[ $item == $element ]]; then\n      ((counter++))\n    fi\n  done\n  if [[ $counter == $list_length ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local list_element\n    for list_element in $list; do\n        if [[ $list_element != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local list_length=$(echo $list | wc -w)\n  local count=0\n  for i in $list; do\n    if [ $i == $element ]; then\n      count=$((count + 1))\n    fi\n  done\n  if [ $count == $list_length ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpl2_0f69n.sh: line 12: [: too many arguments\\n/tmp/tmpl2_0f69n.sh: line 12: [: too many arguments\\n/tmp/tmpl2_0f69n.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  local list=(\"$@\")\n  for i in \"${list[@]}\"; do\n    if [[ $i != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    for i in \"$@\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n    for i in $list; do\n        if [ $i != $element ]; then\n            echo \"false\"\n            return\n        fi\n        counter=$((counter + 1))\n    done\n    if [ $counter -eq $list_length ]; then\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_g5_zz7c.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  for item in \"$@\"; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    local result=1\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            result=0\n            break\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [ \"$item\" != \"$element\" ]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [ \"$item\" != \"$element\" ]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local list_length=$(echo $list | wc -w)\n  local count=0\n  for item in $list; do\n    if [ $item == $element ]; then\n      count=$((count+1))\n    fi\n  done\n  if [ $count == $list_length ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbybewhgf.sh: line 12: [: too many arguments\\n/tmp/tmpbybewhgf.sh: line 12: [: too many arguments\\n/tmp/tmpbybewhgf.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local count=0\n    for item in $list; do\n        if [[ \"$item\" == \"$element\" ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -eq $list_length ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for i in $list; do\n    if [[ $i != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=($@)\n    local result=1\n    for item in ${list[@]}; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for i in $list; do\n        if [ \"$i\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=(\"${@:2}\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  local list=($@)\n  for item in ${list[@]}; do\n    if [ \"$item\" != \"$element\" ]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=true\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=false\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=true\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=false\n            break\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local -n list=$1\n    local element=$2\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp9kalxllg.sh: line 7: local: `green orange black white': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=0\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=1\n      break\n    fi\n  done\n  return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for i in \"${list[@]}\"; do\n        if [ \"$i\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=(\"$@\")\n    local element=${list[-1]}\n    list=(\"${list[@]:0:${#list[@]}-1}\")\n    for i in \"${list[@]}\"; do\n        if [[ $i != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local count=0\n    for i in $list; do\n        if [[ $i == $element ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count == $list_length ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n    for i in $list; do\n        if [ $i != $element ]; then\n            echo \"false\"\n            return\n        fi\n        counter=$((counter + 1))\n    done\n    if [ $counter == $list_length ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnnyp3nni.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for i in $list; do\n        if [[ $i != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=\"$1\"\n  local list=\"$2\"\n  local item\n  for item in $list; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=true\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=false\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo \"$list\" | wc -w)\n    local list_elements=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq)\n    local list_elements_length=$(echo \"$list_elements\" | wc -w)\n\n    if [[ $list_length -eq $list_elements_length ]] && [[ $list_elements_length -eq 1 ]] && [[ $list_elements == $element ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n\n    for i in $list; do\n        if [ \"$i\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=0\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=1\n      break\n    fi\n  done\n  return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [ $item != $element ]; then\n      result=0\n      break\n    fi\n  done\n  return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  for i in $list; do\n    if [ \"$i\" != \"$element\" ]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for i in $list; do\n        if [ \"$i\" != \"$element\" ]; then\n            result=0\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=\"$1\"\n    local element=\"$2\"\n    local item\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [ $item != $element ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list\n    do\n        if [ $item != $element ]\n        then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n    for i in $list; do\n        if [[ $i == $element ]]; then\n            counter=$((counter+1))\n        fi\n    done\n    if [[ $counter == $list_length ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local list_length=$(echo $list | wc -w)\n  local count=0\n  for item in $list; do\n    if [ $item == $element ]; then\n      ((count++))\n    fi\n  done\n  if [ $count == $list_length ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8bn5r9_i.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    shift\n    local list=(\"$@\")\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local count=0\n    for item in $list; do\n        if [ $item = $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -eq $list_length ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbe2horct.sh: line 12: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local i=1\n    while [ $i -le $list_length ]; do\n        local item=$(echo $list | cut -d \" \" -f $i)\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n        i=$((i+1))\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n    for item in $list; do\n        if [[ $item == $element ]]; then\n            counter=$((counter + 1))\n        fi\n    done\n    if [[ $counter == $list_length ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  local list=(\"$@\")\n  for i in \"${list[@]}\"; do\n    if [[ \"$i\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=0\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=1\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=\"$1\"\n    local list=\"$2\"\n    local item\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=\"$1\"\n  shift\n  local list=(\"$@\")\n  for item in \"${list[@]}\"; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=(\"${@:2}\")\n    local result=true\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" != \"$element\" ]]; then\n            result=false\n            break\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local item\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo \"$list\" | wc -w)\n    local count=0\n    for i in $list; do\n        if [ \"$i\" == \"$element\" ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ \"$count\" == \"$list_length\" ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  shift\n  local list=(\"$@\")\n  local result=true\n  for item in \"${list[@]}\"; do\n    if [[ \"$item\" != \"$element\" ]]; then\n      result=false\n      break\n    fi\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=true\n    for i in $list; do\n        if [[ $i != $element ]]; then\n            result=false\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local count=0\n    for i in $list; do\n        if [ \"$i\" == \"$element\" ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ \"$count\" == \"$list_length\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=\"$1\"\n    shift\n    local list=(\"$@\")\n    for item in \"${list[@]}\"; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local list_length=$(echo $list | wc -w)\n    local counter=0\n    for i in $list; do\n        if [ \"$i\" != \"$element\" ]; then\n            return 1\n        fi\n        counter=$((counter + 1))\n    done\n    if [ \"$counter\" -eq \"$list_length\" ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local list_length=$(echo $list | wc -w)\n  local counter=0\n  for item in $list; do\n    if [[ $item == $element ]]; then\n      counter=$((counter + 1))\n    fi\n  done\n  if [[ $counter == $list_length ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for i in $list; do\n        if [[ $i != $element ]]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local element=$1\n  local list=$2\n  local is_equal=true\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      is_equal=false\n      break\n    fi\n  done\n  echo $is_equal\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    local result=1\n    for item in $list; do\n        if [[ \"$item\" != \"$element\" ]]; then\n            result=0\n            break\n        fi\n    done\n    return $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local list_length=$(echo \"$list\" | wc -w)\n    local element_count=$(echo \"$list\" | grep -c \"$element\")\n    if [ \"$list_length\" -eq \"$element_count\" ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n  local list=$1\n  local element=$2\n  local result=1\n  for item in $list; do\n    if [[ $item != $element ]]; then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local element=$1\n    local list=$2\n    local item\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    for i in $list; do\n        if [[ $i != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190770,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local item\n    for item in $list; do\n        if [[ $item != $element ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncheck_element() {\n    local list=$1\n    local element=$2\n    local result=1\n    for item in $list; do\n        if [ \"$item\" != \"$element\" ]; then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    check_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"green orange black white\" \"blue\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4\" \"7\") = \"false\" ]]\n    [[ $(candidate \"green green green green\" \"green\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
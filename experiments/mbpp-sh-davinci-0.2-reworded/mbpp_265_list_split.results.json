{
  "name": "mbpp_265_list_split",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_265_list_split.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local -a result\n  local -a temp\n  local i=0\n  for item in $list; do\n    temp[$i]=$item\n    ((i++))\n    if ((i == n)); then\n      result+=(\"${temp[@]}\")\n      i=0\n    fi\n  done\n  if ((i > 0)); then\n    result+=(\"${temp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result=\"$result [$item\"\n    else\n      result=\"$result $item\"\n    fi\n    if [ $((i + 1)) -eq $n ]; then\n      result=\"$result]\"\n      i=0\n    else\n      i=$((i + 1))\n    fi\n  done\n  if [ $i -ne 0 ]; then\n    result=\"$result]\"\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if ((i % n == 0)); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    ((i++))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]=\"${result[-1]} $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]=\"${result[-1]} $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list}\n  local tmp=\"\"\n  local tmp_list=\"\"\n  local tmp_result=\"\"\n  local tmp_result_list=\"\"\n  local tmp_result_list_len=0\n  local tmp_result_len=0\n  local tmp_result_list_index=0\n  local tmp_result_index=0\n  local tmp_result_list_index_len=0\n  local tmp_result_index_len=0\n  local tmp_result_list_index_len_1=0\n  local tmp_result_index_len_1=0\n  local tmp_result_list_index_len_1_1=0\n  local tmp_result_index_len_1_1=0\n  local tmp_result_list_index_len_1_1_1=0\n  local tmp_result_index_len_1_1_1=0\n  local tmp_result_list_index_len_1_1_1_1=0\n  local tmp_result_index_len_1_1_1_1=0\n  local tmp_result_list_index_len_1_1_1_1_1=0\n  local tmp_result_index_len_1_1_1_1_1=0\n  local tmp_result_list_index_len_1_1_1_1_1_1=0\n  local tmp_result_index_len_1_1_1_1_1_1=0\n  local tmp_result_list_index_len_1_1_1_1_1_1_1=0\n  local tmp_result_index_len_1_1_1_1_1_1_1=0\n  local tmp_result_list_index_len_1_1_1_1_1_1_1_1=0\n  local tmp_result_index_len_1_1_1_1_1_1_1_1=0\n  local tmp_result_list_index_len_1_1_1\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local -a result=()\n  local -a tmp=()\n  local i=0\n  for item in $list; do\n    tmp+=(\"$item\")\n    if (( i == n-1 )); then\n      result+=(\"${tmp[@]}\")\n      tmp=()\n      i=0\n    else\n      i=$((i+1))\n    fi\n  done\n  if (( ${#tmp[@]} > 0 )); then\n    result+=(\"${tmp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  local temp=()\n  for ((i=0; i<len; i++)); do\n    temp[j]=${list[i]}\n    j=$((j+1))\n    if [[ $((i+1))%n -eq 0 ]]; then\n      result[k]=\"${temp[@]}\"\n      temp=()\n      j=0\n      k=$((k+1))\n    fi\n  done\n  result[k]=\"${temp[@]}\"\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local -a result=()\n  local -a sublist=()\n  local i=0\n  for item in $list; do\n    sublist+=(\"$item\")\n    if (( i == n )); then\n      result+=(\"${sublist[@]}\")\n      sublist=()\n      i=0\n    else\n      (( i++ ))\n    fi\n  done\n  if (( ${#sublist[@]} > 0 )); then\n    result+=(\"${sublist[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local len=${#list}\n  local sublist=\"\"\n  while [ $i -lt $len ]; do\n    sublist=\"${sublist}${list:$i:1}\"\n    j=$((j+1))\n    if [ $j -eq $n ]; then\n      result=\"${result}${sublist},\"\n      sublist=\"\"\n      j=0\n    fi\n    i=$((i+1))\n  done\n  if [ $j -gt 0 ]; then\n    result=\"${result}${sublist}\"\n  fi\n  echo \"${result}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local -a result=()\n  local -a sublist=()\n  local i=0\n  for item in $list; do\n    sublist+=(\"$item\")\n    i=$((i+1))\n    if ((i % n == 0)); then\n      result+=(\"${sublist[@]}\")\n      sublist=()\n    fi\n  done\n  if ((${#sublist[@]} > 0)); then\n    result+=(\"${sublist[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if (( i % n == 0 )); then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        (( i++ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  local count=$((len/n))\n  local remainder=$((len%n))\n  local temp=()\n\n  for ((i=0; i<count; i++)); do\n    for ((j=0; j<n; j++)); do\n      temp[j]=${list[k]}\n      k=$((k+1))\n    done\n    result[i]=${temp[@]}\n  done\n\n  if [ $remainder -ne 0 ]; then\n    for ((j=0; j<remainder; j++)); do\n      temp[j]=${list[k]}\n      k=$((k+1))\n    done\n    result[i]=${temp[@]}\n  fi\n\n  echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i + 1))\n        if [[ $((i % n)) -eq 0 ]]; then\n            j=$((j + 1))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n\n    for ((i=0; i<${#list[@]}; i+=n)); do\n        result+=(\"${list[@]:i:n}\")\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local -a result\n  local -a tmp\n  local i=0\n  for item in $list; do\n    tmp[$i]=\"$item\"\n    if (( i == n - 1 )); then\n      result+=(\"${tmp[@]}\")\n      i=0\n    else\n      (( i++ ))\n    fi\n  done\n  if (( i > 0 )); then\n    result+=(\"${tmp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++)); do\n        result[j]=\"${result[j]} ${list[i]}\"\n        if ((i % n == n - 1)); then\n            j=$((j + 1))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$(( i + 1 ))\n  done\n\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local i=0\n    local result=\"\"\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            result=\"$result[$item\"\n        elif [ $i -eq $((n-1)) ]; then\n            result=\"$result $item]\"\n            i=0\n        else\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    if [ $i -ne 0 ]; then\n        result=\"$result]\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n   \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result=\"$result[$item\"\n    elif [ $((i % n)) -eq 0 ]; then\n      result=\"$result $item]\"\n    else\n      result=\"$result $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"$result]\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        result[$j]+=\"${list[$i]} \"\n        if [ $((i % n)) -eq $((n - 1)) ]; then\n            j=$((j + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for element in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$element\")\n        else\n            result[-1]+=\" $element\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result=\"$result [$item\"\n    elif [ $((i % n)) -eq 0 ]; then\n      result=\"$result $item]\"\n    else\n      result=\"$result $item\"\n    fi\n    i=$((i + 1))\n  done\n\n  echo \"$result]\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n\n    for i in $(seq 0 $n $(( ${#list[@]} - 1 ))); do\n        result+=( \"${list[@]:i:n}\" )\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]=\"${result[-1]} $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=$(list_length \"$list\")\n  local tmp=()\n  for i in $(seq 0 $((len - 1))); do\n    if [[ $((i % n)) -eq 0 ]]; then\n      if [[ $i -gt 0 ]]; then\n        result[$j]=\"$(list_join \"${tmp[@]}\")\"\n        j=$((j + 1))\n        tmp=()\n      fi\n    fi\n    tmp[$k]=\"$(list_get \"$list\" \"$i\")\"\n    k=$((k + 1))\n  done\n  result[$j]=\"$(list_join \"${tmp[@]}\")\"\n  echo \"$(list_join \"${result[@]}\")\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmll2b4t_.sh: line 13: list_length: command not found\\n/tmp/tmpmll2b4t_.sh: line 26: list_join: command not found\\n/tmp/tmpmll2b4t_.sh: line 27: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    local sublist=()\n    for item in $list; do\n        sublist[$i]=\"$item\"\n        i=$((i+1))\n        if [ $i -eq $n ]; then\n            result[$j]=\"${sublist[*]}\"\n            i=0\n            j=$((j+1))\n        fi\n    done\n    if [ $i -ne 0 ]; then\n        result[$j]=\"${sublist[*]}\"\n    fi\n    echo \"${result[*]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n   \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$((i+1))\n    if [ $i -eq $n ]; then\n      i=0\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [[ $((i % n)) -eq 0 ]]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local len=${#list}\n    local sublist=\"\"\n    local sublist_len=0\n    local char=\"\"\n\n    for ((i=0; i<len; i++)); do\n        char=\"${list:$i:1}\"\n        sublist_len=${#sublist}\n        if [[ $j -eq $n ]]; then\n            result=\"$result$sublist \"\n            sublist=\"\"\n            j=0\n        fi\n        sublist=\"$sublist$char\"\n        ((j++))\n    done\n    result=\"$result$sublist\"\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        if [ $i -eq $n ]; then\n            i=0\n            j=$((j+1))\n        fi\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i+1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local -a result=()\n    local -a temp=()\n    local i=0\n    for item in $list; do\n        temp+=($item)\n        i=$((i+1))\n        if [[ $((i%n)) -eq 0 ]]; then\n            result+=(\"${temp[@]}\")\n            temp=()\n        fi\n    done\n    if [[ ${#temp[@]} -gt 0 ]]; then\n        result+=(\"${temp[@]}\")\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for element in $list; do\n    result[$i]=\"${result[$i]} $element\"\n    ((i++))\n    if ((i == n)); then\n      i=0\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [[ $i -eq 0 ]]; then\n            result+=(\"$item\")\n        else\n            result[${#result[@]}-1]=\"${result[${#result[@]}-1]} $item\"\n        fi\n        i=$((i+1))\n        if [[ $i -eq $n ]]; then\n            i=0\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [[ $((i % n)) -eq 0 ]]; then\n            result+=(\"$item\")\n        else\n            result[-1]=\"${result[-1]} $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local sublist=()\n    for item in $list; do\n        sublist+=($item)\n        i=$((i+1))\n        if [[ $((i%n)) -eq 0 ]]; then\n            result+=($(list_join \"${sublist[@]}\"))\n            sublist=()\n        fi\n    done\n    if [[ ${#sublist[@]} -gt 0 ]]; then\n        result+=($(list_join \"${sublist[@]}\"))\n    fi\n    list_join \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnqwr7n6b.sh: line 16: list_join: command not found\\n/tmp/tmpnqwr7n6b.sh: line 16: list_join: command not found\\n/tmp/tmpnqwr7n6b.sh: line 16: list_join: command not found\\n/tmp/tmpnqwr7n6b.sh: line 16: list_join: command not found\\n/tmp/tmpnqwr7n6b.sh: line 21: list_join: command not found\\n/tmp/tmpnqwr7n6b.sh: line 23: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local count=0\n    local tmp=()\n    for item in $list; do\n        tmp+=($item)\n        if (( i == n - 1 )); then\n            result+=(${tmp[@]})\n            tmp=()\n            i=0\n            continue\n        fi\n        i=$(( i + 1 ))\n    done\n    if (( ${#tmp[@]} > 0 )); then\n        result+=(${tmp[@]})\n    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  for ((i=0; i<len; i++)); do\n    if ((i % n == 0)); then\n      result[j]=()\n      k=0\n    fi\n    result[j][k]=${list[i]}\n    ((k++))\n    ((j++))\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpk6139wcg.sh: line 16: result[j]: cannot assign list to array member\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [[ $((i % n)) -eq 0 ]]; then\n            result+=(\"$item\")\n        else\n            result[-1]=\"${result[-1]} $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local i=0\n  local result=()\n  while [[ $i -lt ${#list[@]} ]]; do\n    result+=( \"${list[@]:$i:$n}\" )\n    i=$(( i + n ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  for item in $list; do\n    if [ $i -eq $n ]; then\n      i=0\n      j=$((j+1))\n    fi\n    result[$j]=\"${result[$j]} $item\"\n    i=$((i+1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local sublist=\"\"\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            sublist=\"$item\"\n        else\n            sublist=\"$sublist $item\"\n        fi\n        i=$((i+1))\n        if [ $i -eq $n ]; then\n            if [ -z \"$result\" ]; then\n                result=\"$sublist\"\n            else\n                result=\"$result $sublist\"\n            fi\n            i=0\n        fi\n    done\n    if [ $i -ne 0 ]; then\n        if [ -z \"$result\" ]; then\n            result=\"$sublist\"\n        else\n            result=\"$result $sublist\"\n        fi\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local sublist=()\n    for item in $list; do\n        sublist+=($item)\n        i=$((i+1))\n        if [[ $i -eq $n ]]; then\n            result+=($(list_join \"${sublist[@]}\"))\n            sublist=()\n            i=0\n        fi\n    done\n    if [[ $i -gt 0 ]]; then\n        result+=($(list_join \"${sublist[@]}\"))\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpambj_cnp.sh: line 16: list_join: command not found\\n/tmp/tmpambj_cnp.sh: line 16: list_join: command not found\\n/tmp/tmpambj_cnp.sh: line 16: list_join: command not found\\n/tmp/tmpambj_cnp.sh: line 16: list_join: command not found\\n/tmp/tmpambj_cnp.sh: line 22: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if (( $i % $n == 0 )); then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        (( i++ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result=\"$result[$item\"\n    elif [ $i -eq $n ]; then\n      result=\"$result $item]\"\n      i=0\n    else\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  if [ $i -ne 0 ]; then\n    result=\"$result]\"\n  fi\n  echo $result\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local sublist=\"\"\n\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      sublist=\"$item\"\n    else\n      sublist=\"$sublist $item\"\n    fi\n\n    if [ $((i + 1)) -eq $n ]; then\n      if [ -z \"$result\" ]; then\n        result=\"$sublist\"\n      else\n        result=\"$result $sublist\"\n      fi\n      i=0\n    else\n      i=$((i + 1))\n    fi\n  done\n\n  if [ $i -ne 0 ]; then\n    if [ -z \"$result\" ]; then\n      result=\"$sublist\"\n    else\n      result=\"$result $sublist\"\n    fi\n  fi\n\n  echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n\n  for i in $(seq 1 $n); do\n    result+=($(list_slice $list $i $n))\n  done\n\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprldlied5.sh: line 12: list_slice: command not found\\n/tmp/tmprldlied5.sh: line 12: list_slice: command not found\\n/tmp/tmprldlied5.sh: line 12: list_slice: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local -a result=()\n  local -a tmp=()\n  local i=0\n  for item in $list; do\n    tmp+=($item)\n    if (( i == n )); then\n      result+=(${tmp[@]})\n      tmp=()\n      i=0\n    else\n      i=$(( i + 1 ))\n    fi\n  done\n  if (( ${#tmp[@]} > 0 )); then\n    result+=(${tmp[@]})\n  fi\n  echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local sublist=\"\"\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      sublist=\"$item\"\n    else\n      sublist=\"$sublist $item\"\n    fi\n    i=$((i+1))\n    if [ $i -eq $n ]; then\n      if [ -z \"$result\" ]; then\n        result=\"$sublist\"\n      else\n        result=\"$result $sublist\"\n      fi\n      i=0\n    fi\n  done\n  if [ $i -ne 0 ]; then\n    if [ -z \"$result\" ]; then\n      result=\"$sublist\"\n    else\n      result=\"$result $sublist\"\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            result[$j]=$item\n        else\n            result[$j]=\"${result[$j]} $item\"\n        fi\n        i=$((i+1))\n        if [ $i -eq $n ]; then\n            i=0\n            j=$((j+1))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local -n _list=$1\n    local n=$2\n    local -a result=()\n    local -a tmp=()\n    local i=0\n    for item in \"${_list[@]}\"; do\n        tmp+=( \"$item\" )\n        if (( ++i % n == 0 )); then\n            result+=( \"${tmp[@]}\" )\n            tmp=()\n        fi\n    done\n    if (( ${#tmp[@]} > 0 )); then\n        result+=( \"${tmp[@]}\" )\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpe2lg6_1b.sh: line 7: local: `a b c d e f g h i j k l m n': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  local sublist=()\n  while [ $i -lt $len ]; do\n    sublist[$j]=${list[$i]}\n    i=$((i+1))\n    j=$((j+1))\n    if [ $j -eq $n ]; then\n      result[$k]=\"${sublist[@]}\"\n      j=0\n      k=$((k+1))\n      sublist=()\n    fi\n  done\n  if [ $j -gt 0 ]; then\n    result[$k]=\"${sublist[@]}\"\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i+=n)); do\n        result[j]=\"${list[@]:i:n}\"\n        ((j++))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local len=${#list[@]}\n  while [ $i -lt $len ]; do\n    result[$j]+=\"${list[$i]} \"\n    if [ $((i % n)) -eq $((n - 1)) ]; then\n      j=$((j + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        result[$i]+=\"$item \"\n        if (( i == n - 1 )); then\n            i=0\n        else\n            i=$(( i + 1 ))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local nth=()\n  local tmp=()\n  local tmp2=()\n  local tmp3=()\n  local tmp4=()\n  local tmp5=()\n  local tmp6=()\n  local tmp7=()\n  local tmp8=()\n  local tmp9=()\n  local tmp10=()\n  local tmp11=()\n  local tmp12=()\n  local tmp13=()\n  local tmp14=()\n  local tmp15=()\n  local tmp16=()\n  local tmp17=()\n  local tmp18=()\n  local tmp19=()\n  local tmp20=()\n  local tmp21=()\n  local tmp22=()\n  local tmp23=()\n  local tmp24=()\n  local tmp25=()\n  local tmp26=()\n  local tmp27=()\n  local tmp28=()\n  local tmp29=()\n  local tmp30=()\n  local tmp31=()\n  local tmp32=()\n  local tmp33=()\n  local tmp34=()\n  local tmp35=()\n  local tmp36=()\n  local tmp37=()\n  local tmp38=()\n  local tmp39=()\n  local tmp40=()\n  local tmp41=()\n  local tmp42=()\n  local tmp43=()\n  local tmp44=()\n  local tmp45=()\n  local tmp46=()\n  local tmp47=()\n  local tmp48=()\n  local tmp49=()\n  local tmp50=()\n  local tmp51=()\n  local tmp52=()\n  local tmp53=()\n  local tmp54=()\n  local tmp55=()\n  local tmp56=()\n  local tmp57=()\n  local tmp58=()\n  local tmp59=()\n  local tmp60=()\n  local tmp61=()\n  local tmp62=()\n  local tmp63=()\n  local tmp64=()\n  local tmp65=()\n  local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local eeee=0\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local -a result=()\n  local -a temp=()\n  local count=0\n  for i in $list; do\n    temp+=(\"$i\")\n    ((count++))\n    if ((count == n)); then\n      result+=(\"${temp[@]}\")\n      count=0\n      temp=()\n    fi\n  done\n  if ((count > 0)); then\n    result+=(\"${temp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local i=0\n    local result=\"\"\n    while [ $i -lt ${#list} ]; do\n        result=\"$result ${list:$i:$n}\"\n        i=$((i + n))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n   \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local -n _list_split_list=$1\n    local _list_split_n=$2\n    local _list_split_result=()\n    local _list_split_i=0\n    local _list_split_j=0\n    local _list_split_k=0\n    local _list_split_l=0\n    local _list_split_m=0\n    local _list_split_n_minus_1=$((_list_split_n - 1))\n    local _list_split_list_len=${#_list_split_list[@]}\n    local _list_split_list_len_minus_1=$((_list_split_list_len - 1))\n    local _list_split_list_len_mod_n=$((_list_split_list_len % _list_split_n))\n    local _list_split_list_len_div_n=$((_list_split_list_len / _list_split_n))\n    local _list_split_list_len_div_n_minus_1=$((_list_split_list_len_div_n - 1))\n    local _list_split_list_len_div_n_plus_1=$((_list_split_list_len_div_n + 1))\n    local _list_split_list_len_div_n_plus_1_times_n=$((_list_split_list_len_div_n_plus_1 * _list_split_n))\n    local _list_split_list_len_div_n_plus_1_times_n_minus_1=$((_list_split_list_len_div_n_plus_1_times_n - 1))\n    local _list_split_list_len_div_n_plus_1_times_n_minus_2=$((_list_split_list_len_div_n_plus_1_times_n - 2))\n    local _list_split_list_len_div_n_plus_1_times_n_minus_3=$((_list_split_list_len_div_n_plus_1_times_n - 3))\n    local _\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpbnopzb2i.sh: line 7: local: `a b c d e f g h i j k l m n': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local -a result=()\n  local -a sublist=()\n  local i=0\n  for item in $list; do\n    sublist+=($item)\n    ((i++))\n    if [[ $i -eq $n ]]; then\n      result+=(${sublist[@]})\n      sublist=()\n      i=0\n    fi\n  done\n  if [[ ${#sublist[@]} -gt 0 ]]; then\n    result+=(${sublist[@]})\n  fi\n  echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i+1))\n        if [[ $((i % n)) -eq 0 ]]; then\n            j=$((j+1))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  for item in $list; do\n    if [ $i -eq $n ]; then\n      result[$j]=$item\n      i=0\n      j=$((j+1))\n    else\n      result[$j]=\"${result[$j]} $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local sublist=()\n  for item in $list; do\n    if [ $i -eq $n ]; then\n      result[$j]=\"${sublist[*]}\"\n      j=$((j + 1))\n      i=0\n      sublist=()\n    fi\n    sublist[$i]=\"$item\"\n    i=$((i + 1))\n  done\n  result[$j]=\"${sublist[*]}\"\n  echo \"${result[*]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local sublist=\"\"\n  for item in $list; do\n    if [ $i -eq $n ]; then\n      result=\"$result $sublist\"\n      sublist=\"\"\n      i=0\n    fi\n    sublist=\"$sublist $item\"\n    i=$((i+1))\n  done\n  result=\"$result $sublist\"\n  echo $result\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_list=\"\"\n    local n_list_len=0\n    local n_list_len_str=\"\"\n    local n_list_len_str_len=0\n    local n_list_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len_str_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str_len_str_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len_str_len_str_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str_len_str_len_str_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str=\"\"\n    local n_list_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len=0\n    local n_list_len_str_len_str_len_str_len\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local i=0\n    local result=()\n    local tmp=()\n    for item in $list; do\n        tmp+=(\"$item\")\n        i=$((i + 1))\n        if [[ $((i % n)) -eq 0 ]]; then\n            result+=(\"${tmp[@]}\")\n            tmp=()\n        fi\n    done\n    if [[ ${#tmp[@]} -ne 0 ]]; then\n        result+=(\"${tmp[@]}\")\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            result=\"$result( $item\"\n        elif [ $i -eq $n ]; then\n            result=\"$result $item )\"\n            i=0\n        else\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    if [ $i -ne 0 ]; then\n        result=\"$result )\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result[$j]=$item\n    else\n      result[$j]=\"${result[$j]} $item\"\n    fi\n    i=$((i+1))\n    if [ $i -eq $n ]; then\n      i=0\n      j=$((j+1))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local list_len=${#list}\n  local list_len_minus_one=$((list_len - 1))\n  local list_len_minus_n=$((list_len - n))\n  local list_len_minus_n_plus_one=$((list_len - n + 1))\n  local list_len_minus_n_plus_two=$((list_len - n + 2))\n  local list_len_minus_n_plus_three=$((list_len - n + 3))\n  local list_len_minus_n_plus_four=$((list_len - n + 4))\n  local list_len_minus_n_plus_five=$((list_len - n + 5))\n  local list_len_minus_n_plus_six=$((list_len - n + 6))\n  local list_len_minus_n_plus_seven=$((list_len - n + 7))\n  local list_len_minus_n_plus_eight=$((list_len - n + 8))\n  local list_len_minus_n_plus_nine=$((list_len - n + 9))\n  local list_len_minus_n_plus_ten=$((list_len - n + 10))\n  local list_len_minus_n_plus_eleven=$((list_len - n + 11))\n  local list_len_minus_n_plus_twelve=$((list_len - n + 12))\n  local list_len_minus_n_plus_thirteen=$((list_len - n + 13))\n  local list_len_minus_n_plus_fourteen=$((list_len - n + 14))\n  local list_len_minus_n_plus_fifteen=$((list_len - n + 15))\n  local list_len_minus_n_plus_sixteen=$((list_len - n + 16))\n  local list_len_minus_n_plus_seventeen=$((list_len - n + 17))\n  local list_len_minus_n_plus_eighteen=$\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local -a result=()\n  local -a tmp=()\n  local i=0\n  for item in $list; do\n    tmp+=($item)\n    i=$((i + 1))\n    if [[ $((i % n)) -eq 0 ]]; then\n      result+=(\"${tmp[@]}\")\n      tmp=()\n    fi\n  done\n  if [[ ${#tmp[@]} -gt 0 ]]; then\n    result+=(\"${tmp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local count=0\n  local sublist=()\n  for item in $list; do\n    sublist+=($item)\n    count=$((count + 1))\n    if [[ $count -eq $n ]]; then\n      result+=($(list_join $sublist))\n      sublist=()\n      count=0\n    fi\n  done\n  if [[ $count -ne 0 ]]; then\n    result+=($(list_join $sublist))\n  fi\n  echo \"$(list_join $result)\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpc95rghad.sh: line 16: list_join: command not found\\n/tmp/tmpc95rghad.sh: line 16: list_join: command not found\\n/tmp/tmpc95rghad.sh: line 16: list_join: command not found\\n/tmp/tmpc95rghad.sh: line 16: list_join: command not found\\n/tmp/tmpc95rghad.sh: line 22: list_join: command not found\\n/tmp/tmpc95rghad.sh: line 24: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  for ((i=0; i<len; i++)); do\n    if ((i % n == 0)); then\n      result[j]=()\n      k=0\n      j=$((j+1))\n    fi\n    result[j][k]=${list[i]}\n    k=$((k+1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmmryaxnc.sh: line 16: result[j]: cannot assign list to array member\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local sublist=()\n  for item in $list; do\n    sublist+=(\"$item\")\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"${sublist[@]}\")\n      sublist=()\n    fi\n    i=$((i + 1))\n  done\n  if [ ${#sublist[@]} -gt 0 ]; then\n    result+=(\"${sublist[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local l=0\n    local k=0\n    local sublist=\"\"\n    local sublist_len=0\n    local sublist_len_str=\"\"\n    local list_len=0\n    local list_len_str=\"\"\n\n    list_len=$(list_len \"$list\")\n    list_len_str=\"$list_len\"\n\n    while [ $i -lt $list_len ]; do\n        sublist=\"\"\n        j=0\n        while [ $j -lt $n ]; do\n            if [ $i -lt $list_len ]; then\n                sublist=\"$sublist $(list_get \"$list\" \"$i\")\"\n            fi\n            i=$((i + 1))\n            j=$((j + 1))\n        done\n        sublist_len=$(list_len \"$sublist\")\n        sublist_len_str=\"$sublist_len\"\n        result=\"$result $(list_new \"$sublist_len_str\" \"$sublist\")\"\n    done\n    result=\"$(list_new \"$list_len_str\" \"$result\")\"\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpayjbquuy.sh: line 20: list_len: command not found\\n/tmp/tmpayjbquuy.sh: line 23: [: 0: unary operator expected\\n/tmp/tmpayjbquuy.sh: line 37: list_new: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local i=0\n  local result=()\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local -a result=()\n  local -a tmp=()\n  local i=0\n  for item in $list; do\n    tmp+=($item)\n    if (( i % n == 0 )); then\n      result+=(\"${tmp[@]}\")\n      tmp=()\n    fi\n    ((i++))\n  done\n  if (( ${#tmp[@]} > 0 )); then\n    result+=(\"${tmp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local len=$(list_length \"$list\")\n    local sublist=\"\"\n    local sublist_len=0\n    local sublist_item=\"\"\n    local sublist_item_len=0\n    local sublist_item_char=\"\"\n    local sublist_item_char_len=0\n    local sublist_item_char_index=0\n    local sublist_item_char_value=\"\"\n    local sublist_item_char_value_len=0\n    local sublist_item_char_value_index=0\n    local sublist_item_char_value_char=\"\"\n    local sublist_item_char_value_char_len=0\n    local sublist_item_char_value_char_index=0\n    local sublist_item_char_value_char_value=\"\"\n    local sublist_item_char_value_char_value_len=0\n    local sublist_item_char_value_char_value_index=0\n    local sublist_item_char_value_char_value_char=\"\"\n    local sublist_item_char_value_char_value_char_len=0\n    local sublist_item_char_value_char_value_char_index=0\n    local sublist_item_char_value_char_value_char_value=\"\"\n    local sublist_item_char_value_char_value_char_value_len=0\n    local sublist_item_char_value_char_value_char_value_index=0\n    local sublist_item_char_value_char_value_char_value_char=\"\"\n    local sublist_item_char_value_char_value_char_value_char_len=0\n    local sublist_item_char_value_char_value_char_value_char_index=0\n    local sublist_item_char_value_char_value_char_value_char_value=\"\"\n    local sublist_item_char_value_char_value_char_value_char_value_len\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpaahfmcrs.sh: line 13: list_length: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  for i in $list; do\n    result[$j]=\"${result[$j]} $i\"\n    k=$((k+1))\n    if [ $k -eq $n ]; then\n      k=0\n      j=$((j+1))\n    fi\n  done\n  for l in ${result[@]}; do\n    m=$((m+1))\n    if [ $m -eq 1 ]; then\n      echo \"$l\"\n    else\n      echo \"($l)\"\n    fi\n  done\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        if [[ $i -eq $n ]]; then\n            result[$j]=\"${result[$j]} $item\"\n            i=0\n            j=$((j+1))\n        else\n            result[$j]=\"${result[$j]} $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local sublist=()\n  for item in $list; do\n    sublist[$i]=$item\n    i=$((i+1))\n    if [[ $i -eq $n ]]; then\n      result[$j]=$(list_join \"${sublist[@]}\")\n      i=0\n      j=$((j+1))\n    fi\n  done\n  if [[ $i -gt 0 ]]; then\n    result[$j]=$(list_join \"${sublist[@]}\")\n  fi\n  list_join \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphnsxcoff.sh: line 17: list_join: command not found\\n/tmp/tmphnsxcoff.sh: line 17: list_join: command not found\\n/tmp/tmphnsxcoff.sh: line 17: list_join: command not found\\n/tmp/tmphnsxcoff.sh: line 17: list_join: command not found\\n/tmp/tmphnsxcoff.sh: line 23: list_join: command not found\\n/tmp/tmphnsxcoff.sh: line 25: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in ${list[@]}; do\n        if [[ $i -eq $n ]]; then\n            i=0\n            j=$((j + 1))\n        fi\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [[ $((i % n)) -eq 0 ]]; then\n      result+=(\"$item\")\n    else\n      result[-1]=\"${result[-1]} $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local sublist=()\n  for item in $list; do\n    sublist[$i]=\"$item\"\n    ((i++))\n    if ((i == n)); then\n      result[$j]=\"${sublist[@]}\"\n      i=0\n      ((j++))\n    fi\n  done\n  if ((i != 0)); then\n    result[$j]=\"${sublist[@]}\"\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local m=0\n    local l=0\n    local len=${#list[@]}\n    local len_n=$((len/n))\n    local len_n_mod=$((len%n))\n    local len_n_mod_m=$((len_n_mod*n))\n    local len_n_mod_m_n=$((len_n_mod_m/n))\n    local len_n_mod_m_n_mod=$((len_n_mod_m%n))\n    local len_n_mod_m_n_mod_m=$((len_n_mod_m_n_mod*n))\n    local len_n_mod_m_n_mod_m_n=$((len_n_mod_m_n_mod_m/n))\n    local len_n_mod_m_n_mod_m_n_mod=$((len_n_mod_m_n_mod_m%n))\n    local len_n_mod_m_n_mod_m_n_mod_m=$((len_n_mod_m_n_mod_m_n_mod*n))\n    local len_n_mod_m_n_mod_m_n_mod_m_n=$((len_n_mod_m_n_mod_m_n_mod_m/n))\n    local len_n_mod_m_n_mod_m_n_mod_m_n_mod=$((len_n_mod_m_n_mod_m_n_mod_m%n))\n    local len_n_mod_m_n_mod_m_n_mod_m_n_mod_m=$((len_n_mod_m_n_mod_m_n_mod_m_n_mod*n))\n    local len_n_mod_m_n_mod_m_n_mod_m_n_mod_m_n=$((len_n_mod_m_n_mod_m_n_mod_m_n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpff9opy4t.sh: line 28: unexpected EOF while looking for matching `)'\\n/tmp/tmpff9opy4t.sh: line 43: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local -a result\n    local -a sublist\n    local i=0\n    for item in $list; do\n        sublist[$i]=$item\n        i=$((i+1))\n        if [[ $i -eq $n ]]; then\n            result+=( \"${sublist[@]}\" )\n            i=0\n        fi\n    done\n    if [[ $i -gt 0 ]]; then\n        result+=( \"${sublist[@]}\" )\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  for item in $list; do\n    if [ $i -eq $n ]; then\n      i=0\n      j=$((j+1))\n    fi\n    result[$j]=\"${result[$j]} $item\"\n    i=$((i+1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local tmp=()\n    local tmp2=()\n\n    for i in ${list[@]}; do\n        tmp[$j]=$i\n        j=$((j+1))\n        if [ $j -eq $n ]; then\n            result[$k]=$(list_join \"${tmp[@]}\")\n            k=$((k+1))\n            j=0\n            tmp=()\n        fi\n    done\n\n    if [ $j -ne 0 ]; then\n        for l in ${tmp[@]}; do\n            tmp2[$m]=$l\n            m=$((m+1))\n        done\n        result[$k]=$(list_join \"${tmp2[@]}\")\n    fi\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1utt6ohg.sh: line 22: list_join: command not found\\n/tmp/tmp1utt6ohg.sh: line 22: list_join: command not found\\n/tmp/tmp1utt6ohg.sh: line 22: list_join: command not found\\n/tmp/tmp1utt6ohg.sh: line 22: list_join: command not found\\n/tmp/tmp1utt6ohg.sh: line 34: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local count=0\n  local sublist=()\n  for item in $list; do\n    sublist+=($item)\n    ((count++))\n    if ((count == n)); then\n      result+=($(list_join sublist))\n      sublist=()\n      count=0\n    fi\n  done\n  if ((count > 0)); then\n    result+=($(list_join sublist))\n  fi\n  echo \"$(list_join result)\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplgzpzdjx.sh: line 16: list_join: command not found\\n/tmp/tmplgzpzdjx.sh: line 16: list_join: command not found\\n/tmp/tmplgzpzdjx.sh: line 16: list_join: command not found\\n/tmp/tmplgzpzdjx.sh: line 16: list_join: command not found\\n/tmp/tmplgzpzdjx.sh: line 22: list_join: command not found\\n/tmp/tmplgzpzdjx.sh: line 24: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local sublist=()\n\n  for item in $list; do\n    sublist[$i]=\"$item\"\n    i=$((i+1))\n    if [ $i -eq $n ]; then\n      result[$j]=\"${sublist[*]}\"\n      i=0\n      j=$((j+1))\n    fi\n  done\n\n  if [ $i -gt 0 ]; then\n    result[$j]=\"${sublist[*]}\"\n  fi\n\n  echo \"${result[*]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local len=${#list}\n    local sublist=\"\"\n    for ((i=0; i<len; i++)); do\n        if [[ $((i%n)) -eq 0 ]]; then\n            if [[ $i -ne 0 ]]; then\n                result=\"$result,$sublist\"\n            fi\n            sublist=\"\"\n        fi\n        sublist=\"$sublist${list:$i:1}\"\n    done\n    result=\"$result,$sublist\"\n    echo \"${result:1}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        result[$j]=\"${result[$j]} ${list[$i]}\"\n        if [ $((i % n)) -eq $((n - 1)) ]; then\n            j=$((j + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i + 1))\n        if [[ $((i % n)) == 0 ]]; then\n            j=$((j + 1))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  local tmp=()\n  while [ $i -lt $len ]; do\n    if [ $j -eq $n ]; then\n      result[$k]=$(list_join \"${tmp[@]}\")\n      tmp=()\n      j=0\n      k=$((k+1))\n    fi\n    tmp[$j]=${list[$i]}\n    i=$((i+1))\n    j=$((j+1))\n  done\n  if [ $j -ne 0 ]; then\n    result[$k]=$(list_join \"${tmp[@]}\")\n  fi\n  list_join \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprq0j8lfs.sh: line 27: list_join: command not found\\n/tmp/tmprq0j8lfs.sh: line 29: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        if [ $i -eq $n ]; then\n            i=0\n            j=$((j+1))\n        fi\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i+1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]=\"${result[-1]} $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    for i in $(seq 0 $n); do\n        result[$i]=()\n    done\n    for i in $list; do\n        result[$j]=\"${result[$j]} $i\"\n        j=$((j+1))\n        if [ $j -eq $n ]; then\n            j=0\n        fi\n    done\n    for i in $(seq 0 $n); do\n        result[$i]=$(echo \"${result[$i]}\" | sed 's/^ *//g')\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu6jg8dkb.sh: line 14: result[$i]: cannot assign list to array member\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for element in $list; do\n        if (( i % n == 0 )); then\n            result+=(\"$element\")\n        else\n            result[-1]+=\" $element\"\n        fi\n        (( i++ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        if [ $i -eq $n ]; then\n            result[$j]=$(echo ${result[$j]} $item)\n            i=0\n            j=$((j+1))\n        else\n            result[$j]=$(echo ${result[$j]} $item)\n        fi\n        i=$((i+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n\n  for item in $list; do\n    if [[ $i -eq 0 ]]; then\n      result[$j]=\"$item\"\n    else\n      result[$j]=\"${result[$j]} $item\"\n    fi\n\n    i=$((i + 1))\n    if [[ $i -eq $n ]]; then\n      i=0\n      j=$((j + 1))\n    fi\n  done\n\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_list=()\n  local n_list_length=0\n  local n_list_length_mod=0\n  local n_list_length_mod_div=0\n  local n_list_length_mod_div_rem=0\n  local n_list_length_mod_div_rem_div=0\n  local n_list_length_mod_div_rem_div_rem=0\n  local n_list_length_mod_div_rem_div_rem_div=0\n  local n_list_length_mod_div_rem_div_rem_div_rem=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div_rem=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div_rem_div=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div_rem_div_rem=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div_rem_div_rem_div=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div_rem_div_rem_div_rem=0\n  local n_list_length_mod_div_rem_div_rem_div_rem_div_rem_div_rem_div_rem_div_rem_div=0\n  local n_list_length_mod\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_list=()\n    local n_list_len=0\n    local n_list_len_mod=0\n    local n_list_len_mod_div=0\n    local n_list_len_mod_div_mod=0\n    local n_list_len_mod_div_mod_div=0\n    local n_list_len_mod_div_mod_div_mod=0\n    local n_list_len_mod_div_mod_div_mod_div=0\n    local n_list_len_mod_div_mod_div_mod_div_mod=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div_mod=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div_mod=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div_mod=0\n    local n_list_len_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div_mod_div=0\n    local n_list_len_mod_div_mod\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local sublist=\"\"\n  for x in $list; do\n    if [ $i -eq 0 ]; then\n      sublist=\"$x\"\n    else\n      sublist=\"$sublist $x\"\n    fi\n    i=$((i+1))\n    if [ $i -eq $n ]; then\n      if [ -z \"$result\" ]; then\n        result=\"$sublist\"\n      else\n        result=\"$result $sublist\"\n      fi\n      i=0\n    fi\n  done\n  if [ $i -ne 0 ]; then\n    if [ -z \"$result\" ]; then\n      result=\"$sublist\"\n    else\n      result=\"$result $sublist\"\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    for item in $list; do\n        if (( i % n == 0 )); then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$(( i + 1 ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in ${list[@]}; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  for i in $list; do\n    result[$j]+=\" $i\"\n    k=$((k+1))\n    if [[ $k -eq $n ]]; then\n      k=0\n      j=$((j+1))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  local tmp=()\n  while [ $i -lt $len ]; do\n    tmp[$j]=${list[$i]}\n    if [ $j -eq $((n-1)) ]; then\n      result[$k]=$(list_join \"${tmp[@]}\")\n      j=0\n      k=$((k+1))\n    else\n      j=$((j+1))\n    fi\n    i=$((i+1))\n  done\n  if [ $j -ne 0 ]; then\n    result[$k]=$(list_join \"${tmp[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpknasc2ww.sh: line 27: list_join: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    for item in $list; do\n        result[$j]=\"${result[$j]} $item\"\n        i=$((i + 1))\n        if [[ $((i % n)) -eq 0 ]]; then\n            j=$((j + 1))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local sublist=\"\"\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      sublist=\"$item\"\n    else\n      sublist=\"$sublist $item\"\n    fi\n    i=$((i+1))\n    if [ $i -eq $n ]; then\n      if [ $j -eq 0 ]; then\n        result=\"$sublist\"\n      else\n        result=\"$result $sublist\"\n      fi\n      i=0\n      j=$((j+1))\n    fi\n  done\n  if [ $i -ne 0 ]; then\n    if [ $j -eq 0 ]; then\n      result=\"$sublist\"\n    else\n      result=\"$result $sublist\"\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n   \n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]=\"${result[-1]} $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local sublist=\"\"\n    for item in $list; do\n        if [ $i -eq $n ]; then\n            result=\"$result $sublist\"\n            i=0\n            sublist=\"\"\n        fi\n        sublist=\"$sublist $item\"\n        i=$((i+1))\n    done\n    if [ $i -gt 0 ]; then\n        result=\"$result $sublist\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local -n _list_split_list=$1\n  local _list_split_n=$2\n  local _list_split_result=()\n  local _list_split_i=0\n  local _list_split_j=0\n  for ((_list_split_i=0; _list_split_i<${#_list_split_list[@]}; _list_split_i++)); do\n    if ((_list_split_i % _list_split_n == 0)); then\n      _list_split_result+=(\"${_list_split_list[@]:_list_split_i:_list_split_n}\")\n    fi\n  done\n  echo \"${_list_split_result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpmh06ra9p.sh: line 7: local: `a b c d e f g h i j k l m n': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local i=0\n    local result=()\n    for item in $list; do\n        if (( i % n == 0 )); then\n            result+=(\"$item\")\n        else\n            result[-1]=\"${result[-1]} $item\"\n        fi\n        (( i++ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    result[$i]=\"${result[$i]} $item\"\n    let i++\n    if [[ $((i % n)) -eq 0 ]]; then\n      i=0\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local len=${#list[@]}\n  local tmp=()\n  for ((i=0; i<len; i++)); do\n    tmp[j]=\"${list[i]}\"\n    j=$((j+1))\n    if ((j==n)); then\n      result[k]=\"${tmp[*]}\"\n      j=0\n      k=$((k+1))\n    fi\n  done\n  if ((j>0)); then\n    result[k]=\"${tmp[*]}\"\n  fi\n  echo \"${result[*]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local nth=()\n    for ((i=0; i<${#list}; i++)); do\n        if [[ $((i % n)) -eq 0 ]]; then\n            nth+=(\"${list[$i]}\")\n            for ((j=0; j<${#nth}; j++)); do\n                result[$k]+=\"${nth[$j]}\"\n            done\n            k=$((k + 1))\n            nth=()\n        else\n            nth+=(\"${list[$i]}\")\n        fi\n    done\n    for ((l=0; l<${#nth}; l++)); do\n        result[$k]+=\"${nth[$l]}\"\n    done\n    for ((m=0; m<${#result[@]}; m++)); do\n        echo \"${result[$m]}\"\n    done\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local len=${#list[@]}\n  while (( i < len )); do\n    result[j]+=\"${list[i]}\"\n    if (( (i+1) % n == 0 )); then\n      (( j++ ))\n    else\n      result[j]+=\" \"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for element in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$element\")\n    else\n      result[-1]+=\" $element\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result=\"$result[$item\"\n    elif [ $i -eq $n ]; then\n      result=\"$result $item]\"\n      i=0\n    else\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  for item in $list; do\n    if [ $i -eq 0 ]; then\n      result[$j]=\"$item\"\n    else\n      result[$j]=\"${result[$j]} $item\"\n    fi\n    i=$((i + 1))\n    if [ $i -eq $n ]; then\n      i=0\n      j=$((j + 1))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local sublist=()\n\n  for item in $list; do\n    sublist[$i]=\"$item\"\n    ((i++))\n    if [[ $((i % n)) -eq 0 ]]; then\n      result[$j]=\"${sublist[*]}\"\n      sublist=()\n      ((j++))\n    fi\n  done\n\n  if [[ ${#sublist[@]} -gt 0 ]]; then\n    result[$j]=\"${sublist[*]}\"\n  fi\n\n  echo \"${result[*]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $((i % n)) -eq 0 ]; then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[-1]=\"${result[-1]} $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local i=0\n  local result=()\n  local sublist=()\n  for item in $list; do\n    sublist+=(\"$item\")\n    if (( i == n )); then\n      result+=(\"${sublist[@]}\")\n      sublist=()\n      i=0\n    else\n      (( i++ ))\n    fi\n  done\n  if (( ${#sublist[@]} > 0 )); then\n    result+=(\"${sublist[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $((i % n)) -eq 0 ]; then\n      result+=(\"$item\")\n    else\n      result[-1]+=\" $item\"\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local -a result=()\n    local -a tmp=()\n    local i=0\n    for item in $list; do\n        tmp+=($item)\n        i=$((i + 1))\n        if [[ $i -eq $n ]]; then\n            result+=(${tmp[@]})\n            i=0\n            tmp=()\n        fi\n    done\n    if [[ ${#tmp[@]} -gt 0 ]]; then\n        result+=(${tmp[@]})\n    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if (( i % n == 0 )); then\n            result+=(\"$item\")\n        else\n            result[-1]+=\" $item\"\n        fi\n        (( i++ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local A=0\n  local B=0\n  local C=0\n  local D=0\n  local E=0\n  local F=0\n  local G=0\n  local H=0\n  local I=0\n  local J=0\n  local K=0\n  local L=0\n  local M=0\n  local N=0\n  local O=0\n  local P=0\n  local Q=0\n  local R=0\n  local S=0\n  local T=0\n  local U=0\n  local V=0\n  local W=0\n  local X=0\n  local Y=0\n  local Z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local A=0\n  local B=0\n  local C=0\n  local D=0\n  local E=0\n  local F=0\n  local G=0\n  local H=0\n  local I=0\n  local J=0\n  local K=0\n  local L=\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            result=\"$result[$item\"\n        elif [ $(( i % n )) -eq 0 ]; then\n            result=\"$result, $item]\"\n            result=\"$result[$item\"\n        else\n            result=\"$result, $item\"\n        fi\n        i=$(( i + 1 ))\n    done\n    result=\"$result]\"\n    echo $result\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=\"\"\n\n  for i in $(seq 0 $n); do\n    result=\"$result $(list_slice $list $i $n)\"\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpw0g4hbc7.sh: line 12: list_slice: command not found\\n/tmp/tmpw0g4hbc7.sh: line 12: list_slice: command not found\\n/tmp/tmpw0g4hbc7.sh: line 12: list_slice: command not found\\n/tmp/tmpw0g4hbc7.sh: line 12: list_slice: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n  local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local -a result=()\n  local -a tmp=()\n  local i=0\n  for item in $list; do\n    if [ $i -eq $n ]; then\n      result+=(\"${tmp[@]}\")\n      tmp=()\n      i=0\n    fi\n    tmp+=(\"$item\")\n    i=$((i+1))\n  done\n  result+=(\"${tmp[@]}\")\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=\"$1\"\n  local n=\"$2\"\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local temp=()\n  local temp2=()\n  local temp3=()\n  local temp4=()\n  local temp5=()\n  local temp6=()\n  local temp7=()\n  local temp8=()\n  local temp9=()\n  local temp10=()\n  local temp11=()\n  local temp12=()\n  local temp13=()\n  local temp14=()\n  local temp15=()\n  local temp16=()\n  local temp17=()\n  local temp18=()\n  local temp19=()\n  local temp20=()\n  local temp21=()\n  local temp22=()\n  local temp23=()\n  local temp24=()\n  local temp25=()\n  local temp26=()\n  local temp27=()\n  local temp28=()\n  local temp29=()\n  local temp30=()\n  local temp31=()\n  local temp32=()\n  local temp33=()\n  local temp34=()\n  local temp35=()\n  local temp36=()\n  local temp37=()\n  local temp38=()\n  local temp39=()\n  local temp40=()\n  local temp41=()\n  local temp42=()\n  local temp43=()\n  local temp44=()\n  local temp45=()\n  local temp46=()\n  local temp47=()\n  local temp48=()\n  local temp49=()\n  local temp50=()\n  local temp51=()\n  local temp52=()\n  local temp53=()\n  local temp54=()\n  local temp55=()\n  local temp56=()\n  local temp57=()\n  local temp58=()\n  local temp59=()\n  local temp60=()\n  local temp61=()\n  local temp62=()\n  local temp63=()\n  local temp64=()\n  local temp65=()\n  local temp66=()\n  local temp67\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n  local list=$1\n  local n=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if (( i % n == 0 )); then\n      result+=(\"$item\")\n    else\n      result[${#result[@]}-1]=\"${result[${#result[@]}-1]} $item\"\n    fi\n    (( i++ ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local -a result\n    local -a tmp\n    local i=0\n    for item in $list; do\n        tmp[$i]=$item\n        i=$((i+1))\n        if [[ $((i % n)) -eq 0 ]]; then\n            result+=( \"${tmp[@]}\" )\n            tmp=()\n            i=0\n        fi\n    done\n    if [[ $i -gt 0 ]]; then\n        result+=( \"${tmp[@]}\" )\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n#\n# $1 is a $Any\n# $2 is an integer\nlist_split() {\n    local list=$1\n    local n=$2\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    list_split \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a b c d e f g h i j k l m n\" \"3\") = \"a d g j m\\nb e h k n\\nc f i l\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\" \"3\") = \"1 4 7 10 13\\n2 5 8 11 14\\n3 6 9 12\" ]]\n    [[ $(candidate \"python java C C++ DBMS SQL\" \"2\") = \"python C DBMS\\njava C++ SQL\" ]]\n}\n\nrun_test",
      "timestamp": 1667190742,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
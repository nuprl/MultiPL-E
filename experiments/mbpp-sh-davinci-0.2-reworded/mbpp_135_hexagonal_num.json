{
  "name": "mbpp_135_hexagonal_num",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth hexagonal number.\n#\n# $1 is an integer\nhexagonal_num() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    hexagonal_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"190\" ]]\n    [[ $(candidate \"5\") = \"45\" ]]\n    [[ $(candidate \"7\") = \"91\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    echo $(( $1 * (2 * $1 - 1) ))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    echo $(( $1 * (2 * $1 - 1) ))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    echo $(( $1 * (2 * $1 - 1) ))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Argument must be greater than 0.\"\n        exit 1\n    fi\n    echo $(( $1 * (2 * $1 - 1) ))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    echo $(( $1 * (2 * $1 - 1) ))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    echo $(( $1 * (2 * $1 - 1) ))",
    "  echo $(( $1 * (2 * $1 - 1) ))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $(( n * (2 * n - 1) ))",
    "  if [ $1 -lt 1 ]; then\n    echo \"Error: Argument must be a positive integer.\"\n    exit 1\n  fi\n  echo $(( $1 * (2 * $1 - 1) ))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))"
  ]
}
{
  "name": "mbpp_92_is_undulating",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given number is undulating or not.\n#\n# $1 is an integer\nis_undulating() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_undulating \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1212121\") = \"true\" ]]\n    [[ $(candidate \"1991\") = \"false\" ]]\n    [[ $(candidate \"121\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local number=$1\n  local last_digit=0\n  local current_digit=0\n  local next_digit=0\n  local is_undulating=1\n  local is_increasing=0\n  local is_decreasing=0\n  local is_increasing_or_decreasing=0\n\n  while [ $number -gt 0 ]; do\n    current_digit=$(($number % 10))\n    next_digit=$(($(($number / 10)) % 10))\n    if [ $current_digit -eq $next_digit ]; then\n      is_undulating=0\n      break\n    fi\n    if [ $is_increasing_or_decreasing -eq 0 ]; then\n      if [ $current_digit -gt $next_digit ]; then\n        is_decreasing=1\n        is_increasing_or_decreasing=1\n      elif [ $current_digit -lt $next_digit ]; then\n        is_increasing=1\n        is_increasing_or_decreasing=1\n      fi\n    elif [ $is_increasing_or_decreasing -eq 1 ]; then\n      if [ $is_increasing -eq 1 ] && [ $current_digit -lt $next_digit ]; then\n        is_undulating=0\n        break\n      elif [ $is_decreasing -eq 1 ] && [ $current_digit -gt $next_digit ]; then\n        is_undulating=0\n        break\n      fi\n    fi\n    number=$(($number / 10))\n  done\n\n  echo $is_undulating",
    "  local number=$1\n  local last_digit\n  local current_digit\n  local is_undulating=1\n  local is_increasing=1\n  local is_decreasing=1\n\n  last_digit=$(( number % 10 ))\n  number=$(( number / 10 ))\n\n  while [ $number -gt 0 ]; do\n    current_digit=$(( number % 10 ))\n    number=$(( number / 10 ))\n\n    if [ $last_digit -eq $current_digit ]; then\n      is_undulating=0\n      break\n    fi\n\n    if [ $last_digit -lt $current_digit ]; then\n      is_decreasing=0\n    fi\n\n    if [ $last_digit -gt $current_digit ]; then\n      is_increasing=0\n    fi\n\n    last_digit=$current_digit\n  done\n\n  if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n    is_undulating=0\n  fi\n\n  return $is_undulating",
    "    local number=\"$1\"\n    local last_digit\n    local current_digit\n    local next_digit\n    local is_undulating=1\n\n    while [ \"$number\" -gt 0 ]; do\n        last_digit=\"$current_digit\"\n        current_digit=\"$next_digit\"\n        next_digit=\"$(( number % 10 ))\"\n        number=\"$(( number / 10 ))\"\n\n        if [ -n \"$last_digit\" ] && [ -n \"$current_digit\" ] && [ -n \"$next_digit\" ]; then\n            if [ \"$last_digit\" -eq \"$current_digit\" ] || [ \"$current_digit\" -eq \"$next_digit\" ]; then\n                is_undulating=0\n                break\n            fi\n        fi\n    done\n\n    echo \"$is_undulating\"",
    "    local number=$1\n    local last_digit=0\n    local current_digit=0\n    local next_digit=0\n    local is_undulating=1\n\n    while [ $number -gt 0 ]; do\n        last_digit=$current_digit\n        current_digit=$next_digit\n        next_digit=$(( $number % 10 ))\n        number=$(( $number / 10 ))\n\n        if [ $last_digit -eq 0 ]; then\n            continue\n        fi\n\n        if [ $current_digit -eq 0 ]; then\n            is_undulating=0\n            break\n        fi\n\n        if [ $(( $last_digit % 2 )) -eq 0 ]; then\n            if [ $(( $current_digit % 2 )) -ne 0 ]; then\n                is_undulating=0\n                break\n            fi\n        else\n            if [ $(( $current_digit % 2 )) -eq 0 ]; then\n                is_undulating=0\n                break\n            fi\n        fi\n    done\n\n    if [ $is_undulating -eq 1 ]; then\n        echo \"The number $1 is undulating\"\n    else\n        echo \"The number $1 is not undulating\"\n    fi",
    "  local number=$1\n  local digit_count=$(echo $number | wc -c)\n  local last_digit=0\n  local current_digit=0\n  local is_undulating=1\n\n  for (( i=1; i<$digit_count; i++ )); do\n    current_digit=$(echo $number | cut -c $i)\n    if [ $last_digit -eq $current_digit ]; then\n      is_undulating=0\n      break\n    fi\n    last_digit=$current_digit\n  done\n\n  echo $is_undulating",
    "    local num=$1\n    local last_digit\n    local curr_digit\n    local is_undulating=1\n\n    last_digit=$(($num % 10))\n    num=$(($num / 10))\n    while [ $num -gt 0 ]; do\n        curr_digit=$(($num % 10))\n        if [ $curr_digit -eq $last_digit ]; then\n            is_undulating=0\n            break\n        fi\n        last_digit=$curr_digit\n        num=$(($num / 10))\n    done\n\n    echo $is_undulating",
    "  local num=$1\n  local last_digit=0\n  local curr_digit=0\n  local is_undulating=1\n\n  while [ $num -gt 0 ]; do\n    curr_digit=$(( num % 10 ))\n    if [ $last_digit -ne 0 ]; then\n      if [ $(( last_digit % 2 )) -eq 0 ]; then\n        if [ $(( curr_digit % 2 )) -ne 0 ]; then\n          is_undulating=0\n          break\n        fi\n      else\n        if [ $(( curr_digit % 2 )) -eq 0 ]; then\n          is_undulating=0\n          break\n        fi\n      fi\n    fi\n    last_digit=$curr_digit\n    num=$(( num / 10 ))\n  done\n\n  echo $is_undulating",
    "  local number=$1\n  local last_digit\n  local current_digit\n  local next_digit\n  local is_undulating=1\n\n  while [ $number -gt 0 ]; do\n    last_digit=$current_digit\n    current_digit=$next_digit\n    next_digit=$(( number % 10 ))\n    number=$(( number / 10 ))\n\n    if [ $last_digit -a $current_digit -a $next_digit ]; then\n      if [ $last_digit -gt $current_digit -a $current_digit -lt $next_digit ]; then\n        is_undulating=0\n      elif [ $last_digit -lt $current_digit -a $current_digit -gt $next_digit ]; then\n        is_undulating=0\n      fi\n    fi\n  done\n\n  echo $is_undulating",
    "    local num=$1\n    local prev_digit=0\n    local curr_digit=0\n    local next_digit=0\n    local is_undulating=1\n    local is_increasing=0\n    local is_decreasing=0\n    local is_first_digit=1\n    local is_last_digit=0\n    local is_first_digit_increasing=0\n    local is_first_digit_decreasing=0\n    local is_last_digit_increasing=0\n    local is_last_digit_decreasing=0\n    local is_first_digit_increasing_or_decreasing=0\n    local is_last_digit_increasing_or_decreasing=0\n    local is_first_digit_increasing_and_last_digit_decreasing=0\n    local is_first_digit_decreasing_and_last_digit_increasing=0\n    local is_first_digit_increasing_and_last_digit_increasing=0\n    local is_first_digit_decreasing_and_last_digit_decreasing=0\n    local is_first_digit_increasing_or_decreasing_and_last_digit_increasing_or_decreasing=0\n    local is_first_digit_increasing_or_decreasing_and_last_digit_increasing_or_decreasing_and_increasing=0\n    local is_first_digit_increasing_or_decreasing_and_last_digit_increasing_or_decreasing_and_decreasing=0\n    local is_first_digit_increasing_or_decreasing_and_last_digit_increasing_or_decreasing_and_increasing_or_decreasing=0\n    local is_first_digit_increasing_or_decreasing_and_last_digit_increasing_or_decreasing_and_increasing_and_decreasing=0\n    local is_first_digit_increasing_or_decreasing_and_last_digit_increasing_or_decreasing_and_increasing_or_decreasing_and_increasing_and_decreasing=0\n    local is_first_digit_increasing_or_decreasing",
    "  local num=$1\n  local digit_count=$(echo $num | wc -c)\n  local digit_count=$((digit_count - 1))\n  local odd_digit_count=$((digit_count / 2))\n  local even_digit_count=$((digit_count - odd_digit_count))\n  local odd_digits=$(echo $num | cut -c 1-$odd_digit_count)\n  local even_digits=$(echo $num | cut -c $((odd_digit_count + 1))-$digit_count)\n  local odd_digits_sorted=$(echo $odd_digits | grep -o . | sort -r | tr -d '\\n')\n  local even_digits_sorted=$(echo $even_digits | grep -o . | sort -r | tr -d '\\n')\n  if [[ $odd_digits_sorted == $odd_digits && $even_digits_sorted == $even_digits ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local number=$1\n  local last_digit=0\n  local current_digit=0\n  local is_undulating=1\n\n  while [ $number -gt 0 ]; do\n    current_digit=$((number % 10))\n    if [ $last_digit -ne 0 ]; then\n      if [ $last_digit -eq $current_digit ]; then\n        is_undulating=0\n        break\n      fi\n    fi\n    last_digit=$current_digit\n    number=$((number / 10))\n  done\n\n  echo $is_undulating",
    "  local number=$1\n  local last_digit=0\n  local current_digit=0\n  local last_digit_is_odd=0\n  local current_digit_is_odd=0\n  local is_undulating=1\n\n  while [ $number -gt 0 ]; do\n    current_digit=$(( number % 10 ))\n    number=$(( number / 10 ))\n\n    if [ $last_digit -ne 0 ]; then\n      if [ $last_digit_is_odd -eq $current_digit_is_odd ]; then\n        is_undulating=0\n        break\n      fi\n    fi\n\n    last_digit=$current_digit\n    last_digit_is_odd=$(( last_digit % 2 ))\n  done\n\n  echo $is_undulating",
    "    local number=$1\n    local last_digit=${number: -1}\n    local second_last_digit=${number: -2:1}\n    local third_last_digit=${number: -3:1}\n    local fourth_last_digit=${number: -4:1}\n    local fifth_last_digit=${number: -5:1}\n    local sixth_last_digit=${number: -6:1}\n    local seventh_last_digit=${number: -7:1}\n    local eighth_last_digit=${number: -8:1}\n    local ninth_last_digit=${number: -9:1}\n    local tenth_last_digit=${number: -10:1}\n\n    if [[ $number -lt 100 ]]; then\n        echo \"Number is not undulating\"\n        return\n    fi\n\n    if [[ $number -lt 1000 ]]; then\n        if [[ $last_digit -eq $second_last_digit ]]; then\n            echo \"Number is not undulating\"\n            return\n        fi\n\n        echo \"Number is undulating\"\n        return\n    fi\n\n    if [[ $number -lt 10000 ]]; then\n        if [[ $last_digit -eq $second_last_digit ]] || \\\n           [[ $second_last_digit -eq $third_last_digit ]]; then\n            echo \"Number is not undulating\"\n            return\n        fi\n\n        echo \"Number is undulating\"\n        return\n    fi\n\n    if [[ $number -lt 100000 ]]; then\n        if [[ $last_digit -eq $second_last_digit ]] || \\\n           [[ $second_last_digit -eq $third_last_digit ]] || \\\n           [[ $third_last_digit -eq $fourth_last_digit ]]; then\n            echo \"Number is not undulating\"\n            return\n        fi\n\n        echo \"Number is undulating\"\n        return\n    fi\n\n    if [[ $number -lt 1000000 ]]; then\n        if [[ $last_digit -eq $second_last_digit ]] || \\\n           [[ $second_last_digit -eq $third_last_digit ]] || \\\n           [[ $third_last_",
    "    local number=\"$1\"\n    local last_digit=0\n    local current_digit=0\n    local is_increasing=0\n    local is_decreasing=0\n    local is_undulating=0\n\n    while [ \"$number\" -ne 0 ]; do\n        last_digit=\"$current_digit\"\n        current_digit=\"$(($number % 10))\"\n\n        if [ \"$last_digit\" -eq 0 ]; then\n            is_increasing=1\n            is_decreasing=1\n        elif [ \"$last_digit\" -gt \"$current_digit\" ]; then\n            is_increasing=0\n            is_decreasing=1\n        elif [ \"$last_digit\" -lt \"$current_digit\" ]; then\n            is_increasing=1\n            is_decreasing=0\n        else\n            is_increasing=0\n            is_decreasing=0\n        fi\n\n        if [ \"$is_increasing\" -eq 0 ] && [ \"$is_decreasing\" -eq 0 ]; then\n            is_undulating=0\n            break\n        fi\n\n        number=\"$(($number / 10))\"\n    done\n\n    if [ \"$is_undulating\" -eq 1 ]; then\n        echo \"The number is undulating.\"\n    else\n        echo \"The number is not undulating.\"\n    fi",
    "  local num=$1\n  local last_digit=0\n  local curr_digit=0\n  local is_undulating=1\n  local is_increasing=1\n\n  while [ $num -gt 0 ]; do\n    curr_digit=$(( num % 10 ))\n    if [ $last_digit -ne 0 ]; then\n      if [ $is_increasing -eq 1 ]; then\n        if [ $curr_digit -lt $last_digit ]; then\n          is_increasing=0\n        elif [ $curr_digit -gt $last_digit ]; then\n          is_undulating=0\n          break\n        fi\n      else\n        if [ $curr_digit -gt $last_digit ]; then\n          is_increasing=1\n        elif [ $curr_digit -lt $last_digit ]; then\n          is_undulating=0\n          break\n        fi\n      fi\n    fi\n    last_digit=$curr_digit\n    num=$(( num / 10 ))\n  done\n\n  if [ $is_undulating -eq 1 ]; then\n    echo \"The number is undulating\"\n  else\n    echo \"The number is not undulating\"\n  fi",
    "    local num=$1\n    local prev_digit=0\n    local curr_digit=0\n    local next_digit=0\n    local is_undulating=0\n    local is_increasing=0\n    local is_decreasing=0\n\n    while [ $num -gt 0 ]; do\n        prev_digit=$curr_digit\n        curr_digit=$next_digit\n        next_digit=$((num % 10))\n\n        if [ $curr_digit -eq 0 ]; then\n            num=$((num / 10))\n            continue\n        fi\n\n        if [ $prev_digit -eq 0 ]; then\n            if [ $curr_digit -gt $next_digit ]; then\n                is_increasing=1\n            elif [ $curr_digit -lt $next_digit ]; then\n                is_decreasing=1\n            fi\n        else\n            if [ $is_increasing -eq 1 ]; then\n                if [ $curr_digit -lt $next_digit ]; then\n                    is_undulating=1\n                    break\n                fi\n            elif [ $is_decreasing -eq 1 ]; then\n                if [ $curr_digit -gt $next_digit ]; then\n                    is_undulating=1\n                    break\n                fi\n            fi\n        fi\n\n        num=$((num / 10))\n    done\n\n    echo $is_undulating",
    "  local number=\"$1\"\n  local digits=\"${#number}\"\n  local i=0\n  local j=1\n  local k=2\n  local is_undulating=1\n\n  while [[ $k -lt $digits ]]; do\n    if [[ ${number:$i:1} -eq ${number:$j:1} ]]; then\n      is_undulating=0\n      break\n    fi\n    if [[ ${number:$j:1} -eq ${number:$k:1} ]]; then\n      is_undulating=0\n      break\n    fi\n    if [[ ${number:$i:1} -gt ${number:$j:1} ]]; then\n      if [[ ${number:$j:1} -lt ${number:$k:1} ]]; then\n        is_undulating=0\n        break\n      fi\n    fi\n    if [[ ${number:$i:1} -lt ${number:$j:1} ]]; then\n      if [[ ${number:$j:1} -gt ${number:$k:1} ]]; then\n        is_undulating=0\n        break\n      fi\n    fi\n    i=$((i+1))\n    j=$((j+1))\n    k=$((k+1))\n  done\n  echo \"$is_undulating\"",
    "    local number=$1\n    local last_digit=0\n    local current_digit=0\n    local is_undulating=1\n    local is_increasing=1\n    local is_decreasing=1\n    local is_first_digit=1\n\n    while [ $number -gt 0 ]; do\n        current_digit=$((number % 10))\n        if [ $is_first_digit -eq 1 ]; then\n            is_first_digit=0\n        else\n            if [ $is_increasing -eq 1 ]; then\n                if [ $current_digit -gt $last_digit ]; then\n                    is_increasing=1\n                else\n                    is_increasing=0\n                fi\n            fi\n\n            if [ $is_decreasing -eq 1 ]; then\n                if [ $current_digit -lt $last_digit ]; then\n                    is_decreasing=1\n                else\n                    is_decreasing=0\n                fi\n            fi\n        fi\n\n        last_digit=$current_digit\n        number=$((number / 10))\n    done\n\n    if [ $is_increasing -eq 1 -o $is_decreasing -eq 1 ]; then\n        is_undulating=1\n    else\n        is_undulating=0\n    fi\n\n    return $is_undulating",
    "  local num=$1\n  local last_digit=0\n  local current_digit=0\n  local is_undulating=1\n  local is_increasing=1\n  local is_decreasing=1\n  local is_first_digit=1\n  local is_last_digit=0\n  local is_first_digit_increasing=1\n  local is_first_digit_decreasing=1\n  local is_last_digit_increasing=1\n  local is_last_digit_decreasing=1\n  local is_first_digit_undulating=1\n  local is_last_digit_undulating=1\n\n  while [ $num -gt 0 ]; do\n    current_digit=$(( num % 10 ))\n    if [ $is_first_digit -eq 1 ]; then\n      is_first_digit=0\n      is_first_digit_increasing=0\n      is_first_digit_decreasing=0\n      is_first_digit_undulating=0\n    else\n      if [ $is_last_digit -eq 1 ]; then\n        is_last_digit=0\n        is_last_digit_increasing=0\n        is_last_digit_decreasing=0\n        is_last_digit_undulating=0\n      fi\n    fi\n\n    if [ $is_increasing -eq 1 ]; then\n      if [ $current_digit -lt $last_digit ]; then\n        is_increasing=0\n        is_decreasing=1\n      fi\n    else\n      if [ $is_decreasing -eq 1 ]; then\n        if [ $current_digit -gt $last_digit ]; then\n          is_decreasing=0\n          is_increasing=1\n        fi\n      fi\n    fi\n\n    if [ $is_first_digit_increasing -eq 1 ]; then\n      if [ $current_digit -lt $last_digit ]; then\n        is_first_digit_increasing=0\n        is_first_digit_decreasing=1\n      fi\n    else\n      if [ $is_first_digit_decreasing -eq 1 ]; then\n        if [ $current_digit -gt $last_digit ]; then\n          is_first_digit_dec",
    "  local num=$1\n  local last_digit=0\n  local curr_digit=0\n  local is_undulating=1\n\n  while [ $num -gt 0 ]; do\n    curr_digit=$(( $num % 10 ))\n    if [ $last_digit -ne 0 ]; then\n      if [ $(( $last_digit - $curr_digit )) -ne 1 ] && [ $(( $curr_digit - $last_digit )) -ne 1 ]; then\n        is_undulating=0\n        break\n      fi\n    fi\n    last_digit=$curr_digit\n    num=$(( $num / 10 ))\n  done\n\n  echo $is_undulating"
  ]
}
{
  "name": "mbpp_443_largest_neg",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the largest negative number from the given list.\n#\n# $1 is a space-separated list\nlargest_neg() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    largest_neg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 -4 -6\") = \"-6\" ]]\n    [[ $(candidate \"1 2 3 -8 -9\") = \"-9\" ]]\n    [[ $(candidate \"1 2 3 4 -1\") = \"-1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local max=0\n    for i in $1; do\n        if [[ $i -lt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local largest_neg=0\n    for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $largest_neg ]; then\n            largest_neg=$i\n        fi\n    done\n    echo $largest_neg",
    "    local max=0\n    for n in $1; do\n        if [ $n -lt 0 ] && [ $n -gt $max ]; then\n            max=$n\n        fi\n    done\n    echo $max",
    "    local largest_neg=0\n    for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $largest_neg ]; then\n            largest_neg=$i\n        fi\n    done\n    echo $largest_neg",
    "    local max=0\n    for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $max ]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [ $i -lt $max ]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -lt 0 && $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "    local largest_neg=0\n    for i in $1; do\n        if [ $i -lt $largest_neg ]; then\n            largest_neg=$i\n        fi\n    done\n    echo $largest_neg",
    "    local largest_neg_num=0\n    for num in $1; do\n        if [[ $num -lt 0 && $num -gt $largest_neg_num ]]; then\n            largest_neg_num=$num\n        fi\n    done\n    echo $largest_neg_num",
    "    local max=0\n    for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $max ]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $max ]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local largest=0\n    for i in $1; do\n        if [[ $i -lt 0 ]] && [[ $i -gt $largest ]]; then\n            largest=$i\n        fi\n    done\n    echo $largest",
    "    local max=0\n    for i in $1\n    do\n        if [ $i -lt $max ]\n        then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    for n in $1; do\n        if [[ $n -lt 0 && $n -gt $max ]]; then\n            max=$n\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [ $i -lt $max ]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local largest_neg=0\n    for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $largest_neg ]; then\n            largest_neg=$i\n        fi\n    done\n    echo $largest_neg",
    "    local max=0\n    for i in $1; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $max ]]; then\n                max=$i\n            fi\n        fi\n    done\n    echo $max",
    "    local largest_neg_num=0\n    for num in $1; do\n        if [ $num -lt $largest_neg_num ]; then\n            largest_neg_num=$num\n        fi\n    done\n    echo $largest_neg_num",
    "    local max_neg=0\n    for i in $1; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n            fi\n        fi\n    done\n    echo $max_neg",
    "    local largest=0\n    for i in $1; do\n        if [[ $i -lt 0 ]] && [[ $i -gt $largest ]]; then\n            largest=$i\n        fi\n    done\n    echo $largest"
  ]
}
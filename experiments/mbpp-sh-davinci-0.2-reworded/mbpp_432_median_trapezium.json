{
  "name": "mbpp_432_median_trapezium",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median_length=$(echo \"scale=2;(sqrt($a*$a+$b*$b)-$c)/2\" | bc)\n  echo $median_length",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 2\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 3\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 3\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=0\n    local sum=0\n    local array=()\n\n    array=($a $b $c)\n    array=($(printf '%s\\n' \"${array[@]}\" | sort -n))\n\n    sum=$((${array[0]} + ${array[1]} + ${array[2]}))\n    median=$(($sum / 2))\n\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local d=$4\n  local e=$5\n  local f=$6\n  local g=$7\n  local h=$8\n  local i=$9\n  local j=${10}\n  local k=${11}\n  local l=${12}\n  local m=${13}\n  local n=${14}\n  local o=${15}\n  local p=${16}\n  local q=${17}\n  local r=${18}\n  local s=${19}\n  local t=${20}\n  local u=${21}\n  local v=${22}\n  local w=${23}\n  local x=${24}\n  local y=${25}\n  local z=${26}\n  local aa=${27}\n  local bb=${28}\n  local cc=${29}\n  local dd=${30}\n  local ee=${31}\n  local ff=${32}\n  local gg=${33}\n  local hh=${34}\n  local ii=${35}\n  local jj=${36}\n  local kk=${37}\n  local ll=${38}\n  local mm=${39}\n  local nn=${40}\n  local oo=${41}\n  local pp=${42}\n  local qq=${43}\n  local rr=${44}\n  local ss=${45}\n  local tt=${46}\n  local uu=${47}\n  local vv=${48}\n  local ww=${49}\n  local xx=${50}\n  local yy=${51}\n  local zz=${52}\n  local aaa=${53}\n  local bbb=${54}\n  local ccc=${55}\n  local ddd=${56}\n  local eee=${57}\n  local fff=${58}\n  local ggg=${59}\n  local hhh=${60}\n  local iii=${61}\n  local jjj=${62}\n  local kkk=${63",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n    echo \"Error: all sides must be positive\"\n    return 1\n  fi\n\n  if [ $a -ge $b ] && [ $a -ge $c ]; then\n    if [ $b -ge $c ]; then\n      echo $b\n    else\n      echo $c\n    fi\n  elif [ $b -ge $a ] && [ $b -ge $c ]; then\n    if [ $a -ge $c ]; then\n      echo $a\n    else\n      echo $c\n    fi\n  elif [ $c -ge $a ] && [ $c -ge $b ]; then\n    if [ $a -ge $b ]; then\n      echo $a\n    else\n      echo $b\n    fi\n  fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"Median of trapezium is $median\"",
    "  if [[ $1 -eq $2 ]]; then\n    echo $1\n  else\n    echo $3\n  fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  local s=$(echo \"scale=2; sqrt($p * ($p - $a) * ($p - $b) * ($p - $c))\" | bc)\n  local h=$(echo \"scale=2; 2 * $s / $a\" | bc)\n  echo \"scale=2; $a / 2 * $h\" | bc",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    else\n        echo $3\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    a=$1\n    b=$2\n    c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"All sides must be positive.\"\n        return 1\n    fi\n\n    if [ $a -gt $b ]; then\n        if [ $b -gt $c ]; then\n            echo $b\n        elif [ $a -gt $c ]; then\n            echo $c\n        else\n            echo $a\n        fi\n    else\n        if [ $a -gt $c ]; then\n            echo $a\n        elif [ $b -gt $c ]; then\n            echo $c\n        else\n            echo $b\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium a b c\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: sides must be positive\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: two sides must be equal\"\n        return 4\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: a must be the smallest side\"\n        return 5\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"Error: b must be the smallest side\"\n        return 6\n    fi\n\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        echo \"Error: c must be the smallest side\"\n        return 7\n    fi\n\n    if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n        echo \"Error: a must be the biggest side\"\n        return 8\n    fi\n\n    if [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n        echo \"Error: b must be the biggest side\"\n        return 9\n    fi\n\n    if [ $3 -lt $1 ] && [ $3 -lt $2 ]; then\n        echo \"Error: c must be the biggest side\"\n        return 10\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -lt $3 ]; then\n        echo \"Error: a and b must be the biggest sides\"\n        return 11\n    fi\n\n    if [ $2 -eq $3 ] && [ $3 -lt $1 ]; then\n        echo \"Error: b and c must be the biggest sides\"\n        return 12\n    fi\n\n    if [ $1 -eq $3 ] && [ $",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local h=$3\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo $2\n    else\n        echo $3\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    local median=$(echo \"scale=2; ($a + $b) / 2\" | bc)\n\n    echo \"The median length of a trapezium with a=$a, b=$b and h=$h is $median\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    elif [ $2 -eq $3 ]\n    then\n        echo $2\n    elif [ $1 -eq $3 ]\n    then\n        echo $3\n    else\n        echo \"The median length is not equal to any of the lengths.\"\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi"
  ]
}
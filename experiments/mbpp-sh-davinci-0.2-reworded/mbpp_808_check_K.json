{
  "name": "mbpp_808_check_K",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check if the given lists contain the k or not.\n#\n# $1 is a space-separated list\n# $2 is an integer\ncheck_K() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_808_check_K.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    check_K \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 4 5 6 8\" \"6\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"7\") = \"false\" ]]\n    [[ $(candidate \"7 8 9 44 11 12\" \"11\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list=$1\n  local k=$2\n  for i in $list; do\n    if [[ $i -eq $k ]]; then\n      echo \"true\"\n      return\n    fi\n  done\n  echo \"false\"",
    "  local list=$1\n  local k=$2\n  for i in $list; do\n    if [[ $i -eq $k ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=$1\n  local k=$2\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      echo \"K is in the list\"\n      return 0\n    fi\n  done\n  echo \"K is not in the list\"\n  return 1",
    "  local list=$1\n  local k=$2\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      echo \"true\"\n      return\n    fi\n  done\n  echo \"false\"",
    "  local list=$1\n  local k=$2\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=$1\n  local k=$2\n  local found=0\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      found=1\n      break\n    fi\n  done\n  echo $found",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local found=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$k\" ]; then\n            found=1\n            break\n        fi\n    done\n    if [ \"$found\" -eq 1 ]; then\n        echo \"Found $k in $list\"\n    else\n        echo \"Did not find $k in $list\"\n    fi",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local item\n  for item in $list; do\n    if [ \"$item\" -eq \"$k\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local i\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local found=0\n  for i in $list; do\n    if [ \"$i\" -eq \"$k\" ]; then\n      found=1\n      break\n    fi\n  done\n  echo \"$found\"",
    "    local list=$1\n    local k=$2\n    local i\n    for i in $list; do\n        if [ $i -eq $k ]; then\n            echo \"1\"\n            return\n        fi\n    done\n    echo \"0\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local i\n  for i in $list; do\n    if [ \"$i\" -eq \"$k\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local found=0\n    for i in $list; do\n        if [[ $i -eq $k ]]; then\n            found=1\n            break\n        fi\n    done\n    echo $found",
    "  local list=$1\n  local k=$2\n  local i\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      echo \"true\"\n      return\n    fi\n  done\n  echo \"false\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local i\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=$1\n  local k=$2\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local result=0\n  for i in $list; do\n    if [ \"$i\" -eq \"$k\" ]; then\n      result=1\n      break\n    fi\n  done\n  echo \"$result\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n  if [ $sum -eq $k ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local found=0\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      found=1\n    fi\n  done\n  echo $found",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local list_length=$(echo \"$list\" | wc -w)\n  local i=1\n  local j=$((list_length - 1))\n  local k_found=0\n  while [[ $i -lt $j ]]; do\n    local sum=$(( $(echo \"$list\" | cut -d' ' -f$i) + $(echo \"$list\" | cut -d' ' -f$j) ))\n    if [[ $sum -eq $k ]]; then\n      k_found=1\n      break\n    elif [[ $sum -gt $k ]]; then\n      j=$((j - 1))\n    else\n      i=$((i + 1))\n    fi\n  done\n  if [[ $k_found -eq 1 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi"
  ]
}
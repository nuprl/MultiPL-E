{
  "name": "mbpp_415_max_Product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a arr=($1)\n  local max1=${arr[0]}\n  local max2=${arr[1]}\n  local min1=${arr[0]}\n  local min2=${arr[1]}\n  local max_product=0\n  local i=0\n  local len=${#arr[@]}\n  local tmp=0\n  for ((i=2; i<len; i++)); do\n    if [[ ${arr[i]} -gt $max1 ]]; then\n      max2=$max1\n      max1=${arr[i]}\n    elif [[ ${arr[i]} -gt $max2 ]]; then\n      max2=${arr[i]}\n    fi\n    if [[ ${arr[i]} -lt $min1 ]]; then\n      min2=$min1\n      min1=${arr[i]}\n    elif [[ ${arr[i]} -lt $min2 ]]; then\n      min2=${arr[i]}\n    fi\n  done\n  tmp=$(($max1*$max2))\n  if [[ $tmp -gt $max_product ]]; then\n    max_product=$tmp\n  fi\n  tmp=$(($min1*$min2))\n  if [[ $tmp -gt $max_product ]]; then\n    max_product=$tmp\n  fi\n  echo $max_product",
    "    local max=0\n    local max_i=0\n    local max_j=0\n    for i in $1; do\n        for j in $1; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i*j)) -gt $max ]; then\n                max=$((i*j))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is $max, from $max_i and $max_j\"",
    "    local -a array=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            if [[ $((array[i]*array[j])) -gt $max ]]; then\n                max=$((array[i]*array[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${array[max_i]}*${array[max_j]}=$max\"",
    "    local -a array=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max",
    "    local -a arr\n    arr=($1)\n    local max1=${arr[0]}\n    local max2=${arr[1]}\n    local max3=${arr[2]}\n    local min1=${arr[0]}\n    local min2=${arr[1]}\n    local min3=${arr[2]}\n    local max_product=0\n    local min_product=0\n    local product=0\n    local i=0\n    for i in \"${arr[@]}\"; do\n        if [ $i -gt $max1 ]; then\n            max3=$max2\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max3=$max2\n            max2=$i\n        elif [ $i -gt $max3 ]; then\n            max3=$i\n        fi\n        if [ $i -lt $min1 ]; then\n            min3=$min2\n            min2=$min1\n            min1=$i\n        elif [ $i -lt $min2 ]; then\n            min3=$min2\n            min2=$i\n        elif [ $i -lt $min3 ]; then\n            min3=$i\n        fi\n    done\n    max_product=$((max1 * max2 * max3))\n    min_product=$((min1 * min2 * max1))\n    if [ $max_product -gt $min_product ]; then\n        echo $max_product\n    else\n        echo $min_product\n    fi",
    "    local -a array=($1)\n    local max_product=0\n    for ((i=0; i<${#array[@]}; i++))\n    do\n        for ((j=i+1; j<${#array[@]}; j++))\n        do\n            if [[ $((array[i]*array[j])) -gt $max_product ]]\n            then\n                max_product=$((array[i]*array[j]))\n            fi\n        done\n    done\n    echo $max_product",
    "    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n    for i in $1; do\n        for j in $1; do\n            product=$((i * j))\n            if [[ $product -gt $max ]]; then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"max product: $max\"\n    echo \"max_i: $max_i\"\n    echo \"max_j: $max_j\"",
    "    local -a arr=($1)\n    local max_prod=0\n    local prod=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            prod=$((arr[i]*arr[j]))\n            if [ $prod -gt $max_prod ]; then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod",
    "  local -a arr=(\"$@\")\n  local max=0\n  local product=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      product=$((arr[i] * arr[j]))\n      if ((product > max)); then\n        max=$product\n      fi\n    done\n  done\n  echo $max",
    "    local -a array\n    local i j\n    local max_product=0\n    local product\n    array=($1)\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i]*array[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product",
    "    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max",
    "  local -a arr=($1)\n  local max=0\n  local a=0\n  local b=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ $((${arr[$i]} * ${arr[$j]})) -gt $max ]]; then\n        max=$((${arr[$i]} * ${arr[$j]}))\n        a=${arr[$i]}\n        b=${arr[$j]}\n      fi\n    done\n  done\n  echo \"Pair with highest product is $a and $b\"",
    "    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n",
    "    local -a arr=($1)\n    local max_prod=0\n    local prod=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            prod=$((arr[i]*arr[j]))\n            if [[ $prod -gt $max_prod ]]; then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod",
    "    local max=0\n    local max_a=0\n    local max_b=0\n    for a in $1; do\n        for b in $1; do\n            local product=$((a*b))\n            if [[ $product -gt $max ]]; then\n                max=$product\n                max_a=$a\n                max_b=$b\n            fi\n        done\n    done\n    echo \"Max product is $max, from $max_a and $max_b\"",
    "    local -a arr=(\"$@\")\n    local max=0\n    local product=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            product=$(( arr[i] * arr[j] ))\n            if (( product > max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max",
    "    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ $((arr[i]*arr[j])) -gt $max ]]; then\n                max=$((arr[i]*arr[j]))\n            fi\n        done\n    done\n    echo $max",
    "    local -a arr=(\"$@\")\n    local max_product=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i] * arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product",
    "    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max",
    "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70="
  ]
}
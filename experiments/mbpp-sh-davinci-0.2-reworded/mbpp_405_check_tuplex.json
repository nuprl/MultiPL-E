{
  "name": "mbpp_405_check_tuplex",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether an element exists within a list.\n#\n# $1 is a space-separated list\n# $2 is a $Any\ncheck_tuplex() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    check_tuplex \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"w 3 r e s o u r c e\" \"r\") = \"true\" ]]\n    [[ $(candidate \"w 3 r e s o u r c e\" \"5\") = \"false\" ]]\n    [[ $(candidate \"w 3 r e s o u r c e\" \"3\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list=\"$1\"\n  local item=\"$2\"\n  local found=false\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      found=true\n      break\n    fi\n  done\n  echo \"$found\"",
    "  local list=$1\n  local item=$2\n  for i in $list; do\n    if [ \"$i\" == \"$item\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local found=0\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local list=\"$1\"\n  local element=\"$2\"\n  local found=0\n  for i in $list; do\n    if [[ \"$i\" == \"$element\" ]]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local result=1\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      result=0\n      break\n    fi\n  done\n  return $result",
    "  local -n _tuplex=$1\n  local -n _element=$2\n  for _elem in \"${_tuplex[@]}\"\n  do\n    if [[ \"$_elem\" == \"$_element\" ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local found=false\n    for i in $list; do\n        if [ \"$i\" = \"$item\" ]; then\n            found=true\n            break\n        fi\n    done\n    echo \"$found\"",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local found=0\n  for i in $list; do\n    if [[ \"$i\" == \"$item\" ]]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local tuplex_array=($tuplex)\n  for i in \"${tuplex_array[@]}\"; do\n    if [ \"$i\" == \"$element\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=\"$1\"\n  local item=\"$2\"\n  for i in $list; do\n    if [ \"$i\" == \"$item\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=$1\n  local item=$2\n  local found=0\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local -a tuplex=($1)\n  local -a tuplex_len=${#tuplex[@]}\n  local -a tuplex_i\n  local -a tuplex_elem\n  for (( tuplex_i=0; tuplex_i<tuplex_len; tuplex_i++ )); do\n    tuplex_elem=${tuplex[$tuplex_i]}\n    if [[ \"$tuplex_elem\" == \"$2\" ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local found=0\n    for i in $tuplex; do\n        if [ \"$i\" = \"$element\" ]; then\n            found=1\n            break\n        fi\n    done\n    return $found",
    "  local list=$1\n  local item=$2\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local tuplex_array=($tuplex)\n  local i=0\n  local found=false\n  for i in \"${!tuplex_array[@]}\"; do\n    if [[ \"${tuplex_array[$i]}\" == \"$element\" ]]; then\n      found=true\n      break\n    fi\n  done\n  echo \"$found\"",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local found=false\n    for i in $tuplex; do\n        if [ \"$i\" = \"$element\" ]; then\n            found=true\n            break\n        fi\n    done\n    echo $found",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local found=0\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local found=0\n  for i in $list; do\n    if [ \"$i\" = \"$item\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local -r list=\"$1\"\n  local -r element=\"$2\"\n  local -r regex=\"$(echo \"$element\" | sed 's/\\([^[:alnum:]]\\)/\\\\\\1/g')\"\n  [[ \"$list\" =~ (^|[[:space:]])\"$regex\"($|[[:space:]]) ]]",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local found=0\n    for i in $list; do\n        if [ \"$i\" = \"$item\" ]; then\n            found=1\n            break\n        fi\n    done\n    return $found"
  ]
}
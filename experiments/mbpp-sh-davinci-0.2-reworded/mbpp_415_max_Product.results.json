{
  "name": "mbpp_415_max_Product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a arr=($1)\n  local max1=${arr[0]}\n  local max2=${arr[1]}\n  local min1=${arr[0]}\n  local min2=${arr[1]}\n  local max_product=0\n  local i=0\n  local len=${#arr[@]}\n  local tmp=0\n  for ((i=2; i<len; i++)); do\n    if [[ ${arr[i]} -gt $max1 ]]; then\n      max2=$max1\n      max1=${arr[i]}\n    elif [[ ${arr[i]} -gt $max2 ]]; then\n      max2=${arr[i]}\n    fi\n    if [[ ${arr[i]} -lt $min1 ]]; then\n      min2=$min1\n      min1=${arr[i]}\n    elif [[ ${arr[i]} -lt $min2 ]]; then\n      min2=${arr[i]}\n    fi\n  done\n  tmp=$(($max1*$max2))\n  if [[ $tmp -gt $max_product ]]; then\n    max_product=$tmp\n  fi\n  tmp=$(($min1*$min2))\n  if [[ $tmp -gt $max_product ]]; then\n    max_product=$tmp\n  fi\n  echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_i=0\n    local max_j=0\n    for i in $1; do\n        for j in $1; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i*j)) -gt $max ]; then\n                max=$((i*j))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is $max, from $max_i and $max_j\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            if [[ $((array[i]*array[j])) -gt $max ]]; then\n                max=$((array[i]*array[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${array[max_i]}*${array[max_j]}=$max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr\n    arr=($1)\n    local max1=${arr[0]}\n    local max2=${arr[1]}\n    local max3=${arr[2]}\n    local min1=${arr[0]}\n    local min2=${arr[1]}\n    local min3=${arr[2]}\n    local max_product=0\n    local min_product=0\n    local product=0\n    local i=0\n    for i in \"${arr[@]}\"; do\n        if [ $i -gt $max1 ]; then\n            max3=$max2\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max3=$max2\n            max2=$i\n        elif [ $i -gt $max3 ]; then\n            max3=$i\n        fi\n        if [ $i -lt $min1 ]; then\n            min3=$min2\n            min2=$min1\n            min1=$i\n        elif [ $i -lt $min2 ]; then\n            min3=$min2\n            min2=$i\n        elif [ $i -lt $min3 ]; then\n            min3=$i\n        fi\n    done\n    max_product=$((max1 * max2 * max3))\n    min_product=$((min1 * min2 * max1))\n    if [ $max_product -gt $min_product ]; then\n        echo $max_product\n    else\n        echo $min_product\n    fi\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    for ((i=0; i<${#array[@]}; i++))\n    do\n        for ((j=i+1; j<${#array[@]}; j++))\n        do\n            if [[ $((array[i]*array[j])) -gt $max_product ]]\n            then\n                max_product=$((array[i]*array[j]))\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n    for i in $1; do\n        for j in $1; do\n            product=$((i * j))\n            if [[ $product -gt $max ]]; then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"max product: $max\"\n    echo \"max_i: $max_i\"\n    echo \"max_j: $max_j\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_prod=0\n    local prod=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            prod=$((arr[i]*arr[j]))\n            if [ $prod -gt $max_prod ]; then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a arr=(\"$@\")\n  local max=0\n  local product=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      product=$((arr[i] * arr[j]))\n      if ((product > max)); then\n        max=$product\n      fi\n    done\n  done\n  echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array\n    local i j\n    local max_product=0\n    local product\n    array=($1)\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i]*array[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a arr=($1)\n  local max=0\n  local a=0\n  local b=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ $((${arr[$i]} * ${arr[$j]})) -gt $max ]]; then\n        max=$((${arr[$i]} * ${arr[$j]}))\n        a=${arr[$i]}\n        b=${arr[$j]}\n      fi\n    done\n  done\n  echo \"Pair with highest product is $a and $b\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_prod=0\n    local prod=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            prod=$((arr[i]*arr[j]))\n            if [[ $prod -gt $max_prod ]]; then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_a=0\n    local max_b=0\n    for a in $1; do\n        for b in $1; do\n            local product=$((a*b))\n            if [[ $product -gt $max ]]; then\n                max=$product\n                max_a=$a\n                max_b=$b\n            fi\n        done\n    done\n    echo \"Max product is $max, from $max_a and $max_b\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local product=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            product=$(( arr[i] * arr[j] ))\n            if (( product > max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ $((arr[i]*arr[j])) -gt $max ]]; then\n                max=$((arr[i]*arr[j]))\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i] * arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local max_index=0\n    local max_index2=0\n    for (( i=0; i<${#array[@]}; i++ )); do\n        for (( j=0; j<${#array[@]}; j++ )); do\n            if [ $i -ne $j ]; then\n                local product=$(( ${array[$i]} * ${array[$j]} ))\n                if [ $product -gt $max_product ]; then\n                    max_product=$product\n                    max_index=$i\n                    max_index2=$j\n                fi\n            fi\n        done\n    done\n    echo \"Max product is ${array[$max_index]} * ${array[$max_index2]} = $max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local product=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            product=$((arr[i]*arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a arr=($1)\n  local max1=${arr[0]}\n  local max2=${arr[1]}\n  local max3=${arr[2]}\n  local min1=${arr[0]}\n  local min2=${arr[1]}\n  local max_product=0\n  local product=0\n\n  for i in ${arr[@]}; do\n    if [ $i -gt $max1 ]; then\n      max3=$max2\n      max2=$max1\n      max1=$i\n    elif [ $i -gt $max2 ]; then\n      max3=$max2\n      max2=$i\n    elif [ $i -gt $max3 ]; then\n      max3=$i\n    fi\n\n    if [ $i -lt $min1 ]; then\n      min2=$min1\n      min1=$i\n    elif [ $i -lt $min2 ]; then\n      min2=$i\n    fi\n  done\n\n  product=$((max1 * max2 * max3))\n  if [ $product -gt $max_product ]; then\n    max_product=$product\n  fi\n\n  product=$((min1 * min2 * max1))\n  if [ $product -gt $max_product ]; then\n    max_product=$product\n  fi\n\n  echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_prod=0\n    local prod=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            prod=$(( arr[i] * arr[j] ))\n            if (( prod > max_prod )); then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_prod=0\n    local prod=0\n    local i=0\n    local j=0\n    local arr=($1)\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            prod=$((arr[i] * arr[j]))\n            if [ $prod -gt $max_prod ]\n            then\n                max_prod=$prod\n                max=$i\n            fi\n        done\n    done\n    echo \"Pair with highest product is ${arr[$max]} and ${arr[$max+1]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if [ $i -gt $max1 ]; then\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max2=$i\n        fi\n    done\n    echo $((max1 * max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local max_product=0\n  local max_product_pair=\"\"\n  local max_product_pair_indexes=\"\"\n  local max_product_pair_indexes_array=()\n  local max_product_pair_indexes_array_index=0\n  local max_product_pair_indexes_array_index_max=0\n  local max_product_pair_indexes_array_index_max_index=0\n  local max_product_pair_indexes_array_index_max_index_max=0\n  local max_product_pair_indexes_array_index_max_index_max_index=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index_max=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index_max_index=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index_max_index_max=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index_max_index_max_index=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index_max_index_max_index_max=0\n  local max_product_pair_indexes_array_index_max_index_max_index_max_index_max_index_max_index_max_index_max_index=0\n  local\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local max1=0\n  local max2=0\n  local max3=0\n  local max4=0\n  local max5=0\n  local max6=0\n  local max7=0\n  local max8=0\n  local max9=0\n  local max10=0\n  local max11=0\n  local max12=0\n  local max13=0\n  local max14=0\n  local max15=0\n  local max16=0\n  local max17=0\n  local max18=0\n  local max19=0\n  local max20=0\n  local max21=0\n  local max22=0\n  local max23=0\n  local max24=0\n  local max25=0\n  local max26=0\n  local max27=0\n  local max28=0\n  local max29=0\n  local max30=0\n  local max31=0\n  local max32=0\n  local max33=0\n  local max34=0\n  local max35=0\n  local max36=0\n  local max37=0\n  local max38=0\n  local max39=0\n  local max40=0\n  local max41=0\n  local max42=0\n  local max43=0\n  local max44=0\n  local max45=0\n  local max46=0\n  local max47=0\n  local max48=0\n  local max49=0\n  local max50=0\n  local max51=0\n  local max52=0\n  local max53=0\n  local max54=0\n  local max55=0\n  local max56=0\n  local max57=0\n  local max58=0\n  local max59=0\n  local max60=0\n  local max61=0\n  local max62=0\n  local max63=0\n  local max64=0\n  local max65=0\n  local max66=0\n  local max67=0\n  local max68=0\n  local max69=0\n  local max70=0\n  local max71=0\n  local max72=0\n  local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            product=$((arr[i]*arr[j]))\n            if [ $product -gt $max_product ]\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n    for i in $1; do\n        for j in $1; do\n            product=$((i*j))\n            if [[ $product -gt $max ]]; then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"max product is $max, from $max_i and $max_j\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i]*arr[j]))\n            if ((product > max)); then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${arr[max_i]} ${arr[max_j]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_num=0\n    local max_num2=0\n    for num in $1; do\n        if [ $num -gt $max_num ]; then\n            max_num2=$max_num\n            max_num=$num\n        elif [ $num -gt $max_num2 ]; then\n            max_num2=$num\n        fi\n    done\n    max_product=$((max_num * max_num2))\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local max_num=0\n    local max_num_2=0\n    local num=0\n    local num_2=0\n    for num in $1; do\n        if [ $num -gt $max_num ]; then\n            max_num_2=$max_num\n            max_num=$num\n        elif [ $num -gt $max_num_2 ]; then\n            max_num_2=$num\n        fi\n    done\n    for num_2 in $1; do\n        if [ $num_2 -gt $max_num_2 ]; then\n            product=$(( $max_num * $num_2 ))\n            if [ $product -gt $max_product ]; then\n                max_product=$product\n            fi\n        fi\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local arr=($1)\n    local max_product=0\n    local max_1=0\n    local max_2=0\n    local min_1=0\n    local min_2=0\n    for i in ${arr[@]}; do\n        if [ $i -gt $max_1 ]; then\n            max_2=$max_1\n            max_1=$i\n        elif [ $i -gt $max_2 ]; then\n            max_2=$i\n        fi\n        if [ $i -lt $min_1 ]; then\n            min_2=$min_1\n            min_1=$i\n        elif [ $i -lt $min_2 ]; then\n            min_2=$i\n        fi\n    done\n    local product_1=$((max_1 * max_2))\n    local product_2=$((min_1 * min_2))\n    if [ $product_1 -gt $product_2 ]; then\n        max_product=$product_1\n    else\n        max_product=$product_2\n    fi\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array\n    array=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            if [[ $((array[i] * array[j])) -gt $max ]]; then\n                max=$((array[i] * array[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product: $max\"\n    echo \"Max product indices: $max_i, $max_j\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if (( i > max1 )); then\n            max2=$max1\n            max1=$i\n        elif (( i > max2 )); then\n            max2=$i\n        fi\n    done\n    echo $(( max1 * max2 ))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<$#; i++))\n    do\n        for ((j=i+1; j<$#; j++))\n        do\n            local product=$(( $1[$i] * $1[$j] ))\n            if [[ $product -gt $max ]]\n            then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Pair with highest product is (${1[$max_i]}, ${1[$max_j]})\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo2yf2dbq.sh: line 22: Pair with highest product is (${1[$max_i]}, ${1[$max_j]}): bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a arr=(\"$@\")\n  local max1=0\n  local max2=0\n  local max3=0\n  local max4=0\n  local max5=0\n  local max6=0\n  local max7=0\n  local max8=0\n  local max9=0\n  local max10=0\n  local max11=0\n  local max12=0\n  local max13=0\n  local max14=0\n  local max15=0\n  local max16=0\n  local max17=0\n  local max18=0\n  local max19=0\n  local max20=0\n  local max21=0\n  local max22=0\n  local max23=0\n  local max24=0\n  local max25=0\n  local max26=0\n  local max27=0\n  local max28=0\n  local max29=0\n  local max30=0\n  local max31=0\n  local max32=0\n  local max33=0\n  local max34=0\n  local max35=0\n  local max36=0\n  local max37=0\n  local max38=0\n  local max39=0\n  local max40=0\n  local max41=0\n  local max42=0\n  local max43=0\n  local max44=0\n  local max45=0\n  local max46=0\n  local max47=0\n  local max48=0\n  local max49=0\n  local max50=0\n  local max51=0\n  local max52=0\n  local max53=0\n  local max54=0\n  local max55=0\n  local max56=0\n  local max57=0\n  local max58=0\n  local max59=0\n  local max60=0\n  local max61=0\n  local max62=0\n  local max63=0\n  local max64=0\n  local max65=0\n  local max66=0\n  local max67=0\n  local max68=0\n  local max69=0\n  local max70=0\n  local max71=0\n  local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local arr=($1)\n    local max=0\n    local product=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            product=$(( arr[i] * arr[j] ))\n            if [ $product -gt $max ]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n\tlocal max=0\n\tlocal product=1\n\tfor i in $1; do\n\t\tproduct=$((product * i))\n\t\tif [ $product -gt $max ]; then\n\t\t\tmax=$product\n\t\tfi\n\tdone\n\techo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local max_product_pair=()\n    for ((i = 0; i < ${#array[@]}; i++)); do\n        for ((j = i + 1; j < ${#array[@]}; j++)); do\n            local product=$((array[i] * array[j]))\n            if ((product > max_product)); then\n                max_product=$product\n                max_product_pair=(${array[i]} ${array[j]})\n            fi\n        done\n    done\n    echo ${max_product_pair[@]}\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    local max_product_pair_index=\"\"\n    local max_product_pair_index_count=0\n    local max_product_pair_index_count_max=0\n    local max_product_pair_index_count_max_index=\"\"\n    local max_product_pair_index_count_max_index_count=0\n    local max_product_pair_index_count_max_index_count_max=0\n    local max_product_pair_index_count_max_index_count_max_index=\"\"\n    local max_product_pair_index_count_max_index_count_max_index_count=0\n    local max_product_pair_index_count_max_index_count_max_index_count_max=0\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index=\"\"\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count=0\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count_max=0\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count_max_index=\"\"\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count_max_index_count=0\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max=0\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max_index=\"\"\n    local max_product_pair_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max_index_count=0\n    local max_product_pair_index_count_max_index_count_max_index_count_\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#array[@]}; i++))\n    do\n        for ((j=i+1; j<${#array[@]}; j++))\n        do\n            product=$((array[i]*array[j]))\n            if [[ $product -gt $max_product ]]\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    for ((i=0; i<$#; i++))\n    do\n        for ((j=i+1; j<$#; j++))\n        do\n            local product=$(( $1 * ${!j} ))\n            if [[ $product -gt $max_product ]]\n            then\n                max_product=$product\n                max_product_pair=\"$1 ${!j}\"\n            fi\n        done\n        shift\n    done\n    echo $max_product_pair\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_product=0\n    local max_product_pair=\"\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i] * arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n                max_product_pair=\"${arr[i]} * ${arr[j]}\"\n            fi\n        done\n    done\n    echo \"$max_product_pair = $max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n    for i in $1; do\n        for j in $1; do\n            product=$(( $i * $j ))\n            if [ $product -gt $max ]; then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is $max, from $max_i and $max_j\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local n=${#arr[@]}\n    for ((i=0; i<n; i++))\n    do\n        for ((j=i+1; j<n; j++))\n        do\n            if [[ $((${arr[i]}*${arr[j]})) -gt $max ]]\n            then\n                max=$((${arr[i]}*${arr[j]}))\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if [ $i -gt $max1 ]; then\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max2=$i\n        fi\n    done\n    echo $((max1 * max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i]*arr[j]))\n            if ((product > max)); then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${arr[max_i]} ${arr[max_j]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local product=0\n    for i in $1; do\n        for j in $1; do\n            product=$((i*j))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local max_index=0\n    local second_max=${arr[1]}\n    local second_max_index=1\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if (( ${arr[$i]} > $max )); then\n            second_max=$max\n            second_max_index=$max_index\n            max=${arr[$i]}\n            max_index=$i\n        elif (( ${arr[$i]} > $second_max )); then\n            second_max=${arr[$i]}\n            second_max_index=$i\n        fi\n    done\n\n    echo \"Max: $max, Max Index: $max_index, Second Max: $second_max, Second Max Index: $second_max_index\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_prod=0\n    local prod=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            prod=$((arr[i]*arr[j]))\n            if ((prod > max_prod))\n            then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            local product=$((array[i]*array[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${array[max_i]}*${array[max_j]}=$max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    for ((i=0; i<$#; i++)); do\n        for ((j=i+1; j<$#; j++)); do\n            local product=$(( $1[i] * $1[j] ))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if (( $i > $max1 )); then\n            max2=$max1\n            max1=$i\n        elif (( $i > $max2 )); then\n            max2=$i\n        fi\n    done\n    echo $((max1*max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            if [[ $((arr[i] * arr[j])) -gt $max ]]\n            then\n                max=$((arr[i] * arr[j]))\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local product=0\n    local arr=($1)\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            product=$((${arr[i]}*${arr[j]}))\n            if [[ $product -gt $max ]]\n            then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ $((arr[i]*arr[j])) -gt $max ]]; then\n                max=$((arr[i]*arr[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"The pair with highest product is ${arr[max_i]} and ${arr[max_j]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local product=0\n    local list=($1)\n    for (( i=0; i<${#list[@]}; i++ )); do\n        for (( j=i+1; j<${#list[@]}; j++ )); do\n            product=$(( ${list[i]} * ${list[j]} ))\n            if (( $product > $max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local prod=0\n\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            prod=$((${arr[i]}*${arr[j]}))\n            if [ $prod -gt $max ]\n            then\n                max=$prod\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=0; j<${#arr[@]}; j++)); do\n            if [ $i -ne $j ]; then\n                if [ $((arr[i]*arr[j])) -gt $max ]; then\n                    max=$((arr[i]*arr[j]))\n                    max_i=$i\n                    max_j=$j\n                fi\n            fi\n        done\n    done\n    echo \"The pair with highest product is (${arr[max_i]}, ${arr[max_j]})\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if [[ $(( arr[i] * arr[j] )) -gt $max ]]; then\n                max=$(( arr[i] * arr[j] ))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${arr[max_i]} * ${arr[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[$i]} -gt $max ]]; then\n                max=${arr[$i]}\n                max_i=$i\n            fi\n            if [[ ${arr[$j]} -gt $max ]]; then\n                max=${arr[$j]}\n                max_j=$j\n            fi\n        done\n    done\n    echo \"max_i=$max_i, max_j=$max_j, max=$max\"\n    echo \"product=${arr[$max_i]}*${arr[$max_j]}=$((arr[$max_i]*arr[$max_j]))\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplowuhpat.sh: line 26: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_num1=0\n    local max_num2=0\n    local num1=0\n    local num2=0\n    for num1 in $1; do\n        for num2 in $1; do\n            if [[ $num1 -eq $num2 ]]; then\n                continue\n            fi\n            if [[ $((num1 * num2)) -gt $max_product ]]; then\n                max_product=$((num1 * num2))\n                max_num1=$num1\n                max_num2=$num2\n            fi\n        done\n    done\n    echo \"Max product is $max_product, from $max_num1 and $max_num2\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt $max1 ]]; then\n            max2=$max1\n            max1=$i\n        elif [[ $i -gt $max2 ]]; then\n            max2=$i\n        fi\n    done\n    echo $(( max1 * max2 ))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmps12cbbzp.sh: line 10: [[: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n/tmp/tmps12cbbzp.sh: line 13: [[: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local arr=($1)\n    local max1=${arr[0]}\n    local max2=${arr[1]}\n    local max3=${arr[2]}\n    local min1=${arr[0]}\n    local min2=${arr[1]}\n    local max_product=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[$i]} -gt $max1 ]]; then\n            max3=$max2\n            max2=$max1\n            max1=${arr[$i]}\n        elif [[ ${arr[$i]} -gt $max2 ]]; then\n            max3=$max2\n            max2=${arr[$i]}\n        elif [[ ${arr[$i]} -gt $max3 ]]; then\n            max3=${arr[$i]}\n        fi\n        if [[ ${arr[$i]} -lt $min1 ]]; then\n            min2=$min1\n            min1=${arr[$i]}\n        elif [[ ${arr[$i]} -lt $min2 ]]; then\n            min2=${arr[$i]}\n        fi\n    done\n    if [[ $max1*$max2*$max3 -gt $max1*$min1*$min2 ]]; then\n        max_product=$max1*$max2*$max3\n    else\n        max_product=$max1*$min1*$min2\n    fi\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            product=$((arr[i] * arr[j]))\n            if [ $product -gt $max ]\n            then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=()\n    for ((i=0; i<${#1[@]}; i++)); do\n        for ((j=i+1; j<${#1[@]}; j++)); do\n            local product=$(( ${1[i]} * ${1[j]} ))\n            if (( product > max_product )); then\n                max_product=$product\n                max_product_pair=(${1[i]} ${1[j]})\n            fi\n        done\n    done\n    echo \"${max_product_pair[@]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpuh7ers1r.sh: line 9: i<${#1[@]}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local prod=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            prod=$((arr[i]*arr[j]))\n            if [[ $prod -gt $max ]]; then\n                max=$prod\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    local max_index=0\n    local index=0\n    local max_index2=0\n    local index2=0\n\n    for index in ${!array[@]}; do\n        for index2 in ${!array[@]}; do\n            if [[ $index -ne $index2 ]]; then\n                product=$((array[$index] * array[$index2]))\n                if [[ $product -gt $max_product ]]; then\n                    max_product=$product\n                    max_index=$index\n                    max_index2=$index2\n                fi\n            fi\n        done\n    done\n\n    echo \"Max product is $max_product from ${array[$max_index]} and ${array[$max_index2]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local secondMax=${arr[1]}\n    local product=0\n\n    if (( $max < $secondMax )); then\n        max=$secondMax\n        secondMax=${arr[0]}\n    fi\n\n    for (( i=2; i<${#arr[@]}; i++ )); do\n        if (( ${arr[i]} > $max )); then\n            secondMax=$max\n            max=${arr[i]}\n        elif (( ${arr[i]} > $secondMax )); then\n            secondMax=${arr[i]}\n        fi\n    done\n\n    product=$(( $max * $secondMax ))\n    echo $product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local product=0\n    local arr=($1)\n    local len=${#arr[@]}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<len; j++ )); do\n            product=$(( arr[i] * arr[j] ))\n            if (( product > max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ $((arr[i] * arr[j])) -gt $max ]]; then\n                max=$((arr[i] * arr[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"The pair with the highest product is (${arr[max_i]}, ${arr[max_j]})\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local arr=($1)\n    local max_prod=0\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            local prod=$((arr[i] * arr[j]))\n            if [[ $prod -gt $max_prod ]]\n            then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    for i in \"${arr[@]}\"; do\n        if (( i > max1 )); then\n            max2=$max1\n            max1=$i\n        elif (( i > max2 )); then\n            max2=$i\n        fi\n    done\n    echo \"$(( max1 * max2 ))\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprbpv2vpw.sh: line 10: ((: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n/tmp/tmprbpv2vpw.sh: line 13: ((: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    local max_product_pair_indexes=\"\"\n    local max_product_pair_indexes_array=()\n    local max_product_pair_indexes_array_index=0\n    local max_product_pair_indexes_array_index_1=0\n    local max_product_pair_indexes_array_index_2=0\n    local max_product_pair_indexes_array_index_3=0\n    local max_product_pair_indexes_array_index_4=0\n    local max_product_pair_indexes_array_index_5=0\n    local max_product_pair_indexes_array_index_6=0\n    local max_product_pair_indexes_array_index_7=0\n    local max_product_pair_indexes_array_index_8=0\n    local max_product_pair_indexes_array_index_9=0\n    local max_product_pair_indexes_array_index_10=0\n    local max_product_pair_indexes_array_index_11=0\n    local max_product_pair_indexes_array_index_12=0\n    local max_product_pair_indexes_array_index_13=0\n    local max_product_pair_indexes_array_index_14=0\n    local max_product_pair_indexes_array_index_15=0\n    local max_product_pair_indexes_array_index_16=0\n    local max_product_pair_indexes_array_index_17=0\n    local max_product_pair_indexes_array_index_18=0\n    local max_product_pair_indexes_array_index_19=0\n    local max_product_pair_indexes_array_index_20=0\n    local max_product_pair_indexes_array_index_21=0\n    local max_product_pair_indexes_array_index_22=0\n    local max_product_pair_indexes_array_index_23=0\n    local max_product_pair_indexes_array_\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local max2=${arr[1]}\n    local max3=${arr[2]}\n    local min=${arr[0]}\n    local min2=${arr[1]}\n    local min3=${arr[2]}\n    local product=0\n    local product2=0\n    local product3=0\n    for ((i=0;i<${#arr[@]};i++)); do\n        if [[ ${arr[i]} -gt $max ]]; then\n            max3=$max2\n            max2=$max\n            max=${arr[i]}\n        elif [[ ${arr[i]} -gt $max2 ]]; then\n            max3=$max2\n            max2=${arr[i]}\n        elif [[ ${arr[i]} -gt $max3 ]]; then\n            max3=${arr[i]}\n        fi\n        if [[ ${arr[i]} -lt $min ]]; then\n            min3=$min2\n            min2=$min\n            min=${arr[i]}\n        elif [[ ${arr[i]} -lt $min2 ]]; then\n            min3=$min2\n            min2=${arr[i]}\n        elif [[ ${arr[i]} -lt $min3 ]]; then\n            min3=${arr[i]}\n        fi\n    done\n    product=$((max*max2))\n    product2=$((max*min))\n    product3=$((max*min2))\n    if [[ $product2 -gt $product ]]; then\n        product=$product2\n    fi\n    if [[ $product3 -gt $product ]]; then\n        product=$product3\n    fi\n    echo $product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if [[ $i -gt $max1 ]]; then\n            max2=$max1\n            max1=$i\n        elif [[ $i -gt $max2 ]]; then\n            max2=$i\n        fi\n    done\n    echo $((max1 * max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local product=0\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i]*arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local max_product_pair=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i] * arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n                max_product_pair=(${arr[i]} ${arr[j]})\n            fi\n        done\n    done\n    echo \"${max_product_pair[@]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    for i in $1; do\n        if [ $i -gt $max1 ]; then\n            max4=$max3\n            max3=$max2\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max4=$max3\n            max3=$max2\n            max2=$i\n        elif [ $i -gt $max3 ]; then\n            max4=$max3\n            max3=$i\n        elif [ $i -gt $max4 ]; then\n            max4=$i\n        fi\n    done\n    echo $((max1 * max2 * max3 * max4))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=${array[0]}\n    local second_max=${array[1]}\n    local min=${array[0]}\n    local second_min=${array[1]}\n    local max_product\n    local second_max_product\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[i]} -gt $max ]]; then\n            second_max=$max\n            max=${array[i]}\n        elif [[ ${array[i]} -gt $second_max ]]; then\n            second_max=${array[i]}\n        fi\n\n        if [[ ${array[i]} -lt $min ]]; then\n            second_min=$min\n            min=${array[i]}\n        elif [[ ${array[i]} -lt $second_min ]]; then\n            second_min=${array[i]}\n        fi\n    done\n\n    max_product=$(( $max * $second_max ))\n    second_max_product=$(( $min * $second_min ))\n\n    if [[ $max_product -gt $second_max_product ]]; then\n        echo $max_product\n    else\n        echo $second_max_product\n    fi\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_prod=0\n    local prod=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            prod=$((arr[i] * arr[j]))\n            if ((prod > max_prod)); then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_1=0\n    local max_2=0\n    local max_3=0\n    local max_4=0\n    local max_5=0\n    local max_6=0\n    local max_7=0\n    local max_8=0\n    local max_9=0\n    local max_10=0\n    local max_11=0\n    local max_12=0\n    local max_13=0\n    local max_14=0\n    local max_15=0\n    local max_16=0\n    local max_17=0\n    local max_18=0\n    local max_19=0\n    local max_20=0\n    local max_21=0\n    local max_22=0\n    local max_23=0\n    local max_24=0\n    local max_25=0\n    local max_26=0\n    local max_27=0\n    local max_28=0\n    local max_29=0\n    local max_30=0\n    local max_31=0\n    local max_32=0\n    local max_33=0\n    local max_34=0\n    local max_35=0\n    local max_36=0\n    local max_37=0\n    local max_38=0\n    local max_39=0\n    local max_40=0\n    local max_41=0\n    local max_42=0\n    local max_43=0\n    local max_44=0\n    local max_45=0\n    local max_46=0\n    local max_47=0\n    local max_48=0\n    local max_49=0\n    local max_50=0\n    local max_51=0\n    local max_52=0\n    local max_53=0\n    local max_54=0\n    local max_55=0\n    local max_56=0\n    local max_57=0\n    local max_58=0\n    local max_59=0\n    local max_60=0\n    local max_61=0\n    local max_62=0\n    local max_63=0\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            product=$((arr[i]*arr[j]))\n            if [ $product -gt $max_product ]\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array\n    local -i i\n    local -i j\n    local -i max\n    local -i product\n    array=($1)\n    max=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if ((product > max)); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max1=${array[0]}\n    local max2=${array[1]}\n    local min1=${array[0]}\n    local min2=${array[1]}\n    local max_product=0\n    local i=0\n    local j=0\n    local product=0\n    for ((i=0;i<${#array[@]};i++)); do\n        for ((j=i+1;j<${#array[@]};j++)); do\n            product=$((array[i]*array[j]))\n            if [ $product -gt $max_product ]; then\n                max_product=$product\n                max1=${array[i]}\n                max2=${array[j]}\n            fi\n        done\n    done\n    echo \"The pair with highest product is ($max1,$max2) and the product is $max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local max_num=0\n    local min_num=0\n    local num1=0\n    local num2=0\n    local num3=0\n    local num4=0\n    local num5=0\n    local num6=0\n    local num7=0\n    local num8=0\n    local num9=0\n    local num10=0\n    local num11=0\n    local num12=0\n    local num13=0\n    local num14=0\n    local num15=0\n    local num16=0\n    local num17=0\n    local num18=0\n    local num19=0\n    local num20=0\n    local num21=0\n    local num22=0\n    local num23=0\n    local num24=0\n    local num25=0\n    local num26=0\n    local num27=0\n    local num28=0\n    local num29=0\n    local num30=0\n    local num31=0\n    local num32=0\n    local num33=0\n    local num34=0\n    local num35=0\n    local num36=0\n    local num37=0\n    local num38=0\n    local num39=0\n    local num40=0\n    local num41=0\n    local num42=0\n    local num43=0\n    local num44=0\n    local num45=0\n    local num46=0\n    local num47=0\n    local num48=0\n    local num49=0\n    local num50=0\n    local num51=0\n    local num52=0\n    local num53=0\n    local num54=0\n    local num55=0\n    local num56=0\n    local num57=0\n    local num58=0\n    local num59=0\n    local num60=0\n    local num61=0\n    local num62=0\n    local num63=0\n    local num64=0\n    local num65=0\n    local num66=0\n    local num67=0\n    local num68=0\n    local num69=\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local -i max=0\n    local -i product=0\n    local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            product=${arr[i]}*${arr[j]}\n            if ((product>max)); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a array=($1)\n  local max_product=0\n  local product=0\n  local i=0\n  local j=0\n  for ((i=0; i<${#array[@]}; i++))\n  do\n    for ((j=i+1; j<${#array[@]}; j++))\n    do\n      product=$((array[i]*array[j]))\n      if [ $product -gt $max_product ]\n      then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local max_num=0\n    local num=0\n    local max_num_index=0\n    local num_index=0\n    local i=0\n    local j=0\n    local array=($1)\n    for ((i=0; i<${#array[@]}; i++))\n    do\n        if [ ${array[$i]} -gt $max_num ]\n        then\n            max_num=${array[$i]}\n            max_num_index=$i\n        fi\n    done\n    for ((j=0; j<${#array[@]}; j++))\n    do\n        if [ $j -ne $max_num_index ]\n        then\n            num=${array[$j]}\n            num_index=$j\n            product=$((max_num*num))\n            if [ $product -gt $max_product ]\n            then\n                max_product=$product\n            fi\n        fi\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a array=($1)\n  local max_product=0\n  local product=0\n  for (( i=0; i<${#array[@]}; i++ )); do\n    for (( j=i+1; j<${#array[@]}; j++ )); do\n      product=$(( ${array[i]} * ${array[j]} ))\n      if [[ $product -gt $max_product ]]; then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local prod=$((arr[i] * arr[j]))\n            if ((prod > max)); then\n                max=$prod\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"(${arr[max_i]}, ${arr[max_j]})\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if ((arr[i]*arr[j] > max)); then\n                max=${arr[i]}*${arr[j]}\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"The pair with highest product is ${arr[max_i]} and ${arr[max_j]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if ((${arr[i]} * ${arr[j]} > max)); then\n                max=${arr[i]} * ${arr[j]}\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${arr[max_i]} * ${arr[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n/tmp/tmp6gjr1hfs.sh: line 13: 1: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local max_product_pair=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            local product=$((array[i]*array[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=(${array[i]} ${array[j]})\n            fi\n        done\n    done\n    echo \"${max_product_pair[@]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local max_num=0\n    local min_num=0\n    local num=0\n    for num in $1; do\n        if (( num > max_num )); then\n            max_num=$num\n        fi\n        if (( num < min_num )); then\n            min_num=$num\n        fi\n        product=$(( max_num * min_num ))\n        if (( product > max_product )); then\n            max_product=$product\n        fi\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local max_num=0\n    local num=0\n    local max_num2=0\n    local num2=0\n    local max_num3=0\n    local num3=0\n    local max_num4=0\n    local num4=0\n    local max_num5=0\n    local num5=0\n    local max_num6=0\n    local num6=0\n    local max_num7=0\n    local num7=0\n    local max_num8=0\n    local num8=0\n    local max_num9=0\n    local num9=0\n    local max_num10=0\n    local num10=0\n    local max_num11=0\n    local num11=0\n    local max_num12=0\n    local num12=0\n    local max_num13=0\n    local num13=0\n    local max_num14=0\n    local num14=0\n    local max_num15=0\n    local num15=0\n    local max_num16=0\n    local num16=0\n    local max_num17=0\n    local num17=0\n    local max_num18=0\n    local num18=0\n    local max_num19=0\n    local num19=0\n    local max_num20=0\n    local num20=0\n    local max_num21=0\n    local num21=0\n    local max_num22=0\n    local num22=0\n    local max_num23=0\n    local num23=0\n    local max_num24=0\n    local num24=0\n    local max_num25=0\n    local num25=0\n    local max_num26=0\n    local num26=0\n    local max_num27=0\n    local num27=0\n    local max_num28=0\n    local num28=0\n    local max_num29=0\n    local num29=0\n    local max_num30=0\n    local num30=0\n    local max_num31=0\n    local num31=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local max_product=0\n  local max_i=0\n  local max_j=0\n  local i=0\n  local j=0\n  local product=0\n  for i in $1\n  do\n    for j in $1\n    do\n      product=$((i*j))\n      if [[ $product -gt $max_product ]]\n      then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  echo \"Max product is $max_product from $max_i and $max_j\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                if [[ ${arr[i]}*${arr[j]} -gt $max ]]; then\n                    max=${arr[i]}*${arr[j]}\n                    max_i=$i\n                    max_j=$j\n                fi\n            else\n                if [[ ${arr[j]}*${arr[i]} -gt $max ]]; then\n                    max=${arr[j]}*${arr[i]}\n                    max_i=$i\n                    max_j=$j\n                fi\n            fi\n        done\n    done\n    echo \"max product: ${arr[max_i]}*${arr[max_j]}=$max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local product=0\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            product=$((array[i] * array[j]))\n            if [ $product -gt $max ]\n            then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_product=0\n    local max_product_pair=()\n    local max_product_pair_index=()\n    local max_product_pair_index_count=0\n    local max_product_pair_index_count_max=2\n    local i=0\n    local j=0\n    local product=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i] * arr[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=(\"${arr[i]}\" \"${arr[j]}\")\n                max_product_pair_index=(\"$i\" \"$j\")\n                max_product_pair_index_count=2\n            elif [[ $product -eq $max_product ]]; then\n                max_product_pair+=(\"${arr[i]}\" \"${arr[j]}\")\n                max_product_pair_index+=(\"$i\" \"$j\")\n                max_product_pair_index_count=$((max_product_pair_index_count + 2))\n            fi\n        done\n    done\n\n    echo \"max_product: $max_product\"\n    echo \"max_product_pair: ${max_product_pair[@]}\"\n    echo \"max_product_pair_index: ${max_product_pair_index[@]}\"\n    echo \"max_product_pair_index_count: $max_product_pair_index_count\"\n    echo \"max_product_pair_index_count_max: $max_product_pair_index_count_max\"\n\n    if [[ $max_product_pair_index_count -gt $max_product_pair_index_count_max ]]; then\n        echo \"There are more than one pair with highest product.\"\n    fi\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local list=($1)\n    local len=${#list[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            product=$((list[i] * list[j]))\n            if [ $product -gt $max_product ]\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=()\n    local max_product_pair_index=()\n    local max_product_pair_index_count=0\n    local max_product_pair_index_count_max=2\n    local max_product_pair_index_count_max_minus_1=1\n    local max_product_pair_index_count_max_minus_2=0\n    local max_product_pair_index_count_max_minus_3=0\n    local max_product_pair_index_count_max_minus_4=0\n    local max_product_pair_index_count_max_minus_5=0\n    local max_product_pair_index_count_max_minus_6=0\n    local max_product_pair_index_count_max_minus_7=0\n    local max_product_pair_index_count_max_minus_8=0\n    local max_product_pair_index_count_max_minus_9=0\n    local max_product_pair_index_count_max_minus_10=0\n    local max_product_pair_index_count_max_minus_11=0\n    local max_product_pair_index_count_max_minus_12=0\n    local max_product_pair_index_count_max_minus_13=0\n    local max_product_pair_index_count_max_minus_14=0\n    local max_product_pair_index_count_max_minus_15=0\n    local max_product_pair_index_count_max_minus_16=0\n    local max_product_pair_index_count_max_minus_17=0\n    local max_product_pair_index_count_max_minus_18=0\n    local max_product_pair_index_count_max_minus_19=0\n    local max_product_pair_index_count_max_minus_20=0\n    local max_product_pair_index_count_max_minus_21=0\n    local max_product_pair_index_count_max_minus_22=0\n    local max_product_pair_index_count\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local product=0\n    for (( i=0; i<${#array[@]}; i++ )); do\n        for (( j=i+1; j<${#array[@]}; j++ )); do\n            product=$(( ${array[i]} * ${array[j]} ))\n            if (( product > max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local product=0\n    local list=($1)\n    local len=${#list[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            product=$((list[i]*list[j]))\n            if [ $product -gt $max ]\n            then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if [ $i -gt $max1 ]; then\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max2=$i\n        fi\n    done\n    echo $((max1 * max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local max2=${arr[1]}\n    local max3=${arr[2]}\n    local min=${arr[0]}\n    local min2=${arr[1]}\n    local min3=${arr[2]}\n    local product=0\n    local product2=0\n    local product3=0\n    local product4=0\n    local product5=0\n    local product6=0\n    local product7=0\n    local product8=0\n    local product9=0\n    local product10=0\n    local product11=0\n    local product12=0\n    local product13=0\n    local product14=0\n    local product15=0\n    local product16=0\n    local product17=0\n    local product18=0\n    local product19=0\n    local product20=0\n    local product21=0\n    local product22=0\n    local product23=0\n    local product24=0\n    local product25=0\n    local product26=0\n    local product27=0\n    local product28=0\n    local product29=0\n    local product30=0\n    local product31=0\n    local product32=0\n    local product33=0\n    local product34=0\n    local product35=0\n    local product36=0\n    local product37=0\n    local product38=0\n    local product39=0\n    local product40=0\n    local product41=0\n    local product42=0\n    local product43=0\n    local product44=0\n    local product45=0\n    local product46=0\n    local product47=0\n    local product48=0\n    local product49=0\n    local product50=0\n    local product51=0\n    local product52=0\n    local product53=0\n    local product54=0\n    local product55=0\n    local product56=0\n    local product57=0\n    local product58=0\n    local product59=0\n    local product60=0\n    local product61=0\n    local product62=0\n    local product63\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i]*array[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    # split the list into an array\n    local -a arr=($1)\n    local len=${#arr[@]}\n    local max_prod=0\n    local prod=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            prod=$((arr[i] * arr[j]))\n            if [[ $prod -gt $max_prod ]]; then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_product=0\n    local max_product_pair=\"\"\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            local product=$(( ${arr[i]} * ${arr[j]} ))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=\"${arr[i]} ${arr[j]}\"\n            fi\n        done\n    done\n    echo \"$max_product_pair\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    local max_product_pair_indexes=\"\"\n    local max_product_pair_indexes_list=()\n    local max_product_pair_indexes_list_index=0\n    local max_product_pair_indexes_list_index_string=\"\"\n    local max_product_pair_indexes_list_index_string_length=0\n    local max_product_pair_indexes_list_index_string_length_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n    local max_product_pair_indexes_list_index_string_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local list=$1\n    local max_product=0\n    local max_product_pair=\"\"\n    for i in $list; do\n        for j in $list; do\n            if [ $i -ne $j ]; then\n                local product=$((i*j))\n                if [ $product -gt $max_product ]; then\n                    max_product=$product\n                    max_product_pair=\"$i $j\"\n                fi\n            fi\n        done\n    done\n    echo \"$max_product_pair\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local min1=0\n    local min2=0\n    local max_product=0\n\n    for i in \"${arr[@]}\"; do\n        if [ \"$i\" -gt \"$max1\" ]; then\n            max3=$max2\n            max2=$max1\n            max1=$i\n        elif [ \"$i\" -gt \"$max2\" ]; then\n            max3=$max2\n            max2=$i\n        elif [ \"$i\" -gt \"$max3\" ]; then\n            max3=$i\n        fi\n\n        if [ \"$i\" -lt \"$min1\" ]; then\n            min2=$min1\n            min1=$i\n        elif [ \"$i\" -lt \"$min2\" ]; then\n            min2=$i\n        fi\n    done\n\n    if [ \"$min1\" -lt 0 ] && [ \"$min2\" -lt 0 ]; then\n        max_product=$((min1 * min2))\n    fi\n\n    if [ \"$max1\" -gt 0 ] && [ \"$max2\" -gt 0 ] && [ \"$max3\" -gt 0 ]; then\n        max_product=$((max1 * max2 * max3))\n    fi\n\n    echo \"$max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp3lakmqzm.sh: line 15: [: 1 2 3 4 7 0 8 4: integer expression expected\\n/tmp/tmp3lakmqzm.sh: line 19: [: 1 2 3 4 7 0 8 4: integer expression expected\\n/tmp/tmp3lakmqzm.sh: line 22: [: 1 2 3 4 7 0 8 4: integer expression expected\\n/tmp/tmp3lakmqzm.sh: line 26: [: 1 2 3 4 7 0 8 4: integer expression expected\\n/tmp/tmp3lakmqzm.sh: line 29: [: 1 2 3 4 7 0 8 4: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local nums=($1)\n    local len=${#nums[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            product=$((nums[i]*nums[j]))\n            if [[ $product -gt $max_product ]]\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a array=($1)\n  local max1=0\n  local max2=0\n  local max3=0\n  local max4=0\n  local max5=0\n  local max6=0\n  local max7=0\n  local max8=0\n  local max9=0\n  local max10=0\n  local max11=0\n  local max12=0\n  local max13=0\n  local max14=0\n  local max15=0\n  local max16=0\n  local max17=0\n  local max18=0\n  local max19=0\n  local max20=0\n  local max21=0\n  local max22=0\n  local max23=0\n  local max24=0\n  local max25=0\n  local max26=0\n  local max27=0\n  local max28=0\n  local max29=0\n  local max30=0\n  local max31=0\n  local max32=0\n  local max33=0\n  local max34=0\n  local max35=0\n  local max36=0\n  local max37=0\n  local max38=0\n  local max39=0\n  local max40=0\n  local max41=0\n  local max42=0\n  local max43=0\n  local max44=0\n  local max45=0\n  local max46=0\n  local max47=0\n  local max48=0\n  local max49=0\n  local max50=0\n  local max51=0\n  local max52=0\n  local max53=0\n  local max54=0\n  local max55=0\n  local max56=0\n  local max57=0\n  local max58=0\n  local max59=0\n  local max60=0\n  local max61=0\n  local max62=0\n  local max63=0\n  local max64=0\n  local max65=0\n  local max66=0\n  local max67=0\n  local max68=0\n  local max69=0\n  local max70=0\n  local max71=0\n  local max72\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    for i in $1; do\n        for j in $1; do\n            if [ $i -ne $j ]; then\n                local product=$((i*j))\n                if [ $product -gt $max_product ]; then\n                    max_product=$product\n                    max_product_pair=\"$i $j\"\n                fi\n            fi\n        done\n    done\n    echo $max_product_pair\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local max_num=0\n    local max_num2=0\n    local product=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[$i]} -gt $max_num ]]; then\n            max_num2=$max_num\n            max_num=${arr[$i]}\n        elif [[ ${arr[$i]} -gt $max_num2 ]]; then\n            max_num2=${arr[$i]}\n        fi\n    done\n    echo \"max_num: $max_num\"\n    echo \"max_num2: $max_num2\"\n    max_product=$(( $max_num * $max_num2 ))\n    echo \"max_product: $max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp7mbju5ux.sh: line 12: [[: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n/tmp/tmp7mbju5ux.sh: line 15: [[: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr\n    local i\n    local j\n    local max\n    local product\n    arr=($1)\n    max=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i] * arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    max_product=0\n    for i in $1\n    do\n        for j in $1\n        do\n            product=$((i*j))\n            if [ $product -gt $max_product ]\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_product=0\n    local max_product_pair=\"\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i]*arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n                max_product_pair=\"${arr[i]} ${arr[j]}\"\n            fi\n        done\n    done\n    echo $max_product_pair\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i] * array[j]))\n            if ((product > max)); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n\tlocal max=0\n\tlocal product=0\n\tfor i in $1; do\n\t\tfor j in $1; do\n\t\t\tproduct=$((i*j))\n\t\t\tif [ $product -gt $max ]; then\n\t\t\t\tmax=$product\n\t\t\tfi\n\t\tdone\n\tdone\n\techo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=()\n    local i=0\n    local j=0\n    local product=0\n    for i in $1; do\n        for j in $1; do\n            product=$((i * j))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=($i $j)\n            fi\n        done\n    done\n    echo \"${max_product_pair[@]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local prod=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            prod=$((arr[i] * arr[j]))\n            if [[ $prod -gt $max ]]; then\n                max=$prod\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i]*arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_a=0\n    local max_b=0\n    for a in $1; do\n        for b in $1; do\n            if [ $a -ne $b ]; then\n                local product=$((a*b))\n                if [ $product -gt $max_product ]; then\n                    max_product=$product\n                    max_a=$a\n                    max_b=$b\n                fi\n            fi\n        done\n    done\n    echo \"Max product is $max_product, from $max_a and $max_b\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local max_i=0\n    local max_j=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if [[ $(( ${arr[$i]} * ${arr[$j]} )) -gt $max_product ]]; then\n                max_product=$(( ${arr[$i]} * ${arr[$j]} ))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product: ${arr[$max_i]} * ${arr[$max_j]} = $max_product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local product=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            product=$((arr[i] * arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=()\n    for i in $1; do\n        for j in $1; do\n            local product=$((i * j))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=($i $j)\n            fi\n        done\n    done\n    echo ${max_product_pair[@]}\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local max_num=0\n    local second_max_num=0\n    for num in $1; do\n        if (( num > max_num )); then\n            second_max_num=$max_num\n            max_num=$num\n        elif (( num > second_max_num )); then\n            second_max_num=$num\n        fi\n    done\n    product=$(( max_num * second_max_num ))\n    if (( product > max_product )); then\n        max_product=$product\n    fi\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i] * arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    for i in $1; do\n        if [ $i -gt $max1 ]; then\n            max2=$max1\n            max1=$i\n        elif [ $i -gt $max2 ]; then\n            max2=$i\n        fi\n    done\n    echo $((max1 * max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local second_max=${arr[1]}\n    local min=${arr[0]}\n    local second_min=${arr[1]}\n    local product=0\n\n    for i in ${arr[@]}; do\n        if [ $i -gt $max ]; then\n            second_max=$max\n            max=$i\n        elif [ $i -gt $second_max ]; then\n            second_max=$i\n        fi\n\n        if [ $i -lt $min ]; then\n            second_min=$min\n            min=$i\n        elif [ $i -lt $second_min ]; then\n            second_min=$i\n        fi\n    done\n\n    if [ $((second_max * max)) -gt $((second_min * min)) ]; then\n        product=$((second_max * max))\n    else\n        product=$((second_min * min))\n    fi\n\n    echo $product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local -a arr=(\"$@\")\n  local max=0\n  local max_i=0\n  local max_j=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=0; j<${#arr[@]}; j++)); do\n      if [ $i -ne $j ]; then\n        local prod=$((arr[i] * arr[j]))\n        if [ $prod -gt $max ]; then\n          max=$prod\n          max_i=$i\n          max_j=$j\n        fi\n      fi\n    done\n  done\n  echo \"max product is $max, from ${arr[max_i]} and ${arr[max_j]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local max=0\n  local max_index=0\n  for i in $1; do\n    if [ $i -gt $max ]; then\n      max=$i\n      max_index=$(($max_index + 1))\n    fi\n  done\n  echo $max_index\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local max2=${arr[1]}\n    local max3=${arr[2]}\n    local min=${arr[0]}\n    local min2=${arr[1]}\n    local min3=${arr[2]}\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local prod=0\n    local prod2=0\n    local prod3=0\n    local prod4=0\n    local prod5=0\n    local prod6=0\n    local prod7=0\n    local prod8=0\n    local prod9=0\n    local prod10=0\n    local prod11=0\n    local prod12=0\n    local prod13=0\n    local prod14=0\n    local prod15=0\n    local prod16=0\n    local prod17=0\n    local prod18=0\n    local prod19=0\n    local prod20=0\n    local prod21=0\n    local prod22=0\n    local prod23=0\n    local prod24=0\n    local prod25=0\n    local prod26=0\n    local prod27=0\n    local prod28=0\n    local prod29=0\n    local prod30=0\n    local prod31=0\n    local prod32=0\n    local prod33=0\n    local prod34=0\n    local prod35=0\n    local prod36=0\n    local prod37=0\n    local prod38=0\n    local prod39=0\n    local prod40=0\n    local prod41=0\n    local prod42=0\n    local prod43=0\n    local prod44=0\n    local prod45=0\n    local prod46=0\n    local prod47=0\n    local prod48=0\n    local prod49=0\n    local prod50=0\n    local prod51=0\n    local prod52=0\n    local prod53=0\n    local prod54=0\n    local prod55=0\n    local prod56=0\n    local prod57=0\n    local prod58=0\n    local prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local arr=($1)\n    local max_product=0\n    local max_product_pair=\"\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i] * arr[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=\"${arr[i]} ${arr[j]}\"\n            fi\n        done\n    done\n    echo $max_product_pair\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i]*arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [[ $((arr[i] * arr[j])) -gt $max ]]\n            then\n                max=$((arr[i] * arr[j]))\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    for i in $1; do\n        for j in $1; do\n            local product=$((i * j))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n                max_product_pair=\"$i $j\"\n            fi\n        done\n    done\n    echo $max_product_pair\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local i=0\n    local j=0\n    local prod=0\n    for i in ${arr[@]}; do\n        for j in ${arr[@]}; do\n            prod=$((i * j))\n            if [[ $prod -gt $max ]]; then\n                max=$prod\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]}*${arr[j]} -gt $max ]]; then\n                max=${arr[i]}*${arr[j]}\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${arr[max_i]}*${arr[max_j]}=$max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_product=0\n    local product=0\n    local max_num=0\n    local max_num2=0\n    local max_num_index=0\n    local max_num2_index=0\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -gt $max_num ]]; then\n            max_num=${arr[$i]}\n            max_num_index=$i\n        fi\n    done\n\n    for ((j=0; j<${#arr[@]}; j++)); do\n        if [[ ${arr[$j]} -gt $max_num2 && $j -ne $max_num_index ]]; then\n            max_num2=${arr[$j]}\n            max_num2_index=$j\n        fi\n    done\n\n    product=$((max_num*max_num2))\n    echo \"max_num: $max_num, max_num2: $max_num2, product: $product\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpb0mhuqjj.sh: line 17: [[: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n/tmp/tmpb0mhuqjj.sh: line 24: [[: 1 2 3 4 7 0 8 4: syntax error in expression (error token is \"2 3 4 7 0 8 4\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a nums=($1)\n    local max=${nums[0]}\n    local max2=${nums[1]}\n    local min=${nums[0]}\n    local min2=${nums[1]}\n    local product=0\n    for (( i=0; i<${#nums[@]}; i++ )); do\n        if [[ ${nums[i]} -gt $max ]]; then\n            max2=$max\n            max=${nums[i]}\n        elif [[ ${nums[i]} -gt $max2 ]]; then\n            max2=${nums[i]}\n        fi\n        if [[ ${nums[i]} -lt $min ]]; then\n            min2=$min\n            min=${nums[i]}\n        elif [[ ${nums[i]} -lt $min2 ]]; then\n            min2=${nums[i]}\n        fi\n    done\n    product=$(( max * max2 ))\n    if [[ $(( min * min2 )) -gt $product ]]; then\n        product=$(( min * min2 ))\n    fi\n    echo $product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local prod=$((arr[i] * arr[j]))\n            if [[ $prod -gt $max ]]; then\n                max=$prod\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${arr[max_i]} * ${arr[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max1=${arr[0]}\n    local max2=${arr[1]}\n    local min1=${arr[0]}\n    local min2=${arr[1]}\n    local max_product=0\n    local i=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]} -gt $max1 ]]; then\n            max2=$max1\n            max1=${arr[$i]}\n        elif [[ ${arr[$i]} -gt $max2 ]]; then\n            max2=${arr[$i]}\n        fi\n        if [[ ${arr[$i]} -lt $min1 ]]; then\n            min2=$min1\n            min1=${arr[$i]}\n        elif [[ ${arr[$i]} -lt $min2 ]]; then\n            min2=${arr[$i]}\n        fi\n    done\n    max_product=$((max1 * max2))\n    if [[ $((min1 * min2)) -gt $max_product ]]; then\n        max_product=$((min1 * min2))\n    fi\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=\"\"\n    local max_product_pair_index=\"\"\n    local max_product_pair_index_1=\"\"\n    local max_product_pair_index_2=\"\"\n    local max_product_pair_index_3=\"\"\n    local max_product_pair_index_4=\"\"\n    local max_product_pair_index_5=\"\"\n    local max_product_pair_index_6=\"\"\n    local max_product_pair_index_7=\"\"\n    local max_product_pair_index_8=\"\"\n    local max_product_pair_index_9=\"\"\n    local max_product_pair_index_10=\"\"\n    local max_product_pair_index_11=\"\"\n    local max_product_pair_index_12=\"\"\n    local max_product_pair_index_13=\"\"\n    local max_product_pair_index_14=\"\"\n    local max_product_pair_index_15=\"\"\n    local max_product_pair_index_16=\"\"\n    local max_product_pair_index_17=\"\"\n    local max_product_pair_index_18=\"\"\n    local max_product_pair_index_19=\"\"\n    local max_product_pair_index_20=\"\"\n    local max_product_pair_index_21=\"\"\n    local max_product_pair_index_22=\"\"\n    local max_product_pair_index_23=\"\"\n    local max_product_pair_index_24=\"\"\n    local max_product_pair_index_25=\"\"\n    local max_product_pair_index_26=\"\"\n    local max_product_pair_index_27=\"\"\n    local max_product_pair_index_28=\"\"\n    local max_product_pair_index_29=\"\"\n    local max_product_pair_index_30=\"\"\n    local max_product_pair_index_31=\"\"\n    local max_product_pair_index_32=\"\"\n    local max_product_pair_index_33=\"\"\n    local max_product_pair_index_34=\"\"\n    local max_product_pair_index_35=\"\"\n    local max_product_pair_index_36=\"\"\n    local max_product_pair_index_37=\"\"\n    local\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local product=0\n    local arr=($1)\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            product=$((arr[i]*arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                if [[ ${arr[i]}*${arr[j]} -gt $max ]]; then\n                    max=${arr[i]}*${arr[j]}\n                    max_i=$i\n                    max_j=$j\n                fi\n            else\n                if [[ ${arr[j]}*${arr[i]} -gt $max ]]; then\n                    max=${arr[j]}*${arr[i]}\n                    max_i=$i\n                    max_j=$j\n                fi\n            fi\n        done\n    done\n    echo \"Max product is ${arr[max_i]}*${arr[max_j]}=$max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            product=$((arr[i] * arr[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${arr[max_i]} * ${arr[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_prod=0\n    local prod=0\n    local max_num=0\n    local min_num=0\n    local num=0\n    for num in $1; do\n        if [ $num -gt $max_num ]; then\n            max_num=$num\n        fi\n        if [ $num -lt $min_num ]; then\n            min_num=$num\n        fi\n        prod=$((max_num * min_num))\n        if [ $prod -gt $max_prod ]; then\n            max_prod=$prod\n        fi\n    done\n    echo $max_prod\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    for ((i=0; i < len; i++)); do\n        for ((j=i+1; j < len; j++)); do\n            product=$((array[i] * array[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    local max_index=0\n    local index=0\n    local max_index2=0\n    local index2=0\n    for ((i=0; i<${#array[@]}; i++))\n    do\n        for ((j=i+1; j<${#array[@]}; j++))\n        do\n            product=$((array[i] * array[j]))\n            if [[ $product -gt $max_product ]]\n            then\n                max_product=$product\n                max_index=$i\n                max_index2=$j\n            fi\n        done\n    done\n    echo \"The pair with the highest product is ${array[max_index]} and ${array[max_index2]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_prod=0\n    local prod=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    for i in $1; do\n        for j in $1; do\n            prod=$((i*j))\n            if [[ $prod -gt $max_prod ]]; then\n                max_prod=$prod\n                a=$i\n                b=$j\n            fi\n        done\n    done\n    echo \"The pair with highest product is $a and $b\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    local i=0\n    local j=0\n    local product=0\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i]*array[j]))\n            if ((product > max)); then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n\n    echo \"Max product is ${array[max_i]} * ${array[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n    for ((i=0;i<${#arr[@]};i++)); do\n        for ((j=i+1;j<${#arr[@]};j++)); do\n            product=$((arr[i]*arr[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=$((array[i]*array[j]))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local product=0\n    for (( i=0; i<${#array[@]}; i++ )); do\n        for (( j=i+1; j<${#array[@]}; j++ )); do\n            product=$(( ${array[i]} * ${array[j]} ))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max=0\n    local product=0\n    local arr=($1)\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            product=$(( ${arr[i]} * ${arr[j]} ))\n            if (( $product > $max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max_product=0\n    local product=0\n    local i=0\n    local j=0\n    for (( i=0; i<${#array[@]}; i++ ))\n    do\n        for (( j=i+1; j<${#array[@]}; j++ ))\n        do\n            product=$(( ${array[i]} * ${array[j]} ))\n            if (( product > max_product ))\n            then\n                max_product=$product\n            fi\n        done\n    done\n    echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local second_max=${arr[1]}\n    local min=${arr[0]}\n    local second_min=${arr[1]}\n    local max_product=0\n    local second_max_product=0\n    local min_product=0\n    local second_min_product=0\n\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt $max ]]; then\n            second_max=$max\n            max=$i\n        elif [[ $i -gt $second_max ]]; then\n            second_max=$i\n        fi\n\n        if [[ $i -lt $min ]]; then\n            second_min=$min\n            min=$i\n        elif [[ $i -lt $second_min ]]; then\n            second_min=$i\n        fi\n    done\n\n    max_product=$((max * second_max))\n    min_product=$((min * second_min))\n\n    if [[ $max_product -gt $min_product ]]; then\n        echo \"$max_product\"\n    else\n        echo \"$min_product\"\n    fi\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max_product=0\n    local max_product_pair=()\n    local max_product_pair_index=()\n    local max_product_pair_index_count=0\n    local max_product_pair_index_count_max=2\n    local max_product_pair_index_count_max_minus_one=1\n    local max_product_pair_index_count_max_minus_two=0\n    local max_product_pair_index_count_max_minus_three=-1\n    local max_product_pair_index_count_max_minus_four=-2\n    local max_product_pair_index_count_max_minus_five=-3\n    local max_product_pair_index_count_max_minus_six=-4\n    local max_product_pair_index_count_max_minus_seven=-5\n    local max_product_pair_index_count_max_minus_eight=-6\n    local max_product_pair_index_count_max_minus_nine=-7\n    local max_product_pair_index_count_max_minus_ten=-8\n    local max_product_pair_index_count_max_minus_eleven=-9\n    local max_product_pair_index_count_max_minus_twelve=-10\n    local max_product_pair_index_count_max_minus_thirteen=-11\n    local max_product_pair_index_count_max_minus_fourteen=-12\n    local max_product_pair_index_count_max_minus_fifteen=-13\n    local max_product_pair_index_count_max_minus_sixteen=-14\n    local max_product_pair_index_count_max_minus_seventeen=-15\n    local max_product_pair_index_count_max_minus_eighteen=-16\n    local max_product_pair_index_count_max_minus_nineteen=-17\n    local max_product_pair_index_count_max_minus_twenty=-18\n    local max_product_pair_index_count_max_minus_twenty_one=-19\n    local max_product_pair_index_count_max_minus_tw\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr\n    local i\n    local max=0\n    local product=1\n    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        product=$((arr[i]*arr[i+1]))\n        if ((product > max)); then\n            max=$product\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n  local max_product=0\n  local product=0\n  local max_num=0\n  local min_num=0\n  local num=0\n  for num in $1; do\n    if [ $num -gt $max_num ]; then\n      max_num=$num\n    fi\n    if [ $num -lt $min_num ]; then\n      min_num=$num\n    fi\n    product=$((max_num * min_num))\n    if [ $product -gt $max_product ]; then\n      max_product=$product\n    fi\n  done\n  echo $max_product\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i product=0\n\n    array=($1)\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            product=${array[i]}*${array[j]}\n            if (( product > max )); then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a array=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            if [[ $((array[i]*array[j])) -gt $max ]]; then\n                max=$((array[i]*array[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${array[max_i]} * ${array[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local max1=0\n    local max2=0\n    local max3=0\n    local max4=0\n    local max5=0\n    local max6=0\n    local max7=0\n    local max8=0\n    local max9=0\n    local max10=0\n    local max11=0\n    local max12=0\n    local max13=0\n    local max14=0\n    local max15=0\n    local max16=0\n    local max17=0\n    local max18=0\n    local max19=0\n    local max20=0\n    local max21=0\n    local max22=0\n    local max23=0\n    local max24=0\n    local max25=0\n    local max26=0\n    local max27=0\n    local max28=0\n    local max29=0\n    local max30=0\n    local max31=0\n    local max32=0\n    local max33=0\n    local max34=0\n    local max35=0\n    local max36=0\n    local max37=0\n    local max38=0\n    local max39=0\n    local max40=0\n    local max41=0\n    local max42=0\n    local max43=0\n    local max44=0\n    local max45=0\n    local max46=0\n    local max47=0\n    local max48=0\n    local max49=0\n    local max50=0\n    local max51=0\n    local max52=0\n    local max53=0\n    local max54=0\n    local max55=0\n    local max56=0\n    local max57=0\n    local max58=0\n    local max59=0\n    local max60=0\n    local max61=0\n    local max62=0\n    local max63=0\n    local max64=0\n    local max65=0\n    local max66=0\n    local max67=0\n    local max68=0\n    local max69=0\n    local max70=0\n    local max71=0\n    local max72=0\n    local max73=0\n\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ $((arr[i] * arr[j])) -gt $max ]]; then\n                max=$((arr[i] * arr[j]))\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product: ${arr[max_i]} * ${arr[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a list=($1)\n    local max=0\n    local product=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            product=$((list[i] * list[j]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n        done\n    done\n    echo $max\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if (( ${arr[i]} * ${arr[j]} > max )); then\n                max=${arr[i]} * ${arr[j]}\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"Max product is ${arr[max_i]} * ${arr[max_j]} = $max\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n/tmp/tmpqz2_h7xd.sh: line 13: 1: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=(\"$@\")\n    local max_prod=0\n    local prod\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            prod=$((arr[i] * arr[j]))\n            if ((prod > max_prod)); then\n                max_prod=$prod\n            fi\n        done\n    done\n    echo \"$max_prod\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max1=0\n    local max2=0\n    local min1=0\n    local min2=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        if [[ $i -gt $max1 ]]; then\n            max2=$max1\n            max1=$i\n        elif [[ $i -gt $max2 ]]; then\n            max2=$i\n        fi\n        if [[ $i -lt $min1 ]]; then\n            min2=$min1\n            min1=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n    echo $((max1 * max2))\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find a pair with highest product from a given array of integers.\n#\n# $1 is a space-separated list\nmax_Product() {\n    local -a arr=($1)\n    local max=0\n    local max_i=0\n    local max_j=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            local product=$((arr[i]*arr[j]))\n            if ((product > max)); then\n                max=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${arr[max_i]} ${arr[max_j]}\"\n}\n\ncandidate() {\n    max_Product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 7 0 8 4\") = \"7 8\" ]]\n    [[ $(candidate \"0 -1 -2 -4 5 0 -6\") = \"-4 -6\" ]]\n    [[ $(candidate \"1 2 3\") = \"2 3\" ]]\n}\n\nrun_test",
      "timestamp": 1667190913,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
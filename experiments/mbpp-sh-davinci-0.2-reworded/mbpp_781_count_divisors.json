{
  "name": "mbpp_781_count_divisors",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the count of divisors is even. https://www.w3resource.com/shthon-exercises/basic/shthon-basic-1-exercise-24.php\n#\n# $1 is an integer\ncount_divisors() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_781_count_divisors.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    count_divisors \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"100\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local num=$1\n  local divisors=0\n  for ((i=1; i<=num; i++)); do\n    if ((num % i == 0)); then\n      ((divisors++))\n    fi\n  done\n  echo $divisors",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if ((num % i == 0)); then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    if [[ $1 -le 0 ]]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    local count=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n        if ((n % i == 0)); then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if ((num % i == 0)); then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if [ $((num%i)) -eq 0 ]; then\n            divisors=$((divisors+1))\n        fi\n    done\n    echo $divisors",
    "  local num=$1\n  local divisors=0\n  local i=1\n  while [ $i -le $num ]\n  do\n    if [ $((num % i)) -eq 0 ]\n    then\n      divisors=$((divisors + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo $divisors",
    "    local n=$1\n    local i=1\n    local count=0\n    while [ $i -le $n ]\n    do\n        if [ $((n%i)) -eq 0 ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    local number=$1\n    local divisors=0\n    for ((i=1; i<=$number; i++)); do\n        if [[ $((number % i)) -eq 0 ]]; then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if ((num % i == 0)); then\n            ((divisors++))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local divisors=0\n\n    for ((i=1; i<=$num; i++)); do\n        if ((num%i==0)); then\n            divisors=$((divisors+1))\n        fi\n    done\n\n    echo $divisors",
    "    local number=$1\n    local divisors=0\n    for ((i=1; i<=number; i++)); do\n        if [ $((number % i)) -eq 0 ]; then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "  local number=\"$1\"\n  local divisors=0\n  for ((i=1; i<=number; i++)); do\n    if [ $((number%i)) -eq 0 ]; then\n      divisors=$((divisors+1))\n    fi\n  done\n  echo \"$divisors\"",
    "    local number=$1\n    local divisors=0\n    for ((i=1; i<=$number; i++)); do\n        if [ $((number%i)) -eq 0 ]; then\n            divisors=$((divisors+1))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local count=0\n    for ((i=1; i<=$num; i++)); do\n        if [[ $((num % i)) -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "  local count=0\n  local i=1\n  while [ $i -le $1 ]; do\n    if [ $(( $1 % $i )) -eq 0 ]; then\n      count=$(( $count + 1 ))\n    fi\n    i=$(( $i + 1 ))\n  done\n  echo $count",
    "    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n        if ((n%i==0)); then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if [ $((num%i)) -eq 0 ]; then\n            divisors=$((divisors+1))\n        fi\n    done\n    echo $divisors",
    "    local number=$1\n    local divisors=0\n    for (( i=1; i<=$number; i++ )); do\n        if [[ $(( $number % $i )) -eq 0 ]]; then\n            (( divisors++ ))\n        fi\n    done\n    echo $divisors"
  ]
}
{
  "name": "mbpp_442_positive_count",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the ration of positive numbers in an array of integers.\n#\n# $1 is a space-separated list\npositive_count() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    positive_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0 1 2 -1 -5 6 0 -3 -2 3 4 6 8\") = \"0.54\" ]]\n    [[ $(candidate \"2 1 2 -1 -5 6 4 -3 -2 3 4 6 8\") = \"0.69\" ]]\n    [[ $(candidate \"2 4 -6 -9 11 -12 14 -5 17\") = \"0.56\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local count=0\n    local total=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            ((count++))\n        fi\n        ((total++))\n    done\n    echo $count $total | awk '{print $1/$2}'",
    "  local count=0\n  for i in $1; do\n    if [ $i -gt 0 ]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count",
    "  local count=0\n  for i in $1; do\n    if [[ $i -gt 0 ]]; then\n      (( count++ ))\n    fi\n  done\n  echo $count",
    "  local count=0\n  for i in $1; do\n    if [ $i -gt 0 ]; then\n      ((count++))\n    fi\n  done\n  echo $count",
    "    local count=0\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for i in $1; do\n        if (( i > 0 )); then\n            (( count++ ))\n        fi\n    done\n    echo $count",
    "  local count=0\n  for num in $1; do\n    if (( num > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count",
    "    local count=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count",
    "  local count=0\n  for i in $1; do\n    if (( i > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count",
    "    local -i count=0\n    for i in $1; do\n        if (( i > 0 )); then\n            (( count++ ))\n        fi\n    done\n    echo $count",
    "    local -i count=0\n    for i in $1; do\n        if (( i > 0 )); then\n            (( count++ ))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "  local -i count=0\n  for i in $1; do\n    if (( i > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count",
    "    local count=0\n    for i in $1\n    do\n        if [ $i -gt 0 ]\n        then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
    "  local count=0\n  for i in $1; do\n    if (( i > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count",
    "    local count=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "  local -i count=0\n  for n in $1; do\n    if (( n > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count"
  ]
}
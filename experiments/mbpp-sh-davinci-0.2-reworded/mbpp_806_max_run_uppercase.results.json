{
  "name": "mbpp_806_max_run_uppercase",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            ((run++))\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        (( i++ ))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run=0 ))\n        fi\n        (( max_run = max_run > run ? max_run : run ))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max )) && max=$run\n            run=0\n        fi\n    done\n    (( run > max )) && max=$run\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            count=$((count+1))\n            if [ $count -gt $max ]; then\n                max=$count\n            fi\n        else\n            count=0\n        fi\n        i=$((i+1))\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    local i\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run > max)) && max=$run\n            run=0\n        fi\n    done\n    ((run > max)) && max=$run\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local cur=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            ((cur=0))\n        fi\n        if ((cur > max)); then\n            max=$cur\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max_run=0\n  local run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max_run )) && max_run=$run\n      run=0\n    fi\n  done\n  (( run > max_run )) && max_run=$run\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local count=0\n  local c\n  for ((i=0; i<${#str}; i++)); do\n    c=${str:$i:1}\n    if [[ $c =~ [A-Z] ]]; then\n      ((count++))\n    else\n      ((count > max)) && max=$count\n      count=0\n    fi\n  done\n  ((count > max)) && max=$count\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local -i max_run=0\n    local -i run=0\n    local -i i\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [[ ${1:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local ch=${str:$i:1}\n        if [[ $ch =~ [A-Z] ]]; then\n            count=$((count+1))\n        else\n            if [ $count -gt $max ]; then\n                max=$count\n            fi\n            count=0\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $max ]; then\n        max=$count\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n      (( count++ ))\n    else\n      (( count > max )) && max=$count\n      count=0\n    fi\n  done\n  (( count > max )) && max=$count\n  echo \"$max\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#string}\n    while [ $i -lt $len ]; do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            ((run++))\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n        ((i++))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            ((cur=0))\n        fi\n        if ((cur > max)); then\n            max=$cur\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local cur=0\n  local i\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:i:1} =~ [A-Z] ]]; then\n      (( cur++ ))\n    else\n      (( cur > max )) && max=$cur\n      cur=0\n    fi\n  done\n  (( cur > max )) && max=$cur\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    local char\n    for ((i=0; i<${#string}; i++)); do\n        char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if ((current_run > max_run)); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            (( current_run = 0 ))\n        fi\n        if [[ $current_run -gt $max_run ]]; then\n            max_run=$current_run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        if [[ \"${string:i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    local i=0\n    while [ $i -lt ${#str} ]; do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max )); then\n                max=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max )); then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local max=0\n  local curr=0\n  local i=0\n  local len=${#1}\n  while [ $i -lt $len ]; do\n    if [[ ${1:$i:1} =~ [A-Z] ]]; then\n      (( curr++ ))\n      if [ $curr -gt $max ]; then\n        max=$curr\n      fi\n    else\n      curr=0\n    fi\n    (( i++ ))\n  done\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max)); then\n            max=$run\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=${str:i:1}\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            ((cur=0))\n        fi\n        if ((cur > max)); then\n            max=$cur\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local current=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            ((current++))\n        else\n            if ((current > max)); then\n                max=$current\n            fi\n            current=0\n        fi\n    done\n    if ((current > max)); then\n        max=$current\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( cur++ ))\n        else\n            (( cur > max )) && max=$cur\n            cur=0\n        fi\n    done\n    (( cur > max )) && max=$cur\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max_run=0\n  local current_run=0\n  local i=0\n  local len=${#string}\n\n  while [ $i -lt $len ]; do\n    local char=${string:$i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      ((current_run++))\n      if [ $current_run -gt $max_run ]; then\n        max_run=$current_run\n      fi\n    else\n      current_run=0\n    fi\n    ((i++))\n  done\n\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max_run)); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max )) && max=$run\n      run=0\n    fi\n  done\n  (( run > max )) && max=$run\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n      (( count++ ))\n      if (( count > max )); then\n        max=$count\n      fi\n    else\n      count=0\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local c=${str:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max=0\n    local run=0\n    local c\n    for ((i=0; i<${#1}; i++)); do\n        c=${1:i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run > max)) && max=$run\n            run=0\n        fi\n    done\n    ((run > max)) && max=$run\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_len=0\n    local max_str=\"\"\n    local len=0\n    local str=\"\"\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            len=$((len+1))\n            str=\"$str${string:$i:1}\"\n        else\n            if [[ $len -gt $max_len ]]; then\n                max_len=$len\n                max_str=\"$str\"\n            fi\n            len=0\n            str=\"\"\n        fi\n    done\n    if [[ $len -gt $max_len ]]; then\n        max_len=$len\n        max_str=\"$str\"\n    fi\n    echo \"$max_str\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=\"${str:i:1}\"\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        ((run > max)) && max=$run\n    done\n    echo \"$max\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max=0\n    local count=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            if (( count > max )); then\n                max=$count\n            fi\n            count=0\n        fi\n    done\n    if (( count > max )); then\n        max=$count\n    fi\n    echo \"$max\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run=0 ))\n        fi\n        if (( run > max_run )); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#str}\n    local c\n    while [ $i -lt $len ]; do\n        c=${str:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            run=$((run+1))\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n        i=$((i+1))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run = 0 ))\n        fi\n\n        if (( run > max_run )); then\n            max_run=$run\n        fi\n    done\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max_run ]; then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=\"${str:i:1}\"\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((cur++))\n            if ((cur > max)); then\n                max=$cur\n            fi\n        else\n            cur=0\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    local c\n    for (( i=0; i<${#str}; i++ )); do\n        c=\"${str:$i:1}\"\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            (( count++ ))\n            if (( count > max )); then\n                max=$count\n            fi\n        else\n            count=0\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local run=0\n    local char\n    for (( i=0; i<${#1}; i++ )); do\n        char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local run=0\n    local i\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max)); then\n            max=$run\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max_run=0\n  local run=0\n  local i=0\n  local c=''\n\n  while [ $i -lt ${#str} ]; do\n    c=${str:$i:1}\n    if [[ $c =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      if [ $run -gt $max_run ]; then\n        max_run=$run\n      fi\n      run=0\n    fi\n    (( i++ ))\n  done\n\n  if [ $run -gt $max_run ]; then\n    max_run=$run\n  fi\n\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max_run=0\n  local current_run=0\n\n  for (( i = 0; i < ${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ \"$char\" =~ [A-Z] ]]; then\n      (( current_run++ ))\n    else\n      if (( current_run > max_run )); then\n        max_run=\"$current_run\"\n      fi\n      current_run=0\n    fi\n  done\n\n  if (( current_run > max_run )); then\n    max_run=\"$current_run\"\n  fi\n\n  echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max_run)); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            ((current_run++))\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local run=0\n    local char\n    for ((i=0; i<${#1}; i++)); do\n        char=\"${1:i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local cur=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( cur++ ))\n        else\n            (( cur > max )) && max=$cur\n            cur=0\n        fi\n    done\n    (( cur > max )) && max=$cur\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    local i\n\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            if (( count > max )); then\n                max=$count\n            fi\n            count=0\n        fi\n    done\n\n    if (( count > max )); then\n        max=$count\n    fi\n\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local count=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            if (( count > max )); then\n                max=$count\n            fi\n            count=0\n        fi\n    done\n    if (( count > max )); then\n        max=$count\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=$1\n  local max_run=0\n  local run=0\n  for ((i=0; i<${#str}; i++)); do\n    if [[ ${str:i:1} =~ [A-Z] ]]; then\n      ((run++))\n      if ((run > max_run)); then\n        max_run=$run\n      fi\n    else\n      run=0\n    fi\n  done\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max=0\n    local run=0\n    local char\n    for (( i=0; i<${#1}; i++ )); do\n        char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max )) && max=$run\n            run=0\n        fi\n    done\n    (( run > max )) && max=$run\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    local i\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            (( count > max )) && max=$count\n            count=0\n        fi\n    done\n    (( count > max )) && max=$count\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max )) && max=$run\n      run=0\n    fi\n  done\n  (( run > max )) && max=$run\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            (( count > max )) && max=$count\n            count=0\n        fi\n    done\n    (( count > max )) && max=$count\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n            if (( current_run > max_run )); then\n                max_run=\"$current_run\"\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local len=${#string}\n    while [ $i -lt $len ]; do\n        local char=${string:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            current_run=$((current_run + 1))\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n        i=$((i + 1))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max_run=0\n  local run=0\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    local c=${str:$i:1}\n    if [[ $c =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      if [ $run -gt $max_run ]; then\n        max_run=$run\n      fi\n      run=0\n    fi\n    (( i++ ))\n  done\n  if [ $run -gt $max_run ]; then\n    max_run=$run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_len=0\n    local len=0\n    local i=0\n    local c=''\n    local max_i=0\n    local max_c=''\n\n    for ((i=0; i<${#str}; i++)); do\n        c=\"${str:$i:1}\"\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((len++))\n            if [[ $len -gt $max_len ]]; then\n                max_len=$len\n                max_i=$i\n                max_c=\"$c\"\n            fi\n        else\n            len=0\n        fi\n    done\n\n    echo \"${max_len} ${max_i} ${max_c}\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    local i=0\n    local c=''\n    for ((i=0; i<${#str}; i++)); do\n        c=\"${str:$i:1}\"\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            if ((cur > max)); then\n                max=$cur\n            fi\n            cur=0\n        fi\n    done\n    if ((cur > max)); then\n        max=$cur\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local run=0\n    local i=0\n    while [ $i -lt ${#str} ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i\n    for ((i=0; i<${#string}; i++)); do\n        local char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max_run)); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local current=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( current++ ))\n        else\n            if (( current > max )); then\n                max=$current\n            fi\n            current=0\n        fi\n    done\n    if (( current > max )); then\n        max=$current\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max_run=0\n  local run=0\n  local char\n  for (( i=0; i<${#str}; i++ )); do\n    char=\"${str:$i:1}\"\n    if [[ \"$char\" =~ [A-Z] ]]; then\n      (( run++ ))\n      if (( run > max_run )); then\n        max_run=$run\n      fi\n    else\n      run=0\n    fi\n  done\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            ((count++))\n        else\n            ((count=0))\n        fi\n        if ((count > max)); then\n            max=$count\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local char\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            ((run++))\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max=0\n  local count=0\n  local char\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    if [[ \"$char\" =~ [A-Z] ]]; then\n      ((count++))\n    else\n      ((count=0))\n    fi\n    if ((count > max)); then\n      max=$count\n    fi\n  done\n  echo \"$max\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local max=0\n  local run=0\n  local c\n  for (( i=0; i<${#1}; i++ )); do\n    c=${1:i:1}\n    if [[ $c =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max )) && max=$run\n      run=0\n    fi\n  done\n  (( run > max )) && max=$run\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=\"$current_run\"\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=\"$current_run\"\n    fi\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local char\n    local char_code\n\n    while [ $i -lt ${#string} ]; do\n        char=\"${string:$i:1}\"\n        char_code=$(printf \"%d\" \"'$char\")\n        if [ $char_code -ge 65 ] && [ $char_code -le 90 ]; then\n            current_run=$((current_run + 1))\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n        i=$((i + 1))\n    done\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local current_run=0\n    local char\n    for ((i=0; i<${#1}; i++)); do\n        char=\"${1:i:1}\"\n        if [[ $char =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if ((current_run > max_run)); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local -i max=0\n    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    local -i start=0\n    local -i end=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\n    while [ $i -lt $len ]; do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n            count=$((count + 1))\n            if [ $count -gt $max ]; then\n                max=$count\n                end=$i\n                start=$((end - max + 1))\n            fi\n        else\n            count=0\n        fi\n        i=$((i + 1))\n    done\n\n    echo \"Max run of uppercase characters is $max\"\n    echo \"Start index is $start\"\n    echo \"End index is $end\"\n    echo \"Substring is ${1:$start:$max}\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if ((current_run > max_run)); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:i:1}\" =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if ((current_run > max_run)); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=\"${str:i:1}\"\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            if ((cur > max)); then\n                max=$cur\n            fi\n            cur=0\n        fi\n    done\n    if ((cur > max)); then\n        max=$cur\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local -i max=0\n    local -i run=0\n    local -i i=0\n    local -i len=${#1}\n    local -i char_code=0\n    local -i char_code_prev=0\n\n    for (( i=0; i<len; i++ )); do\n        char_code=${1:i:1}\n        char_code_prev=${1:i-1:1}\n        if [[ $char_code -ge 65 && $char_code -le 90 ]]; then\n            if [[ $char_code_prev -ge 65 && $char_code_prev -le 90 ]]; then\n                (( run++ ))\n            else\n                run=1\n            fi\n        else\n            if [[ $run -gt $max ]]; then\n                max=$run\n            fi\n            run=0\n        fi\n    done\n\n    if [[ $run -gt $max ]]; then\n        max=$run\n    fi\n\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for (( i = 0; i < ${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max )); then\n                max=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max )); then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local count=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            if (( count > max )); then\n                max=$count\n            fi\n            count=0\n        fi\n    done\n    if (( count > max )); then\n        max=$count\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max)); then\n                max=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max)); then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=${str:i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max_run)); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local run=0\n    local char\n    for (( i=0; i<${#1}; i++ )); do\n        char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    while [ \"$i\" -lt \"${#string}\" ]; do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            current_run=$((current_run + 1))\n        else\n            if [ \"$current_run\" -gt \"$max_run\" ]; then\n                max_run=\"$current_run\"\n            fi\n            current_run=0\n        fi\n        i=$((i + 1))\n    done\n    if [ \"$current_run\" -gt \"$max_run\" ]; then\n        max_run=\"$current_run\"\n    fi\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            ((current_run++))\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local current_run=0\n    local char\n    for (( i=0; i<${#1}; i++ )); do\n        char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            (( current_run = 0 ))\n        fi\n        if (( current_run > max_run )); then\n            max_run=$current_run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max)); then\n            max=$run\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( cur++ ))\n        else\n            (( cur > max )) && max=$cur\n            cur=0\n        fi\n    done\n    (( cur > max )) && max=$cur\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local current_char\n\n    for (( i=0; i<${#string}; i++ )); do\n        current_char=\"${string:$i:1}\"\n        if [[ \"$current_char\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=\"$current_run\"\n            fi\n            current_run=0\n        fi\n    done\n\n    if (( current_run > max_run )); then\n        max_run=\"$current_run\"\n    fi\n\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i\n    for ((i=0; i<${#string}; i++)); do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            ((current_run=0))\n        fi\n        if ((current_run > max_run)); then\n            max_run=$current_run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run=0 ))\n        fi\n        if (( run > max_run )); then\n            max_run=$run\n        fi\n    done\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            current_run=$(( current_run + 1 ))\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=$1\n  local max_run=0\n  local run=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max_run )) && max_run=$run\n      run=0\n    fi\n  done\n  (( run > max_run )) && max_run=$run\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max_run=0\n  local current_run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n      (( current_run++ ))\n    else\n      if (( current_run > max_run )); then\n        max_run=$current_run\n      fi\n      current_run=0\n    fi\n  done\n  if (( current_run > max_run )); then\n    max_run=$current_run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n            run=0\n        fi\n        (( i++ ))\n    done\n    if [ $run -gt $max_run ]; then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local len=${#string}\n    local c\n    while [ $i -lt $len ]; do\n        c=${string:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            current_run=$((current_run + 1))\n        else\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n        i=$((i + 1))\n    done\n    if [ $current_run -gt $max_run ]; then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n\n    while [ \"$i\" -lt \"${#str}\" ]; do\n        local char=\"${str:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ \"$run\" -gt \"$max_run\" ]; then\n                max_run=\"$run\"\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n\n    if [ \"$run\" -gt \"$max_run\" ]; then\n        max_run=\"$run\"\n    fi\n\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i = 0; i < ${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run = 0 ))\n        fi\n        if (( run > max_run )); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local length=${#string}\n    while [ $i -lt $length ]; do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            ((current_run++))\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n        ((i++))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#str}\n\n    while [ $i -lt $len ]; do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n\n    if [ $run -gt $max_run ]; then\n        max_run=$run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max_run=0\n  local current_run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n      (( current_run++ ))\n    else\n      if (( current_run > max_run )); then\n        max_run=$current_run\n      fi\n      current_run=0\n    fi\n  done\n  if (( current_run > max_run )); then\n    max_run=$current_run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=$1\n  local max=0\n  local current=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} =~ [A-Z] ]]; then\n      (( current++ ))\n    else\n      if (( current > max )); then\n        max=$current\n      fi\n      current=0\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local current_run=0\n    local char\n    for (( i=0; i<${#1}; i++ )); do\n        char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            (( current_run = 0 ))\n        fi\n        if (( current_run > max_run )); then\n            max_run=$current_run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local max_run=0\n  local current_run=0\n  local i=0\n  local length=${#1}\n  while [ $i -lt $length ]; do\n    local char=${1:$i:1}\n    if [[ \"$char\" =~ [A-Z] ]]; then\n      current_run=$((current_run + 1))\n    else\n      if [ $current_run -gt $max_run ]; then\n        max_run=$current_run\n      fi\n      current_run=0\n    fi\n    i=$((i + 1))\n  done\n  if [ $current_run -gt $max_run ]; then\n    max_run=$current_run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max=0\n    local count=0\n    local i=0\n    local len=${#1}\n    while [ $i -lt $len ]; do\n        local c=${1:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((count++))\n        else\n            if [ $count -gt $max ]; then\n                max=$count\n            fi\n            count=0\n        fi\n        ((i++))\n    done\n    if [ $count -gt $max ]; then\n        max=$count\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=${string:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local c=''\n    while [ $i -lt ${#str} ]; do\n        c=\"${str:$i:1}\"\n        if [[ $c =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max_run ]; then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n\tlocal str=\"$1\"\n\tlocal max=0\n\tlocal cur=0\n\tfor ((i=0; i<${#str}; i++)); do\n\t\tif [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n\t\t\t((cur++))\n\t\telse\n\t\t\t((cur=0))\n\t\tfi\n\t\t((max=cur>max?cur:max))\n\tdone\n\techo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max_run=0\n  local current_run=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n      (( current_run++ ))\n    else\n      if (( current_run > max_run )); then\n        max_run=$current_run\n      fi\n      current_run=0\n    fi\n  done\n  if (( current_run > max_run )); then\n    max_run=$current_run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local cur=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            ((cur=0))\n        fi\n        if ((cur > max)); then\n            max=$cur\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=${str:i:1}\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max_run)); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max_run=0\n  local current_run=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n      (( current_run++ ))\n      if (( current_run > max_run )); then\n        max_run=$current_run\n      fi\n    else\n      current_run=0\n    fi\n  done\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max_run=0\n  local run=0\n  local i=0\n  local char\n  while [ $i -lt ${#string} ]; do\n    char=\"${string:$i:1}\"\n    if [[ \"$char\" =~ [A-Z] ]]; then\n      ((run++))\n    else\n      if [ $run -gt $max_run ]; then\n        max_run=$run\n      fi\n      run=0\n    fi\n    ((i++))\n  done\n  if [ $run -gt $max_run ]; then\n    max_run=$run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local len=${#string}\n    local c\n    while [ $i -lt $len ]; do\n        c=${string:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            current_run=$((current_run + 1))\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n        i=$((i + 1))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local char\n\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i = 0; i < ${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((cur++))\n            if ((cur > max)); then\n                max=$cur\n            fi\n        else\n            cur=0\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i = 0; i < ${#str}; i++ )); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run = 0 ))\n        fi\n        if (( run > max_run )); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local str=\"$1\"\n  local max=0\n  local run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max )) && max=$run\n      run=0\n    fi\n  done\n  (( run > max )) && max=$run\n  echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo \"$max_run\"\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    local len=${#str}\n    local i=0\n    while [ $i -lt $len ]; do\n        local c=${str:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            if [ $cur -gt $max ]; then\n                max=$cur\n            fi\n            cur=0\n        fi\n        ((i++))\n    done\n    if [ $cur -gt $max ]; then\n        max=$cur\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( cur++ ))\n            (( max = cur > max ? cur : max ))\n        else\n            cur=0\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            (( current_run = 0 ))\n        fi\n        if (( current_run > max_run )); then\n            max_run=$current_run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:i:1}\" =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max )); then\n                max=$run\n            fi\n            run=0\n        fi\n    done\n    if (( run > max )); then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max=0\n    local count=0\n    local i=0\n    local len=${#string}\n    local char\n\n    while [ $i -lt $len ]; do\n        char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            count=$((count + 1))\n            if [ $count -gt $max ]; then\n                max=$count\n            fi\n        else\n            count=0\n        fi\n        i=$((i + 1))\n    done\n\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local char\n\n    while [ $i -lt ${#string} ]; do\n        char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n        ((i++))\n    done\n\n    if [ $current_run -gt $max_run ]; then\n        max_run=$current_run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local cur=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( cur++ ))\n        else\n            if [ $cur -gt $max ]; then\n                max=$cur\n            fi\n            cur=0\n        fi\n        (( i++ ))\n    done\n    if [ $cur -gt $max ]; then\n        max=$cur\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            ((current_run++))\n        else\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if ((current_run > max_run)); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local max_run=0\n  local current_run=0\n  local i\n  for ((i=0; i<${#1}; i++)); do\n    if [[ \"${1:$i:1}\" =~ [A-Z] ]]; then\n      ((current_run++))\n    else\n      if ((current_run > max_run)); then\n        max_run=$current_run\n      fi\n      current_run=0\n    fi\n  done\n  if ((current_run > max_run)); then\n    max_run=$current_run\n  fi\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local run=0\n    local c\n    for ((i=0; i<${#1}; i++)); do\n        c=${1:i:1}\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            ((current_run++))\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n        ((i++))\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n  local string=\"$1\"\n  local max_run=0\n  local current_run=0\n  local i=0\n  local char=''\n  local char_code=0\n  local char_code_upper=0\n\n  while [ $i -lt ${#string} ]; do\n    char=\"${string:$i:1}\"\n    char_code=$(printf \"%d\" \"'$char\")\n    char_code_upper=$(( char_code - 32 ))\n\n    if [ $char_code -ge 65 -a $char_code -le 90 ]; then\n      current_run=$(( current_run + 1 ))\n    elif [ $char_code_upper -ge 65 -a $char_code_upper -le 90 ]; then\n      current_run=$(( current_run + 1 ))\n    else\n      if [ $current_run -gt $max_run ]; then\n        max_run=$current_run\n      fi\n      current_run=0\n    fi\n\n    i=$(( i + 1 ))\n  done\n\n  if [ $current_run -gt $max_run ]; then\n    max_run=$current_run\n  fi\n\n  echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    local c\n    for ((i=0; i<${#str}; i++)); do\n        c=${str:i:1}\n        if [[ \"$c\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local cur_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( cur_run++ ))\n        else\n            if (( cur_run > max_run )); then\n                max_run=$cur_run\n            fi\n            cur_run=0\n        fi\n    done\n    if (( cur_run > max_run )); then\n        max_run=$cur_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#string}\n    while [ $i -lt $len ]; do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max_run ]; then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local c=${str:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n    if ((run > max_run)); then\n        max_run=$run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n        else\n            current_run=0\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local c=${str:$i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            ((run++))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        ((i++))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local str=$1\n    local max=0\n    local count=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( count++ ))\n        else\n            (( count > max )) && max=$count\n            count=0\n        fi\n    done\n    (( count > max )) && max=$count\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max=0\n    local run=0\n    local c\n    for (( i=0; i<${#1}; i++ )); do\n        c=${1:i:1}\n        if [[ $c =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max )) && max=$run\n            run=0\n        fi\n    done\n    (( run > max )) && max=$run\n    echo $max\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local max_run=0\n    local current_run=0\n    local i\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            (( current_run = 0 ))\n        fi\n        if (( current_run > max_run )); then\n            max_run=$current_run\n        fi\n    done\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local -i max_run=0\n    local -i current_run=0\n    local -i i=0\n    local -i length=${#1}\n    local -i char_code=0\n\n    for ((i=0; i<length; i++)); do\n        char_code=${1:$i:1}\n        if [[ $char_code -ge 65 && $char_code -le 90 ]]; then\n            ((current_run++))\n        else\n            if ((current_run > max_run)); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n\n    if ((current_run > max_run)); then\n        max_run=$current_run\n    fi\n\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n    local string=\"$1\"\n    local max_run=0\n    local current_run=0\n    local i=0\n    local length=${#string}\n    while [ $i -lt $length ]; do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            current_run=$((current_run + 1))\n        else\n            if [ $current_run -gt $max_run ]; then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n        i=$((i + 1))\n    done\n    if [ $current_run -gt $max_run ]; then\n        max_run=$current_run\n    fi\n    echo $max_run\n}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
      "timestamp": 1667191436,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
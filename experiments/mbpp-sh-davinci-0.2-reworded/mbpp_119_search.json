{
  "name": "mbpp_119_search",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the element that appears only once in a sorted array.\n#\n# $1 is a space-separated list\nsearch() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 2 2 3\") = \"3\" ]]\n    [[ $(candidate \"1 1 3 3 4 4 5 5 7 7 8\") = \"8\" ]]\n    [[ $(candidate \"1 2 2 3 3 4 4\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local i=0\n    local j=0\n    local len=0\n    local result=0\n\n    len=${#list}\n    for ((i=0; i<len; i++)); do\n        for ((j=0; j<len; j++)); do\n            if [[ \"${list:$i:1}\" == \"${list:$j:1}\" ]]; then\n                result=$((result+1))\n            fi\n        done\n        if [[ $result -eq 1 ]]; then\n            echo \"${list:$i:1}\"\n            break\n        else\n            result=0\n        fi\n    done",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i mid=0\n    local -i start=0\n    local -i end=$((len - 1))\n    local -i result=0\n    while ((start <= end))\n    do\n        mid=$(((start + end) / 2))\n        if ((mid == 0 || array[mid] != array[mid - 1])) && ((mid == len - 1 || array[mid] != array[mid + 1]))\n        then\n            result=$mid\n            break\n        elif ((mid % 2 == 0))\n        then\n            if ((array[mid] == array[mid + 1]))\n            then\n                start=$((mid + 2))\n            else\n                end=$((mid - 2))\n            fi\n        elif ((mid % 2 == 1))\n        then\n            if ((array[mid] == array[mid - 1]))\n            then\n                start=$((mid + 1))\n            else\n                end=$((mid - 1))\n            fi\n        fi\n    done\n    echo ${array[result]}",
    "    local -a arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=0; j<len; j++)); do\n            if [ $i -ne $j ]; then\n                if [ ${arr[$i]} -eq ${arr[$j]} ]; then\n                    break\n                fi\n            fi\n        done\n        if [ $j -eq $len ]; then\n            echo ${arr[$i]}\n            break\n        fi\n    done",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i mid=0\n    local -i start=0\n    local -i end=$((len-1))\n\n    while [ $start -le $end ]; do\n        mid=$(((start+end)/2))\n        if [ $mid -eq 0 ]; then\n            if [ ${array[$mid]} -ne ${array[$((mid+1))]} ]; then\n                echo ${array[$mid]}\n                return\n            else\n                start=$((mid+1))\n            fi\n        elif [ $mid -eq $((len-1)) ]; then\n            if [ ${array[$mid]} -ne ${array[$((mid-1))]} ]; then\n                echo ${array[$mid]}\n                return\n            else\n                end=$((mid-1))\n            fi\n        else\n            if [ ${array[$mid]} -ne ${array[$((mid-1))]} ] && [ ${array[$mid]} -ne ${array[$((mid+1))]} ]; then\n                echo ${array[$mid]}\n                return\n            elif [ ${array[$mid]} -eq ${array[$((mid-1))]} ]; then\n                if [ $((mid%2)) -eq 0 ]; then\n                    start=$((mid+1))\n                else\n                    end=$((mid-1))\n                fi\n            elif [ ${array[$mid]} -eq ${array[$((mid+1))]} ]; then\n                if [ $((mid%2)) -eq 0 ]; then\n                    end=$((mid-1))\n                else\n                    start=$((mid+1))\n                fi\n            fi\n        fi\n    done",
    "    local list=\"$1\"\n    local prev=\"\"\n    local curr=\"\"\n    for curr in $list; do\n        if [[ \"$prev\" == \"$curr\" ]]; then\n            prev=\"\"\n        else\n            echo \"$prev\"\n            prev=\"$curr\"\n        fi\n    done\n    echo \"$prev\"",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i mid=0\n    local -i left=0\n    local -i right=0\n\n    while [ $i -lt $len ]\n    do\n        left=$i\n        right=$i\n        while [ $right -lt $len -a ${arr[$right]} -eq ${arr[$left]} ]\n        do\n            right=$right+1\n        done\n        if [ $right -eq $((left+1)) ]\n        then\n            echo ${arr[$left]}\n            return\n        fi\n        i=$right\n    done",
    "    local -a array\n    local -i i\n    local -i len\n    local -i mid\n    local -i start\n    local -i end\n\n    array=($1)\n    len=${#array[@]}\n    start=0\n    end=$((len - 1))\n\n    while [ $start -le $end ]; do\n        mid=$(((start + end) / 2))\n        if [ $mid -eq 0 ]; then\n            if [ ${array[$mid]} -ne ${array[$((mid + 1))]} ]; then\n                echo ${array[$mid]}\n                return\n            fi\n        elif [ $mid -eq $((len - 1)) ]; then\n            if [ ${array[$mid]} -ne ${array[$((mid - 1))]} ]; then\n                echo ${array[$mid]}\n                return\n            fi\n        else\n            if [ ${array[$mid]} -ne ${array[$((mid - 1))]} ] && [ ${array[$mid]} -ne ${array[$((mid + 1))]} ]; then\n                echo ${array[$mid]}\n                return\n            fi\n        fi\n\n        if [ $((mid % 2)) -eq 0 ]; then\n            if [ ${array[$mid]} -eq ${array[$((mid + 1))]} ]; then\n                start=$((mid + 2))\n            else\n                end=$((mid - 1))\n            fi\n        else\n            if [ ${array[$mid]} -eq ${array[$((mid - 1))]} ]; then\n                start=$((mid + 1))\n            else\n                end=$((mid - 2))\n            fi\n        fi\n    done",
    "    local list=\"$1\"\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local result=0\n    local arr=()\n\n    len=${#list}\n    for ((i=0; i<len; i++)); do\n        arr[$i]=${list:$i:1}\n    done\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[$i]} -eq ${arr[$j]} ]]; then\n                unset arr[$i]\n                unset arr[$j]\n                break\n            fi\n        done\n    done\n\n    for ((i=0; i<len; i++)); do\n        if [[ -n ${arr[$i]} ]]; then\n            result=${arr[$i]}\n            break\n        fi\n    done\n\n    echo $result",
    "    local list=\"$1\"\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local result=0\n\n    len=$(echo \"$list\" | wc -w)\n    for i in $list; do\n        j=0\n        for k in $list; do\n            if [ $i -eq $k ]; then\n                j=$((j+1))\n            fi\n        done\n        if [ $j -eq 1 ]; then\n            result=$i\n            break\n        fi\n    done\n    echo $result",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -",
    "    local list=\"$1\"\n    local element=\"\"\n    local count=0\n    for element in $list; do\n        count=$(echo \"$list\" | grep -c \"$element\")\n        if [ $count -eq 1 ]; then\n            echo \"$element\"\n            return\n        fi\n    done\n    echo \"No element appears only once\"",
    "  local -a array=($1)\n  local -i len=${#array[@]}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n ",
    "    local -a arr=(\"$@\")\n    local i=0\n    local j=1\n    local len=${#arr[@]}\n    local result=0\n    while [ $i -lt $len ]; do\n        if [ $j -lt $len ]; then\n            if [ ${arr[$i]} -eq ${arr[$j]} ]; then\n                i=$((i+2))\n                j=$((j+2))\n            else\n                result=${arr[$i]}\n                break\n            fi\n        else\n            result=${arr[$i]}\n            break\n        fi\n    done\n    echo $result",
    "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i mid=0\n  local -i left=0\n  local -i right=0\n  local -i result=0\n  local -i prev=0\n  local -i next=0\n\n  while [ $i -lt $len ]\n  do\n    mid=$((i + len))\n    mid=$((mid / 2))\n    left=$((mid - 1))\n    right=$((mid + 1))\n    prev=$((mid - 1))\n    next=$((mid + 1))\n\n    if [ $left -lt 0 ]\n    then\n      left=0\n    fi\n\n    if [ $right -gt $len ]\n    then\n      right=$len\n    fi\n\n    if [ $prev -lt 0 ]\n    then\n      prev=0\n    fi\n\n    if [ $next -gt $len ]\n    then\n      next=0\n    fi\n\n    if [ ${arr[$mid]} -ne ${arr[$left]} ] && [ ${arr[$mid]} -ne ${arr[$right]} ]\n    then\n      result=${arr[$mid]}\n      break\n    fi\n\n    if [ $((mid % 2)) -eq 0 ]\n    then\n      if [ ${arr[$mid]} -eq ${arr[$prev]} ]\n      then\n        i=$((mid + 1))\n      else\n        len=$((mid - 1))\n      fi\n    else\n      if [ ${arr[$mid]} -eq ${arr[$next]} ]\n      then\n        i=$((mid + 1))\n      else\n        len=$((mid - 1))\n      fi\n    fi\n  done\n\n  echo $result",
    "    local list=\"$1\"\n    local prev=\n    local curr=\n    local count=0\n    for i in $list; do\n        if [ -z \"$prev\" ]; then\n            prev=$i\n            count=1\n        else\n            curr=$i\n            if [ \"$curr\" == \"$prev\" ]; then\n                count=$((count+1))\n            else\n                if [ $count -eq 1 ]; then\n                    echo $prev\n                    return\n                fi\n                prev=$curr\n                count=1\n            fi\n        fi\n    done\n    if [ $count -eq 1 ]; then\n        echo $prev\n    fi",
    "    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n   ",
    "    local list=\"$1\"\n    local i=0\n    local j=0\n    local n=0\n    local len=0\n    local found=0\n    local result=0\n    local arr=()\n    local arr_len=0\n    local arr_i=0\n    local arr_j=0\n\n    # Convert the space-separated list to an array\n    arr=($list)\n    arr_len=${#arr[@]}\n\n    # Loop through the array\n    for (( arr_i=0; arr_i<arr_len; arr_i++ )); do\n        found=0\n        for (( arr_j=0; arr_j<arr_len; arr_j++ )); do\n            if [[ $arr_i -ne $arr_j ]]; then\n                if [[ ${arr[$arr_i]} -eq ${arr[$arr_j]} ]]; then\n                    found=1\n                    break\n                fi\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            result=${arr[$arr_i]}\n            break\n        fi\n    done\n\n    echo $result",
    "  local list=$1\n  local i=0\n  local j=0\n  local k=0\n  local len=0\n  local result=0\n  local arr=()\n  local arr_len=0\n\n  arr=($list)\n  arr_len=${#arr[@]}\n\n  for ((i=0; i<arr_len; i++)); do\n    for ((j=0; j<arr_len; j++)); do\n      if [[ $i -ne $j ]]; then\n        if [[ ${arr[$i]} -eq ${arr[$j]} ]]; then\n          break\n        fi\n      fi\n    done\n    if [[ $j -eq $arr_len ]]; then\n      result=${arr[$i]}\n      break\n    fi\n  done\n\n  echo $result",
    "    local list=\"$1\"\n    local i=0\n    local j=0\n    local len=0\n    local result=0\n    local array=()\n    local array_len=0\n\n    array=($list)\n    array_len=${#array[@]}\n    len=$((array_len - 1))\n\n    while [ $i -lt $len ]; do\n        j=$((i + 1))\n        if [ ${array[$i]} -ne ${array[$j]} ]; then\n            result=${array[$i]}\n            break\n        fi\n        i=$((i + 2))\n    done\n\n    if [ $i -eq $len ]; then\n        result=${array[$len]}\n    fi\n\n    echo $result",
    "    local -a a=($1)\n    local -i i=0\n    local -i n=${#a[@]}\n    local -i m=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local"
  ]
}
name: HumanEval_103_rounded_avg
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two positive integers n and m, and your task is to compute\
  \ the\n    // average of the integers from n through m (including n and m). \n \
  \   // Round the answer to the nearest integer and convert that to binary.\n   \
  \ // If n is greater than m, return -1.\n    // Example:\n    // >>> roundedAvg((1l),\
  \ (5l))\n    // \"0b11\"\n    // >>> roundedAvg((7l), (5l))\n    // -1l\n    //\
  \ >>> roundedAvg((10l), (20l))\n    // \"0b1111\"\n    // >>> roundedAvg((20l),\
  \ (33l))\n    // \"0b11010\"\n    def roundedAvg(n : Long, m : Long) : Either[String,\
  \ Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(roundedAvg((1l),\
  \ (5l)).equals(\"0b11\"));\n    assert(roundedAvg((7l), (13l)).equals(\"0b1010\"\
  ));\n    assert(roundedAvg((964l), (977l)).equals(\"0b1111001010\"));\n    assert(roundedAvg((996l),\
  \ (997l)).equals(\"0b1111100100\"));\n    assert(roundedAvg((560l), (851l)).equals(\"\
  0b1011000010\"));\n    assert(roundedAvg((185l), (546l)).equals(\"0b101101110\"\
  ));\n    assert(roundedAvg((362l), (496l)).equals(\"0b110101101\"));\n    assert(roundedAvg((350l),\
  \ (902l)).equals(\"0b1001110010\"));\n    assert(roundedAvg((197l), (233l)).equals(\"\
  0b11010111\"));\n    assert(roundedAvg((7l), (5l)).equals(-1l));\n    assert(roundedAvg((5l),\
  \ (1l)).equals(-1l));\n    assert(roundedAvg((5l), (5l)).equals(\"0b101\"));\n \
  \   }\n\n}\n"
completions: ["        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n.div(m).floorDiv(2).toString(2))\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).roundToInt.toString.map(_.toBinaryString))\n  \
    \      }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"\
    ))\n        }", "        if (n > m) {\n            return Left(\"-1\")\n     \
    \   } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n        }", "   \
    \     if (n > m) {\n            return Left(\"-1\")\n        } else {\n      \
    \      return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n    \
    \        return Left(\"-1\")\n        } else {\n            return Right(n + (m\
    \ - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n + (m - n) / 2)\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            var sum =\
    \ 0l\n            for (i <- n to m) {\n                sum += i\n            }\n\
    \            var avg = sum / (m - n + 1)\n            return Right(avg.toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            val sum = n + m\n            val avg = sum / 2\n            val\
    \ rounded = round(avg)\n            return Right(rounded.toString())\n       \
    \ }", "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n\
    \            return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n\
    \        }", "        if (n > m) return Left(\"-1\")\n        else {\n       \
    \     var sum = 0l\n            for (i <- n to m) {\n                sum += i\n\
    \            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).roundToInt(scala.math.BigInteger.TEN).toString(2))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).ceilDiv(2).toString().replace(\"0\"\
    , \"\").replace(\"1\", \"1\"))\n        }", "        if (n > m) {\n          \
    \  return Left(\"-1\")\n        } else {\n            return Right(n.div(m).ceil().toString(2))\n\
    \        }", "        if (n > m) return Left(\"-1\")\n        else {\n       \
    \     val sum = n + m\n            val avg = (n + m) / 2\n            val rounded\
    \ = avg.toInt.toBinaryString\n            return Right(rounded)\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).ceilDiv(2).toString().replace(\"0\", \"\").replace(\"\
    1\", \"1\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).ceilDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).ceilDiv(2).toString(2))\n\
    \        }", "        if (n > m) {\n            return Right(-1l)\n        } else\
    \ {\n            return Right(scala.math.BigDecimal.valueOf(n + (m - n) / 2).round(2).toString().replace('.',\
    \ '0').replace('1', '1').replace('0', '0'))\n        }", "        if (n > m) {\n\
    \            return Left(\"-1\")\n        } else {\n            return Right(n\
    \ + (m - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n + (m - n) / 2)\n        }",
  "        if (n > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n\
    \            for (i <- n to m) {\n                sum += i\n            }\n  \
    \          return Right(toBinary(sum / (m - n + 1)))\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }",
  "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n.div(m).multiply(scala.math.BigInt.valueOf(2)).add(scala.math.BigInt.valueOf(1)).toString().replace(\"\
    0b\", \"\").replace(\"1\", \"1\").replace(\"10\", \"11\"))\n        }", "    \
    \    if (n > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n\
    \            for (i <- n to m) {\n                sum += i\n            }\n  \
    \          return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) return\
    \ Left(\"-1\")\n        else {\n            val sum = n + m\n            val avg\
    \ = sum / 2\n            val rounded = round(avg)\n            return Right(rounded.toString())\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).floorDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            val sum = n + m\n            val avg = sum / 2\n            val\
    \ rounded = _.round(avg)\n            return Right(rounded.toString())\n     \
    \   }", "        if (n > m) return Left(\"-1\")\n        else {\n            var\
    \ sum = 0l\n            for (i <- n to m) {\n                sum += i\n      \
    \      }\n            var avg = sum / (m - n + 1)\n            return Right(avg.toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n + (m - n) / 2)\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            var sum =\
    \ 0l\n            for (i <- n to m) {\n                sum += i\n            }\n\
    \            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n  \
    \      }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }",
  "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n.div(m).floorDiv(2).toString().replace(\"0b\", \"\"))\n\
    \        }", "        if (n > m) return Right(-1l)\n        return Right(n + (m\
    \ - n) / 2)", "        if (n > m) {\n            return Left(\"-1\")\n       \
    \ } else {\n            return Right(n.div(m).round(2).toString().replace(\"0b\"\
    , \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else {\n\
    \            var sum = 0l\n            for (i <- n to m) {\n                sum\
    \ += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round().toString(2))\n        }", "        if (n\
    \ > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n        }", "   \
    \     if (n > m) {\n            return Left(\"-1\")\n        } else {\n      \
    \      return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n    \
    \    }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n.toString.substring(0, n.toString.length - 1) +\n\
    \                \"0b\" +\n                m.toString.substring(n.toString.length\
    \ - 1, m.toString.length)\n            )\n        }", "        if (n > m) {\n\
    \            return Left(\"-1\")\n        } else {\n            return Right(n.div(m).ceil().toString(\"\
    b\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else {\n \
    \           var sum = 0l\n            for (i <- n to m) {\n                sum\
    \ += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }",
  "        if (n > m) return Left(\"-1\")\n        else {\n            val sum = n\
    \ + m\n            val avg = sum / 2\n            val rounded = round(avg)\n \
    \           return Right(rounded.toString(2))\n        }", "        if (n > m)\
    \ {\n            return Left(\"-1\")\n        } else {\n            return Right(n\
    \ + (m - n) / 2)\n        }", "        if (n > m) return Left(\"-1\")\n      \
    \  else {\n            val sum = n + m\n            val avg = (n + m) / 2\n  \
    \          val rounded = avg.toInt.toBinaryString\n            return Right(rounded)\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n + (m - n) / 2)\n        }", "        if (n\
    \ > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n.toString.substring(0, n.toString.length - 1) + \"b\")\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.toString().substring(0, n.toString().length() - 1) + \"\
    b\")\n        }", "        if (n > m) {\n            return Left(\"-1\")\n   \
    \     } else {\n            return Right(n.div(m).ceil().toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            val avg = (n + m) / 2\n            return Right(avg.toString(2))\n\
    \        }", "        if (n > m) return Left(\"-1\")\n        else {\n       \
    \     var sum = 0l\n            for (i <- n to m) {\n                sum += i\n\
    \            }\n            return Right(toBinary(sum / (m - n + 1)))\n      \
    \  }", "        if (n > m) {\n            return Right(-1l)\n        } else {\n\
    \            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n            return\
    \ Left(\"-1\")\n        } else {\n            return Right(n + (m - n) / 2)\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n + (m - n) / 2)\n        }", "        if (n\
    \ > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n            return\
    \ Left(\"-1\")\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }",
  "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n.div(m).ceilDiv(2).toString().replace(\"0\", \"1\").replace(\"\
    1\", \"0\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).round(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n.div(m).ceil().toString(\"b\"))\n        }", "        if (n > m) {\n\
    \            return Left(\"-1\")\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n + (m - n) / 2)\n        }", "        if (n > m) return Left(\"-1\")\n\
    \        else {\n            var sum = 0l\n            for (i <- n to m) {\n \
    \               sum += i\n            }\n            var avg = sum / (m - n +\
    \ 1)\n            return Right(avg.toString().replace(\"0b\", \"\"))\n       \
    \ }", "        if (n > m) return Left(\"-1\")\n        else {\n            var\
    \ sum = 0l\n            for (i <- n to m) {\n                sum += i\n      \
    \      }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n  \
    \          return Left(\"-1\")\n        } else {\n            return Right(n +\
    \ (m - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n + (m - n) / 2)\n        }",
  "        if (n > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n\
    \            for (i <- n to m) {\n                sum += i\n            }\n  \
    \          return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Right(-1l)\n        } else {\n      \
    \      return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n    \
    \        return Left(\"-1\")\n        } else {\n            return Right(n.div(m).round(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            val sum = n + m\n            val avg = (n + m) / 2\n        \
    \    val rounded = avg.toInt.toBinaryString\n            return Right(rounded)\n\
    \        }", "        if (n > m) {\n            return Right(-1l)\n        } else\
    \ {\n            return Right(n + m / 2)\n        }", "        if (n > m) {\n\
    \            return Left(\"-1\")\n        } else {\n            return Right(n.toString.substring(0,\
    \ n.toString.length - 1) + \"b\")\n        }", "        if (n > m) {\n       \
    \     return Left(\"-1\")\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n\
    \ + (m - n) / 2).round(2).toString())\n        }", "        if (n > m) {\n   \
    \         return Left(\"-1\")\n        } else {\n            return Right(n.div(m).floorDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n + (m - n) / 2)\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round().toString(2))\n        }", "        if (n\
    \ > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n       \
    \     for (i <- n to m) {\n                sum += i\n            }\n         \
    \   return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            var sum =\
    \ 0l\n            for (i <- n to m) {\n                sum += i\n            }\n\
    \            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Right(-1l)\n        } else {\n      \
    \      return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString().replace(\".\", \"\").replace(\"\
    -\", \"\").replace(\"+\", \"\"))\n        }", "        if (n > m) {\n        \
    \    return Left(\"-1\")\n        } else {\n            return Right(n.div(m).ceil().toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n + (m - n) / 2)\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n  \
    \      }", "        if (n > m) return Left(\"-1\")\n        else {\n         \
    \   var sum = 0l\n            for (i <- n to m) {\n                sum += i\n\
    \            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Right(-1l)\n        } else {\n      \
    \      return Right(n + m / 2)\n        }", "        if (n > m) {\n          \
    \  return Left(\"-1\")\n        } else {\n            return Right(n.div(m).ceilDiv(2).toString(2))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).round(2).toString().replace(\"0b\"\
    , \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\")\n\
    \        } else {\n            return Right(scala.math.BigDecimal.valueOf(n +\
    \ (m - n) / 2).round(2).toString())\n        }", "        if (n > m) {\n     \
    \       return Left(\"-1\")\n        } else {\n            return Right(n.div(m).floorDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).round().toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.toString.substring(0, n.toString.length\
    \ - 1) + \"b\")\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n + (m - n) / 2)\n        }",
  "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n   \
    \         return Left(\"-1\")\n        } else {\n            return Right(n.div(m).ceil().toString(2))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).roundToInt.toString.map(_.toBinaryString))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n + (m - n) / 2)\n        }", "        if (n\
    \ > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n       \
    \     for (i <- n to m) {\n                sum += i\n            }\n         \
    \   return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) return\
    \ Left(\"-1\")\n        else {\n            var sum = 0l\n            for (i <-\
    \ n to m) {\n                sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }",
  "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n + (m - n) / 2)\n        }", "        if (n > m) return\
    \ Left(\"-1\")\n        else {\n            var sum = 0l\n            for (i <-\
    \ n to m) {\n                sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n  \
    \      }", "        if (n > m) return Left(\"-1\")\n        else {\n         \
    \   val sum = (n + m) / 2\n            val rounded = round(sum)\n            return\
    \ Right(rounded.toString(2))\n        }", "        if (n > m) return Left(\"-1\"\
    )\n        else {\n            var sum = 0l\n            for (i <- n to m) {\n\
    \                sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n  \
    \      }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n + (m - n) / 2)\n        }", "        if (n > m)\
    \ {\n            return Right(-1l)\n        } else {\n            return Right(n\
    \ + (m - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n.div(m).ceil().toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).ceilDiv(2).toString().replace(\"0\", \"\").replace(\"\
    1\", \"1\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).round(2).toString(2))\n\
    \        }", "        if (n > m) return Left(\"-1\")\n        else {\n       \
    \     var sum = 0l\n            for (i <- n to m) {\n                sum += i\n\
    \            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n  \
    \          return Left(\"-1\")\n        } else {\n            return Right(n +\
    \ (m - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n.div(m).ceilDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            var sum =\
    \ 0l\n            for (i <- n to m) {\n                sum += i\n            }\n\
    \            var avg = sum / (m - n + 1)\n            return Right(avg.toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n  \
    \          return Right(-1l)\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n    \
    \        for (i <- n to m) {\n                sum += i\n            }\n      \
    \      var avg = sum / (m - n + 1)\n            return Right(avg.toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) {\n            return Right(-1l)\n        } else {\n            return\
    \ Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString().replace(\"0.\", \"\").replace(\"\
    1.\", \"1\").replace(\"2.\", \"10\").replace(\"3.\", \"11\").replace(\"4.\", \"\
    100\").replace(\"5.\", \"101\").replace(\"6.\", \"110\").replace(\"7.\", \"111\"\
    ).replace(\"8.\", \"1000\").replace(\"9.\", \"1001\").replace(\"10.\", \"1010\"\
    ).replace(\"11.\", \"1011\").replace(\"12.\", \"1100\").replace(\"13.\", \"1101\"\
    ).replace(\"14.\", \"1110\").replace(\"15.\", \"1111\").replace(\"16.\", \"10000\"\
    ).replace(\"17.\", \"10001\").replace(\"18.\", \"10010\").replace(\"19.\", \"\
    10011\").replace(\"20.\", \"10100\").replace(\"21.\", \"10101\").replace(\"22.\"\
    , \"10110\").replace(\"23.\", \"10111\").replace(\"24.\", \"11000\").replace(\"\
    25.\", \"11001\").replace(\"26.\", \"11010\").replace(\"27.\", \"11011\").replace(\"\
    28.\", \"11100\").replace(\"29.\", \"11101\").replace(\"30.\", \"11110\").replace(\"\
    31.\", \"11111\").replace(\"32.\", \"100000\").replace(\"33.\", \"100001\").replace(\"\
    34.\", \"100010\").replace(\"35.\", \"100011\").replace(\"36.\", \"100100\").replace(\"\
    37.\", \"100101\").replace(\"38.\", \"100110\").replace(\"39.\", \"100111\").replace(\"\
    40.\", \"101000\").replace(\"41.\", \"101001\").replace(\"42.\", \"101010\").replace(\"\
    43.\", \"101011\").replace(\"44.\", \"101100\").replace(\"45.\", \"101101\").replace(\"\
    46.\", \"101110\").replace(\"47.\", \"101111\").replace(\"48.\", \"110000\").replace(\"\
    49.\", \"110001\").replace(\"50.\", \"110010\").replace(\"51.\", \"110011\").replace(\"\
    52.\", \"110100\").replace(\"53.\", \"110101\").replace(\"54.\", \"110110\").replace(\"\
    55.\",", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n + (m - n) / 2)\n        }", "        if (n > m)\
    \ return Left(\"-1\")\n        else {\n            var sum = 0l\n            for\
    \ (i <- n to m) {\n                sum += i\n            }\n            return\
    \ Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).longValue())\n        }",
  "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n + (m - n) / 2)\n        }", "        if (n > m) return\
    \ Left(\"-1\")\n        else {\n            var sum = 0l\n            for (i <-\
    \ n to m) {\n                sum += i\n            }\n            var avg = sum\
    \ / (m - n + 1)\n            return Right(avg.toString().replace(\"0b\", \"\"\
    ))\n        }", "        if (n > m) {\n            return Left(\"-1\")\n     \
    \   } else {\n            return Right(n.div(m).round(2).toString())\n       \
    \ }", "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n\
    \            return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).round().toString().replace(\"0b\"\
    , \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else {\n\
    \            var sum = 0l\n            for (i <- n to m) {\n                sum\
    \ += i\n            }\n            var avg = sum / (m - n + 1)\n            return\
    \ Right(avg.toString().replace(\"0b\", \"\"))\n        }", "        if (n > m)\
    \ return Left(\"-1\")\n        else {\n            var sum = 0l\n            for\
    \ (i <- n to m) {\n                sum += i\n            }\n            return\
    \ Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n  \
    \          return Left(\"-1\")\n        } else {\n            return Right(n.div(m).round(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            val sum = n + m\n            val avg = sum / 2\n            val\
    \ rounded = round(avg)\n            return Right(rounded.toString())\n       \
    \ }", "        if (n > m) {\n            return Left(\"-1\")\n        } else {\n\
    \            return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n\
    \            return Left(\"-1\")\n        } else {\n            return Right(n\
    \ + (m - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n + (m - n) / 2)\n        }",
  "        if (n > m) return Left(\"-1\")\n        else {\n            val sum = (n\
    \ + m) / 2\n            val rounded = round(sum)\n            val binary = binary(rounded)\n\
    \            return Right(binary)\n        }", "        if (n > m) {\n       \
    \     return Right(-1l)\n        } else {\n            return Right(n + m / 2)\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).round(2).toString().replace(\"0b\"\
    , \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else {\n\
    \            var sum = 0l\n            for (i <- n to m) {\n                sum\
    \ += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n  \
    \          return Left(\"-1\")\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n            return\
    \ Left(\"-1\")\n        } else {\n            return Right(n.toString.substring(0,\
    \ n.toString.length - 1) + \"b\")\n        }", "        if (n > m) {\n       \
    \     return Left(\"-1\")\n        } else {\n            return Right(n.div(m).round(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).floorDiv(2).toString().replace(\"0b\", \"\"))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n + (m - n) / 2)\n        }", "        if (n\
    \ > m) return Left(\"-1\")\n        else {\n            var sum = 0l\n       \
    \     for (i <- n to m) {\n                sum += i\n            }\n         \
    \   return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n  \
    \          return Left(\"-1\")\n        } else {\n            return Right(n +\
    \ (m - n) / 2)\n        }", "        if (n > m) {\n            return Left(\"\
    -1\")\n        } else {\n            return Right(n.div(m).ceilDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).ceilDiv(2).toString(2))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(n.div(m).round(2).toString().replace(\"0b\"\
    , \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\")\n\
    \        } else {\n            return Right(n + (m - n) / 2)\n        }", "  \
    \      if (n > m) {\n            return Left(\"-1\")\n        } else {\n     \
    \       return Right(n + (m - n) / 2)\n        }", "        if (n > m) {\n   \
    \         return Left(\"-1\")\n        } else {\n            return Right(n +\
    \ (m - n) / 2)\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            var sum =\
    \ 0l\n            for (i <- n to m) {\n                sum += i\n            }\n\
    \            var avg = sum / (m - n + 1)\n            return Right(avg.toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            val sum =\
    \ n + m\n            val avg = sum / 2\n            val rounded = round(avg)\n\
    \            return Right(rounded.toString())\n        }", "        if (n > m)\
    \ {\n            return Right(-1l)\n        } else {\n            return Right(scala.math.BigInt.fromLong(n).divide(scala.math.BigInt.fromLong(m)).round(scala.math.BigInt.fromLong(2)).toString().replace(\"\
    0b\", \"\").replace(\"1\", \"1\").replace(\"0\", \"0\"))\n        }", "      \
    \  if (n > m) return Left(\"-1\")\n        else {\n            val sum = n + m\n\
    \            val avg = sum / 2\n            return Right(avg.toString(2))\n  \
    \      }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n + (m - n) / 2)\n        }", "        if (n > m)\
    \ {\n            return Left(\"-1\")\n        } else {\n            return Right(n\
    \ + (m - n) / 2)\n        }", "        if (n > m) return Left(\"-1\")\n      \
    \  else {\n            val sum = (n + m) / 2\n            val rounded = round(sum)\n\
    \            return Right(rounded.toString(2))\n        }", "        if (n > m)\
    \ {\n            return Right(-1l)\n        } else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString().replace(\"0.\", \"\").replace(\"\
    1.\", \"1\").replace(\"2.\", \"10\").replace(\"3.\", \"11\").replace(\"4.\", \"\
    100\").replace(\"5.\", \"101\").replace(\"6.\", \"110\").replace(\"7.\", \"111\"\
    ).replace(\"8.\", \"1000\").replace(\"9.\", \"1001\").replace(\"10.\", \"1010\"\
    ).replace(\"11.\", \"1011\").replace(\"12.\", \"1100\").replace(\"13.\", \"1101\"\
    ).replace(\"14.\", \"1110\").replace(\"15.\", \"1111\").replace(\"16.\", \"10000\"\
    ).replace(\"17.\", \"10001\").replace(\"18.\", \"10010\").replace(\"19.\", \"\
    10011\").replace(\"20.\", \"10100\").replace(\"21.\", \"10101\").replace(\"22.\"\
    , \"10110\").replace(\"23.\", \"10111\").replace(\"24.\", \"11000\").replace(\"\
    25.\", \"11001\").replace(\"26.\", \"11010\").replace(\"27.\", \"11011\").replace(\"\
    28.\", \"11100\").replace(\"29.\", \"11101\").replace(\"30.\", \"11110\").replace(\"\
    31.\", \"11111\").replace(\"32.\", \"100000\").replace(\"33.\", \"100001\").replace(\"\
    34.\", \"100010\").replace(\"35.\", \"100011\").replace(\"36.\", \"100100\").replace(\"\
    37.\", \"100101\").replace(\"38.\", \"100110\").replace(\"39.\", \"100111\").replace(\"\
    40.\", \"101000\").replace(\"41.\", \"101001\").replace(\"42.\", \"101010\").replace(\"\
    43.\", \"101011\").replace(\"44.\", \"101100\").replace(\"45.\", \"101101\").replace(\"\
    46.\", \"101110\").replace(\"47.\", \"101111\").replace(\"48.\", \"110000\").replace(\"\
    49.\", \"110001\").replace(\"50.\", \"110010\").replace(\"51.\", \"110011\").replace(\"\
    52.\", \"110100\").replace(\"53.\", \"110101\").replace(\"54.\", \"110110\").replace(\"\
    55.\",", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n + (m - n) / 2)\n        }", "        if (n > m)\
    \ {\n            return Left(\"-1\")\n        } else {\n            return Right(n\
    \ + (m - n) / 2)\n        }", "        if (n > m) return Left(\"-1\")\n      \
    \  else {\n            var sum = 0l\n            for (i <- n to m) {\n       \
    \         sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) return Left(\"-1\")\n        else {\n            var sum =\
    \ 0l\n            for (i <- n to m) {\n                sum += i\n            }\n\
    \            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n  \
    \      }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n.div(m).ceilDiv(2).toString().replace(\"0b\", \"\
    \"))\n        }", "        if (n > m) return Left(\"-1\")\n        else {\n  \
    \          var sum = 0l\n            for (i <- n to m) {\n                sum\
    \ += i\n            }\n            var avg = sum / (m - n + 1)\n            return\
    \ Right(avg.toString(2))\n        }", "        if (n > m) {\n            return\
    \ Left(\"-1\")\n        } else {\n            return Right(n.div(m).floorDiv(2).toString(2))\n\
    \        }", "        if (n > m) {\n            return Left(\"-1\")\n        }\
    \ else {\n            return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) {\n            return Left(\"-1\")\n        } else {\n            return\
    \ Right(n.div(m).round(2).toString().replace(\"0b\", \"\"))\n        }", "   \
    \     if (n > m) {\n            return Left(\"-1\")\n        } else {\n      \
    \      return Right(n.div(m).ceilDiv(2).toString().replace(\"0b\", \"\"))\n  \
    \      }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n + (m - n) / 2)\n        }", "        if (n > m)\
    \ {\n            return Left(\"-1\")\n        } else {\n            return Right(n.div(m).floorDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            val sum = (n + m) / 2\n            val rounded = round(sum)\n\
    \            return Right(rounded.toString(2))\n        }", "        if (n > m)\
    \ {\n            return Left(\"-1\")\n        } else {\n            return Right(n.div(m).ceil().toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) return Left(\"-1\")\n        else\
    \ {\n            var sum = 0l\n            for (i <- n to m) {\n             \
    \   sum += i\n            }\n            return Right(scala.math.BigDecimal.valueOf(sum).divide(scala.math.BigDecimal.valueOf(m\
    \ - n + 1), 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(scala.math.BigDecimal.valueOf(n).divide(scala.math.BigDecimal.valueOf(m),\
    \ 2, scala.math.BigDecimal.ROUND_HALF_UP).toString())\n        }", "        if\
    \ (n > m) return Left(\"-1\")\n        else {\n            val sum = n + m\n \
    \           val avg = (n + m) / 2\n            val rounded = avg.toInt.toBinaryString\n\
    \            return Right(rounded)\n        }", "        if (n > m) {\n      \
    \      return Left(\"-1\")\n        } else {\n            return Right(n.div(m).floorDiv(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n.div(m).round().toString.map(_.toBinaryString).getOrElse(\"\
    0b0\"))\n        }", "        if (n > m) {\n            return Left(\"-1\")\n\
    \        } else {\n            return Right(n.div(m).ceilDiv(2).toString().replace(\"\
    0b\", \"\").replace(\"1\", \"1\").replace(\"0\", \"0\"))\n        }", "      \
    \  if (n > m) {\n            return Right(-1l)\n        } else {\n           \
    \ return Right(scala.math.BigDecimal.valueOf(n + (m - n) / 2).round(2).toString().replace(\"\
    0b\", \"\"))\n        }", "        if (n > m) {\n            return Left(\"-1\"\
    )\n        } else {\n            return Right(n + (m - n) / 2)\n        }", " \
    \       if (n > m) {\n            return Left(\"-1\")\n        } else {\n    \
    \        return Right(n.div(m).ceil().toString().replace(\"0b\", \"\"))\n    \
    \    }", "        if (n > m) {\n            return Left(\"-1\")\n        } else\
    \ {\n            return Right(n.div(m).round(2).toString().replace(\"0b\", \"\"\
    ))\n        }"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_55_fib",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string list.\n    // >>> fibListStr((10l))\n    // ['55', '1', '8']\n    // >>> fibListStr((1l))\n    // ['1', '1', '1']\n    // >>> fibListStr((8l))\n    // ['21', '1', '8']\n    def fibListStr(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListStr(n - 1) + fibListStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListStrStr((10l))\n    // ['55', '1', '8']\n    // >>> fibListStrStr((1l))\n    // ['1', '\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1xpvffgz.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1xpvffgz.scala:45:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fibList(n - \u001b[31m1\u001b[0m) + fibList(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1xpvffgz.scala:60:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fibListStr(n - \u001b[31m1\u001b[0m) + fibListStr(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[String], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1xpvffgz.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1xpvffgz.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using Java's BigInteger.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1).add(fib2(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1).add(fib3(n - 2))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpinptbuo3.scala:30:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m            \u001b[33mreturn\u001b[0m fib2(n - \u001b[31m1\u001b[0m).add(fib2(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpinptbuo3.scala:45:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fib3(n - \u001b[31m1\u001b[0m).add(fib3(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp13qp54j9.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:28:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:43:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:58:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:73:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion.\n    // >>> fib_rec((10l))\n    // (55l)\n    // >>> fib_rec((1l))\n    // (1l)\n    // >>> fib_rec((8l))\n    // (21l)\n    def fib_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_rec(n - 1) + fib_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration.\n    // >>> fib_iter((10l))\n    // (55l)\n    // >>> fib_iter((1l))\n    // (1l)\n    // >>> fib_iter((8l))\n    // (21l)\n    def fib_iter(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            var result = 0l\n            for (var i = 0; i < n - 1; i++) {\n                result = result + fib(i)\n            }\n            return result\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion and tail call optimization.\n    // >>> fib_tail_rec((10l))\n    // (55l)\n    // >>> fib_tail_rec((1l))\n    // (1l)\n    // >>> fib_tail_rec((8l))\n    // (21l)\n    def fib_tail_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_tail_rec(n - 1) + fib_tail_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration and tail call optimization.\n    // >>> fib_tail_iter((10l))\n    // (55l)\n    // >>> fib_tail_iter((1l))\n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpdrfxt__4.scala:46:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < n - \u001b[31m1\u001b[0m; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdrfxt__4.scala:46:37 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < n - \u001b[31m1\u001b[0m; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                     '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpdrfxt__4.scala:46:42 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < n - \u001b[31m1\u001b[0m; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdrfxt__4.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdrfxt__4.scala:46:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < n - \u001b[31m1\u001b[0m; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asSca",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphzygn2xr.scala:75:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m fib5(n - \u001b[31m1\u001b[0m) + fib5(n -\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphzygn2xr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzygn2xr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphzygn2xr.scala:77:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m77 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_string((10l))\n    // '55'\n    // >>> fib_string((1l))\n    // '1'\n    // >>> fib_string((8l))\n    // '21'\n    def fib_string(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_string(n - 1) + fib_string(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8, 3, 2, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 419430985, 671088643, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeppv899q.scala:46:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeppv899q.scala:39:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeppv899q.scala:40:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeppv899q.scala:41:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(fib((\u001b[31m8l\u001b[0m)) == (\u001b[31m21l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeppv899q.scala:42:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(fib((\u001b[31m11l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeppv899q.scala:43:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(fib((\u001b[31m12l\u001b[0m)) == (\u001b[31m144l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr2((10l))\n    // '55'\n    // >>> fibStr2((1l))\n    // '1'\n    // >>> fibStr2((8l))\n    // '21'\n    def fibStr2(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr2(n - 1) + fibStr2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr3((10l))\n    // '55'\n    // >>> fibStr3((1l))\n    // '1'\n    // >>> fibStr3((8l))\n    // '21'\n    def fibStr3(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr3(n - 1) + fibStr3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr4((10l))\n    // '55'\n    // >>> fibStr4((1l))\n    // '1'\n    // >>> fibStr4((8l))\n    // '21'\n    def fibStr4(n : Long) : String = {\n        if (n < 2) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9loszsd8.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9loszsd8.scala:83:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp9loszsd8.scala:75:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m75 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using Java's BigInteger.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1).add(fib2(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1).add(fib3(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1).add(fib4(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmtaw_g5u.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmtaw_g5u.scala:30:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m            \u001b[33mreturn\u001b[0m fib2(n - \u001b[31m1\u001b[0m).add(fib2(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmtaw_g5u.scala:45:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fib3(n - \u001b[31m1\u001b[0m).add(fib3(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmtaw_g5u.scala:60:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fib4(n - \u001b[31m1\u001b[0m).add(fib4(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmtaw_g5u.scala:83:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpmtaw_g5u.scala:75:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m75 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibString((10l))\n    // '55'\n    // >>> fibString((1l))\n    // '1'\n    // >>> fibString((8l))\n    // '21'\n    def fibString(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibString(n - 1) + fibString(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8, 3, 2, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 419430985, 671088643, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 3080615211701\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppyhkz98c.scala:46:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppyhkz98c.scala:39:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppyhkz98c.scala:40:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppyhkz98c.scala:41:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(fib((\u001b[31m8l\u001b[0m)) == (\u001b[31m21l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppyhkz98c.scala:42:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(fib((\u001b[31m11l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppyhkz98c.scala:43:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(fib((\u001b[31m12l\u001b[0m)) == (\u001b[31m144l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp13qp54j9.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:28:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:43:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:58:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:73:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using Java's BigInteger.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1).add(fib2(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1).add(fib3(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1).add(fib4(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmtaw_g5u.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmtaw_g5u.scala:30:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m            \u001b[33mreturn\u001b[0m fib2(n - \u001b[31m1\u001b[0m).add(fib2(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmtaw_g5u.scala:45:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fib3(n - \u001b[31m1\u001b[0m).add(fib3(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmtaw_g5u.scala:60:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fib4(n - \u001b[31m1\u001b[0m).add(fib4(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value add is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmtaw_g5u.scala:83:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpmtaw_g5u.scala:75:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m75 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // '[55, 1, 8]'\n    // >>> fibList((1l))\n    // '[1, 1]'\n    // >>> fibList((8l))\n    // '[21, 1, 5]'\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListStr((10l))\n    // '[\"55\", \"1\", \"8\"]'\n    // >>> fibListStr((1l))\n    // '[\"1\", \"1\"]'\n    // >>> fibListStr((8l))\n    // '[\"21\", \"1\", \"5\"]'\n    def fibListStr(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListStr(n - 1) + fibListStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of lists.\n    // >>> fibListList((10l))\n    // [[55, 1, 8], [1, 1], [8, 1, 5]]\n    // >>> fibListList((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuuph6jwv.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuuph6jwv.scala:45:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fibList(n - \u001b[31m1\u001b[0m) + fibList(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuuph6jwv.scala:60:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fibListStr(n - \u001b[31m1\u001b[0m) + fibListStr(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[String], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuuph6jwv.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuuph6jwv.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp13qp54j9.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:28:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:43:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:58:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:73:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp13qp54j9.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:28:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:43:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:58:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:73:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_2((10l))\n    // '55'\n    // >>> fib_str_2((1l))\n    // '1'\n    // >>> fib_str_2((8l))\n    // '21'\n    def fib_str_2(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_2(n - 1) + fib_str_2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_3((10l))\n    // '55'\n    // >>> fib_str_3((1l))\n    // '1'\n    // >>> fib_str_3((8l))\n    // '21'\n    def fib_str_3(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_3(n - 1) + fib_str_3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_4((10l))\n    // '55'\n    // >>> fib_str_4((1l))\n    // '1'\n    // >>> fib_str_4\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyhu8xxot.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:74:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m    assert(fib((\u001b[31m8l\u001b[0m)) == (\u001b[31m21l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:75:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m    assert(fib((\u001b[31m11l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:76:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m    assert(fib((\u001b[31m12l\u001b[0m)) == (\u001b[31m144l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8]\n    // >>> fib_list((1l))\n    // [1]\n    // >>> fib_list((8l))\n    // [21, 1, 5, 1, 4, 1, 3, 1, 2]\n    def fib_list(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fib_list(n - 1) + fib_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fib_str_list((10l))\n    // ['55', '1', '8']\n    // >>> fib_str_list((1l))\n    // ['1']\n    // >>> fib_str_list((8l))\n    // ['21', '1', '5', '1', '4', '1', '3', '1', '2']\n    def fib_str_list(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fib_str_list(n - 1) + fib_str_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2vsx5wbr.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2vsx5wbr.scala:45:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fib_list(n - \u001b[31m1\u001b[0m) + fib_list(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2vsx5wbr.scala:60:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fib_str_list(n - \u001b[31m1\u001b[0m) + fib_str_list(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[String], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vsx5wbr.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vsx5wbr.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion.\n    // >>> fib_rec((10l))\n    // (55l)\n    // >>> fib_rec((1l))\n    // (1l)\n    // >>> fib_rec((8l))\n    // (21l)\n    def fib_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_rec(n - 1) + fib_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration.\n    // >>> fib_iter((10l))\n    // (55l)\n    // >>> fib_iter((1l))\n    // (1l)\n    // >>> fib_iter((8l))\n    // (21l)\n    def fib_iter(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            var a = 0\n            var b = 1\n            for (var i = 2; i <= n; i++) {\n                a, b = b, a + b\n            }\n            return a\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion with tail call optimization.\n    // >>> fib_tail_rec((10l))\n    // (55l)\n    // >>> fib_tail_rec((1l))\n    // (1l)\n    // >>> fib_tail_rec((8l))\n    // (21l)\n    def fib_tail_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_tail_rec(n - 1) + fib_tail_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration with tail call optimization.\n    // >>> fib_tail_iter((10l))\n    // (55l)\n    // >>> fib_tail_iter((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp_0qnv3uz.scala:47:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_0qnv3uz.scala:47:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp_0qnv3uz.scala:47:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_0qnv3uz.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_0qnv3uz.scala:47:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitCo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp13qp54j9.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:28:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:43:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:58:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:73:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListStr((10l))\n    // ['55', '1', '8']\n    // >>> fibListStr((1l))\n    // ['1', '1', '1']\n    // >>> fibListStr((8l))\n    // ['21', '1', '8']\n    def fibListStr(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListStr(n - 1) + fibListStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of lists.\n    // >>> fibListList((10l))\n    // [[55], [1], [8]]\n    // >>> fibListList((1l))\n    // [[1], [1\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpym51es80.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpym51es80.scala:45:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fibList(n - \u001b[31m1\u001b[0m) + fibList(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpym51es80.scala:60:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fibListStr(n - \u001b[31m1\u001b[0m) + fibListStr(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[String], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpym51es80.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpym51es80.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphzygn2xr.scala:75:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m fib5(n - \u001b[31m1\u001b[0m) + fib5(n -\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphzygn2xr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzygn2xr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphzygn2xr.scala:77:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m77 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8, 3, 2, 1, 1, 2, 1, 1]\n    // >>> fib_list((1l))\n    // [1]\n    // >>> fib_list((8l))\n    // [21, 1, 1, 2, 1, 1, 2, 1, 1]\n    def fib_list(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fib_list(n - 1) + fib_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fib_str_list((10l))\n    // ['55', '1', '8', '3', '2', '1', '1', '2', '1', '1']\n    // >>> fib_str_list((1l))\n    // ['1']\n    // >>> fib_str_list((8l))\n    // ['21', '1', '1', '2', '1', '1', '2', '1', '1']\n    def fib_str_list(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fib_str_list(n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuo8sv9t7.scala:61:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuo8sv9t7.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuo8sv9t7.scala:45:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fib_list(n - \u001b[31m1\u001b[0m) + fib_list(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuo8sv9t7.scala:70:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpuo8sv9t7.scala:62:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibString((10l))\n    // '55'\n    // >>> fibString((1l))\n    // '1'\n    // >>> fibString((8l))\n    // '21'\n    def fibString(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibString(n - 1) + fibString(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListString((10l))\n    // ['55', '1', '8']\n    // >>> fibListString((1l))\n    // ['1', '1', '1']\n    // >>> fibListString((8l))\n    // ['21', '1', '8']\n    def fibListString(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListString(n - 1) + fibListString(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of lists.\n    // >>> fibListList((10l))\n    // [[55, 1, 8], [1, 1, 1], [8, 1, 8]]\n    // >>> fibListList\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsosvb01r.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsosvb01r.scala:45:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fibList(n - \u001b[31m1\u001b[0m) + fibList(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsosvb01r.scala:60:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fibListString(n - \u001b[31m1\u001b[0m) + fibListString(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[String], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsosvb01r.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsosvb01r.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp13qp54j9.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:28:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:43:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:58:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp13qp54j9.scala:73:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp13qp54j9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphzygn2xr.scala:75:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m fib5(n - \u001b[31m1\u001b[0m) + fib5(n -\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphzygn2xr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzygn2xr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphzygn2xr.scala:77:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m77 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a tuple.\n    // >>> fibTuple((10l))\n    // (55, 1, 8)\n    // >>> fibTuple((1l))\n    // (1, 1, 1)\n    // >>> fibTuple((8l))\n    // (21, 1, 8)\n    def fibTuple(n : Long) : Tuple[Long] = {\n        if (n < 2) {\n            return Tuple(n)\n        } else {\n            return fibTuple(n - 1) + fibTuple(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a map.\n    // >>> fibMap((10l))\n    // Map(55 -> 1, 1 -> 1, 8 -> 1)\n    // >>> fibMap((1l))\n    // Map(1 -> 1, 1 -> 1, 1 -> 1\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppw_1wi7w.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppw_1wi7w.scala:45:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fibList(n - \u001b[31m1\u001b[0m) + fibList(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E053] Type Error: /tmp/tmppw_1wi7w.scala:56:29 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mfibTuple\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mTuple\u001b[0m[\u001b[35mLong\u001b[0m] = {\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Tuple does not take type parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppw_1wi7w.scala:60:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fibTuple(n - \u001b[31m1\u001b[0m) + fibTuple(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of Tuple, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppw_1wi7w.scala:71:11 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_2((10l))\n    // '55'\n    // >>> fib_str_2((1l))\n    // '1'\n    // >>> fib_str_2((8l))\n    // '21'\n    def fib_str_2(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_2(n - 1) + fib_str_2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_3((10l))\n    // '55'\n    // >>> fib_str_3((1l))\n    // '1'\n    // >>> fib_str_3((8l))\n    // '21'\n    def fib_str_3(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_3(n - 1) + fib_str_3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_4((10l))\n    // '55'\n    // >>> fib_str_4((1l))\n    // '1'\n    // >>> fib_str_4\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyhu8xxot.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(fib((\u001b[31m10l\u001b[0m)) == (\u001b[31m55l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(fib((\u001b[31m1l\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:74:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m    assert(fib((\u001b[31m8l\u001b[0m)) == (\u001b[31m21l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:75:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m    assert(fib((\u001b[31m11l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhu8xxot.scala:76:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m    assert(fib((\u001b[31m12l\u001b[0m)) == (\u001b[31m144l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphzygn2xr.scala:75:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m fib5(n - \u001b[31m1\u001b[0m) + fib5(n -\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphzygn2xr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzygn2xr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphzygn2xr.scala:77:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m77 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphzygn2xr.scala:75:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m fib5(n - \u001b[31m1\u001b[0m) + fib5(n -\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphzygn2xr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzygn2xr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphzygn2xr.scala:77:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m77 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3bbplfj9.scala:19)\n\tat Problem.main(tmp3bbplfj9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293422,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphzygn2xr.scala:75:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m fib5(n - \u001b[31m1\u001b[0m) + fib5(n -\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphzygn2xr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzygn2xr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphzygn2xr.scala:77:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m77 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion.\n    // >>> fib_rec((10l))\n    // (55l)\n    // >>> fib_rec((1l))\n    // (1l)\n    // >>> fib_rec((8l))\n    // (21l)\n    def fib_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_rec(n - 1) + fib_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration.\n    // >>> fib_iter((10l))\n    // (55l)\n    // >>> fib_iter((1l))\n    // (1l)\n    // >>> fib_iter((8l))\n    // (21l)\n    def fib_iter(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            var a = 0\n            var b = 1\n            for (var i = 2; i <= n; i++) {\n                a, b = b, a + b\n            }\n            return a\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion and tail call optimization.\n    // >>> fib_tail((10l))\n    // (55l)\n    // >>> fib_tail((1l))\n    // (1l)\n    // >>> fib_tail((8l))\n    // (21l)\n    def fib_tail(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_tail(n - 1) + fib_tail(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using tail call optimization.\n    // >>> fib_tail_call((10l))\n    // (55l)\n    // >>> fib_tail_call((1l))\n    // (1l)\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpqlx5hjuc.scala:47:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqlx5hjuc.scala:47:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpqlx5hjuc.scala:47:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqlx5hjuc.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqlx5hjuc.scala:47:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitCo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8]\n    // >>> fib_list((1l))\n    // [1, 1, 1]\n    // >>> fib_list((8l))\n    // [21, 1, 8]\n    def fib_list(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fib_list(n - 1) + fib_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a tuple.\n    // >>> fib_tuple((10l))\n    // (55, 1, 8)\n    // >>> fib_tuple((1l))\n    // (1, 1, 1)\n    // >>> fib_tuple((8l))\n    // (21, 1, 8)\n    def fib_tuple(n : Long) : Tuple[Long] = {\n        if (n < 2) {\n            return Tuple(n)\n        } else {\n            return fib_tuple(n - 1) + fib_tuple(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a stream.\n    // >>> fib_stream((10l))\n    // 55\n    // >>> fib_stream((1l))\n    // 1\n    // >>> fib\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293423,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4qbp2b_q.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4qbp2b_q.scala:45:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m fib_list(n - \u001b[31m1\u001b[0m) + fib_list(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E053] Type Error: /tmp/tmp4qbp2b_q.scala:56:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mfib_tuple\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mTuple\u001b[0m[\u001b[35mLong\u001b[0m] = {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Tuple does not take type parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4qbp2b_q.scala:60:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mreturn\u001b[0m fib_tuple(n - \u001b[31m1\u001b[0m) + fib_tuple(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of Tuple, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4qbp2b_q.scala:72:11 ------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "timestamp": 1664293421,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "HumanEval_55_fib",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def fib(n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
  "completions": [
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string list.\n    // >>> fibListStr((10l))\n    // ['55', '1', '8']\n    // >>> fibListStr((1l))\n    // ['1', '1', '1']\n    // >>> fibListStr((8l))\n    // ['21', '1', '8']\n    def fibListStr(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListStr(n - 1) + fibListStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListStrStr((10l))\n    // ['55', '1', '8']\n    // >>> fibListStrStr((1l))\n    // ['1', '",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using Java's BigInteger.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1).add(fib2(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1).add(fib3(n - 2))\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion.\n    // >>> fib_rec((10l))\n    // (55l)\n    // >>> fib_rec((1l))\n    // (1l)\n    // >>> fib_rec((8l))\n    // (21l)\n    def fib_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_rec(n - 1) + fib_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration.\n    // >>> fib_iter((10l))\n    // (55l)\n    // >>> fib_iter((1l))\n    // (1l)\n    // >>> fib_iter((8l))\n    // (21l)\n    def fib_iter(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            var result = 0l\n            for (var i = 0; i < n - 1; i++) {\n                result = result + fib(i)\n            }\n            return result\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion and tail call optimization.\n    // >>> fib_tail_rec((10l))\n    // (55l)\n    // >>> fib_tail_rec((1l))\n    // (1l)\n    // >>> fib_tail_rec((8l))\n    // (21l)\n    def fib_tail_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_tail_rec(n - 1) + fib_tail_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration and tail call optimization.\n    // >>> fib_tail_iter((10l))\n    // (55l)\n    // >>> fib_tail_iter((1l))\n",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_string((10l))\n    // '55'\n    // >>> fib_string((1l))\n    // '1'\n    // >>> fib_string((8l))\n    // '21'\n    def fib_string(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_string(n - 1) + fib_string(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8, 3, 2, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 419430985, 671088643, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr2((10l))\n    // '55'\n    // >>> fibStr2((1l))\n    // '1'\n    // >>> fibStr2((8l))\n    // '21'\n    def fibStr2(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr2(n - 1) + fibStr2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr3((10l))\n    // '55'\n    // >>> fibStr3((1l))\n    // '1'\n    // >>> fibStr3((8l))\n    // '21'\n    def fibStr3(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr3(n - 1) + fibStr3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr4((10l))\n    // '55'\n    // >>> fibStr4((1l))\n    // '1'\n    // >>> fibStr4((8l))\n    // '21'\n    def fibStr4(n : Long) : String = {\n        if (n < 2) {\n            ",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using Java's BigInteger.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1).add(fib2(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1).add(fib3(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1).add(fib4(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibString((10l))\n    // '55'\n    // >>> fibString((1l))\n    // '1'\n    // >>> fibString((8l))\n    // '21'\n    def fibString(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibString(n - 1) + fibString(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8, 3, 2, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 419430985, 671088643, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 3080615211701",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using Java's BigInteger.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1).add(fib2(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1).add(fib3(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1).add(fib4(n - 2))\n        }\n    }\n\n    // Return n-th Fibonacci number using Scala's BigInt.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // '[55, 1, 8]'\n    // >>> fibList((1l))\n    // '[1, 1]'\n    // >>> fibList((8l))\n    // '[21, 1, 5]'\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListStr((10l))\n    // '[\"55\", \"1\", \"8\"]'\n    // >>> fibListStr((1l))\n    // '[\"1\", \"1\"]'\n    // >>> fibListStr((8l))\n    // '[\"21\", \"1\", \"5\"]'\n    def fibListStr(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListStr(n - 1) + fibListStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of lists.\n    // >>> fibListList((10l))\n    // [[55, 1, 8], [1, 1], [8, 1, 5]]\n    // >>> fibListList((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_2((10l))\n    // '55'\n    // >>> fib_str_2((1l))\n    // '1'\n    // >>> fib_str_2((8l))\n    // '21'\n    def fib_str_2(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_2(n - 1) + fib_str_2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_3((10l))\n    // '55'\n    // >>> fib_str_3((1l))\n    // '1'\n    // >>> fib_str_3((8l))\n    // '21'\n    def fib_str_3(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_3(n - 1) + fib_str_3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_4((10l))\n    // '55'\n    // >>> fib_str_4((1l))\n    // '1'\n    // >>> fib_str_4",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8]\n    // >>> fib_list((1l))\n    // [1]\n    // >>> fib_list((8l))\n    // [21, 1, 5, 1, 4, 1, 3, 1, 2]\n    def fib_list(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fib_list(n - 1) + fib_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fib_str_list((10l))\n    // ['55', '1', '8']\n    // >>> fib_str_list((1l))\n    // ['1']\n    // >>> fib_str_list((8l))\n    // ['21', '1', '5', '1', '4', '1', '3', '1', '2']\n    def fib_str_list(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fib_str_list(n - 1) + fib_str_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion.\n    // >>> fib_rec((10l))\n    // (55l)\n    // >>> fib_rec((1l))\n    // (1l)\n    // >>> fib_rec((8l))\n    // (21l)\n    def fib_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_rec(n - 1) + fib_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration.\n    // >>> fib_iter((10l))\n    // (55l)\n    // >>> fib_iter((1l))\n    // (1l)\n    // >>> fib_iter((8l))\n    // (21l)\n    def fib_iter(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            var a = 0\n            var b = 1\n            for (var i = 2; i <= n; i++) {\n                a, b = b, a + b\n            }\n            return a\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion with tail call optimization.\n    // >>> fib_tail_rec((10l))\n    // (55l)\n    // >>> fib_tail_rec((1l))\n    // (1l)\n    // >>> fib_tail_rec((8l))\n    // (21l)\n    def fib_tail_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_tail_rec(n - 1) + fib_tail_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration with tail call optimization.\n    // >>> fib_tail_iter((10l))\n    // (55l)\n    // >>> fib_tail_iter((",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListStr((10l))\n    // ['55', '1', '8']\n    // >>> fibListStr((1l))\n    // ['1', '1', '1']\n    // >>> fibListStr((8l))\n    // ['21', '1', '8']\n    def fibListStr(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListStr(n - 1) + fibListStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of lists.\n    // >>> fibListList((10l))\n    // [[55], [1], [8]]\n    // >>> fibListList((1l))\n    // [[1], [1",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8, 3, 2, 1, 1, 2, 1, 1]\n    // >>> fib_list((1l))\n    // [1]\n    // >>> fib_list((8l))\n    // [21, 1, 1, 2, 1, 1, 2, 1, 1]\n    def fib_list(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fib_list(n - 1) + fib_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fib_str_list((10l))\n    // ['55', '1', '8', '3', '2', '1', '1', '2', '1', '1']\n    // >>> fib_str_list((1l))\n    // ['1']\n    // >>> fib_str_list((8l))\n    // ['21', '1', '1', '2', '1', '1', '2', '1', '1']\n    def fib_str_list(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fib_str_list(n",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibString((10l))\n    // '55'\n    // >>> fibString((1l))\n    // '1'\n    // >>> fibString((8l))\n    // '21'\n    def fibString(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibString(n - 1) + fibString(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of strings.\n    // >>> fibListString((10l))\n    // ['55', '1', '8']\n    // >>> fibListString((1l))\n    // ['1', '1', '1']\n    // >>> fibListString((8l))\n    // ['21', '1', '8']\n    def fibListString(n : Long) : List[String] = {\n        if (n < 2) {\n            return List(n.toString())\n        } else {\n            return fibListString(n - 1) + fibListString(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list of lists.\n    // >>> fibListList((10l))\n    // [[55, 1, 8], [1, 1, 1], [8, 1, 8]]\n    // >>> fibListList",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // 55\n    // >>> fib2((1l))\n    // 1\n    // >>> fib2((8l))\n    // 21\n    def fib2(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // 55\n    // >>> fib3((1l))\n    // 1\n    // >>> fib3((8l))\n    // 21\n    def fib3(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // 55\n    // >>> fib4((1l))\n    // 1\n    // >>> fib4((8l))\n    // 21\n    def fib4(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // 55\n    // >>> fib5((1l))\n    // 1\n    // >>> fib5((8l))\n    // 21\n    def fib5(n : Long) : Int = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib6((10l))\n    // 55\n    // >>> fib6((",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fibStr((10l))\n    // '55'\n    // >>> fibStr((1l))\n    // '1'\n    // >>> fibStr((8l))\n    // '21'\n    def fibStr(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fibStr(n - 1) + fibStr(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fibList((10l))\n    // [55, 1, 8]\n    // >>> fibList((1l))\n    // [1, 1, 1]\n    // >>> fibList((8l))\n    // [21, 1, 8]\n    def fibList(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fibList(n - 1) + fibList(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a tuple.\n    // >>> fibTuple((10l))\n    // (55, 1, 8)\n    // >>> fibTuple((1l))\n    // (1, 1, 1)\n    // >>> fibTuple((8l))\n    // (21, 1, 8)\n    def fibTuple(n : Long) : Tuple[Long] = {\n        if (n < 2) {\n            return Tuple(n)\n        } else {\n            return fibTuple(n - 1) + fibTuple(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a map.\n    // >>> fibMap((10l))\n    // Map(55 -> 1, 1 -> 1, 8 -> 1)\n    // >>> fibMap((1l))\n    // Map(1 -> 1, 1 -> 1, 1 -> 1",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_2((10l))\n    // '55'\n    // >>> fib_str_2((1l))\n    // '1'\n    // >>> fib_str_2((8l))\n    // '21'\n    def fib_str_2(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_2(n - 1) + fib_str_2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_3((10l))\n    // '55'\n    // >>> fib_str_3((1l))\n    // '1'\n    // >>> fib_str_3((8l))\n    // '21'\n    def fib_str_3(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str_3(n - 1) + fib_str_3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str_4((10l))\n    // '55'\n    // >>> fib_str_4((1l))\n    // '1'\n    // >>> fib_str_4",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib5(n - 1) + fib5(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }",
    "        if (n < 2) {\n            return 1l\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib2((10l))\n    // (55l)\n    // >>> fib2((1l))\n    // (1l)\n    // >>> fib2((8l))\n    // (21l)\n    def fib2(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib2(n - 1) + fib2(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib3((10l))\n    // (55l)\n    // >>> fib3((1l))\n    // (1l)\n    // >>> fib3((8l))\n    // (21l)\n    def fib3(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib3(n - 1) + fib3(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib4((10l))\n    // (55l)\n    // >>> fib4((1l))\n    // (1l)\n    // >>> fib4((8l))\n    // (21l)\n    def fib4(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib4(n - 1) + fib4(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number.\n    // >>> fib5((10l))\n    // (55l)\n    // >>> fib5((1l))\n    // (1l)\n    // >>> fib5((8l))\n    // (21l)\n    def fib5(n : Long) : Long = {\n        if (n < 2) {\n            return 1l\n        } else {\n            return fib5(n - 1) + fib5(n -",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion.\n    // >>> fib_rec((10l))\n    // (55l)\n    // >>> fib_rec((1l))\n    // (1l)\n    // >>> fib_rec((8l))\n    // (21l)\n    def fib_rec(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_rec(n - 1) + fib_rec(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using iteration.\n    // >>> fib_iter((10l))\n    // (55l)\n    // >>> fib_iter((1l))\n    // (1l)\n    // >>> fib_iter((8l))\n    // (21l)\n    def fib_iter(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            var a = 0\n            var b = 1\n            for (var i = 2; i <= n; i++) {\n                a, b = b, a + b\n            }\n            return a\n        }\n    }\n\n    // Return n-th Fibonacci number using recursion and tail call optimization.\n    // >>> fib_tail((10l))\n    // (55l)\n    // >>> fib_tail((1l))\n    // (1l)\n    // >>> fib_tail((8l))\n    // (21l)\n    def fib_tail(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fib_tail(n - 1) + fib_tail(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number using tail call optimization.\n    // >>> fib_tail_call((10l))\n    // (55l)\n    // >>> fib_tail_call((1l))\n    // (1l)\n    // >>>",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a string.\n    // >>> fib_str((10l))\n    // '55'\n    // >>> fib_str((1l))\n    // '1'\n    // >>> fib_str((8l))\n    // '21'\n    def fib_str(n : Long) : String = {\n        if (n < 2) {\n            return n.toString()\n        } else {\n            return fib_str(n - 1) + fib_str(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a list.\n    // >>> fib_list((10l))\n    // [55, 1, 8]\n    // >>> fib_list((1l))\n    // [1, 1, 1]\n    // >>> fib_list((8l))\n    // [21, 1, 8]\n    def fib_list(n : Long) : List[Long] = {\n        if (n < 2) {\n            return List(n)\n        } else {\n            return fib_list(n - 1) + fib_list(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a tuple.\n    // >>> fib_tuple((10l))\n    // (55, 1, 8)\n    // >>> fib_tuple((1l))\n    // (1, 1, 1)\n    // >>> fib_tuple((8l))\n    // (21, 1, 8)\n    def fib_tuple(n : Long) : Tuple[Long] = {\n        if (n < 2) {\n            return Tuple(n)\n        } else {\n            return fib_tuple(n - 1) + fib_tuple(n - 2)\n        }\n    }\n\n    // Return n-th Fibonacci number as a stream.\n    // >>> fib_stream((10l))\n    // 55\n    // >>> fib_stream((1l))\n    // 1\n    // >>> fib",
    "        if (n < 2) {\n            return n\n        } else {\n            return fib(n - 1) + fib(n - 2)\n        }"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
name: HumanEval_28_concatenate
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String]()))\n\
  \    // (\"\")\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n  \
  \  // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\
  \")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\"\
  )));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"\
  xyzwk\")));\n    }\n\n}\n"
completions: ["        var result = \"\"\n        for (i <- 0 until strings.size)\
    \ {\n            result += strings.apply(i)\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of characters\n    // >>> stringToList(\"\"\
    )\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def stringToList(s : String) : List[Char] = {\n        var result\
    \ = List[Char]().toSeq\n        for (i <- 0 until s.length) {\n            result\
    \ = result.append(s.apply(i))\n        }\n        result\n    }\n\n    // Convert\
    \ a list of characters to a string\n    // >>> listToString(List[Char]('a', 'b',\
    \ 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String = {\n\
    \        var result = \"\"\n        for (i <- 0 until chars.size) {\n        \
    \    result += chars.apply(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"\")\n    // List[Int]()\n\
    \    // >>> stringToList(\"123\")\n    // List[Int](1, 2, 3)\n    def stringToList(s\
    \ : String) : List[Int] = {\n        var result = List[Int]().toSeq\n        for\
    \ (i <- 0 until s.length) {\n            result = result.append(s.apply(i).toInt)\n\
    \        }\n        result\n    }\n\n    // Convert a list of integers to a string\n\
    \    // >>> listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(ints\
    \ : List[Int]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ ints.size) {\n            result += ints.apply(i).toString\n        }\n    \
    \    result\n    }\n\n    // Convert a string to a list of doubles\n    // >>>\
    \ stringToList(\"\")\n    // List[Double]()\n    // >>> stringToList(\"123.45\"\
    )\n    // List", "        if (strings.isEmpty()) {\n            return \"\"\n\
    \        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String](\"\
    a\", \"b\", \"c\"))\n    // (List[String](\"c\", \"b\", \"a\"))\n    def reverse(strings\
    \ : List[String]) : List[String] = {\n        if (strings.isEmpty()) {\n     \
    \       return List.empty()\n        } else {\n            return reverse(strings.tail).prepend(strings.head)\n\
    \        }\n    }\n\n    // Return a list of strings where each string is a substring\
    \ of the previous\n    // >>> substring(List[String](\"abc\", \"ab\", \"a\"))\n\
    \    // (List[String](\"a\", \"ab\", \"abc\"))\n    def substring(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            return List.empty()\n\
    \        } else {\n            return substring(strings.tail).prepend(strings.head)\n\
    \        }\n    }\n\n    // Return a list of strings where each string is a permutation\
    \ of the previous\n    // >>> permutation(List[String](\"abc\", \"ab\", \"a\"\
    ))\n    // (List[String](\"abc\", \"a\", \"ab\", \"abc\"))\n    def permutation(strings\
    \ : List[String]) : List[String] = {\n        if (strings.isEmpty()) {\n     \
    \       return List.empty()\n        } else {\n            return permutation(strings.tail).prepend(strings.head)\n\
    \        }\n    }\n\n    // Return a list of strings where each string is a permutation\
    \ of the previous\n    // >>> permutation(List[String](\"abc\", \"ab\", \"a\"\
    ))\n    // (List[String](\"abc\", \"a\", \"ab\", \"abc\"))\n    def permutation2(strings\
    \ : List[String]) : List[String] = {\n        if (strings.isEmpty()) {\n     \
    \       return List.empty()\n        } else {\n            return permutation2(strings.tail).prepend(strings.head)\n\
    \        }\n    }\n\n    ", "        if (strings.isEmpty()) {\n            return\
    \ \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return reverse(s.tail)\
    \ + s.head\n        }\n    }\n\n    // Convert a string to a list of words\n \
    \   // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return s.split(\" \").toList\n \
    \       }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            return List.empty()\n        }\
    \ else {\n            return s.split(\" \").toList\n        }\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World!\")\n  \
    \  // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            return List.empty()\n        } else {\n\
    \            return s.split(\" \").toList\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words4(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            return List.empty()\n        } else {\n       \
    \     return s.split(\" \").toList\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"\
    World\"]\n    def words5(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n", "        var result = \"\"\n        for (s in strings) {\n           \
    \ result += s\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\"Hello\")\n    // [\"Hello\"]\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        var result = new mutable.ListBuffer[String]()\n        var index\
    \ = 0\n        while (index < s.length) {\n            var end = s.indexOf(' ',\
    \ index)\n            if (end == -1) {\n                end = s.length\n     \
    \       }\n            result.append(s.substring(index, end))\n            index\
    \ = end + 1\n        }\n        return result.toList()\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    // >>> words(\"Hello\")\n    // [\"Hello\"]\n    // >>> words(\"\
    \")\n    // []\n    def words2(s : String) : List[String] = {\n        var result\
    \ = new mutable.ListBuffer[String]()\n        var index = 0\n        while (index\
    \ < s.length) {\n            var end = s.indexOf(' ', index)\n            if (end\
    \ == -1) {\n                end = s.length\n            }\n            result.append(s.substring(index,\
    \ end))\n            index = end + 1\n        }\n        return result.toList()\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words3(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    // >>> words3(\"Hello\")\n    //\
    \ [\"Hello\"]\n    // >>> words3(\"\")\n    // []\n    def words3(s : String)\
    \ : List[String] = {\n        var result = new mutable.ListBuffer[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var end\
    \ = s.indexOf(' ', index)\n            if (end == -1)", "        var result =\
    \ \"\"\n        for (i <- 0 until strings.size) {\n            result = result\
    \ + strings(i)\n        }\n        result\n    }\n\n    // Reverse a string\n\
    \    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String) : String\
    \ = {\n        var result = \"\"\n        for (i <- 0 until s.size) {\n      \
    \      result = result + s(s.size - i - 1)\n        }\n        result\n    }\n\
    \n    // Convert a string to upper case\n    // >>> upperCase(\"abc\")\n    //\
    \ \"ABC\"\n    def upperCase(s : String) : String = {\n        s.toUpperCase\n\
    \    }\n\n    // Convert a string to lower case\n    // >>> lowerCase(\"ABC\"\
    )\n    // \"abc\"\n    def lowerCase(s : String) : String = {\n        s.toLowerCase\n\
    \    }\n\n    // Convert a string to title case\n    // >>> titleCase(\"abc\"\
    )\n    // \"Abc\"\n    def titleCase(s : String) : String = {\n        s.replaceAll(\"\
    \\\\b([a-z])\", (c) -> c.toUpper)\n    }\n\n    // Convert a string to camel case\n\
    \    // >>> camelCase(\"abc\")\n    // \"abc\"\n    def camelCase(s : String)\
    \ : String = {\n        s.replaceAll(\"(\\\\p{Ll})(\\\\p{Lu})\", \"$1 $2\")\n\
    \    }\n\n    // Convert a string to snake case\n    // >>> snakeCase(\"abc\"\
    )\n    // \"abc\"\n    def snakeCase(s : String) : String = {\n        s.replaceAll(\"\
    (\\\\p{Lu})(\\\\p{Ll})\", \"$1_$2\")\n    }\n\n    // Convert a string to pascal\
    \ case\n    // >>> pascalCase(\"abc\")\n    // \"Abc\"\n    def pascalCase(s :\
    \ String) : String = {\n        s.replaceAll(\"(\\\\p{Lu})(\\\\p{Ll})\", \"$1\
    \ $2\")\n    }\n\n    // Convert a string to kebab case\n    // >>> kebabCase(\"\
    abc\")\n    // \"abc", "        var result = \"\"\n        for (s in strings)\
    \ {\n            result += s\n        }\n        return result\n    }\n\n    //\
    \ Concatenate list of strings into a single string, using a separator\n    //\
    \ >>> concatenate((List[String]()), \" \")\n    // (\"\")\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")), \" \")\n    // (\"a b c\")\n    def concatenate(strings :\
    \ List[String], separator : String) : String = {\n        var result = \"\"\n\
    \        for (s in strings) {\n            result += s\n        }\n        return\
    \ result\n    }\n\n    // Concatenate list of strings into a single string, using\
    \ a separator,\n    // and adding an end separator\n    // >>> concatenate((List[String]()),\
    \ \" \", \" and \")\n    // (\"\")\n    // >>> concatenate((List[String](\"a\"\
    , \"b\", \"c\")), \" \", \" and \")\n    // (\"a and b and c\")\n    def concatenate(strings\
    \ : List[String], separator : String, endSeparator : String) : String = {\n  \
    \      var result = \"\"\n        for (s in strings) {\n            result +=\
    \ s\n        }\n        return result\n    }\n\n    // Concatenate list of strings\
    \ into a single string, using a separator,\n    // and adding an end separator,\
    \ and adding a final end separator\n    // >>> concatenate((List[String]()), \"\
    \ \", \" and \", \" and \")\n    // (\"\")\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")), \" \", \" and \", \" and \")\n    // (\"a and b and c\")\n\
    \    def concatenate(strings : List[String], separator : String, endSeparator\
    \ : String, finalSeparator : String) : String = {\n        var result = \"\"\n\
    \        for (s in strings) {\n            result += s\n        }\n        return\
    \ result\n    }\n\n    // Concatenate list of strings into a single string, using\
    \ a separator,\n    // and adding an end separator, and adding a final", "   \
    \     var result = \"\"\n        for (i <- 0 until strings.length) {\n       \
    \     result += strings(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of strings\n    // >>> stringToList(\"abc\")\n    // (List[String](\"\
    a\", \"b\", \"c\"))\n    def stringToList(s : String) : List[String] = {\n   \
    \     var result = List[String]()\n        for (i <- 0 until s.length) {\n   \
    \         result += List[String](s(i))\n        }\n        result\n    }\n\n \
    \   // Convert a list of strings to a string\n    // >>> listToString(List[String](\"\
    a\", \"b\", \"c\"))\n    // \"abc\"\n    def listToString(l : List[String]) :\
    \ String = {\n        var result = \"\"\n        for (i <- 0 until l.length) {\n\
    \            result += l(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"1 2 3\")\n    // (List[Int]1,\
    \ 2, 3)\n    def stringToListOfInts(s : String) : List[Int] = {\n        var result\
    \ = List[Int]()\n        for (i <- 0 until s.length) {\n            result +=\
    \ Int(s(i))\n        }\n        result\n    }\n\n    // Convert a list of integers\
    \ to a string\n    // >>> listToString(List[Int]1, 2, 3)\n    // \"1 2 3\"\n \
    \   def listToStringOfInts(l : List[Int]) : String = {\n        var result = \"\
    \"\n        for (i <- 0 until l.length) {\n            result += Int(l(i))\n \
    \       }\n        result\n    }\n\n    // Convert a string to a list of doubles\n\
    \    // >>> stringToList(\"1.0 2.0 3.0\")\n    // (List[Double]1.0, 2.0, 3.0)\n\
    \    def stringToListOfDoubles(s : String) : List[Double] = {\n        var result\
    \ = List[Double]()\n        for (i <- 0 until s.length", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n \
    \   // []\n    // >>> words(\"Hello\")\n    // [\"Hello\"]\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            return List.empty()\n        }\
    \ else {\n            return List.of(s.split(\" \"))\n        }\n    }\n\n   \
    \ // Convert a string to a list of words\n    // >>> words('')\n    // []\n  \
    \  // >>> words(\"\")\n    // []\n    // >>> words(\"Hello\")\n    // [\"Hello\"\
    ]\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return List.of(s.split(\" \"))\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n\
    \    // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello\")\n \
    \   // [\"Hello\"]\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"\
    ]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            return List.empty()\n        } else {\n            return List.of(s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words('')\n    // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"\
    Hello\")\n    // [\"Hello\"]\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            return List.empty()\n        } else {", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.reverse() + s.reverse()\n\
    \        }\n    }\n\n    // Convert a string to lower case\n    // >>> lower(\"\
    ABC\")\n    // \"abc\"\n    def lower(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.toLowerCase()\n       \
    \ }\n    }\n\n    // Convert a string to upper case\n    // >>> upper(\"abc\"\
    )\n    // \"ABC\"\n    def upper(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.toUpperCase()\n       \
    \ }\n    }\n\n    // Convert a string to title case\n    // >>> title(\"abc\"\
    )\n    // \"Abc\"\n    def title(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.toUpper().replaceAll(\"\
    (.)\", function($0) {\n                return $0.toLower()\n            })\n \
    \       }\n    }\n\n    // Convert a string to camel case\n    // >>> camel(\"\
    abc\")\n    // \"abc\"\n    def camel(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.replaceAll(\"(.)([A-Z][a-z]+)\"\
    , function($0, $1, $2) {\n                return $1.toLower() + $2\n         \
    \   })\n        }\n    }\n\n    // Convert a string to snake case\n    // >>>\
    \ snake(\"abc\")\n    // \"abc\"\n    def snake(s : String) : String = {\n   \
    \     if (s.isEmpty()) {\n            \"\"\n        } else {\n            s.replaceAll(\"\
    ([a-z])([A-Z", "        var result = \"\"\n        for (i <- 0 until strings.size)\
    \ {\n            result += strings.get(i)\n        }\n        return result\n\
    \    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\
    \n    def reverse(s : String) : String = {\n        var result = \"\"\n      \
    \  for (i <- 0 until s.length) {\n            result += s.charAt(s.length - i\
    \ - 1)\n        }\n        return result\n    }\n\n    // Convert a string to\
    \ lower case\n    // >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String)\
    \ : String = {\n        return s.toLowerCase()\n    }\n\n    // Convert a string\
    \ to upper case\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s :\
    \ String) : String = {\n        return s.toUpperCase()\n    }\n\n    // Convert\
    \ a string to title case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s\
    \ : String) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            if (s.charAt(i) == ' ') {\n                result +=\
    \ ' '\n            } else {\n                result += Character.toUpperCase(s.charAt(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to camel case\n    // >>> camel(\"abc\")\n    // \"abc\"\n    def camel(s :\
    \ String) : String = {\n        var result = \"\"\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == ' ') {\n                result += ' '\n  \
    \          } else {\n                result += Character.toLowerCase(s.charAt(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to snake case\n    // >>> snake(\"abc\")\n    // \"abc\"\n    def snake(s :\
    \ String) : String = {\n        var result = \"\"\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == ' ') {", "        var result = \"\"\n    \
    \    for (s in strings) {\n            result += s\n        }\n        return\
    \ result\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var end = s.indexOf(\" \", index)\n      \
    \      if (end == -1) {\n                end = s.length\n            }\n     \
    \       result = result.append(s.substring(index, end))\n            index = end\
    \ + 1\n        }\n        return result\n    }\n\n    // Convert a string to a\
    \ list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"\
    ]\n    def words2(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var end\
    \ = s.indexOf(\" \", index)\n            if (end == -1) {\n                end\
    \ = s.length\n            }\n            result = result.append(s.substring(index,\
    \ end))\n            index = end + 1\n        }\n        return result\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words3(s : String) : List[String] =\
    \ {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var end = s.indexOf(\" \", index)\n      \
    \      if (end == -1) {\n                end = s.length\n            }\n     \
    \       result = result.append(s.substring(index, end))\n            index = end\
    \ + 1\n        }\n        return result\n    }\n\n    // Convert a string to a\
    \ list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"\
    ]\n    def words4(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        ", "        if (strings.isEmpty()) {\n       \
    \     return \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }", "        if (strings.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of characters\n    // >>> toList(\"\")\n  \
    \  // []\n    // >>> toList(\"a\")\n    // [97]\n    // >>> toList(\"ab\")\n \
    \   // [97, 98]\n    def toList(s : String) : List[Integer] = {\n        if (s.isEmpty())\
    \ {\n            List[Integer]()\n        } else {\n            List[Integer](s.toCharArray).map(c\
    \ -> c.asInt)\n        }\n    }\n\n    // Convert a list of characters to a string\n\
    \    // >>> fromList(List[Integer]())\n    // \"\"\n    // >>> fromList(List[Integer](97))\n\
    \    // \"a\"\n    // >>> fromList(List[Integer](97, 98))\n    // \"ab\"\n   \
    \ def fromList(chars : List[Integer]) : String = {\n        if (chars.isEmpty())\
    \ {\n            \"\"\n        } else {\n            StringBuilder sb = new StringBuilder()\n\
    \            chars.foreach(c -> sb.append(c))\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> toWords(\"\
    \")\n    // []\n    // >>> toWords(\"a\")\n    // [[\"a\"]]\n    // >>> toWords(\"\
    ab\")\n    // [[\"a\", \"b\"]]\n    // >>> toWords(\"a b\")\n    // [[\"a\", \"\
    b\"]]\n    // >>> toWords(\"a b c\")\n    // [[\"a\", \"b\"], [\"c\"]]\n    def\
    \ toWords(s : String) : List[List[String]] = {\n        if (s.isEmpty()) {\n \
    \           List[List[String]]()\n        } else {\n            List[List[String]](s.split(\"\
    \ \")).map(w -> w.map(w2 -> w2.replaceAll(\"\\\\s+\", \"\")))\n        }\n   \
    \ }\n\n    // Convert a list of words to a string\n    // >>>", "        var result\
    \ = \"\"\n        for(var i = 0; i < strings.length; i++) {\n            result\
    \ += strings(i)\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to a list of characters\n    // >>> toList(\"abc\")\n    // List(a, b, c)\n\
    \    def toList(s : String) : List[Char] = {\n        var result = List[Char](0)\n\
    \        for(var i = 0; i < s.length(); i++) {\n            result = result.append(s(i))\n\
    \        }\n        return result\n    }\n\n    // Convert a list of characters\
    \ to a string\n    // >>> fromList(List(a, b, c))\n    // \"abc\"\n    def fromList(chars\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for(var i = 0;\
    \ i < chars.length; i++) {\n            result += chars(i)\n        }\n      \
    \  return result\n    }\n\n    // Convert a string to a list of integers\n   \
    \ // >>> toList(\"123\")\n    // List(1, 2, 3)\n    def toList(s : String) : List[Int]\
    \ = {\n        var result = List[Int](0)\n        for(var i = 0; i < s.length();\
    \ i++) {\n            result = result.append(s(i) - '0')\n        }\n        return\
    \ result\n    }\n\n    // Convert a list of integers to a string\n    // >>> fromList(List(1,\
    \ 2, 3))\n    // \"123\"\n    def fromList(ints : List[Int]) : String = {\n  \
    \      var result = \"\"\n        for(var i = 0; i < ints.length; i++) {\n   \
    \         result += ints(i)\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of strings\n    // >>> toList(\"abc\")\n    // List(a,\
    \ b, c)\n    def toList(s : String) : List[String] = {\n        var result = List[String](0)\n\
    \        for(var i = 0; i < s.length(); i++) {\n            result = result.append(s",
  "        if (strings.isEmpty()) {\n            return \"\"\n        } else {\n \
    \           return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n \
    \   def words2(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words4(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words5(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words6(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words7(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words8(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    ", "        if (strings.isEmpty()) {\n            \"\"\n       \
    \ } else {\n            strings.head + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\
    \n    def reverse(s : String) : String = {\n        if (s.isEmpty()) {\n     \
    \       \"\"\n        } else {\n            s.reverse() + s.reverse()\n      \
    \  }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String](\"\
    abc\"))\n    // List[String](\"cba\")\n    def reverseList(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](strings.head + reverseList(strings.tail))\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"abc\")\n    // List[Char]('a', 'b', 'c')\n    def toList(s : String)\
    \ : List[Char] = {\n        if (s.isEmpty()) {\n            List[Char]()\n   \
    \     } else {\n            List[Char](s.toCharArray())\n        }\n    }\n\n\
    \    // Convert a list of characters to a string\n    // >>> fromList(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def fromList(chars : List[Char]) : String =\
    \ {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n    \
    \        String(chars.toArray(new Char[0]))\n        }\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> toList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def toList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.chars().map(_.toInt).toSeq)\n\
    \        }\n    }\n\n    // Convert a list of integers to a string\n    // >>>\
    \ fromList(List[Int](", "        var result = \"\"\n        for (i <- 0 until\
    \ strings.size) {\n            result += strings.apply(i)\n        }\n       \
    \ result\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        var result = List[Char]().setEmpty()\n        for (i <- 0 until\
    \ s.length) {\n            result += List[Char](s.apply(i))\n        }\n     \
    \   result\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ chars.size) {\n            result += chars.apply(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of integers\n    // >>> stringToList(\"\
    \")\n    // List[Int]()\n    // >>> stringToList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def stringToList(s : String) : List[Int] = {\n        var result\
    \ = List[Int]().setEmpty()\n        for (i <- 0 until s.length) {\n          \
    \  result += Int(s.apply(i))\n        }\n        result\n    }\n\n    // Convert\
    \ a list of integers to a string\n    // >>> listToString(List[Int](1, 2, 3))\n\
    \    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 until ints.size) {\n            result\
    \ += Int(ints.apply(i))\n        }\n        result\n    }\n\n    // Convert a\
    \ string to a list of doubles\n    // >>> stringToList(\"\")\n    // List[Double]()\n\
    \    // >>> stringToList(\"123\")\n    // List[Double](1.0, 2", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head.concat(concatenate(strings.tail))\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        if (s.isEmpty()) {\n            List[Char]()\n        } else {\n\
    \            List[Char](s.charAt(0), stringToList(s.substring(1)))\n        }\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> listToString(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String\
    \ = {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n  \
    \          chars.head + listToString(chars.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"\")\n    // List[Int]()\n\
    \    // >>> stringToList(\"123\")\n    // List[Int](1, 2, 3)\n    def stringToList(s\
    \ : String) : List[Int] = {\n        if (s.isEmpty()) {\n            List[Int]()\n\
    \        } else {\n            List[Int](s.charAt(0) - '0', stringToList(s.substring(1)))\n\
    \        }\n    }\n\n    // Convert a list of integers to a string\n    // >>>\
    \ listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(ints\
    \ : List[Int]) : String = {\n        if (ints.isEmpty()) {\n            \"\"\n\
    \        } else {\n            ints.head + listToString(ints.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of booleans\n    // >>> stringToList(\"\
    \")\n    // List[Boolean]()\n    //", "        var result = \"\"\n        for\
    \ (s in strings) {\n            result += s\n        }\n        return result\n\
    \    }\n\n    // Concatenate list of strings into a single string with a separator\n\
    \    // >>> concatenate((List[String]()), \" \")\n    // (\"\")\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")), \" \")\n    // (\"a b c\")\n    def concatenate(strings :\
    \ List[String], separator : String) : String = {\n        var result = \"\"\n\
    \        for (s in strings) {\n            result += s + separator\n        }\n\
    \        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words('')\n    // []\n    // >>> words('hello')\n    // ['hello']\n\
    \    // >>> words('hello world')\n    // ['hello', 'world']\n    def words(s :\
    \ String) : List[String] = {\n        var result = new mutable.ListBuffer[String]()\n\
    \        var words = s.split(\" \")\n        for (w in words) {\n            result.append(w)\n\
    \        }\n        return result.toList()\n    }\n\n    // Convert a string to\
    \ a list of words with a separator\n    // >>> words('', ' ')\n    // []\n   \
    \ // >>> words('hello', ' ')\n    // ['hello']\n    // >>> words('hello world',\
    \ ' ')\n    // ['hello', 'world']\n    def words(s : String, separator : String)\
    \ : List[String] = {\n        var result = new mutable.ListBuffer[String]()\n\
    \        var words = s.split(separator)\n        for (w in words) {\n        \
    \    result.append(w)\n        }\n        return result.toList()\n    }\n\n  \
    \  // Convert a string to a list of words with a separator\n    // >>> words('',\
    \ ' ')\n    // []\n    // >>> words('hello', ' ')\n    // ['hello']\n    // >>>\
    \ words('hello world', ' ')\n    // ['hello', 'world']\n    def words(s : String,\
    \ separator : String)", "        if (strings.isEmpty()) {\n            \"\"\n\
    \        } else {\n            strings.head + concatenate(strings.tail)\n    \
    \    }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String](\"\
    a\", \"b\", \"c\"))\n    // (List[String](\"c\", \"b\", \"a\"))\n    def reverse(strings\
    \ : List[String]) : List[String] = {\n        if (strings.isEmpty()) {\n     \
    \       List[String]()\n        } else {\n            List[String](strings.tail\
    \ + reverse(strings.tail))\n        }\n    }\n\n    // Convert a string to a list\
    \ of characters\n    // >>> toList(List[String](\"abc\"))\n    // (List[Char]('a',\
    \ 'b', 'c'))\n    def toList(strings : List[String]) : List[Char] = {\n      \
    \  if (strings.isEmpty()) {\n            List[Char]()\n        } else {\n    \
    \        List[Char](strings.head.toCharArray()) + toList(strings.tail)\n     \
    \   }\n    }\n\n    // Convert a list of characters to a string\n    // >>> toString(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def toString(chars : List[Char]) : String =\
    \ {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n    \
    \        String(chars.head) + toString(chars.tail)\n        }\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> toWords(List[String](\"abc\"\
    ))\n    // (List[String](\"abc\"))\n    def toWords(strings : List[String]) :\
    \ List[String] = {\n        if (strings.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](strings.head + toWords(strings.tail))\n\
    \        }\n    }\n\n    // Convert a list of words to a string\n    // >>> toString(List[String](\"\
    abc\"))\n    // \"abc\"\n    def toString2(words : List[String]) : String = {\n\
    \        if (words.isEmpty()) {\n", "        if (strings.isEmpty()) {\n      \
    \      \"\"\n        } else {\n            var result = \"\"\n            for\
    \ (i <- 0 until strings.size - 1) {\n                result += strings.apply(i)\n\
    \            }\n            result\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"\
    world\"]\n    def words(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var nextIndex\
    \ = s.indexOf(\" \", index)\n            if (nextIndex == -1) {\n            \
    \    result += s.substring(index)\n                index = s.length\n        \
    \    } else {\n                result += s.substring(index, nextIndex)\n     \
    \           index = nextIndex\n            }\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String] =\
    \ {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var nextIndex = s.indexOf(\" \", index)\n\
    \            if (nextIndex == -1) {\n                result += s.substring(index)\n\
    \                index = s.length\n            } else {\n                result\
    \ += s.substring(index, nextIndex)\n                index = nextIndex\n      \
    \      }\n        }\n        result\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words3(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var nextIndex\
    \ = s.indexOf(\" \", index)\n            if (nextIndex == -1) {\n            \
    \    result += s.substring(index)\n                index = s.length\n        \
    \    } else {\n                result += s.substring(index, nextIndex)\n     \
    \           index = nextIndex\n            }\n        }", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.reverse()\n        }\n\
    \    }\n\n    // Convert a string to lower case\n    // >>> lower(\"ABC\")\n \
    \   // \"abc\"\n    def lower(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.toLowerCase()\n       \
    \ }\n    }\n\n    // Convert a string to upper case\n    // >>> upper(\"abc\"\
    )\n    // \"ABC\"\n    def upper(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.toUpperCase()\n       \
    \ }\n    }\n\n    // Convert a string to title case\n    // >>> title(\"abc\"\
    )\n    // \"Abc\"\n    def title(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.toUpper().replaceAll(\"\
    \\\\s+\", \" \").replaceAll(\"\\\\w\", word -> word.substring(0, 1).toUpper()\
    \ + word.substring(1))\n        }\n    }\n\n    // Convert a string to camel case\n\
    \    // >>> camel(\"abc\")\n    // \"abc\"\n    def camel(s : String) : String\
    \ = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n      \
    \      s.replaceAll(\"(\\\\p{Ll})(\\\\p{Lu})\", \"$1 $2\")\n        }\n    }\n\
    \n    // Convert a string to snake case\n    // >>> snake(\"abc\")\n    // \"\
    abc\"\n    def snake(s : String) : String = {\n        if (s.isEmpty()) {\n  \
    \          \"\"\n        } else {\n            s.replaceAll(\"(\\\\p{Lu})(\\\\\
    p{Ll})\", \"$1_$", "        if (strings.isEmpty()) {\n            return \"\"\n\
    \        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return reverse(s.tail)\
    \ + s.head\n        }\n    }\n\n    // Convert a string to a list of words\n \
    \   // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return List.concat(words(s.tail),\
    \ List.of(s.head))\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words2(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return List.concat(words2(s.tail),\
    \ List.of(s.head))\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return List.concat(words3(s.tail),\
    \ List.of(s.head))\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words4(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return List.concat(words4(s.tail),\
    \ List.of(s.head))\n        }\n    }\n\n    // Convert a string to a list of words",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head._ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n        def\
    \ toList(s : String) : List[String] = {\n            if (s.isEmpty()) {\n    \
    \            List[String]()\n            } else {\n                List[String](s.split(\"\
    \ \"))\n            }\n        }\n        toList(s)\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\"\
    , \"World\"]\n    def words2(s : String) : List[String] = {\n        def toList(s\
    \ : String) : List[String] = {\n            if (s.isEmpty()) {\n             \
    \   List[String]()\n            } else {\n                List[String](s.split(\"\
    \ \"))\n            }\n        }\n        toList(s)\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\"\
    , \"World\"]\n    def words3(s : String) : List[String] = {\n        def toList(s\
    \ : String) : List[String] = {\n            if (s.isEmpty()) {\n             \
    \   List[String]()\n            } else {\n                List[String](s.split(\"\
    \ \"))\n            }\n        }\n        toList(s)\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\"\
    , \"World\"]\n    def words4(s : String) : List[String] = {\n        def toList(s\
    \ : String) : List[String] = {\n            if (s.isEmpty()) {\n             \
    \   List[String]()\n            } else {\n                List[String](s.split(\"\
    \ \"))\n            }\n        }\n        toList(s)\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello World", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        def toWord(c : Char) : String = {\n            if ('a' <= c &&\
    \ c <= 'z') {\n                c + \"\"\n            } else if ('A' <= c && c\
    \ <= 'Z') {\n                c.toLowerCase() + \"\"\n            } else if ('0'\
    \ <= c && c <= '9') {\n                c + \"\"\n            } else {\n      \
    \          \"\"\n            }\n        }\n        s.split(\" \").map(toWord).toList\n\
    \    }\n\n    // Convert a string to a list of integers\n    // >>> ints(\"123\
    \ 456\")\n    // [123, 456]\n    def ints(s : String) : List[Int] = {\n      \
    \  s.split(\" \").map(_.toInt).toList\n    }\n\n    // Compute the sum of the\
    \ squares of the first 10 integers\n    // >>> sumSquares(List[Int](1 to 10))\n\
    \    // 385\n    def sumSquares(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            0\n        } else {\n            ints.head * ints.head + sumSquares(ints.tail)\n\
    \        }\n    }\n\n    // Compute the sum of the squares of the first 10 integers\n\
    \    // >>> sumSquares(List[Int](1 to 10))\n    // 385\n    def sumSquares2(ints\
    \ : List[Int]) : Int = {\n        if (ints.isEmpty()) {\n            0\n     \
    \   } else {\n            ints.head * ints.head + sumSquares2(ints.tail)\n   \
    \     }\n    }\n\n    // Compute the sum of the squares of the first 10 integers\n\
    \    // >>> sumSquares(List[Int](1 to 10))\n    // 385\n    def sumSquares3(ints\
    \ : List[Int]) : Int = {\n", "        if (strings.isEmpty()) {\n            \"\
    \"\n        } else {\n            strings.head + concatenate(strings.tail)\n \
    \       }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"\")\n    // List[Char]()\n    // >>> toList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def toList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray)\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ fromList(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def fromList(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            \"\"\
    \n        } else {\n            StringBuilder sb = new StringBuilder()\n     \
    \       for (c : chars) {\n                sb.append(c)\n            }\n     \
    \       return sb.toString()\n        }\n    }\n\n    // Convert a string to a\
    \ list of integers\n    // >>> toList(\"\")\n    // List[Int]()\n    // >>> toList(\"\
    123\")\n    // List[Int](1, 2, 3)\n    def toList(s : String) : List[Int] = {\n\
    \        if (s.isEmpty()) {\n            List[Int]()\n        } else {\n     \
    \       List[Int](s.chars().map(_.toInt).toSeq)\n        }\n    }\n\n    // Convert\
    \ a list of integers to a string\n    // >>> fromList(List[Int](1, 2, 3))\n  \
    \  // \"123\"\n    def fromList(ints : List[Int]) : String = {\n        if (ints.isEmpty())\
    \ {\n            \"\"\n        } else {\n            StringBuilder sb = new StringBuilder()\n\
    \            for (i : ints) {\n                sb.append(i)\n            }\n \
    \           return sb.toString()\n        }\n    }\n\n    // Convert a string\
    \ to a list of doubles\n    // >>> to", "        if (strings.isEmpty()) {\n  \
    \          return \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words2(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words3(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words4(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words5(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words6(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words7(", "        if (strings.isEmpty()) {\n            \"\"\n     \
    \   } else {\n            strings.head + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words2(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words5(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words6(s\
    \ : String) : List[String] = {", "        var result = \"\"\n        for (i <-\
    \ 0 until strings.length - 1) {\n            result += strings(i)\n        }\n\
    \        result\n    }\n\n    // Convert a string to a list of words\n    // >>>\
    \ words(\"Hello, world!\")\n    // [\"Hello\", \"world\"]\n    def words(s : String)\
    \ : List[String] = {\n        var result = List[String]()\n        var i = 0\n\
    \        while (i < s.length) {\n            var j = i\n            while (j <\
    \ s.length && s(j).isLetter()) {\n                j += 1\n            }\n    \
    \        result += s.substring(i, j)\n            i = j\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of words, ignoring punctuation\n \
    \   // >>> words_ignore_punctuation(\"Hello, world!\")\n    // [\"Hello\", \"\
    world\"]\n    def words_ignore_punctuation(s : String) : List[String] = {\n  \
    \      var result = List[String]()\n        var i = 0\n        while (i < s.length)\
    \ {\n            var j = i\n            while (j < s.length && !s(j).isLetter())\
    \ {\n                j += 1\n            }\n            result += s.substring(i,\
    \ j)\n            i = j\n        }\n        result\n    }\n\n    // Convert a\
    \ string to a list of words, ignoring punctuation and case\n    // >>> words_ignore_punctuation_case(\"\
    Hello, world!\")\n    // [\"hello\", \"world\"]\n    def words_ignore_punctuation_case(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ i = 0\n        while (i < s.length) {\n            var j = i\n            while\
    \ (j < s.length && !s(j).isLetter()) {\n                j += 1\n            }\n\
    \            result += s.substring(i, j).toLowerCase()\n            i = j\n  \
    \      }\n        result\n    }\n\n    // Convert a string to a list of words,\
    \ ignoring punctuation and case\n    // >>> words_ignore_punctuation_case(\"Hello",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\"\
    , \"World\"]\n    def words(s : String) : List[String] = {\n        def toWord(c\
    \ : Char) : String = {\n            if ('a' <= c && c <= 'z') {\n            \
    \    c + \"\"\n            } else if ('A' <= c && c <= 'Z') {\n              \
    \  c.toLowerCase() + \"\"\n            } else if ('0' <= c && c <= '9') {\n  \
    \              c + \"\"\n            } else {\n                \" \"\n       \
    \     }\n        }\n        s.split(\" \").map(toWord).toList\n    }\n\n    //\
    \ Convert a string to a list of integers\n    // >>> ints(\"123 456\")\n    //\
    \ [123, 456]\n    def ints(s : String) : List[Int] = {\n        def toInt(i :\
    \ String) : Int = {\n            i.replaceAll(\"[^0-9]\", \"\").asInt\n      \
    \  }\n        s.split(\" \").map(toInt).toList\n    }\n\n    // Convert a string\
    \ to a list of doubles\n    // >>> doubles(\"1.23 4.56\")\n    // [1.23, 4.56]\n\
    \    def doubles(s : String) : List[Double] = {\n        def toDouble(d : String)\
    \ : Double = {\n            d.replaceAll(\"[^0-9.]\", \"\").asDouble\n       \
    \ }\n        s.split(\" \").map(toDouble).toList\n    }\n\n    // Compute the\
    \ sum of a list of numbers\n    // >>> sum(List[Int](1, 2, 3))\n    // 6\n   \
    \ def sum(numbers : List[Int]) : Int = {\n        numbers.foldLeft(0)\n    }\n\
    \n    // Compute the product of a list of numbers\n    // >>> product(List[Int](1,\
    \ 2, 3))\n    // 6\n    def product(numbers : List[Int]) : Int =", "        if\
    \ (strings.isEmpty()) {\n            return \"\"\n        } else {\n         \
    \   return strings.head + concatenate(strings.tail)\n        }\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello, my name is John\"\
    )\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String)\
    \ : List[String] = {\n        return s.split(\" \")\n    }\n\n    // Convert a\
    \ list of words to a single string\n    // >>> sentence(words(\"Hello, my name\
    \ is John\"))\n    // \"Hello, my name is John\"\n    def sentence(words : List[String])\
    \ : String = {\n        return concatenate(words)\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"\
    Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(words(\"Hello, my name is John\"))\n\
    \    // \"Hello, my name is John\"\n    def sentence(words : List[String]) : String\
    \ = {\n        return concatenate(words)\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\"\
    , \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(words(\"Hello, my name is John\"))\n\
    \    // \"Hello, my name is John\"\n    def sentence(words : List[String]) : String\
    \ = {\n        return concatenate(words)\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\"\
    , \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n", "        if (strings.isEmpty()) {\n \
    \           return \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return reverse(s.tail)\
    \ + s.head\n        }\n    }\n\n    // Rotate a string\n    // >>> rotate(\"abc\"\
    )\n    // \"cab\"\n    def rotate(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return rotate(s.tail)\
    \ + s.head\n        }\n    }\n\n    // Convert a string to lower case\n    //\
    \ >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) : String = {\n\
    \        return s.toLowerCase()\n    }\n\n    // Convert a string to upper case\n\
    \    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) : String\
    \ = {\n        return s.toUpperCase()\n    }\n\n    // Convert a string to title\
    \ case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s : String) :\
    \ String = {\n        return s.toUpper().replaceAll(\"\\\\s\", \" \")\n    }\n\
    \n    // Convert a string to camel case\n    // >>> camel(\"abc\")\n    // \"\
    abc\"\n    def camel(s : String) : String = {\n        return s.toLower().replaceAll(\"\
    \\\\s+\", \"\")\n    }\n\n    // Convert a string to snake case\n    // >>> snake(\"\
    abc\")\n    // \"abc\"\n    def snake(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"[^a-zA-Z0-9]\", \"_\")\n    }\n\n    // Convert a string\
    \ to pascal case\n    // >>> pascal(\"abc\")\n    // \"Abc\"\n    def pascal(s\
    \ : String) : String = {\n        return s.toUpper().replaceAll(\"", "       \
    \ if (strings.isEmpty()) {\n            \"\"\n        } else {\n            strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of characters\n    // >>> toList(\"\")\n    // List()\n    // >>> toList(\"\
    abc\")\n    // List(a, b, c)\n    def toList(s : String) : List[Char] = {\n  \
    \      if (s.isEmpty()) {\n            List()\n        } else {\n            List(s.head)\
    \ + toList(s.tail)\n        }\n    }\n\n    // Convert a list of characters to\
    \ a string\n    // >>> fromList(List())\n    // \"\"\n    // >>> fromList(List(\"\
    a\", \"b\", \"c\"))\n    // \"abc\"\n    def fromList(chars : List[Char]) : String\
    \ = {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n  \
    \          chars.head + fromList(chars.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> toList(\"\")\n    // List()\n   \
    \ // >>> toList(\"123\")\n    // List(1, 2, 3)\n    def toList(s : String) : List[Int]\
    \ = {\n        if (s.isEmpty()) {\n            List()\n        } else {\n    \
    \        List(s.head) + toList(s.tail)\n        }\n    }\n\n    // Convert a list\
    \ of integers to a string\n    // >>> fromList(List())\n    // \"\"\n    // >>>\
    \ fromList(List(1, 2, 3))\n    // \"123\"\n    def fromList(ints : List[Int])\
    \ : String = {\n        if (ints.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            ints.head + fromList(ints.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of strings\n    // >>> toList(\"\")\n    // List()\n    //\
    \ >>> toList(\"abc\")\n    // List(\"a\", \"b\", \"c\")\n    def toList(s : String)\
    \ : List[String] = {\n        if (s.", "        var result = \"\"\n        for\
    \ (i <- 0 until strings.length) {\n            result += strings(i)\n        }\n\
    \        result\n    }\n\n    // Convert a string to a list of characters\n  \
    \  // >>> stringToList(\"\")\n    // []\n    // >>> stringToList(\"a\")\n    //\
    \ [97]\n    // >>> stringToList(\"ab\")\n    // [97, 98]\n    def stringToList(s\
    \ : String) : List[Integer] = {\n        var result = List[Integer](0)\n     \
    \   for (i <- 0 until s.length) {\n            result = result.append(s(i))\n\
    \        }\n        result\n    }\n\n    // Convert a list of characters to a\
    \ string\n    // >>> listToString([])\n    // \"\"\n    // >>> listToString([97])\n\
    \    // \"a\"\n    // >>> listToString([97, 98])\n    // \"ab\"\n    def listToString(l\
    \ : List[Integer]) : String = {\n        var result = \"\"\n        for (i <-\
    \ 0 until l.length) {\n            result += String.valueOf(l(i))\n        }\n\
    \        result\n    }\n\n    // Convert a string to a list of words\n    // >>>\
    \ stringToWords(\"\")\n    // []\n    // >>> stringToWords(\"a\")\n    // [[\"\
    a\"]]\n    // >>> stringToWords(\"ab\")\n    // [[\"a\"], [\"b\"]]\n    def stringToWords(s\
    \ : String) : List[List[String]] = {\n        var result = List[List[String]](0)\n\
    \        for (i <- 0 until s.length) {\n            var word = \"\"\n        \
    \    for (j <- 0 until s.length) {\n                if (s(j) == ' ') {\n     \
    \               break\n                } else {\n                    word += s(j)\n\
    \                }\n            }\n            result = result.append(List[String](word))\n\
    \        }\n        result\n    }\n\n    // Convert a list of words to a string\n\
    \    // >>> wordsToString([])\n    // \"\"\n    // >>> wordsToString([[\"a\"]])\n\
    \    // \"a\"\n    // >>> wordsToString([[\"a\"],", "        var result = \"\"\
    \n        for (i <- 0 until strings.length) {\n            result += strings(i)\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of characters\n\
    \    // >>> stringToList(\"abc\")\n    // List[Char]('a', 'b', 'c')\n    def stringToList(s\
    \ : String) : List[Char] = {\n        var result = List[Char]().setPrefix(s.length)\n\
    \        for (i <- 0 until s.length) {\n            result(i) = s(i)\n       \
    \ }\n        result\n    }\n\n    // Convert a list of characters to a string\n\
    \    // >>> listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(l\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ l.length) {\n            result += l(i)\n        }\n        result\n    }\n\n\
    \    // Convert a string to a list of integers\n    // >>> stringToList(\"123\"\
    )\n    // List[Int](1, 2, 3)\n    def stringToList(s : String) : List[Int] = {\n\
    \        var result = List[Int]().setPrefix(s.length)\n        for (i <- 0 until\
    \ s.length) {\n            result(i) = s(i) - '0'\n        }\n        result\n\
    \    }\n\n    // Convert a list of integers to a string\n    // >>> listToString(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def listToString(l : List[Int]) : String = {\n \
    \       var result = \"\"\n        for (i <- 0 until l.length) {\n           \
    \ result += l(i)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of doubles\n    // >>> stringToList(\"123.45\")\n    // List[Double](1.2345,\
    \ 2.345, 3.45)\n    def stringToList(s : String) : List[Double] = {\n        var\
    \ result = List[Double]().setPrefix(s.length)\n        for (i", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i <- 0 until strings.size - 1) {\n                result = result\
    \ + strings.apply(i)\n            }\n            result\n        }\n    }\n\n\
    \    // Convert a string to a list of strings\n    // >>> toList(\"\")\n    //\
    \ (List[String]())\n    // >>> toList(\"a\")\n    // (List[String](\"a\"))\n \
    \   // >>> toList(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n   \
    \ def toList(s : String) : List[String] = {\n        if (s.isEmpty()) {\n    \
    \        List[String]()\n        } else {\n            List[String](s.split(\"\
    ,\"))\n        }\n    }\n\n    // Convert a list of strings to a string\n    //\
    \ >>> fromList(List[String]())\n    // \"\"\n    // >>> fromList(List[String](\"\
    a\", \"b\", \"c\"))\n    // \"abc\"\n    def fromList(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            var result = \"\"\n            for (i <- 0 until strings.size\
    \ - 1) {\n                result = result + strings.apply(i)\n            }\n\
    \            result\n        }\n    }\n\n    // Convert a string to a list of\
    \ integers\n    // >>> toList(\"\")\n    // (List[Int]())\n    // >>> toList(\"\
    1\")\n    // (List[Int](1))\n    // >>> toList(\"1,2,3\")\n    // (List[Int](1,\
    \ 2, 3))\n    def toList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.split(\"\
    ,\").map(_.toInt))\n        }\n    }\n\n    // Convert a list of integers to a\
    \ string\n    // >>> fromList(List[Int]())\n    // \"\"\n    // >>> fromList(List[Int](1,\
    \ 2, 3", "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n\
    \            strings.head + concatenate(strings.tail)\n        }\n    }\n\n  \
    \  // Convert a string to a list of words\n    // >>> words(\"Hello, world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n\
    \        s.split(\" \")\n    }\n\n    // Convert a list of words to a single string\n\
    \    // >>> sentence(\"Hello, world!\")\n    // \"Hello, world!\"\n    def sentence(words\
    \ : List[String]) : String = {\n        concatenate(words)\n    }\n\n    // Compute\
    \ factorial of a non-negative integer\n    // >>> factorial(0)\n    // 1\n   \
    \ // >>> factorial(1)\n    // 1\n    // >>> factorial(2)\n    // 2\n    // >>>\
    \ factorial(3)\n    // 6\n    def factorial(n : Int) : Int = {\n        if (n\
    \ < 0) {\n            throw new IllegalArgumentException(\"Negative factorial\"\
    )\n        } else if (n == 0) {\n            1\n        } else {\n           \
    \ n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares\
    \ of the first ten natural numbers\n    // >>> sum_of_squares(1)\n    // 1\n \
    \   // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Int) : Int\
    \ = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"\
    Negative sum of squares\")\n        } else if (n == 0) {\n            0\n    \
    \    } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n\
    \    // Compute the sum of the cubes of the first ten natural numbers\n    //\
    \ >>> sum_of_cubes(1)\n    // 1\n    // >>> sum_of_cubes(10)\n    // 1225\n  \
    \  def sum_of_cubes(n : Int) : Int = {\n        if (n < 0) {\n            throw\
    \ new IllegalArgument", "        if (strings.isEmpty()) {\n            \"\"\n\
    \        } else {\n            strings.head + concatenate(strings.tail)\n    \
    \    }\n    }\n\n    // Convert a string to a list of characters\n    // >>> stringToList(\"\
    \")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def stringToList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray)\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            \"\"\
    \n        } else {\n            String(chars.toArray)\n        }\n    }\n\n  \
    \  // Convert a string to a list of integers\n    // >>> stringToList(\"\")\n\
    \    // List[Int]()\n    // >>> stringToList(\"123\")\n    // List[Int](1, 2,\
    \ 3)\n    def stringToList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.toCharArray).map(c\
    \ -> c - '0')\n        }\n    }\n\n    // Convert a list of integers to a string\n\
    \    // >>> listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(ints\
    \ : List[Int]) : String = {\n        if (ints.isEmpty()) {\n            \"\"\n\
    \        } else {\n            String(ints.toArray)\n        }\n    }\n\n    //\
    \ Convert a string to a list of doubles\n    // >>> stringToList(\"\")\n    //\
    \ List[Double]()\n    // >>> stringToList(\"123.45\")\n    // List[Double](123.45)\n\
    \    def stringToList(s : String) : List[Double] =", "        var result = \"\"\
    \n        for (i <- 0 until strings.size) {\n            result += strings.apply(i)\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of characters\n\
    \    // >>> stringToList(\"abc\")\n    // List[Char](\"a\", \"b\", \"c\")\n  \
    \  def stringToList(s : String) : List[Char] = {\n        var result = List[Char]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length) {\n            result = result.updated(i,\
    \ s.apply(i))\n        }\n        result\n    }\n\n    // Convert a list of characters\
    \ to a string\n    // >>> listToString(List[Char](\"a\", \"b\", \"c\"))\n    //\
    \ \"abc\"\n    def listToString(chars : List[Char]) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 until chars.size) {\n            result +=\
    \ chars.apply(i)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of integers\n    // >>> stringToList(\"123\")\n    // List[Int]()\n\
    \    def stringToList(s : String) : List[Int] = {\n        var result = List[Int]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length) {\n            result = result.updated(i,\
    \ s.apply(i).toInt)\n        }\n        result\n    }\n\n    // Convert a list\
    \ of integers to a string\n    // >>> listToString(List[Int]())\n    // \"\"\n\
    \    def listToString(ints : List[Int]) : String = {\n        var result = \"\"\
    \n        for (i <- 0 until ints.size) {\n            result += ints.apply(i).toString\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of doubles\n\
    \    // >>> stringToList(\"123.45\")\n    // List[Double]()\n    def stringToList(s\
    \ : String) : List[Double] = {\n        var result = List[Double]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length) {", "        if (strings.isEmpty()) {\n \
    \           return \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        return s.reverse()\n\
    \    }\n\n    // Reverse a list\n    // >>> reverse(List[String](\"abc\"))\n \
    \   // List[String](\"cba\")\n    def reverseList(list : List[String]) : List[String]\
    \ = {\n        return list.reverse()\n    }\n\n    // Convert a string to lower\
    \ case\n    // >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) :\
    \ String = {\n        return s.toLowerCase()\n    }\n\n    // Convert a string\
    \ to upper case\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s :\
    \ String) : String = {\n        return s.toUpperCase()\n    }\n\n    // Convert\
    \ a string to title case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s\
    \ : String) : String = {\n        return s.toUpper().replaceAll(\"\\\\s\", \"\
    \ \")\n    }\n\n    // Convert a string to camel case\n    // >>> camel(\"abc\"\
    )\n    // \"abc\"\n    def camel(s : String) : String = {\n        return s.toLower().replaceAll(\"\
    (.)([A-Z][a-z]+)\", \"$1$2\").replaceAll(\"^(.)\", \"$1\").replaceAll(\"\\\\s+\"\
    , \" \")\n    }\n\n    // Convert a string to snake case\n    // >>> snake(\"\
    abc\")\n    // \"abc\"\n    def snake(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"([a-z])([A-Z])\", \"$1_$2\").replaceAll(\"^(.)\", \"\
    $1\").replaceAll(\"\\\\s+\", \" \")\n    }\n\n    // Convert a string to pascal\
    \ case\n    // >>> pascal(\"abc\")\n    // \"Abc\"\n    def pascal(s : String)\
    \ : String =", "        if (strings.isEmpty()) {\n            return \"\"\n  \
    \      } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(\"Hello\", \"world\")\n    // \"Hello\
    \ world\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ concatenate(words)\n    }\n\n    // Convert a string to a list of words\n  \
    \  // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s\
    \ : String) : List[String] = {\n        return s.split(\" \")\n    }\n\n    //\
    \ Convert a list of words to a single string\n    // >>> sentence(\"Hello\", \"\
    world\")\n    // \"Hello world\"\n    def sentence(words : List[String]) : String\
    \ = {\n        return concatenate(words)\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a list of words to a single string\n    // >>> sentence(\"\
    Hello\", \"world\")\n    // \"Hello world\"\n    def sentence(words : List[String])\
    \ : String = {\n        return concatenate(words)\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"\
    world\"]\n    def words(s : String) : List[String] = {\n        return s.split(\"\
    \ \")\n    }\n\n    // Convert a list of words to a single string\n    // >>>\
    \ sentence(\"Hello\", \"world\")\n    // \"Hello world\"\n    def sentence(words\
    \ : List[String]) : String = {\n        return concatenate(words)\n    }\n\n \
    \   // Convert a string to a list of words\n    // >>> words(\"", "        if\
    \ (strings.isEmpty()) {\n            \"\"\n        } else {\n            strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Reverse a string\n \
    \   // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String) : String\
    \ = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n      \
    \      s.reverse() + s.reverse()\n        }\n    }\n\n    // Compute the length\
    \ of a string\n    // >>> len(\"abc\")\n    // 3\n    def len(s : String) : Int\
    \ = {\n        if (s.isEmpty()) {\n            0\n        } else {\n         \
    \   1 + len(s.tail)\n        }\n    }\n\n    // Compute the length of a list\n\
    \    // >>> len(List[String](\"a\", \"b\", \"c\"))\n    // 3\n    def lenList(strings\
    \ : List[String]) : Int = {\n        if (strings.isEmpty()) {\n            0\n\
    \        } else {\n            1 + lenList(strings.tail)\n        }\n    }\n\n\
    \    // Compute the length of a list of lists\n    // >>> lenList(List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\"))))\n    // 2\n    def lenListOfLists(lists : List[List[String]])\
    \ : Int = {\n        if (lists.isEmpty()) {\n            0\n        } else {\n\
    \            1 + lenListOfLists(lists.tail)\n        }\n    }\n\n    // Compute\
    \ the length of a list of maps\n    // >>> lenList(List[Map[String, String]](Map[String,\
    \ String]((\"a\", \"b\"), (\"c\", \"d\"))))\n    // 2\n    def lenListOfMaps(maps\
    \ : List[Map[String, String]]) : Int = {\n        if (maps.isEmpty()) {\n    \
    \        0\n        } else {\n            1 + lenListOfMaps(maps.tail)\n     \
    \   }\n    }\n\n    // Compute the length of a list of ints\n    // >>> lenList(List[Int](1,\
    \ 2, 3))\n    // 3\n", "        var result = \"\"\n        for (s in strings)\
    \ {\n            result += s\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello world!\")\n  \
    \  // [\"Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n \
    \       var result = List[String]()\n        var index = 0\n        while (index\
    \ < s.length) {\n            var end = s.indexOf(\" \", index)\n            if\
    \ (end == -1) {\n                end = s.length\n            }\n            result\
    \ = result.append(s.substring(index, end))\n            index = end + 1\n    \
    \    }\n        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words2(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var end = s.indexOf(\"\
    \ \", index)\n            if (end == -1) {\n                end = s.length\n \
    \           }\n            result = result.append(s.substring(index, end))\n \
    \           index = end + 1\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello world!\")\n  \
    \  // [\"Hello\", \"world\"]\n    def words3(s : String) : List[String] = {\n\
    \        var result = List[String]()\n        var index = 0\n        while (index\
    \ < s.length) {\n            var end = s.indexOf(\" \", index)\n            if\
    \ (end == -1) {\n                end = s.length\n            }\n            result\
    \ = result.append(s.substring(index, end))\n            index = end + 1\n    \
    \    }\n        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words4(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index", "        if (strings.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Reverse a list of strings\n    // >>> reverse(List[String](\"a\", \"b\"\
    , \"c\"))\n    // (List[String](\"c\", \"b\", \"a\"))\n    def reverse(strings\
    \ : List[String]) : List[String] = {\n        if (strings.isEmpty()) {\n     \
    \       List[String]()\n        } else {\n            List[String](strings.tail\
    \ + reverse(strings.tail))\n        }\n    }\n\n    // Convert a list of strings\
    \ to a list of integers\n    // >>> toInts(List[String](\"1\", \"2\", \"3\"))\n\
    \    // (List[Int]1, 2, 3)\n    def toInts(strings : List[String]) : List[Int]\
    \ = {\n        if (strings.isEmpty()) {\n            List[Int]()\n        } else\
    \ {\n            List[Int](strings.map(Integer).toSeq)\n        }\n    }\n\n \
    \   // Convert a list of strings to a list of doubles\n    // >>> toDoubles(List[String](\"\
    1\", \"2\", \"3\"))\n    // (List[Double]1.0, 2.0, 3.0)\n    def toDoubles(strings\
    \ : List[String]) : List[Double] = {\n        if (strings.isEmpty()) {\n     \
    \       List[Double]()\n        } else {\n            List[Double](strings.map(Double).toSeq)\n\
    \        }\n    }\n\n    // Convert a list of strings to a list of booleans\n\
    \    // >>> toBools(List[String](\"True\", \"False\", \"True\"))\n    // (List[Boolean]true,\
    \ false, true)\n    def toBools(strings : List[String]) : List[Boolean] = {\n\
    \        if (strings.isEmpty()) {\n            List[Boolean]()\n        } else\
    \ {\n            List[Boolean](strings.map(Boolean).toSeq)\n        }\n    }\n\
    \n    // Convert a list of strings to a list of strings\n    // >>> toStrings",
  "        if (strings.isEmpty()) {\n            return \"\"\n        } else {\n \
    \           return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(String(\"this is\
    \ a test\"))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String)\
    \ : List[String] = {\n        return s.split(\" \")\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(String(\"this is a test\"))\n  \
    \  // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"\
    is\", \"a\", \"test\"]\n    def words(s : String) : List[String] = {\n       \
    \ return s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"is\", \"a\"\
    , \"test\"]\n    def words(s : String) : List[String] = {\n        return s.split(\"\
    \ \")\n    }\n\n    // Convert a string to a list of words\n    // >>> words(String(\"\
    this is a test\"))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        return s.split(\" \")\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(String(\"this is a test\"\
    ))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"\
    is\", \"a\", \"test\"]\n    def words(s : String) : List[String] = {\n       \
    \ return s.split(\" \")\n    }\n\n    // Convert", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(concatenate(List[String](\"\
    This is a test\")))\n    // [\"This\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(concatenate(List[String](\"\
    This is a test\")))\n    // [\"This\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(concatenate(List[String](\"\
    This is a test\")))\n    // [\"This\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(concatenate(List[String](\"\
    This is a test\")))\n    // [\"This\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(concatenate(List[String](\"\
    This is a test\")))\n    // [\"This\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) :", "        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head + concatenate(strings.tail)\n        }\n  \
    \  }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"Hello\", \"world\", \"!\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"\
    Hello\", \"world\", \"!\"]\n    def words2(s : String) : List[String] = {\n  \
    \      if (s.isEmpty()) {\n            List[String]()\n        } else {\n    \
    \        List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"\
    world\", \"!\"]\n    def words3(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\", \"!\"]\n    def words4(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"Hello\", \"world\", \"!\"]\n    def words5(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"\
    Hello", "        var result = \"\"\n        for (i <- 0 until strings.size) {\n\
    \            result += strings(i)\n        }\n        result\n    }\n\n    //\
    \ Convert a string to a list of characters\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char](\"a\", \"b\", \"c\")\n    def stringToList(s : String) : List[Char]\
    \ = {\n        var result = List[Char]().setEmpty()\n        for (i <- 0 until\
    \ s.length) {\n            result += List[Char](s(i))\n        }\n        result\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> listToString(List[Char](\"\
    a\", \"b\", \"c\"))\n    // \"abc\"\n    def listToString(l : List[Char]) : String\
    \ = {\n        var result = \"\"\n        for (i <- 0 until l.size) {\n      \
    \      result += l(i)\n        }\n        result\n    }\n\n    // Convert a list\
    \ of integers to a string\n    // >>> listToString(List[Int](1, 2, 3))\n    //\
    \ \"123\"\n    def listToString(l : List[Int]) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until l.size) {\n            result += l(i)\n  \
    \      }\n        result\n    }\n\n    // Convert a string to a list of integers\n\
    \    // >>> stringToList(\"123\")\n    // List[Int](1, 2, 3)\n    def stringToList(s\
    \ : String) : List[Int] = {\n        var result = List[Int]().setEmpty()\n   \
    \     for (i <- 0 until s.length) {\n            result += Int(s(i))\n       \
    \ }\n        result\n    }\n\n    // Convert a list of integers to a string\n\
    \    // >>> listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(l\
    \ : List[Int]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ l.size) {\n            result += l(i)\n        }\n        result\n    }\n\n\
    \    // Convert a list of strings to a string", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a list of words to a single string\n    // >>> sentence(\"\
    Hello\", \"world\")\n    // \"Hello world\"\n    def sentence(words : List[String])\
    \ : String = {\n        return concatenate(words)\n    }\n\n    // Compute the\
    \ length of a list of words\n    // >>> length(words(\"Hello world\"))\n    //\
    \ 5\n    def length(words : List[String]) : Int = {\n        return words.length\n\
    \    }\n\n    // Compute the length of a string\n    // >>> length(\"Hello world\"\
    )\n    // 11\n    def length(s : String) : Int = {\n        return s.length\n\
    \    }\n\n    // Compute the sum of the lengths of the words in a string\n   \
    \ // >>> sum(length(words(\"Hello world\")))\n    // 11\n    def sum(s : String)\
    \ : Int = {\n        return sum(words(s))\n    }\n\n    // Compute the product\
    \ of the lengths of the words in a string\n    // >>> product(length(words(\"\
    Hello world\")))\n    // 3628800\n    def product(s : String) : Int = {\n    \
    \    return product(words(s))\n    }\n\n    // Compute the sum of the squares\
    \ of the lengths of the words in a string\n    // >>> sum(map(square, length(words(\"\
    Hello world\"))))\n    // 225\n    def sum(s : String) : Int = {\n        return\
    \ sum(map(square, words(s)))\n    }\n\n    // Compute the product of the squares\
    \ of the lengths of the words in a string\n    // >>> product(map(square, length(words(\"\
    Hello world\"))))\n    // 3628800\n    def product(s : String) : Int = {\n   \
    \     return product(map(square, words(s)))\n    }\n\n", "        var result =\
    \ \"\"\n        for (s in strings) {\n            result += s\n        }\n   \
    \     return result\n    }\n\n    // Convert a string to a list of words\n   \
    \ // >>> words(\"Hello, world!\")\n    // [\"Hello\", \"world\"]\n    def words(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var next = s.indexOf(\"\
    \ \", index)\n            if (next < 0) {\n                result = result.append(s.substring(index))\n\
    \                break\n            } else {\n                result = result.append(s.substring(index,\
    \ next))\n                index = next\n            }\n        }\n        return\
    \ result\n    }\n\n    // Convert a string to a list of words, ignoring punctuation\n\
    \    // >>> words_ignore_punctuation(\"Hello, world!\")\n    // [\"Hello\", \"\
    world\"]\n    def words_ignore_punctuation(s : String) : List[String] = {\n  \
    \      var result = List[String]()\n        var index = 0\n        while (index\
    \ < s.length) {\n            var next = s.indexOf(\" \", index)\n            if\
    \ (next < 0) {\n                result = result.append(s.substring(index))\n \
    \               break\n            } else {\n                var next_punct =\
    \ s.indexOf(\".\", index)\n                if (next_punct < 0 || next_punct >\
    \ next) {\n                    result = result.append(s.substring(index, next))\n\
    \                    index = next\n                } else {\n                \
    \    index = next_punct + 1\n                }\n            }\n        }\n   \
    \     return result\n    }\n\n    // Convert a string to a list of words, ignoring\
    \ punctuation and capitalization\n    // >>> words_ignore_punctuation_capitalize(\"\
    Hello, world!\")\n    // [\"Hello\", \"world\"]\n    def words_ignore_punctuation_capitalize(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var next = s.", " \
    \       if (strings.isEmpty()) {\n            \"\"\n        } else {\n       \
    \     strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\
    \")\n    // []\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n\
    \    // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            []\n        } else {\n            s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words('')\n    // []\n    // >>> words(\"\")\n    // []\n    // >>>\
    \ words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            []\n        } else\
    \ {\n            s.split(\" \").toList\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          []\n        } else {\n            s.split(\" \").toList\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n \
    \   // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) :", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ])\n    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ])\n    def words2(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ])\n    def words3(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ])\n    def words4(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ])\n    def words5(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n", "        var result = \"\"\n        for (s in strings) {\n  \
    \          result += s\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        var result\
    \ = List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var word = \"\"\n            while (index < s.length && s[index]\
    \ != ' ') {\n                word += s[index]\n                index += 1\n  \
    \          }\n            result += word\n            if (index < s.length) {\n\
    \                index += 1\n            }\n        }\n        return result\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var word = \"\"\n            while (index\
    \ < s.length && s[index] != ' ') {\n                word += s[index]\n       \
    \         index += 1\n            }\n            result += word\n            if\
    \ (index < s.length) {\n                index += 1\n            }\n        }\n\
    \        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words3(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var word = \"\"\n\
    \            while (index < s.length && s[index] != ' ') {\n                word\
    \ += s[index]\n                index += 1\n            }\n            result +=\
    \ word\n            if (index < s.length) {\n                index += 1\n    \
    \        }\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"\
    world\"]\n    def words4(s : String) :", "        var result = \"\"\n        for\
    \ (i <- 0 until strings.length) {\n            result += strings(i)\n        }\n\
    \        result\n    }\n\n    // Concatenate list of strings into a single string\n\
    \    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n    // (\"abc\"\
    )\n    def concatenate(strings : List[String]) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until strings.length) {\n            result += strings(i)\n\
    \        }\n        result\n    }\n\n    // Concatenate list of strings into a\
    \ single string\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n\
    \    // (\"abc\")\n    def concatenate(strings : List[String]) : String = {\n\
    \        var result = \"\"\n        for (i <- 0 until strings.length) {\n    \
    \        result += strings(i)\n        }\n        result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.length)\
    \ {\n            result += strings(i)\n        }\n        result\n    }\n\n  \
    \  // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.length)\
    \ {\n            result += strings(i)\n        }\n        result\n    }\n\n  \
    \  // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.length)\
    \ {\n            result += strings(i)\n        }\n        result\n    }\n\n  \
    \  ", "        var result = \"\"\n        for (i <- 0 until strings.size - 1)\
    \ {\n            result += strings(i)\n        }\n        result\n    }\n\n  \
    \  // Convert a string to a list of characters\n    // >>> stringToList(\"abc\"\
    )\n    // List(a, b, c)\n    def stringToList(s : String) : List[Char] = {\n \
    \       var result = List[Char]().apply$mcZ$sp()\n        for (i <- 0 until s.length)\
    \ {\n            result = result.updated(i, s(i))\n        }\n        result\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> listToString(List(a,\
    \ b, c))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String =\
    \ {\n        var result = \"\"\n        for (i <- 0 until chars.size - 1) {\n\
    \            result += chars(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"123\")\n    // List(1,\
    \ 2, 3)\n    def stringToListInt(s : String) : List[Int] = {\n        var result\
    \ = List[Int]().apply$mcZ$sp()\n        for (i <- 0 until s.length) {\n      \
    \      result = result.updated(i, s(i).toInt)\n        }\n        result\n   \
    \ }\n\n    // Convert a list of integers to a string\n    // >>> listToString(List(1,\
    \ 2, 3))\n    // \"123\"\n    def listToStringInt(ints : List[Int]) : String =\
    \ {\n        var result = \"\"\n        for (i <- 0 until ints.size - 1) {\n \
    \           result += ints(i).toString\n        }\n        result\n    }\n\n \
    \   // Convert a string to a list of doubles\n    // >>> stringToList(\"123.45\"\
    )\n    // List(1.2345, 2.3455, 3.4555)\n    def stringToListDouble(s : String)\
    \ : List[Double] = {\n        var result = List[Double]().apply$mcZ$sp()\n   \
    \     for (", "        var result = \"\"\n        for (s in strings) {\n     \
    \       result += s\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        var result\
    \ = List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var end = s.indexOf(\" \", index)\n            if (end == -1) {\n\
    \                end = s.length\n            }\n            result += s.substring(index,\
    \ end)\n            index = end + 1\n        }\n        return result\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String] =\
    \ {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var end = s.indexOf(\" \", index)\n      \
    \      if (end == -1) {\n                end = s.length\n            }\n     \
    \       result += s.substring(index, end)\n            index = end + 1\n     \
    \   }\n        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words3(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var end = s.indexOf(\"\
    \ \", index)\n            if (end == -1) {\n                end = s.length\n \
    \           }\n            result += s.substring(index, end)\n            index\
    \ = end + 1\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"\
    world\"]\n    def words4(s : String) : List[String] = {\n        var result =\
    \ List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var", "        if (strings.isEmpty()) {\n            return \"\"\n\
    \        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        if (s.isEmpty()) {\n            return List.empty()\n        }\
    \ else {\n            return List.range(0, s.length() - 1).map(i => s.charAt(i))\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            return\
    \ \"\"\n        } else {\n            return chars.foldLeft(String.empty, (s,\
    \ c) => s + c)\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> stringToWords(\"\")\n    // List[String]()\n    // >>> stringToWords(\"\
    abc\")\n    // List[String](List[String](\"a\"), List[String](\"b\"), List[String](\"\
    c\"))\n    def stringToWords(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            return List.empty()\n        } else {\n            return List.range(0,\
    \ s.length()).map(i => s.substring(i, i + 1)).toList.map(Problem::stringToList).map(Problem::listToString)\n\
    \        }\n    }\n\n    // Convert a list of words to a string\n    // >>> wordsToString(List[String](List[String](\"\
    a\"), List[String](\"b\"), List[String](\"c\")))\n    // \"abc\"\n    def wordsToString(words\
    \ : List[String]) : String = {\n        if (words.isEmpty()) {\n            return",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Return\
    \ a list of strings with the first string repeated n times\n    // >>> repeat(1,\
    \ \"a\")\n    // (List[String](\"a\", \"a\", \"a\"))\n    // >>> repeat(2, \"\
    a\")\n    // (List[String](\"a\", \"aa\", \"aa\"))\n    def repeat(n : Int, string\
    \ : String) : List[String] = {\n        if (n == 0) {\n            List[String]()\n\
    \        } else {\n            List[String](string, repeat(n - 1, string))\n \
    \       }\n    }\n\n    // Return a list of strings with the first string repeated\
    \ n times\n    // >>> repeat(1, \"a\")\n    // (List[String](\"a\", \"a\", \"\
    a\"))\n    // >>> repeat(2, \"a\")\n    // (List[String](\"a\", \"aa\", \"aa\"\
    ))\n    def repeat2(n : Int, string : String) : List[String] = {\n        if (n\
    \ == 0) {\n            List[String]()\n        } else {\n            List[String](string,\
    \ repeat2(n - 1, string))\n        }\n    }\n\n    // Return a list of strings\
    \ with the first string repeated n times\n    // >>> repeat(1, \"a\")\n    //\
    \ (List[String](\"a\", \"a\", \"a\"))\n    // >>> repeat(2, \"a\")\n    // (List[String](\"\
    a\", \"aa\", \"aa\"))\n    def repeat3(n : Int, string : String) : List[String]\
    \ = {\n        if (n == 0) {\n            List[String]()\n        } else {\n \
    \           List[String](string, repeat3(n - 1, string))\n        }\n    }\n\n\
    \    // Return a list of strings with the first string repeated n times\n    //\
    \ >>> repeat(1, \"a\")\n    // (List[String](\"a\", \"a\", \"a\"))\n    // >>>\
    \ repeat(2, \"a\")\n    // (List[String](\"a\", \"aa\", \"", "        var result\
    \ = \"\"\n        for (i <- 0 until strings.size) {\n            result += strings(i)\n\
    \        }\n        result\n    }\n\n    // Return a list of strings from a string\n\
    \    // >>> split(\"abc\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def\
    \ split(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        for (i <- 0 until s.length) {\n            result += List[String](s.substring(i,\
    \ i + 1))\n        }\n        result\n    }\n\n    // Return a list of strings\
    \ from a string\n    // >>> split(\"abc\")\n    // (List[String](\"a\", \"b\"\
    , \"c\"))\n    def split2(s : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (i <- 0 until s.length) {\n            result +=\
    \ List[String](s.substring(i, i + 1))\n        }\n        result\n    }\n\n  \
    \  // Return a list of strings from a string\n    // >>> split(\"abc\")\n    //\
    \ (List[String](\"a\", \"b\", \"c\"))\n    def split3(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        for (i <- 0 until s.length)\
    \ {\n            result += List[String](s.substring(i, i + 1))\n        }\n  \
    \      result\n    }\n\n    // Return a list of strings from a string\n    //\
    \ >>> split(\"abc\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def split4(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until s.length) {\n            result += List[String](s.substring(i,\
    \ i + 1))\n        }\n        result\n    }\n\n    // Return a list of strings\
    \ from a string\n    // >>> split(\"abc\")\n    // (List[String](\"a\", \"b\"\
    , \"c\"))\n    def split5(s : String) : List[String] = {\n        var result =\
    \ List[String]", "        if (strings.isEmpty()) {\n            return \"\"\n\
    \        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Return a list of strings from a single string\n  \
    \  // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def\
    \ split(s : String) : List[String] = {\n        if (s.isEmpty()) {\n         \
    \   return List.empty[String]\n        } else {\n            return List(s.split(\"\
    ,\"))\n        }\n    }\n\n    // Return a list of strings from a single string\n\
    \    // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n   \
    \ def split_by_comma(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            return List.empty[String]\n        } else {\n            return\
    \ List(s.split(\",\"))\n        }\n    }\n\n    // Return a list of strings from\
    \ a single string\n    // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"\
    b\", \"c\"))\n    def split_by_space(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            return List.empty[String]\n        } else {\n \
    \           return List(s.split(\" \"))\n        }\n    }\n\n    // Return a list\
    \ of strings from a single string\n    // >>> split(\"a,b,c\")\n    // (List[String](\"\
    a\", \"b\", \"c\"))\n    def split_by_comma_and_space(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            return List.empty[String]\n   \
    \     } else {\n            return List(s.split(\",\" + \" \"))\n        }\n \
    \   }\n\n    // Return a list of strings from a single string\n    // >>> split(\"\
    a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def split_by_comma_and_space_and_comma(",
  "        var result = \"\"\n        for (i <- 0 until strings.length - 1) {\n  \
    \          result += strings(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of characters\n    // >>> stringToList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def stringToList(s : String) : List[Char] = {\n        var result\
    \ = List[Char]().setEmpty()\n        for (i <- 0 until s.length) {\n         \
    \   result += List[Char](s(i))\n        }\n        result\n    }\n\n    // Convert\
    \ a list of characters to a string\n    // >>> listToString(List[Char]('a', 'b',\
    \ 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String = {\n\
    \        var result = \"\"\n        for (i <- 0 until chars.length - 1) {\n  \
    \          result += chars(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def stringToList(s : String) : List[Int] = {\n        var result\
    \ = List[Int]().setEmpty()\n        for (i <- 0 until s.length) {\n          \
    \  result += Int(s(i) - '0')\n        }\n        result\n    }\n\n    // Convert\
    \ a list of integers to a string\n    // >>> listToString(List[Int](1, 2, 3))\n\
    \    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 until ints.length - 1) {\n          \
    \  result += Int(ints(i))\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of doubles\n    // >>> stringToList(\"123.45\")\n    // List[Double](1.2345,\
    \ 2.345, 3.45)\n    def stringToList(s : String) : List[Double] = {\n        var\
    \ result = List[Double]().setEmpty()\n        for (i <- 0 until s.", "       \
    \ if (strings.isEmpty()) {\n            \"\"\n        } else {\n            strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of characters\n    // >>> toList(\"\")\n    // List[Char]()\n    // >>>\
    \ toList(\"abc\")\n    // List[Char]('a', 'b', 'c')\n    def toList(s : String)\
    \ : List[Char] = {\n        if (s.isEmpty()) {\n            List[Char]()\n   \
    \     } else {\n            List[Char](s.toCharArray)\n        }\n    }\n\n  \
    \  // Convert a list of characters to a string\n    // >>> fromList(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def fromList(chars : List[Char]) : String =\
    \ {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n    \
    \        StringBuilder sb = new StringBuilder()\n            for (c : chars) {\n\
    \                sb.append(c)\n            }\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a list of integers\n    // >>>\
    \ toList(\"\")\n    // List[Int]()\n    // >>> toList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def toList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.chars().map(_.toInt).toSeq)\n\
    \        }\n    }\n\n    // Convert a list of integers to a string\n    // >>>\
    \ fromList(List[Int](1, 2, 3))\n    // \"123\"\n    def fromList(ints : List[Int])\
    \ : String = {\n        if (ints.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            StringBuilder sb = new StringBuilder()\n            for (i :\
    \ ints) {\n                sb.append(i)\n            }\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a list of strings\n    // >>>\
    \ to", "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n\
    \            strings.head._ + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate2(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head._ + concatenate2(strings.tail)\n        }\n\
    \    }\n\n    // Concatenate list of strings into a single string\n    // >>>\
    \ concatenate3(List[String](\"a\", \"b\", \"c\"))\n    // \"abc\"\n    def concatenate3(strings\
    \ : List[String]) : String = {\n        if (strings.isEmpty()) {\n           \
    \ \"\"\n        } else {\n            strings.head._ + concatenate3(strings.tail)\n\
    \        }\n    }\n\n    // Concatenate list of strings into a single string\n\
    \    // >>> concatenate4(List[String](\"a\", \"b\", \"c\"))\n    // \"abc\"\n\
    \    def concatenate4(strings : List[String]) : String = {\n        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate4(strings.tail)\n\
    \        }\n    }\n\n    // Concatenate list of strings into a single string\n\
    \    // >>> concatenate5(List[String](\"a\", \"b\", \"c\"))\n    // \"abc\"\n\
    \    def concatenate5(strings : List[String]) : String = {\n        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate5(strings.tail)\n\
    \        }\n    }\n\n    // Concatenate list of strings into a single string\n\
    \    // >>> concatenate6(List[String](\"a\", \"b\", \"c\"))\n    // \"abc\"\n\
    \    def concatenate6(strings : List[String]) : String = {\n        if (strings.isEmpty())\
    \ {\n            \"\"\n", "        var result = \"\"\n        for (s in strings)\
    \ {\n            result += s\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello, world!\")\n \
    \   // [\"Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n\
    \        var result = List[String]()\n        var index = 0\n        while (index\
    \ < s.length) {\n            var nextIndex = s.indexOf(\" \", index)\n       \
    \     if (nextIndex == -1) {\n                result = result + s.substring(index)\n\
    \                break\n            } else {\n                result = result\
    \ + s.substring(index, nextIndex)\n                index = nextIndex\n       \
    \     }\n        }\n        return result\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, world!\")\n    // [\"Hello\", \"\
    world\"]\n    def words2(s : String) : List[String] = {\n        var result =\
    \ List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var nextIndex = s.indexOf(\" \", index)\n            if (nextIndex\
    \ == -1) {\n                result = result + s.substring(index)\n           \
    \     break\n            } else {\n                result = result + s.substring(index,\
    \ nextIndex)\n                index = nextIndex\n            }\n        }\n  \
    \      return result\n    }\n\n    // Convert a string to a list of words\n  \
    \  // >>> words(\"Hello, world!\")\n    // [\"Hello\", \"world\"]\n    def words3(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var nextIndex = s.indexOf(\"\
    \ \", index)\n            if (nextIndex == -1) {\n                result = result\
    \ + s.substring(index)\n                break\n            } else {\n        \
    \        result = result + s.substring(index, nextIndex)\n                index\
    \ = nextIndex\n            }\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String]())\n\
    \    // List[String]()\n    // >>> reverse(List[String](\"a\", \"b\", \"c\"))\n\
    \    // List[String](\"c\", \"b\", \"a\")\n    def reverse(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](strings.tail + reverse(strings.init))\n\
    \        }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String]())\n\
    \    // List[String]()\n    // >>> reverse(List[String](\"a\", \"b\", \"c\"))\n\
    \    // List[String](\"c\", \"b\", \"a\")\n    def reverse2(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](reverse2(strings.tail) + strings.init)\n\
    \        }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String]())\n\
    \    // List[String]()\n    // >>> reverse(List[String](\"a\", \"b\", \"c\"))\n\
    \    // List[String](\"c\", \"b\", \"a\")\n    def reverse3(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](reverse3(strings.tail) + strings.init)\n\
    \        }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String]())\n\
    \    // List[String]()\n    // >>> reverse(List[String](\"a\", \"b\", \"c\"))\n\
    \    // List[String](\"c\", \"b\", \"a\")\n    def reverse4(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            List[String",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head._ + concatenate(strings.tail)\n        }\n    }\n\n    // Sum\
    \ of all elements in a list\n    // >>> sum(List[Int](1, 2, 3))\n    // 6\n  \
    \  def sum(ints : List[Int]) : Int = {\n        if (ints.isEmpty()) {\n      \
    \      0\n        } else {\n            ints.head + sum(ints.tail)\n        }\n\
    \    }\n\n    // Find the sum of all elements in a list\n    // >>> findSum(List[Int](1,\
    \ 2, 3))\n    // 6\n    def findSum(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            0\n        } else {\n            findSum(ints.tail) + ints.head\n\
    \        }\n    }\n\n    // Find the product of all elements in a list\n    //\
    \ >>> findProduct(List[Int](1, 2, 3))\n    // 6\n    def findProduct(ints : List[Int])\
    \ : Int = {\n        if (ints.isEmpty()) {\n            1\n        } else {\n\
    \            findProduct(ints.tail) * ints.head\n        }\n    }\n\n    // Find\
    \ the maximum value in a list\n    // >>> findMax(List[Int](1, 2, 3))\n    //\
    \ 3\n    def findMax(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            0\n        } else {\n            findMax(ints.tail) > ints.head\
    \ ? findMax(ints.tail) : ints.head\n        }\n    }\n\n    // Find the minimum\
    \ value in a list\n    // >>> findMin(List[Int](1, 2, 3))\n    // 1\n    def findMin(ints\
    \ : List[Int]) : Int = {\n        if (ints.isEmpty()) {\n            0\n     \
    \   } else {\n            findMin(ints.tail) < ints.head ? findMin(ints.tail)\
    \ : ints.head\n        }\n    }\n\n    // Find the maximum value in a list\n \
    \   // >>> findMax(List[Double](1.", "        if (strings.isEmpty()) {\n     \
    \       \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        def toWord(c : Char) : String = {\n            if (c == ' ') {\n\
    \                \"\"\n            } else {\n                c\n            }\n\
    \        }\n        s.split(\" \").toList.map(toWord).toList\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World\")\n   \
    \ // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n \
    \       s.split(\" \").toList\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        s.split(\" \").toList\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World\")\n   \
    \ // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] = {\n \
    \       s.split(\" \").toList\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words5(s\
    \ : String) : List[String] = {\n        s.split(\" \").toList\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World\")\n   \
    \ // [\"Hello\", \"World\"]\n    def words6(s : String) : List[String] = {\n \
    \       s.split(\" \").toList\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words7(s\
    \ : String) : List[String] = {\n        s.split(\" \").toList\n    }\n\n    //\
    \ Convert a string to a list of words\n    ", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        def toWord(c : Char) : String = {\n            if (c == ' ') {\n\
    \                \"\"\n            } else {\n                c + toWord(s.charAt(s.indexOf(c)\
    \ + 1))\n            }\n        }\n        s.split(\" \").map(toWord)\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words2(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String] =\
    \ {\n        s.split(\" \").toList\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words3(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words3(s : String) : List[String] = {\n        s.split(\" \").toIterator.toList\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words4(\"Hello\
    \ World\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String]\
    \ = {\n        s.split(\" \").toIterator.toList\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words5(\"Hello World\")\n    // [\"Hello\", \"\
    World\"]\n    def words5(s : String) : List[String] = {\n        s.split(\" \"\
    ).toIterator.toList\n    }\n\n    // Convert a string to a list of words\n   \
    \ // >>> words6(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String) : List[String] = {\n        s.split(\" \").toIterator.toList\n   \
    \ }\n\n    // Convert a string to a list of words\n    // >>> words7(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words7(s : String) :", "        var\
    \ result = \"\"\n        for (i <- 0 until strings.length - 1) {\n           \
    \ result += strings(i)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello, world!\")\n    // (List[String](\"\
    Hello\", \"world\"))\n    def words(s : String) : List[String] = {\n        var\
    \ result = List[String]()\n        var index = 0\n        while (index < s.length)\
    \ {\n            var next = s.indexOf(\",\", index)\n            if (next == -1)\
    \ {\n                next = s.length\n            }\n            result += s.substring(index,\
    \ next)\n            index = next + 1\n        }\n        result\n    }\n\n  \
    \  // Convert a string to a list of words\n    // >>> words(\"Hello, world!\"\
    )\n    // (List[String](\"Hello\", \"world\"))\n    def words2(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var next = s.indexOf(\" \", index)\n     \
    \       if (next == -1) {\n                next = s.length\n            }\n  \
    \          result += s.substring(index, next)\n            index = next + 1\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello, world!\")\n    // (List[String](\"Hello\", \"world\"\
    ))\n    def words3(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var next\
    \ = s.indexOf(\" \", index)\n            if (next == -1) {\n                next\
    \ = s.length\n            }\n            result += s.substring(index, next)\n\
    \            index = next + 1\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello, world!\")\n    // (List[String](\"\
    Hello\", \"world\"))\n    def words4(s : String) : List[", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\",\
    \ \"is\", \"John\"]\n    def words2(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\",\
    \ \"is\", \"John\"]\n    def words3(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\",\
    \ \"is\", \"John\"]\n    def words4(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\",\
    \ \"is\", \"John\"]\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Reverse a string\n \
    \   // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String) : String\
    \ = {\n        return s.reverse()\n    }\n\n    // Convert a string to lower case\n\
    \    // >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) : String\
    \ = {\n        return s.toLowerCase()\n    }\n\n    // Convert a string to upper\
    \ case\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) :\
    \ String = {\n        return s.toUpperCase()\n    }\n\n    // Convert a string\
    \ to title case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s :\
    \ String) : String = {\n        return s.toTitleCase()\n    }\n\n    // Convert\
    \ a string to camel case\n    // >>> camel(\"abc\")\n    // \"abc\"\n    def camel(s\
    \ : String) : String = {\n        return s.toCamelCase()\n    }\n\n    // Convert\
    \ a string to snake case\n    // >>> snake(\"abc\")\n    // \"abc\"\n    def snake(s\
    \ : String) : String = {\n        return s.toSnakeCase()\n    }\n\n    // Convert\
    \ a string to pascal case\n    // >>> pascal(\"abc\")\n    // \"Abc\"\n    def\
    \ pascal(s : String) : String = {\n        return s.toPascalCase()\n    }\n\n\
    \    // Convert a string to kebab case\n    // >>> kebab(\"abc\")\n    // \"abc\"\
    \n    def kebab(s : String) : String = {\n        return s.toKebabCase()\n   \
    \ }\n\n    // Convert a string to space case\n    // >>> space(\"abc\")\n    //\
    \ \"abc\"\n    def space(s : String) : String = {\n        return s.toSpaceCase()\n\
    \    }\n\n    // Convert a string to camel case\n    // >>> camel(\"abc\")\n \
    \   // \"abc\"\n    def camel(s", "        var result = \"\"\n        for (s in\
    \ strings) {\n            result += s\n        }\n        return result\n    }\n\
    \n    // Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def\
    \ reverse(s : String) : String = {\n        var result = \"\"\n        for (i\
    \ in range(len(s) - 1, -1, -1)) {\n            result += s[i]\n        }\n   \
    \     return result\n    }\n\n    // Convert a string to lower case\n    // >>>\
    \ lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) : String = {\n   \
    \     return s.toLowerCase()\n    }\n\n    // Convert a string to upper case\n\
    \    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) : String\
    \ = {\n        return s.toUpperCase()\n    }\n\n    // Convert a string to title\
    \ case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s : String) :\
    \ String = {\n        return s.toUpper().replaceAll(\"\\\\s\", \" \")\n    }\n\
    \n    // Convert a string to camel case\n    // >>> camel(\"abc\")\n    // \"\
    abc\"\n    def camel(s : String) : String = {\n        return s.replaceAll(\"\
    (.)([A-Z][a-z]+)\", \"$1$2\").toLowerCase()\n    }\n\n    // Convert a string\
    \ to snake case\n    // >>> snake(\"abc\")\n    // \"abc\"\n    def snake(s :\
    \ String) : String = {\n        return s.replaceAll(\"([a-z])([A-Z])\", \"$1_$2\"\
    ).toLowerCase()\n    }\n\n    // Convert a string to pascal case\n    // >>> pascal(\"\
    abc\")\n    // \"Abc\"\n    def pascal(s : String) : String = {\n        return\
    \ s.replaceAll(\"(.)([A-Z])\", \"$1$2\").toUpperCase()\n    }\n\n    // Convert\
    \ a string to kebab case\n    // >>> kebab(\"abc\")\n    // \"abc\"\n    def kebab(s\
    \ : String) : String =", "        if (strings.isEmpty()) {\n            \"\"\n\
    \        } else {\n            strings.head + concatenate(strings.tail)\n    \
    \    }\n    }\n\n    // Return the length of a string\n    // >>> len(\"abc\"\
    )\n    // 3\n    def len(s : String) : Int = {\n        if (s.isEmpty()) {\n \
    \           0\n        } else {\n            1 + len(s.tail)\n        }\n    }\n\
    \n    // Return the length of a list\n    // >>> len(List[String](\"a\", \"b\"\
    , \"c\"))\n    // 3\n    def lenList(l : List[String]) : Int = {\n        if (l.isEmpty())\
    \ {\n            0\n        } else {\n            1 + lenList(l.tail)\n      \
    \  }\n    }\n\n    // Return the length of a list of lists\n    // >>> lenList(List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\"))))\n    // 2\n    def lenListOfLists(ll : List[List[String]])\
    \ : Int = {\n        if (ll.isEmpty()) {\n            0\n        } else {\n  \
    \          1 + lenListOfLists(ll.tail)\n        }\n    }\n\n    // Return the\
    \ length of a list of maps\n    // >>> lenList(List[Map[String, String]](Map[String,\
    \ String]((\"a\", \"b\"), (\"c\", \"d\"))))\n    // 2\n    def lenListOfMaps(ml\
    \ : List[Map[String, String]]) : Int = {\n        if (ml.isEmpty()) {\n      \
    \      0\n        } else {\n            1 + lenListOfMaps(ml.tail)\n        }\n\
    \    }\n\n    // Return the length of a list of ints\n    // >>> lenList(List[Int](1,\
    \ 2, 3))\n    // 3\n    def lenListOfInts(il : List[Int]) : Int = {\n        if\
    \ (il.isEmpty()) {\n            0\n        } else {\n            1 + lenListOfInts(il.tail)\n\
    \        }\n    }\n\n    // Return the length of a list of doubles\n    // >>>\
    \ lenList(", "        if (strings.isEmpty()) {\n            return \"\"\n    \
    \    } else {\n            return strings.head + concatenate(strings.tail)\n \
    \       }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(words(\"Hello World\"))\n    // \"Hello\
    \ World\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ concatenate(words)\n    }\n\n    // Compute the length of a list of words\n\
    \    // >>> length(words(\"Hello World\"))\n    // 5\n    def length(words : List[String])\
    \ : Int = {\n        return words.length\n    }\n\n    // Convert a string to\
    \ a list of characters\n    // >>> chars(\"Hello World\")\n    // ['H', 'e', 'l',\
    \ 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']\n    def chars(s : String) : List[Char]\
    \ = {\n        return s.toCharArray()\n    }\n\n    // Compute the length of a\
    \ list of characters\n    // >>> length(chars(\"Hello World\"))\n    // 5\n  \
    \  def length(chars : List[Char]) : Int = {\n        return chars.length\n   \
    \ }\n\n    // Convert a list of characters to a string\n    // >>> string(chars(\"\
    Hello World\"))\n    // \"Hello World\"\n    def string(chars : List[Char]) :\
    \ String = {\n        return new String(chars)\n    }\n\n    // Compute the length\
    \ of a string\n    // >>> length(string(\"Hello World\"))\n    // 5\n    def length(s\
    \ : String) : Int = {\n        return s.length\n    }\n\n    // Compute the sum\
    \ of the first 100 integers\n    // >>> sum(range(100))\n    // 495\n    def sum(numbers\
    \ : Iterable[Int]) : Int = {\n        return _.sum(numbers)\n    }\n\n    // Compute\
    \ the product of the first", "        if (strings.isEmpty()) {\n            \"\
    \"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // []\n    // >>> stringToList(\"a\")\n    // [97]\n\
    \    // >>> stringToList(\"ab\")\n    // [97, 98]\n    def stringToList(s : String)\
    \ : List[Integer] = {\n        if (s.isEmpty()) {\n            List()\n      \
    \  } else {\n            List(s.charAt(0)) + stringToList(s.substring(1))\n  \
    \      }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString([])\n    // \"\"\n    // >>> listToString([97])\n    // \"a\"\n\
    \    // >>> listToString([97, 98])\n    // \"ab\"\n    def listToString(l : List[Integer])\
    \ : String = {\n        if (l.isEmpty()) {\n            \"\"\n        } else {\n\
    \            l.head._ + listToString(l.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> stringToWords(\"\")\n    // []\n   \
    \ // >>> stringToWords(\"a\")\n    // [[\"a\"]]\n    // >>> stringToWords(\"ab\"\
    )\n    // [[\"a\"], [\"b\"]]\n    // >>> stringToWords(\"a b\")\n    // [[\"a\"\
    ], [\"b\"]]\n    def stringToWords(s : String) : List[List[String]] = {\n    \
    \    if (s.isEmpty()) {\n            List()\n        } else {\n            List(s.split(\"\
    \ \")) + stringToWords(s.substring(s.indexOf(\" \") + 1))\n        }\n    }\n\n\
    \    // Convert a list of words to a string\n    // >>> wordsToString([])\n  \
    \  // \"\"\n    // >>> wordsToString([[\"a\"]])\n    // \"a\"\n    // >>> wordsToString([[\"\
    a\"], [\"b\"]])\n    // \"ab\"\n    // >>> wordsToString([[\"a\"], [\"b", "  \
    \      if (strings.isEmpty()) {\n            return \"\"\n        } else {\n \
    \           return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def\
    \ reverse(s : String) : String = {\n        return s.reverse()\n    }\n\n    //\
    \ Convert a string to lower case\n    // >>> lower(\"ABC\")\n    // \"abc\"\n\
    \    def lower(s : String) : String = {\n        return s.toLowerCase()\n    }\n\
    \n    // Convert a string to upper case\n    // >>> upper(\"abc\")\n    // \"\
    ABC\"\n    def upper(s : String) : String = {\n        return s.toUpperCase()\n\
    \    }\n\n    // Convert a string to title case\n    // >>> title(\"abc\")\n \
    \   // \"Abc\"\n    def title(s : String) : String = {\n        return s.toUpper().replaceAll(\"\
    \\\\s\", \" \")\n    }\n\n    // Convert a string to camel case\n    // >>> camel(\"\
    abc\")\n    // \"abc\"\n    def camel(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"\\\\s\", \"\")\n    }\n\n    // Convert a string to\
    \ snake case\n    // >>> snake(\"abc\")\n    // \"abc\"\n    def snake(s : String)\
    \ : String = {\n        return s.toLower().replaceAll(\"\\\\s\", \"_\")\n    }\n\
    \n    // Convert a string to pascal case\n    // >>> pascal(\"abc\")\n    // \"\
    Abc\"\n    def pascal(s : String) : String = {\n        return s.toUpper().replaceAll(\"\
    \\\\s\", \"\")\n    }\n\n    // Convert a string to kebab case\n    // >>> kebab(\"\
    abc\")\n    // \"abc\"\n    def kebab(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"\\\\s\", \"-\")\n    }\n\n    // Convert a string to\
    \ space case\n    // >>> space(\"abc\")\n    // \"abc\"\n    def space(s : String)\
    \ : String = {\n        return s.toLower", "        if (strings.isEmpty()) {\n\
    \            return \"\"\n        } else {\n            return strings.head +\
    \ concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to a\
    \ list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a list of words to a single string\n    // >>> sentence(\"\
    Hello\", \"World\")\n    // \"Hello World\"\n    def sentence(words : List[String])\
    \ : String = {\n        return concatenate(words)\n    }\n\n    // Compute the\
    \ length of a list of words\n    // >>> length(words(\"Hello World!\"))\n    //\
    \ 13\n    def length(words : List[String]) : Int = {\n        return words.length()\n\
    \    }\n\n    // Compute the length of a string\n    // >>> length(\"Hello World!\"\
    )\n    // 13\n    def length(s : String) : Int = {\n        return s.length()\n\
    \    }\n\n    // Compute the sum of the lengths of the words in a string\n   \
    \ // >>> sumLengths(\"Hello World!\")\n    // 13\n    def sumLengths(s : String)\
    \ : Int = {\n        return sum(map(length, words(s)))\n    }\n\n    // Compute\
    \ the product of the lengths of the words in a string\n    // >>> productLengths(\"\
    Hello World!\")\n    // 6\n    def productLengths(s : String) : Int = {\n    \
    \    return product(map(length, words(s)))\n    }\n\n    // Compute the sum of\
    \ the squares of the lengths of the words in a string\n    // >>> sumLengthSquares(\"\
    Hello World!\")\n    // 14\n    def sumLengthSquares(s : String) : Int = {\n \
    \       return sum(map(lengthSquared, words(s)))\n    }\n\n    // Compute the\
    \ product of the squares of the lengths of the words in a string\n    // >>> productLengthSquares(\"\
    Hello World!\")\n    // 6\n    def productLengthSquares(s : String) : Int = {\n\
    \        return product(map(lengthSquared", "        if (strings.isEmpty()) {\n\
    \            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"\")\n    // List[Char]()\n    // >>> toList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def toList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray())\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ fromList(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def fromList(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            \"\"\
    \n        } else {\n            StringBuilder sb = new StringBuilder()\n     \
    \       for (c : chars) {\n                sb.append(c)\n            }\n     \
    \       return sb.toString()\n        }\n    }\n\n    // Convert a string to a\
    \ list of integers\n    // >>> toList(\"\")\n    // List[Int]()\n    // >>> toList(\"\
    123\")\n    // List[Int](1, 2, 3)\n    def toList(s : String) : List[Int] = {\n\
    \        if (s.isEmpty()) {\n            List[Int]()\n        } else {\n     \
    \       List[Int](s.chars().map(_.toInt).toSeq().toJavaList())\n        }\n  \
    \  }\n\n    // Convert a list of integers to a string\n    // >>> fromList(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def fromList(ints : List[Int]) : String = {\n  \
    \      if (ints.isEmpty()) {\n            \"\"\n        } else {\n           \
    \ StringBuilder sb = new StringBuilder()\n            for (i : ints) {\n     \
    \           sb.append(i)\n            }\n            return sb.toString()\n  \
    \      }\n    }\n\n    // Convert a string to a list of doubles", "        if\
    \ (strings.isEmpty()) {\n            \"\"\n        } else {\n            strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n \
    \   // []\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          []\n        } else {\n            s.split(\" \").toList\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n \
    \   // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            []\n        } else {\n            s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words('')\n    // []\n    // >>> words(\"\")\n    // []\n    // >>>\
    \ words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            []\n        } else\
    \ {\n            s.split(\" \").toList\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          []\n        } else {\n            s.split(\" \").toList\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n \
    \   // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] =",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head._ + concatenate(strings.tail)\n        }\n    }\n\n    // Reverse\
    \ a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String)\
    \ : String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            s.reverse()\n        }\n    }\n\n    // Convert a string to lower\
    \ case\n    // >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) :\
    \ String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            s.toLowerCase()\n        }\n    }\n\n    // Convert a string to upper\
    \ case\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) :\
    \ String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            s.toUpperCase()\n        }\n    }\n\n    // Convert a string to title\
    \ case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s : String) :\
    \ String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            s.toUpper().replaceAll(\"(^|_)(.)\", \"$1 $2\")\n        }\n    }\n\
    \n    // Convert a string to camel case\n    // >>> camel(\"abc\")\n    // \"\
    abc\"\n    def camel(s : String) : String = {\n        if (s.isEmpty()) {\n  \
    \          \"\"\n        } else {\n            s.replaceAll(\"(^|_)(.)\", \"$1\
    \ $2\")\n        }\n    }\n\n    // Convert a string to snake case\n    // >>>\
    \ snake(\"abc\")\n    // \"abc\"\n    def snake(s : String) : String = {\n   \
    \     if (s.isEmpty()) {\n            \"\"\n        } else {\n            s.replaceAll(\"\
    (.)([A-Z][a-z]+)\", \"$1_$2\")\n        }\n    }\n\n    // Convert a string to\
    \ pascal case\n    // >>> pascal(\"abc\")\n    // \"Ab", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i <- 0 until strings.size - 1) {\n                result = result\
    \ + strings.apply(i)\n            }\n            result\n        }\n    }\n\n\
    \    // Return a list of strings from a string\n    // >>> split(\"a,b,c\")\n\
    \    // (List[String](\"a\", \"b\", \"c\"))\n    def split(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var i = 0\n        while (i\
    \ < s.length) {\n            var j = i\n            while (j < s.length && s.charAt(j)\
    \ != ',') {\n                j = j + 1\n            }\n            result = result\
    \ + s.substring(i, j)\n            i = j + 1\n        }\n        result\n    }\n\
    \n    // Return a list of strings from a string\n    // >>> split(\"a,b,c\")\n\
    \    // (List[String](\"a\", \"b\", \"c\"))\n    def split_with_empty(s : String)\
    \ : List[String] = {\n        var result = List[String]()\n        var i = 0\n\
    \        while (i < s.length) {\n            var j = i\n            while (j <\
    \ s.length && s.charAt(j) != ',') {\n                j = j + 1\n            }\n\
    \            result = result + s.substring(i, j)\n            i = j + 1\n    \
    \        if (i < s.length && s.charAt(i) == ',') {\n                i = i + 1\n\
    \            }\n        }\n        result\n    }\n\n    // Return a list of strings\
    \ from a string\n    // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\"\
    , \"c\"))\n    def split_with_empty_and_comma(s : String) : List[String] = {\n\
    \        var result = List[String]()\n        var i = 0\n        while (i < s.length)\
    \ {\n            var j = i\n            while (j < s.length && s.", "        var\
    \ result = \"\"\n        for (s in strings) {\n            result += s\n     \
    \   }\n        return result\n    }\n\n    // Reverse a string\n    // >>> reverse(\"\
    abc\")\n    // \"cba\"\n    def reverse(s : String) : String = {\n        var\
    \ result = \"\"\n        for (i in range(len(s) - 1, -1, -1)) {\n            result\
    \ += s[i]\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to lower case\n    // >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s :\
    \ String) : String = {\n        return s.toLowerCase()\n    }\n\n    // Convert\
    \ a string to upper case\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s\
    \ : String) : String = {\n        return s.toUpperCase()\n    }\n\n    // Convert\
    \ a string to title case\n    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s\
    \ : String) : String = {\n        return s.substring(0, 1).toUpper() + s.substring(1)\n\
    \    }\n\n    // Convert a string to camel case\n    // >>> camel(\"abc\")\n \
    \   // \"abc\"\n    def camel(s : String) : String = {\n        return s.substring(0,\
    \ 1).toLower() + s.substring(1)\n    }\n\n    // Convert a string to snake case\n\
    \    // >>> snake(\"abc\")\n    // \"abc\"\n    def snake(s : String) : String\
    \ = {\n        return s.substring(0, 1).toUpper() + s.substring(1)\n    }\n\n\
    \    // Convert a string to pascal case\n    // >>> pascal(\"abc\")\n    // \"\
    Abc\"\n    def pascal(s : String) : String = {\n        return s.substring(0,\
    \ 1).toUpper() + s.substring(1)\n    }\n\n    // Convert a string to kebab case\n\
    \    // >>> kebab(\"abc\")\n    // \"abc\"\n    def kebab(s : String) : String\
    \ = {\n        return s.replace(\" \",", "        if (strings.isEmpty()) {\n \
    \           \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // []\n    // >>> stringToList(\"a\")\n    // [97]\n\
    \    // >>> stringToList(\"ab\")\n    // [97, 98]\n    def stringToList(s : String)\
    \ : List[Integer] = {\n        if (s.isEmpty()) {\n            List.empty[List[Integer]]\n\
    \        } else {\n            List(s.charAt(0)) + stringToList(s.substring(1))\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString([])\n    // \"\"\n    // >>> listToString([97])\n    // \"a\"\n\
    \    // >>> listToString([97, 98])\n    // \"ab\"\n    def listToString(l : List[Integer])\
    \ : String = {\n        if (l.isEmpty()) {\n            \"\"\n        } else {\n\
    \            l.head._ + listToString(l.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> stringToWords(\"\")\n    // []\n   \
    \ // >>> stringToWords(\"a\")\n    // [[\"a\"]]\n    // >>> stringToWords(\"ab\"\
    )\n    // [[\"a\"], [\"b\"]]\n    // >>> stringToWords(\"abcd\")\n    // [[\"\
    a\"], [\"b\"], [\"c\"], [\"d\"]]\n    def stringToWords(s : String) : List[List[String]]\
    \ = {\n        if (s.isEmpty()) {\n            List.empty[List[List[String]]]\n\
    \        } else {\n            List(stringToWords(s.substring(0, 1))) + stringToWords(s.substring(1))\n\
    \        }\n    }\n\n    // Convert a list of words to a string\n    // >>> wordsToString([])\n\
    \    // \"\"\n    // >>> wordsToString([[\"a\"]])\n    // \"a\"\n    // >>> wordsToString([[\"\
    a\"], [\"b\"]", "        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head + concatenate(strings.tail)\n        }\n  \
    \  }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate2(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            concatenate(strings.tail) + strings.head\n        }\n  \
    \  }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate3(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            concatenate2(strings.tail) + strings.head\n        }\n \
    \   }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate4(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            concatenate3(strings.tail) + strings.head\n        }\n \
    \   }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate5(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            concatenate4(strings.tail) + strings.head\n        }\n \
    \   }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate6(strings : List[String])\
    \ : String = {\n        if (strings.isEmpty()) {\n            \"\"\n        }",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\
    \")\n    // []\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            []\n        } else {\n            s.split(\" \").toList\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n\
    \    // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            []\n        } else {\n            s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words('')\n    // []\n    // >>> words(\"\")\n    // []\n    // >>>\
    \ words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            []\n        } else\
    \ {\n            s.split(\" \").toList\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          []\n        } else {\n            s.split(\" \").toList\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n \
    \   // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] =",
  "        var result = \"\"\n        for (s in strings) {\n            result +=\
    \ s\n        }\n        return result\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\"]\n\
    \    def words(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var word = \"\"\n        for (c in s) {\n            if (c.isLetter())\
    \ {\n                word += c\n            } else {\n                if (word.length\
    \ > 0) {\n                    result += word\n                    word = \"\"\n\
    \                }\n            }\n        }\n        if (word.length > 0) {\n\
    \            result += word\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello world!\")\n  \
    \  // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String] = {\n\
    \        var result = List[String]()\n        var word = \"\"\n        for (c\
    \ in s) {\n            if (c.isLetter()) {\n                word += c\n      \
    \      } else {\n                if (word.length > 0) {\n                    result\
    \ += word\n                    word = \"\"\n                }\n            }\n\
    \        }\n        if (word.length > 0) {\n            result += word\n     \
    \   }\n        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words3(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ word = \"\"\n        for (c in s) {\n            if (c.isLetter()) {\n     \
    \           word += c\n            } else {\n                if (word.length >\
    \ 0) {\n                    result += word\n                    word = \"\"\n\
    \                }\n            }\n        }\n        if (word.length > 0) {\n\
    \            result += word\n        }\n        return result\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello world!\")\n  \
    \  // [\"Hello\", \"world\"]\n    def words4(s : String)", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        if (s.isEmpty()) {\n            List[Char]()\n        } else {\n\
    \            List[Char](s.toCharArray).init\n        }\n    }\n\n    // Convert\
    \ a list of characters to a string\n    // >>> listToString(List[Char]('a', 'b',\
    \ 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String = {\n\
    \        if (chars.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    String(chars.toArray).mkString(\"\")\n        }\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"\")\n    // List[Int]()\n\
    \    // >>> stringToList(\"123\")\n    // List[Int](1, 2, 3)\n    def stringToList(s\
    \ : String) : List[Int] = {\n        if (s.isEmpty()) {\n            List[Int]()\n\
    \        } else {\n            List[Int](s.toCharArray).init\n        }\n    }\n\
    \n    // Convert a list of integers to a string\n    // >>> listToString(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n\
    \        if (ints.isEmpty()) {\n            \"\"\n        } else {\n         \
    \   String(ints.toArray).mkString(\"\")\n        }\n    }\n\n    // Convert a\
    \ string to a list of doubles\n    // >>> stringToList(\"\")\n    // List[Double]()\n\
    \    // >>> stringToList(\"123.45\")\n    // List[Double](123.45)\n    def stringToList(s\
    \ : String) : List[Double", "        if (strings.isEmpty()) {\n            \"\"\
    \n        } else {\n            strings.head + concatenate(strings.tail)\n   \
    \     }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\"\
    , \"World\"]\n    def words2(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\"\
    , \"World\"]\n    def words5(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String) : List[String] = {", "        if (strings.isEmpty()) {\n         \
    \   \"\"\n        } else {\n            var result = \"\"\n            for (i\
    \ <- 0 until strings.size - 1) {\n                result += strings.apply(i)\n\
    \            }\n            result\n        }\n    }\n\n    // Reverse a string\n\
    \    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String) : String\
    \ = {\n        var result = \"\"\n        for (i <- 0 until s.length - 1) {\n\
    \            result += s.charAt(s.length - 1 - i)\n        }\n        result\n\
    \    }\n\n    // Reverse a list\n    // >>> reverse(List[String](\"abc\"))\n \
    \   // List[String](\"cba\")\n    def reverseList(strings : List[String]) : List[String]\
    \ = {\n        var result = List[String]()\n        for (i <- 0 until strings.size\
    \ - 1) {\n            result += strings.apply(i)\n        }\n        result\n\
    \    }\n\n    // Compute the length of a string\n    // >>> len(\"abc\")\n   \
    \ // 3\n    def len(s : String) : Int = {\n        s.length\n    }\n\n    // Compute\
    \ the length of a list\n    // >>> len(List[String](\"abc\"))\n    // 3\n    def\
    \ lenList(strings : List[String]) : Int = {\n        strings.size\n    }\n\n \
    \   // Compute the length of a list\n    // >>> len(List[String](\"abc\", \"def\"\
    ))\n    // 5\n    def lenList2(strings : List[String]) : Int = {\n        strings.size\n\
    \    }\n\n    // Compute the length of a list\n    // >>> len(List[String](\"\
    abc\", \"def\", \"ghi\"))\n    // 6\n    def lenList3(strings : List[String])\
    \ : Int = {\n        strings.size\n    }\n\n    // Compute the length of a list\n\
    \    // >>> len(List[String](\"abc\", \"def\", \"ghi\", \"jkl\"))\n    // 7\n\
    \    def lenList4(strings : List[String]) : Int = {\n        strings.size\n  \
    \  }\n\n    // Compute the length", "        var result = \"\"\n        for (s\
    \ in strings) {\n            result += s\n        }\n        return result\n \
    \   }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    ", "        if (strings.isEmpty()) {\n            \"\
    \"\n        } else {\n            strings.head + concatenate(strings.tail)\n \
    \       }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"\")\n    // List[Char]()\n    // >>> toList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def toList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray())\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ fromList(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def fromList(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            \"\"\
    \n        } else {\n            StringBuilder sb = new StringBuilder()\n     \
    \       for (c : Iterator[Char]) {\n                sb.append(c)\n           \
    \ }\n            return sb.toString()\n        }\n    }\n\n    // Convert a string\
    \ to a list of integers\n    // >>> toList(\"\")\n    // List[Int]()\n    // >>>\
    \ toList(\"123\")\n    // List[Int](1, 2, 3)\n    def toList(s : String) : List[Int]\
    \ = {\n        if (s.isEmpty()) {\n            List[Int]()\n        } else {\n\
    \            List[Int](s.chars().toArray().map(_.toInt).toSeq())\n        }\n\
    \    }\n\n    // Convert a list of integers to a string\n    // >>> fromList(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def fromList(ints : List[Int]) : String = {\n  \
    \      if (ints.isEmpty()) {\n            \"\"\n        } else {\n           \
    \ StringBuilder sb = new StringBuilder()\n            for (i : Iterator[Int])\
    \ {\n                sb.append(i)\n            }\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        var words = List.empty[String]\n\
    \        var word = \"\"\n        for (i <- 0 until s.length) {\n            if\
    \ (s.charAt(i) == ' ') {\n                words = words.append(word)\n       \
    \         word = \"\"\n            } else {\n                word = word.concat(s.charAt(i))\n\
    \            }\n        }\n        words = words.append(word)\n        return\
    \ words\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String]\
    \ = {\n        var words = List.empty[String]\n        var word = \"\"\n     \
    \   for (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n   \
    \             words = words.append(word)\n                word = \"\"\n      \
    \      } else {\n                word = word.concat(s.charAt(i))\n           \
    \ }\n        }\n        words = words.append(word)\n        return words\n   \
    \ }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String] =\
    \ {\n        var words = List.empty[String]\n        var word = \"\"\n       \
    \ for (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n     \
    \           words = words.append(word)\n                word = \"\"\n        \
    \    } else {\n                word = word.concat(s.charAt(i))\n            }\n\
    \        }\n        words = words.append(word)\n        return words\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello", "    \
    \    if (strings.isEmpty()) {\n            return \"\"\n        } else {\n   \
    \         return strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a list of words to a single\
    \ string\n    // >>> sentence(words(\"Hello World\"))\n    // \"Hello World\"\n\
    \    def sentence(words : List[String]) : String = {\n        return concatenate(words)\n\
    \    }\n\n    // Compute factorial of a non-negative integer\n    // >>> factorial(0)\n\
    \    // 1\n    // >>> factorial(1)\n    // 1\n    // >>> factorial(2)\n    //\
    \ 2\n    // >>> factorial(3)\n    // 6\n    def factorial(n : Int) : Int = {\n\
    \        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative\
    \ factorial\")\n        } else if (n == 0) {\n            return 1\n        }\
    \ else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    //\
    \ Compute n choose k\n    // >>> n_choose_k(0, 0)\n    // 1\n    // >>> n_choose_k(1,\
    \ 0)\n    // 1\n    // >>> n_choose_k(1, 1)\n    // 1\n    // >>> n_choose_k(2,\
    \ 1)\n    // 2\n    // >>> n_choose_k(2, 2)\n    // 1\n    def n_choose_k(n :\
    \ Int, k : Int) : Int = {\n        if (k < 0 || k > n) {\n            throw new\
    \ IllegalArgumentException(\"k must be between 0 and n\")\n        } else if (k\
    \ == 0 || k == n) {\n            return 1\n        } else {\n            return\
    \ factorial(n) / (factorial(k) * factorial(n - k))\n        }\n    }\n\n    //\
    \ Compute the sum of the squares of", "        if (strings.isEmpty()) {\n    \
    \        \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Return a list of strings with the first string repeated\
    \ n times\n    // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"\
    a\", \"a\", \"a\"))\n    def repeat(strings : List[String], n : Int) : List[String]\
    \ = {\n        if (n <= 0) {\n            List[String]()\n        } else {\n \
    \           List[String](strings.head._ + repeat(strings.tail, n - 1))\n     \
    \   }\n    }\n\n    // Return a list of strings with the first string repeated\
    \ n times\n    // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"\
    a\", \"a\", \"a\"))\n    def repeat(strings : List[String], n : Int) : List[String]\
    \ = {\n        if (n <= 0) {\n            List[String]()\n        } else {\n \
    \           List[String](strings.head._ + repeat(strings.tail, n - 1))\n     \
    \   }\n    }\n\n    // Return a list of strings with the first string repeated\
    \ n times\n    // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"\
    a\", \"a\", \"a\"))\n    def repeat(strings : List[String], n : Int) : List[String]\
    \ = {\n        if (n <= 0) {\n            List[String]()\n        } else {\n \
    \           List[String](strings.head._ + repeat(strings.tail, n - 1))\n     \
    \   }\n    }\n\n    // Return a list of strings with the first string repeated\
    \ n times\n    // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"\
    a\", \"a\", \"a\"))\n    def repeat(strings : List[String], n : Int) : List[String]\
    \ = {\n        if (n <= 0) {\n            List[String]()\n        } else {\n \
    \           List[String](strings.head._ + repeat(strings.tail, n - 1))\n     \
    \   }\n    }\n\n    // Return a list", "        var result = \"\"\n        for\
    \ (i <- 0 until strings.size) {\n            result += strings.get(i)\n      \
    \  }\n        result\n    }\n\n    // Reverse a string\n    // >>> reverse(\"\
    abc\")\n    // \"cba\"\n    def reverse(s : String) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 until s.length) {\n            result +=\
    \ s.charAt(s.length - 1 - i)\n        }\n        result\n    }\n\n    // Reverse\
    \ a list\n    // >>> reverse(List[String](\"a\", \"b\", \"c\"))\n    // List[String](\"\
    c\", \"b\", \"a\")\n    def reverseList(strings : List[String]) : List[String]\
    \ = {\n        var result = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            result += strings.get(i)\n        }\n        result\n    }\n\n\
    \    // Compute the sum of a list of numbers\n    // >>> sum(List[Int]())\n  \
    \  // 0\n    // >>> sum(List[Int](1, 2, 3))\n    // 6\n    def sum(numbers : List[Int])\
    \ : Int = {\n        var result = 0\n        for (i <- 0 until numbers.size) {\n\
    \            result += numbers.get(i)\n        }\n        result\n    }\n\n  \
    \  // Compute the product of a list of numbers\n    // >>> product(List[Int]())\n\
    \    // 1\n    // >>> product(List[Int](1, 2, 3))\n    // 6\n    def product(numbers\
    \ : List[Int]) : Int = {\n        var result = 1\n        for (i <- 0 until numbers.size)\
    \ {\n            result *= numbers.get(i)\n        }\n        result\n    }\n\n\
    \    // Compute the maximum of a list of numbers\n    // >>> max(List[Int]())\n\
    \    // 0\n    // >>> max(List[Int](1, 2, 3))\n    // 3\n    def max(numbers :\
    \ List[Int]) : Int = {\n        var result = numbers.get(0)\n        for (i <-\
    \ 1 until numbers.size) {\n            if (", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s :\
    \ String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            List[String]()\n        } else {\n  \
    \          List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s :\
    \ String) : List[String] = {\n        if (", "        var result = \"\"\n    \
    \    for (i <- 0 until strings.size) {\n            result += strings.apply(i)\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of characters\n\
    \    // >>> stringToList(\"abc\")\n    // List[Char](\"a\", \"b\", \"c\")\n  \
    \  def stringToList(s : String) : List[Char] = {\n        var result = List[Char]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length) {\n            result = result.updated(i,\
    \ s.apply(i))\n        }\n        result\n    }\n\n    // Convert a list of characters\
    \ to a string\n    // >>> listToString(List[Char](\"a\", \"b\", \"c\"))\n    //\
    \ \"abc\"\n    def listToString(chars : List[Char]) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 until chars.size) {\n            result +=\
    \ chars.apply(i)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of integers\n    // >>> stringToList(\"123\")\n    // List[Int]()\n\
    \    def stringToListInt(s : String) : List[Int] = {\n        var result = List[Int]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length) {\n            result = result.updated(i,\
    \ s.apply(i).toInt)\n        }\n        result\n    }\n\n    // Convert a list\
    \ of integers to a string\n    // >>> listToString(List[Int]())\n    // \"\"\n\
    \    def listToStringInt(ints : List[Int]) : String = {\n        var result =\
    \ \"\"\n        for (i <- 0 until ints.size) {\n            result += ints.apply(i).toString\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of doubles\n\
    \    // >>> stringToList(\"123.45\")\n    // List[Double]()\n    def stringToListDouble(s\
    \ : String) : List[Double] = {\n        var result = List[Double]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.", "        if (strings.isEmpty()) {\n          \
    \  \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n\
    \    // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            []\n        } else {\n            s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words2('')\n    // []\n    // >>> words2(\"\")\n    // []\n    //\
    \ >>> words2(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words2(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            []\n \
    \       } else {\n            s.split(\" \").toList\n        }\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words3('')\n    // []\n    //\
    \ >>> words3(\"\")\n    // []\n    // >>> words3(\"Hello World\")\n    // [\"\
    Hello\", \"World\"]\n    def words3(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            []\n        } else {\n            s.split(\" \"\
    ).toList\n        }\n    }\n\n    // Convert a string to a list of words\n   \
    \ // >>> words4('')\n    // []\n    // >>> words4(\"\")\n    // []\n    // >>>\
    \ words4(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            []\n        } else\
    \ {\n            s.split(\" \").toList\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words5('')\n    // []\n    // >>> words5(\"\"\
    )\n    // []\n    // >>> words5(\"Hello World\")\n    // [\"Hello\", \"World",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n        def\
    \ toWord(c : Char) : String = {\n            if ('a' <= c && c <= 'z') {\n   \
    \             c + \"\"\n            } else if ('A' <= c && c <= 'Z') {\n     \
    \           c.toLowerCase() + \"\"\n            } else if ('0' <= c && c <= '9')\
    \ {\n                c + \"\"\n            } else if (c == ' ') {\n          \
    \      \" \"\n            } else {\n                \"#\"\n            }\n   \
    \     }\n        s.split(\" \").map(toWord).toList\n    }\n\n    // Convert a\
    \ string to a list of integers\n    // >>> ints(\"123 456\")\n    // [123, 456]\n\
    \    def ints(s : String) : List[Integer] = {\n        s.split(\" \").map(_.toInt).toList\n\
    \    }\n\n    // Convert a string to a list of doubles\n    // >>> doubles(\"\
    1.23 4.56\")\n    // [1.23, 4.56]\n    def doubles(s : String) : List[Double]\
    \ = {\n        s.split(\" \").map(_.toDouble).toList\n    }\n\n    // Compute\
    \ the sum of the squares of a list of integers\n    // >>> squareSums(List[Integer](1,\
    \ 2, 3, 4, 5))\n    // 30\n    def squareSums(ints : List[Integer]) : Integer\
    \ = {\n        ints.map(i => i * i).sum\n    }\n\n    // Compute the sum of the\
    \ squares of a list of doubles\n    // >>> squareSums(List[Double](1.0, 2.0, 3.0,\
    \ 4.0, 5.0))\n    // 30.0\n    def squareSums(doubles : List[Double]) : Double\
    \ = {\n        doubles.map(d => d *", "        var result = \"\"\n        for\
    \ (i <- 0 until strings.length - 1) {\n            result += strings(i)\n    \
    \    }\n        result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var word = \"\"\n\
    \            while (index < s.length && s(index) != ' ') {\n                word\
    \ += s(index)\n                index += 1\n            }\n            result +=\
    \ word\n            if (index < s.length) {\n                index += 1\n    \
    \        }\n        }\n        result\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words2(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var word\
    \ = \"\"\n            while (index < s.length && s(index) != ' ') {\n        \
    \        word += s(index)\n                index += 1\n            }\n       \
    \     result += word\n            if (index < s.length) {\n                index\
    \ += 1\n            }\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"\
    world\"]\n    def words3(s : String) : List[String] = {\n        var result =\
    \ List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var word = \"\"\n            while (index < s.length && s(index)\
    \ != ' ') {\n                word += s(index)\n                index += 1\n  \
    \          }\n            result += word\n            if (index < s.length) {\n\
    \                index += 1\n            }\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words4(", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Return the first element of a list\n    // >>> first(List[String](\"\
    a\", \"b\", \"c\"))\n    // \"a\"\n    def first(list : List[String]) : String\
    \ = {\n        if (list.isEmpty()) {\n            \"\"\n        } else {\n   \
    \         list.head\n        }\n    }\n\n    // Return the last element of a list\n\
    \    // >>> last(List[String](\"a\", \"b\", \"c\"))\n    // \"c\"\n    def last(list\
    \ : List[String]) : String = {\n        if (list.isEmpty()) {\n            \"\"\
    \n        } else {\n            list.last\n        }\n    }\n\n    // Return the\
    \ length of a string\n    // >>> length(\"abc\")\n    // 3\n    def length(s :\
    \ String) : Int = {\n        if (s.isEmpty()) {\n            0\n        } else\
    \ {\n            s.length\n        }\n    }\n\n    // Return the length of a list\n\
    \    // >>> length(List[String](\"a\", \"b\", \"c\"))\n    // 3\n    def length(list\
    \ : List[String]) : Int = {\n        if (list.isEmpty()) {\n            0\n  \
    \      } else {\n            list.length\n        }\n    }\n\n    // Return the\
    \ length of a list\n    // >>> length(List[String](\"a\", \"b\", \"c\"))\n   \
    \ // 3\n    def length(list : List[String]) : Int = {\n        if (list.isEmpty())\
    \ {\n            0\n        } else {\n            list.length\n        }\n   \
    \ }\n\n    // Return the length of a list\n    // >>> length(List[String](\"a\"\
    , \"b\", \"c\"))\n    // 3\n    def length(list : List[String]) : Int = {\n  \
    \      if (list.isEmpty()) {\n            0\n        } else {\n            list.length\n\
    \        }\n    }\n\n    // Return the length of a list\n    // >>> length(List[String](\"\
    a\", \"b\", \"", "        if (strings.isEmpty()) {\n            \"\"\n       \
    \ } else {\n            strings.head._ + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // ([\"Hello\", \"my\", \"name\", \"is\", \"John\"])\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\"\
    , \"is\", \"John\"])\n    def words2(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\"\
    , \"is\", \"John\"])\n    def words3(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\"\
    , \"is\", \"John\"])\n    def words4(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, my name is John\")\n    // ([\"Hello\", \"my\", \"name\"\
    , \"is\", \"John\"])\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {", "        if (strings.isEmpty()) {\n            \"\"\n    \
    \    } else {\n            var result = \"\"\n            for (i <- 0 until strings.size\
    \ - 1) {\n                result = result + strings.apply(i)\n            }\n\
    \            result\n        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"\
    abc\")\n    // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i <- 0 until s.size - 1) {\n                result = result + s.apply(s.size\
    \ - 1 - i)\n            }\n            result\n        }\n    }\n\n    // Return\
    \ a string with the first letter capitalized\n    // >>> capitalize(\"hello\"\
    )\n    // \"Hello\"\n    def capitalize(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       result = result + s.apply(0).toUpperCase()\n            for (i <- 1 until\
    \ s.size) {\n                result = result + s.apply(i)\n            }\n   \
    \         result\n        }\n    }\n\n    // Return a string with the first letter\
    \ capitalized and the rest lowercase\n    // >>> capitalize_lowercase(\"hello\"\
    )\n    // \"Hello\"\n    def capitalize_lowercase(s : String) : String = {\n \
    \       if (s.isEmpty()) {\n            \"\"\n        } else {\n            var\
    \ result = \"\"\n            result = result + s.apply(0).toUpperCase()\n    \
    \        for (i <- 1 until s.size) {\n                result = result + s.apply(i).toLowerCase()\n\
    \            }\n            result\n        }\n    }\n\n    // Return a string\
    \ with the first letter capitalized and the rest lowercase\n    // >>> capitalize_lowercase_with_underscores(\"\
    hello\")\n    // \"Hello\"\n    def capitalize_lowercase_with_underscores(s :\
    \ String) : String = {\n        if (s.isEmpty()) {\n            \"\"\n       \
    \ } else {\n            var result = \"\"\n            result = result + s.apply(0).",
  "        if (strings.isEmpty()) {\n            return \"\"\n        } else {\n \
    \           return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a list of words to a single\
    \ string\n    // >>> sentence(\"Hello\", \"World\")\n    // \"Hello World\"\n\
    \    def sentence(words : List[String]) : String = {\n        return concatenate(words)\n\
    \    }\n\n    // Compute the length of a list of words\n    // >>> length(words(\"\
    Hello World!\"))\n    // 13\n    def length(words : List[String]) : Int = {\n\
    \        return words.length()\n    }\n\n    // Convert a string to a list of\
    \ characters\n    // >>> chars(\"Hello World!\")\n    // ['H', 'e', 'l', 'l',\
    \ 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!']\n    def chars(s : String) : List[Char]\
    \ = {\n        return s.toCharArray()\n    }\n\n    // Compute the length of a\
    \ list of characters\n    // >>> length(chars(\"Hello World!\"))\n    // 13\n\
    \    def length(chars : List[Char]) : Int = {\n        return chars.length\n \
    \   }\n\n    // Convert a list of characters to a string\n    // >>> string(chars(\"\
    Hello World!\"))\n    // \"Hello World!\"\n    def string(chars : List[Char])\
    \ : String = {\n        return new String(chars)\n    }\n\n    // Compute the\
    \ length of a list of integers\n    // >>> length(ints(1, 2, 3, 4))\n    // 4\n\
    \    def length(ints : List[Int]) : Int = {\n        return ints.length\n    }\n\
    \n    // Convert a list of integers to a string\n    // >>> string(ints(1, 2,\
    \ 3, 4))\n    // \"1234\"\n    def string(ints : List[Int]) : String =", "   \
    \     var result = \"\"\n        for (i <- 0 until strings.size) {\n         \
    \   result += strings.get(i)\n        }\n        return result\n    }\n\n    //\
    \ Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s\
    \ : String) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            result += s.charAt(s.length - 1 - i)\n        }\n \
    \       return result\n    }\n\n    // Convert a string to a list of words\n \
    \   // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s\
    \ : String) : List[String] = {\n        var result = []\n        var index = 0\n\
    \        while (index < s.length) {\n            var next = s.indexOf(\" \", index)\n\
    \            if (next == -1) {\n                result += s.substring(index)\n\
    \                index = s.length\n            } else {\n                result\
    \ += s.substring(index, next)\n                index = next\n            }\n \
    \       }\n        return result\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n  \
    \  def words2(s : String) : List[String] = {\n        var result = []\n      \
    \  var index = 0\n        while (index < s.length) {\n            var next = s.indexOf(\"\
    \ \", index)\n            if (next == -1) {\n                result += s.substring(index)\n\
    \                index = s.length\n            } else {\n                result\
    \ += s.substring(index, next)\n                index = next\n            }\n \
    \       }\n        return result\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n  \
    \  def words3(s : String) : List[String] = {\n        var result = []\n      \
    \  var index = 0\n        while (index < s.length) {\n            var next = s.indexOf(\"\
    \ \", index)\n            if (next == -1) {\n                result += s.substring(index)",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head._ + concatenate(strings.tail)\n        }\n    }\n\n    // Reverse\
    \ a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String)\
    \ : String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            s.reverse()._ + reverse(s.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\", \"!\"]\n    def words(s : String) : List[String] = {\n   \
    \     if (s.isEmpty()) {\n            List()\n        } else {\n            words(s.head)._\
    \ + words(s.tail)\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\", \"!\"]\n  \
    \  def words2(s : String) : List[String] = {\n        if (s.isEmpty()) {\n   \
    \         List()\n        } else {\n            words2(s.head)._ + words2(s.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\", \"!\"]\n    def words3(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            List()\n       \
    \ } else {\n            words3(s.head)._ + words3(s.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\", \"!\"]\n    def words4(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List()\n        } else {\n    \
    \        words4(s.head)._ + words4(s.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\", \"!\"]", "        if (strings.isEmpty()) {\n            return\
    \ \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(\"Hello\", \"world\")\n    // \"Hello\
    \ world!\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ words.mkString(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words(s\
    \ : String) : List[String] = {\n        return s.split(\" \")\n    }\n\n    //\
    \ Convert a list of words to a single string\n    // >>> sentence(\"Hello\", \"\
    world\")\n    // \"Hello world!\"\n    def sentence(words : List[String]) : String\
    \ = {\n        return words.mkString(\" \")\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"\
    world\"]\n    def words(s : String) : List[String] = {\n        return s.split(\"\
    \ \")\n    }\n\n    // Convert a list of words to a single string\n    // >>>\
    \ sentence(\"Hello\", \"world\")\n    // \"Hello world!\"\n    def sentence(words\
    \ : List[String]) : String = {\n        return words.mkString(\" \")\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a list of words to a single\
    \ string\n    // >>> sentence(\"Hello\", \"world\")\n    // \"Hello world!\"\n\
    \    def sentence(words : List[String]) : String = {\n        return words.mkString(\"\
    \ \")\n    }\n\n    // Convert a string to a list", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n \
    \   // []\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          return List.empty\n        } else {\n            return s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words('')\n    // []\n    // >>> words(\"\")\n    // []\n    // >>>\
    \ words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            return List.empty\n\
    \        } else {\n            return s.split(\" \").toList\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words('')\n    // []\n\
    \    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World!\")\n    //\
    \ [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n     \
    \   if (s.isEmpty()) {\n            return List.empty\n        } else {\n    \
    \        return s.split(\" \").toList\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words('')\n    // []\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          return List.empty\n        } else {\n            return s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words('')\n    // []\n    // >>> words(\"\")\n    // []\n    // >>>\
    \ words(\"Hello World!\")\n", "        if (strings.isEmpty()) {\n            \"\
    \"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[\"this\", \"is\", \"a\", \"test\"])\n    def\
    \ words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n         \
    \   List.empty[String]\n        } else {\n            List.of(s.split(\" \"))\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[\"this\", \"is\", \"a\", \"test\"])\n    def\
    \ words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n         \
    \   List.empty[String]\n        } else {\n            List.of(s.split(\" \"))\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[\"this\", \"is\", \"a\", \"test\"])\n    def\
    \ words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n         \
    \   List.empty[String]\n        } else {\n            List.of(s.split(\" \"))\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[\"this\", \"is\", \"a\", \"test\"])\n    def\
    \ words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n         \
    \   List.empty[String]\n        } else {\n            List.of(s.split(\" \"))\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[\"this\", \"is\", \"a\", \"test\"])\n    def\
    \ words(s : String) : List[String] = {\n        if (s", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\"\
    , \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words2(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words3(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words4(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words5(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words6(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words7(", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a list of strings\n    // >>> reverse(List[String]())\n\
    \    // List[String]()\n    // >>> reverse(List[String](\"a\", \"b\", \"c\"))\n\
    \    // List[String](\"c\", \"b\", \"a\")\n    def reverse(strings : List[String])\
    \ : List[String] = {\n        if (strings.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](strings.tail + reverse(strings.init))\n\
    \        }\n    }\n\n    // Convert a list of strings to a list of integers\n\
    \    // >>> toInts(List[String]())\n    // List[Int]()\n    // >>> toInts(List[String](\"\
    1\", \"2\", \"3\"))\n    // List[Int](1, 2, 3)\n    def toInts(strings : List[String])\
    \ : List[Int] = {\n        if (strings.isEmpty()) {\n            List[Int]()\n\
    \        } else {\n            List[Int](strings.head._.toInt) + toInts(strings.tail)\n\
    \        }\n    }\n\n    // Convert a list of strings to a list of doubles\n \
    \   // >>> toDoubles(List[String]())\n    // List[Double]()\n    // >>> toDoubles(List[String](\"\
    1\", \"2\", \"3\"))\n    // List[Double](1.0, 2.0, 3.0)\n    def toDoubles(strings\
    \ : List[String]) : List[Double] = {\n        if (strings.isEmpty()) {\n     \
    \       List[Double]()\n        } else {\n            List[Double](strings.head._.toDouble)\
    \ + toDoubles(strings.tail)\n        }\n    }\n\n    // Convert a list of strings\
    \ to a list of booleans\n    // >>> toBools(List[String]())\n    // List[Boolean]()\n\
    \    // >>> toBools(List[String](\"True\", \"False\", \"True\"))\n    // List[Boolean](",
  "        var result = \"\"\n        for (i <- 0 until strings.length) {\n      \
    \      result = result + strings(i)\n        }\n        result\n    }\n\n    //\
    \ Convert a string to a list of characters\n    // >>> stringToList(\"\")\n  \
    \  // List[Char]()\n    // >>> stringToList(\"abc\")\n    // List[Char]('a', 'b',\
    \ 'c')\n    def stringToList(s : String) : List[Char] = {\n        var result\
    \ = List[Char]().setPrefixLength(s.length)\n        for (i <- 0 until s.length)\
    \ {\n            result = result.set(i, s(i))\n        }\n        result\n   \
    \ }\n\n    // Convert a list of characters to a string\n    // >>> listToString(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String\
    \ = {\n        var result = \"\"\n        for (i <- 0 until chars.length) {\n\
    \            result = result + chars(i)\n        }\n        result\n    }\n\n\
    \    // Convert a string to a list of integers\n    // >>> stringToList(\"\")\n\
    \    // List[Int]()\n    // >>> stringToList(\"123\")\n    // List[Int](1, 2,\
    \ 3)\n    def stringToList(s : String) : List[Int] = {\n        var result = List[Int]().setPrefixLength(s.length)\n\
    \        for (i <- 0 until s.length) {\n            result = result.set(i, s(i).toInt)\n\
    \        }\n        result\n    }\n\n    // Convert a list of integers to a string\n\
    \    // >>> listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(ints\
    \ : List[Int]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ ints.length) {\n            result = result + ints(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of doubles\n    // >>> stringToList(\"\
    \")\n    // List[Double]()\n    // >>> stringTo", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\"\
    , \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words2(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words3(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words4(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words5(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words6(s : String) : List[String] =\
    \ {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"\
    my\", \"name\", \"is\", \"John\"]\n    def words7(", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        def toWord(c : Char) : String = {\n            if (c == ' ') {\n\
    \                \"\"\n            } else {\n                toWord(c.toLowerCase)\n\
    \            }\n        }\n        s.split(\" \").map(toWord)\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World!\")\n  \
    \  // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n\
    \        s.split(\" \").toList\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n \
    \   def words3(s : String) : List[String] = {\n        s.split(\" \").toList\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String]\
    \ = {\n        s.split(\" \").toList\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words5(s : String) : List[String] = {\n        s.split(\" \").toList\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s : String) : List[String]\
    \ = {\n        s.split(\" \").toList\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words7(s : String) : List[String] = {\n        s.split(\" \").toList\n\
    \    }\n\n    // Convert", "        var result = \"\"\n        for (i <- 0 until\
    \ strings.size) {\n            result += strings.apply(i)\n        }\n       \
    \ result\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        var result = List[Char]().setEmpty()\n        for (i <- 0 until\
    \ s.length) {\n            result += List[Char]().apply(s.apply(i))\n        }\n\
    \        result\n    }\n\n    // Convert a list of characters to a string\n  \
    \  // >>> listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ chars.size) {\n            result += chars.apply(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of integers\n    // >>> stringToList(\"\
    \")\n    // List[Int]()\n    // >>> stringToList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def stringToList(s : String) : List[Int] = {\n        var result\
    \ = List[Int]().setEmpty()\n        for (i <- 0 until s.length) {\n          \
    \  result += Int(s.apply(i))\n        }\n        result\n    }\n\n    // Convert\
    \ a list of integers to a string\n    // >>> listToString(List[Int](1, 2, 3))\n\
    \    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 until ints.size) {\n            result\
    \ += Int(ints.apply(i))\n        }\n        result\n    }\n\n    // Convert a\
    \ string to a list of doubles\n    // >>> stringToList(\"\")\n    // List[Double]()\n\
    \    // >>> stringToList(\"123.45\")\n    // List[Double](", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String)", "        var result = \"\"\n        for (i <- 0 until strings.length\
    \ - 1) {\n            result = result + strings(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(concatenate(\"\
    this is a test\"))\n    // ([\"this\", \"is\", \"a\", \"test\"])\n    def words(string\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ word = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i)\
    \ == \" \") {\n                if (word != \"\") {\n                    result\
    \ = result + List[String](word)\n                    word = \"\"\n           \
    \     }\n            } else {\n                word = word + string(i)\n     \
    \       }\n        }\n        if (word != \"\") {\n            result = result\
    \ + List[String](word)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of words, ignoring punctuation\n    // >>> words_ignore_punctuation(concatenate(\"\
    this,is,a,test\"))\n    // ([\"this\", \"is\", \"a\", \"test\"])\n    def words_ignore_punctuation(string\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ word = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i)\
    \ == \" \") {\n                if (word != \"\") {\n                    result\
    \ = result + List[String](word)\n                    word = \"\"\n           \
    \     }\n            } else if (string(i).isLetterOrDigit()) {\n             \
    \   word = word + string(i)\n            }\n        }\n        if (word != \"\"\
    ) {\n            result = result + List[String](word)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of words, ignoring punctuation and\
    \ case\n    // >>> words_ignore_punctuation_case(concatenate(\"this,is,a,test\"\
    ))\n    // ([\"this\", \"is\", \"a\", \"test\"])\n    def words_ignore_punctuation_case(string\
    \ : String)", "        var result = \"\"\n        for (i <- 0 until strings.length\
    \ - 1) {\n            result += strings(i)\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of characters\n    // >>> toList(\"abc\")\n\
    \    // List(a, b, c)\n    def toList(s : String) : List[Char] = {\n        var\
    \ result = List[Char]().apply$mcZ$sp()\n        for (i <- 0 until s.length - 1)\
    \ {\n            result = result.updated(i, s(i))\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of integers\n    // >>> toListI(\"\
    123\")\n    // List(1, 2, 3)\n    def toListI(s : String) : List[Int] = {\n  \
    \      var result = List[Int]().apply$mcZ$sp()\n        for (i <- 0 until s.length\
    \ - 1) {\n            result = result.updated(i, s(i).toInt)\n        }\n    \
    \    result\n    }\n\n    // Convert a string to a list of doubles\n    // >>>\
    \ toListD(\"123.45\")\n    // List(1.0, 2.0, 3.45)\n    def toListD(s : String)\
    \ : List[Double] = {\n        var result = List[Double]().apply$mcZ$sp()\n   \
    \     for (i <- 0 until s.length - 1) {\n            result = result.updated(i,\
    \ s(i).toDouble)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of booleans\n    // >>> toListB(\"true\")\n    // List(true)\n   \
    \ def toListB(s : String) : List[Boolean] = {\n        var result = List[Boolean]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length - 1) {\n            result = result.updated(i,\
    \ s(i).toBoolean)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of strings\n    // >>> toListS(\"abc\")\n    // List(\"a\", \"b\"\
    , \"c\")\n    def toList", "        if (strings.isEmpty()) {\n            \"\"\
    \n        } else {\n            strings.head._ + concatenate(strings.tail)\n \
    \       }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        def toWord(c : Char) : String = {\n            if (c.isLetter())\
    \ {\n                c.toString\n            } else {\n                \"\"\n\
    \            }\n        }\n        s.split(\" \").map(toWord).toList\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String] =\
    \ {\n        s.split(\" \").toList\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words3(s : String) : List[String] = {\n        s.split(\" \").toList\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String]\
    \ = {\n        s.split(\" \").toList\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words5(s : String) : List[String] = {\n        s.split(\" \").toList\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s : String) : List[String]\
    \ = {\n        s.split(\" \").toList\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words7(s : String) : List[String] = {\n        s.split(\" \").toList\n\
    \    }\n\n    // Convert a string", "        if (strings.isEmpty()) {\n      \
    \      return \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(\"Hello\", \"World\")\n    // \"Hello\
    \ World\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ concatenate(words)\n    }\n\n    // Convert a string to a list of words\n  \
    \  // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s\
    \ : String) : List[String] = {\n        return s.split(\" \")\n    }\n\n    //\
    \ Convert a list of words to a single string\n    // >>> sentence(\"Hello\", \"\
    World\")\n    // \"Hello World\"\n    def sentence(words : List[String]) : String\
    \ = {\n        return concatenate(words)\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a list of words to a single string\n    // >>> sentence(\"\
    Hello\", \"World\")\n    // \"Hello World\"\n    def sentence(words : List[String])\
    \ : String = {\n        return concatenate(words)\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"\
    World\"]\n    def words(s : String) : List[String] = {\n        return s.split(\"\
    \ \")\n    }\n\n    // Convert a list of words to a single string\n    // >>>\
    \ sentence(\"Hello\", \"World\")\n    // \"Hello World\"\n    def sentence(words\
    \ : List[String]) : String = {\n        return concatenate(words)\n    }\n\n \
    \   // Convert a string to a list of words\n    ", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        var words = List[String]()\n\
    \        var word = \"\"\n        for (i <- 0 until s.length) {\n            if\
    \ (s.charAt(i) == ' ') {\n                if (word.length > 0) {\n           \
    \         words = words.append(word)\n                    word = \"\"\n      \
    \          }\n            } else {\n                word = word + s.charAt(i)\n\
    \            }\n        }\n        if (word.length > 0) {\n            words =\
    \ words.append(word)\n        }\n        return words\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n        var\
    \ words = List[String]()\n        var word = \"\"\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == ' ') {\n                if (word.length >\
    \ 0) {\n                    words = words.append(word)\n                    word\
    \ = \"\"\n                }\n            } else {\n                word = word\
    \ + s.charAt(i)\n            }\n        }\n        if (word.length > 0) {\n  \
    \          words = words.append(word)\n        }\n        return words\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String] =\
    \ {\n        var words = List[String]()\n        var word = \"\"\n        for\
    \ (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n         \
    \       if (word.length > 0) {\n                    words = words.append(word)\n\
    \                    word = \"\"\n                }\n", "        var result =\
    \ \"\"\n        for (i <- 0 until strings.size) {\n            result += strings.apply(i)\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of characters\n\
    \    // >>> stringToList(\"abc\")\n    // List[Char](\"a\", \"b\", \"c\")\n  \
    \  def stringToList(s : String) : List[Char] = {\n        var result = List[Char]().apply$mcZ$sp()\n\
    \        for (i <- 0 until s.length) {\n            result = result.updated(i,\
    \ s.apply(i))\n        }\n        result\n    }\n\n    // Convert a list of characters\
    \ to a string\n    // >>> listToString(List[Char](\"a\", \"b\", \"c\"))\n    //\
    \ \"abc\"\n    def listToString(chars : List[Char]) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 until chars.size) {\n            result +=\
    \ chars.apply(i)\n        }\n        result\n    }\n\n    // Convert a string\
    \ to a list of integers\n    // >>> stringToList(\"123\")\n    // List[Int](\"\
    1\", \"2\", \"3\")\n    def stringToListOfInts(s : String) : List[Int] = {\n \
    \       var result = List[Int]().apply$mcZ$sp()\n        for (i <- 0 until s.length)\
    \ {\n            result = result.updated(i, s.apply(i).toInt)\n        }\n   \
    \     result\n    }\n\n    // Convert a list of integers to a string\n    // >>>\
    \ listToString(List[Int](\"1\", \"2\", \"3\"))\n    // \"123\"\n    def listToStringOfInts(ints\
    \ : List[Int]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ ints.size) {\n            result += ints.apply(i).toString\n        }\n    \
    \    result\n    }\n\n    // Convert a string to a list of doubles\n    // >>>\
    \ stringToList(\"1.0\")\n    // List[Double](\"1.0\")\n    def stringToListOfDoubles(s\
    \ : String) : List[Double] =", "        if (strings.isEmpty()) {\n           \
    \ \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        var words = List[String]()\n        var word = \"\"\n        for\
    \ (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n         \
    \       if (word.length > 0) {\n                    words += word\n          \
    \          word = \"\"\n                }\n            } else {\n            \
    \    word += s.charAt(i)\n            }\n        }\n        if (word.length >\
    \ 0) {\n            words += word\n        }\n        words\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        var words\
    \ = List[String]()\n        var word = \"\"\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == ' ') {\n                if (word.length >\
    \ 0) {\n                    words += word\n                    word = \"\"\n \
    \               }\n            } else {\n                word += s.charAt(i)\n\
    \            }\n        }\n        if (word.length > 0) {\n            words +=\
    \ word\n        }\n        words\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n  \
    \  def words(s : String) : List[String] = {\n        var words = List[String]()\n\
    \        var word = \"\"\n        for (i <- 0 until s.length) {\n            if\
    \ (s.charAt(i) == ' ') {\n                if (word.length > 0) {\n           \
    \         words += word\n                    word = \"\"\n                }\n\
    \            } else {\n                word += s.charAt(i)\n            }\n  \
    \      }\n        if (word.length > 0) {\n            words += word\n", "    \
    \    if (strings.isEmpty()) {\n            return \"\"\n        } else {\n   \
    \         return strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n \
    \   def words2(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words4(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words5(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words6(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words7(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words8(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    ", "        if (strings.isEmpty()) {\n            \"\"\n       \
    \ } else {\n            strings.head._ + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of characters\n    // >>> stringToList(\"\
    \")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def stringToList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray())\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            \"\"\
    \n        } else {\n            String(chars.toArray(new String[0]))\n       \
    \ }\n    }\n\n    // Convert a string to a list of integers\n    // >>> stringToList(\"\
    \")\n    // List[Int]()\n    // >>> stringToList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def stringToList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.chars().toArray().map(_.toInt))\n\
    \        }\n    }\n\n    // Convert a list of integers to a string\n    // >>>\
    \ listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(ints\
    \ : List[Int]) : String = {\n        if (ints.isEmpty()) {\n            \"\"\n\
    \        } else {\n            String(ints.toArray(new String[0]))\n        }\n\
    \    }\n\n    // Convert a string to a list of doubles\n    // >>> stringToList(\"\
    \")\n    // List[Double]()\n    // >>> stringToList(\"123.45\")\n    // List[Double](123.45)\n\
    \    def stringTo", "        if (strings.isEmpty()) {\n            return \"\"\
    \n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(\"Hello\", \"World\")\n    // \"Hello\
    \ World\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ concatenate(words)\n    }\n\n    // Compute the length of a list of words\n\
    \    // >>> length(words(\"Hello World\"))\n    // 5\n    def length(words : List[String])\
    \ : Int = {\n        return words.length\n    }\n\n    // Convert a string to\
    \ a list of characters\n    // >>> chars(\"Hello World\")\n    // ['H', 'e', 'l',\
    \ 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']\n    def chars(s : String) : List[Char]\
    \ = {\n        return s.toCharArray()\n    }\n\n    // Compute the length of a\
    \ list of characters\n    // >>> length(chars(\"Hello World\"))\n    // 10\n \
    \   def length(chars : List[Char]) : Int = {\n        return chars.length\n  \
    \  }\n\n    // Convert a list of characters to a string\n    // >>> string(chars(\"\
    Hello World\"))\n    // \"Hello World\"\n    def string(chars : List[Char]) :\
    \ String = {\n        return new String(chars)\n    }\n\n    // Compute the length\
    \ of a list of integers\n    // >>> length(ints(1, 2, 3, 4))\n    // 4\n    def\
    \ length(ints : List[Int]) : Int = {\n        return ints.length\n    }\n\n  \
    \  // Convert a list of integers to a string\n    // >>> string(ints(1, 2, 3,\
    \ 4))\n    // \"1234\"\n    def string(ints : List[Int]) : String = {\n      \
    \  return new String(ints.", "        var result = \"\"\n        for (i <- 0 until\
    \ strings.size) {\n            result += strings(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of characters\n    // >>> stringToList(\"\
    abc\")\n    // List[Char](\"a\", \"b\", \"c\")\n    def stringToList(s : String)\
    \ : List[Char] = {\n        var result = List[Char]()\n        for (i <- 0 until\
    \ s.length) {\n            result += s(i)\n        }\n        result\n    }\n\n\
    \    // Convert a list of characters to a string\n    // >>> listToString(List[Char](\"\
    a\", \"b\", \"c\"))\n    // \"abc\"\n    def listToString(chars : List[Char])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until chars.size)\
    \ {\n            result += chars(i)\n        }\n        result\n    }\n\n    //\
    \ Convert a string to a list of integers\n    // >>> stringToList(\"123\")\n \
    \   // List[Int](\"1\", \"2\", \"3\")\n    def stringToListOfInts(s : String)\
    \ : List[Int] = {\n        var result = List[Int]()\n        for (i <- 0 until\
    \ s.length) {\n            result += s(i)\n        }\n        result\n    }\n\n\
    \    // Convert a list of integers to a string\n    // >>> listToString(List[Int](\"\
    1\", \"2\", \"3\"))\n    // \"123\"\n    def listToStringOfInts(ints : List[Int])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until ints.size)\
    \ {\n            result += ints(i)\n        }\n        result\n    }\n\n    //\
    \ Convert a string to a list of doubles\n    // >>> stringToList(\"123.45\")\n\
    \    // List[Double](\"1.2345\", \"2.3455\", \"3.4555\")\n    def stringToListOfDoubles(s\
    \ : String) : List[Double] = {\n        var result = List[Double]()\n        for\
    \ (i <- 0 until s.length) {\n            result +=", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String) :", "        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head._ + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ world!\")\n    // [\"Hello\", \"world\", \"!\"]\n    def words(s : String) :\
    \ List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n \
    \       } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"Hello\", \"world\", \"!\"]\n    def words2(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"\
    Hello\", \"world\", \"!\"]\n    def words3(s : String) : List[String] = {\n  \
    \      if (s.isEmpty()) {\n            List[String]()\n        } else {\n    \
    \        List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"Hello\", \"\
    world\", \"!\"]\n    def words4(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello world!\")\n    // [\"Hello\", \"world\", \"!\"]\n    def words5(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"", "        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head._ + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        def toWord(c : Char) : String = {\n            if (c == ' ') {\n\
    \                \"\"\n            } else {\n                toWord(c.toLowerCase)\n\
    \            }\n        }\n        s.split(\" \").map(toWord)\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World!\")\n  \
    \  // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n\
    \        s.split(\" \").toList\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n \
    \   def words3(s : String) : List[String] = {\n        s.split(\" \").toIterator.toList\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String]\
    \ = {\n        s.split(\" \").toIterator.toList\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"\
    World\"]\n    def words5(s : String) : List[String] = {\n        s.split(\" \"\
    ).toIterator.toList\n    }\n\n    // Convert a string to a list of words\n   \
    \ // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String) : List[String] = {\n        s.split(\" \").toIterator.toList\n   \
    \ }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words7(s : String) : List[String] =\
    \ {\n        s.", "        var result = \"\"\n        for (i <- 0 until strings.length\
    \ - 1) {\n            result += strings(i)\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of characters\n    // >>> stringToList(\"\
    abc\")\n    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        var result = List[Char]().setPrefix(s.length)\n        for (i <-\
    \ 0 until s.length) {\n            result(i) = s(i)\n        }\n        result\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> listToString(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String\
    \ = {\n        var result = \"\"\n        for (i <- 0 until chars.length - 1)\
    \ {\n            result += chars(i)\n        }\n        result\n    }\n\n    //\
    \ Convert a list of integers to a string\n    // >>> listToString(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n\
    \        var result = \"\"\n        for (i <- 0 until ints.length - 1) {\n   \
    \         result += ints(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> stringToList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def stringToList(s : String) : List[Int] = {\n        var result\
    \ = List[Int]().setPrefix(s.length)\n        for (i <- 0 until s.length) {\n \
    \           result(i) = s(i) - 48\n        }\n        result\n    }\n\n    //\
    \ Convert a list of integers to a string\n    // >>> listToString(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n\
    \        var result = \"\"\n        for (i <- 0 until ints.length - 1) {\n   \
    \         result", "        if (strings.isEmpty()) {\n            return \"\"\n\
    \        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words('')\n\
    \    // []\n    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello\")\n \
    \   // [\"Hello\"]\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"\
    ]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            return List.empty()\n        } else {\n            return List.concat(words(s.substring(0,\
    \ s.indexOf(' '))), words(s.substring(s.indexOf(' ') + 1)))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words2(\"\")\n    //\
    \ []\n    // >>> words2(\"Hello\")\n    // [\"Hello\"]\n    // >>> words2(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            return List.empty()\n        }\
    \ else {\n            return List.concat(words2(s.substring(0, s.indexOf(' '))),\
    \ words2(s.substring(s.indexOf(' ') + 1)))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words3(\"\")\n    // []\n    // >>>\
    \ words3(\"Hello\")\n    // [\"Hello\"]\n    // >>> words3(\"Hello world\")\n\
    \    // [\"Hello\", \"world\"]\n    def words3(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            return List.empty()\n        } else {\n\
    \            return List.concat(words3(s.substring(0, s.indexOf(' '))), words3(s.substring(s.indexOf('\
    \ ') + 1)))\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words4(\"\")\n    // []\n    // >>> words4", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i <- 0 until strings.size - 1) {\n                result += strings.get(i)\n\
    \            }\n            result\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(List[String](\"a,b,c,d\"))\n    // (List[String](\"\
    a\", \"b\", \"c\", \"d\"))\n    def words(string : String) : List[String] = {\n\
    \        var words = List[String]()\n        var word = \"\"\n        var i =\
    \ 0\n        while (i < string.length) {\n            if (string.charAt(i) ==\
    \ ',') {\n                if (word.length > 0) {\n                    words +=\
    \ word\n                    word = \"\"\n                }\n            } else\
    \ {\n                word += string.charAt(i)\n            }\n            i +=\
    \ 1\n        }\n        if (word.length > 0) {\n            words += word\n  \
    \      }\n        words\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(List[String](\"a,b,c,d\"))\n    // (List[String](\"a\", \"b\"\
    , \"c\", \"d\"))\n    def words(string : String) : List[String] = {\n        var\
    \ words = List[String]()\n        var word = \"\"\n        var i = 0\n       \
    \ while (i < string.length) {\n            if (string.charAt(i) == ',') {\n  \
    \              if (word.length > 0) {\n                    words += word\n   \
    \                 word = \"\"\n                }\n            } else {\n     \
    \           word += string.charAt(i)\n            }\n            i += 1\n    \
    \    }\n        if (word.length > 0) {\n            words += word\n        }\n\
    \        words\n    }\n\n    // Convert a string to a list of words\n    // >>>\
    \ words(List[String](\"a,b,c,d\"))\n    // (List[String](\"a\", \"b\", \"c\",\
    \ \"d\"))\n    def words(string : String) : List[String] = {\n        var words",
  "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    strings.head._ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello, my name is John\")\n\
    \    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words(s : String)\
    \ : List[String] = {\n        s.split(\" \")\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"\
    Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words2(s : String) : List[String]\
    \ = {\n        s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\"\
    , \"is\", \"John\"]\n    def words3(s : String) : List[String] = {\n        s.split(\"\
    \ \")\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ]\n    def words4(s : String) : List[String] = {\n        s.split(\" \")\n   \
    \ }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello, my\
    \ name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n  \
    \  def words5(s : String) : List[String] = {\n        s.split(\" \")\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello, my name\
    \ is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def\
    \ words6(s : String) : List[String] = {\n        s.split(\" \")\n    }\n\n   \
    \ // Convert a string to a list of words\n    // >>> words(\"Hello, my name is\
    \ John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words7(s\
    \ : String) : List[", "        if (strings.isEmpty()) {\n            return \"\
    \"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"\")\n    // List[Char]()\n    // >>> toList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def toList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            return List.empty()\n        } else {\n            return List.range(0,\
    \ s.length()).map(i => s.charAt(i))\n        }\n    }\n\n    // Convert a list\
    \ of characters to a string\n    // >>> fromList(List[Char]())\n    // \"\"\n\
    \    // >>> fromList(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def fromList(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            return\
    \ \"\"\n        } else {\n            return chars.foldLeft(String.empty, (acc,\
    \ c) => acc + c)\n        }\n    }\n\n    // Convert a string to a list of integers\n\
    \    // >>> toList(\"\")\n    // List[Int]()\n    // >>> toList(\"123\")\n   \
    \ // List[Int](1, 2, 3)\n    def toList(s : String) : List[Int] = {\n        if\
    \ (s.isEmpty()) {\n            return List.empty()\n        } else {\n       \
    \     return List.range(0, s.length()).map(i => s.charAt(i) - '0')\n        }\n\
    \    }\n\n    // Convert a list of integers to a string\n    // >>> fromList(List[Int]())\n\
    \    // \"\"\n    // >>> fromList(List[Int](1, 2, 3))\n    // \"123\"\n    def\
    \ fromList(ints : List[Int]) : String = {\n        if (ints.isEmpty()) {\n   \
    \         return \"\"\n        } else {\n            return ints.foldLeft(String.empty,\
    \ (acc, i) => acc + i)\n", "        if (strings.isEmpty()) {\n            \"\"\
    \n        } else {\n            strings.head + concatenate(strings.tail)\n   \
    \     }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[String](\"this\", \"is\", \"a\", \"test\"))\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(List[String](\"this is a test\"))\n    // (List[String](\"this\",\
    \ \"is\", \"a\", \"test\"))\n    def words(s : String) : List[String] = {\n  \
    \      if (s.isEmpty()) {\n            List[String]()\n        } else {\n    \
    \        List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(List[String](\"this is a test\"))\n   \
    \ // (List[String](\"this\", \"is\", \"a\", \"test\"))\n    def words(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    this is a test\"))\n    // (List[String](\"this\", \"is\", \"a\", \"test\"))\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(List[String](\"this is a test\"))\n    // (List[String](\"this\",\
    \ \"is\", \"a\", \"test\"))\n    def words(s : String) : List[String] = {", " \
    \       if (strings.isEmpty()) {\n            \"\"\n        } else {\n       \
    \     strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of characters\n    // >>> toList(\"\")\n    // List[Char]()\n\
    \    // >>> toList(\"abc\")\n    // List[Char]('a', 'b', 'c')\n    def toList(s\
    \ : String) : List[Char] = {\n        if (s.isEmpty()) {\n            List[Char]()\n\
    \        } else {\n            List[Char](s.toCharArray)\n        }\n    }\n\n\
    \    // Convert a list of characters to a string\n    // >>> fromList(List[Char]('a',\
    \ 'b', 'c'))\n    // \"abc\"\n    def fromList(chars : List[Char]) : String =\
    \ {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n    \
    \        StringBuilder sb = new StringBuilder()\n            for (c : chars) {\n\
    \                sb.append(c)\n            }\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a list of integers\n    // >>>\
    \ toList(\"\")\n    // List[Int]()\n    // >>> toList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def toList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.chars().map(_.toInt).toSeq)\n\
    \        }\n    }\n\n    // Convert a list of integers to a string\n    // >>>\
    \ fromList(List[Int](1, 2, 3))\n    // \"123\"\n    def fromList(ints : List[Int])\
    \ : String = {\n        if (ints.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            StringBuilder sb = new StringBuilder()\n            for (i :\
    \ ints) {\n                sb.append(i)\n            }\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a list of strings\n    // >>>\
    \ to", "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n\
    \            strings.head + concatenate(strings.tail)\n        }\n    }\n\n  \
    \  // Convert a string to a list of words\n    // >>> words(\"Hello World\")\n\
    \    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            List()\n        } else {\n          \
    \  List(s.split(\" \"))\n        }\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words2(s : String) : List[String] = {\n        if (s.isEmpty()) {\n \
    \           List()\n        } else {\n            List(s.split(\" \"))\n     \
    \   }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List()\n        } else {\n    \
    \        List(s.split(\" \"))\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"\
    ]\n    def words4(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            List()\n        } else {\n            List(s.split(\" \"))\n    \
    \    }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words5(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List()\n        } else {\n    \
    \        List(s.split(\" \"))\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"\
    ]\n    def words6(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            List()\n        } else {\n            List(s.", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(List[String](\"This is a test\"))\n    //\
    \ (List[String](\"This\", \"is\", \"a\", \"test\"))\n    def words(s : String)\
    \ : List[String] = {\n        if (s.isEmpty()) {\n            return List.empty()\n\
    \        } else {\n            return s.split(\" \").toList\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    This is a test\"))\n    // (List[String](\"This\", \"is\", \"a\", \"test\"))\n\
    \    def words(s : String) : List[String] = {\n        if (s.isEmpty()) {\n  \
    \          return List.empty()\n        } else {\n            return s.split(\"\
    \ \").toList\n        }\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(List[String](\"This is a test\"))\n    // (List[String](\"This\"\
    , \"is\", \"a\", \"test\"))\n    def words(s : String) : List[String] = {\n  \
    \      if (s.isEmpty()) {\n            return List.empty()\n        } else {\n\
    \            return s.split(\" \").toList\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(List[String](\"This is a test\"\
    ))\n    // (List[String](\"This\", \"is\", \"a\", \"test\"))\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            return\
    \ List.empty()\n        } else {\n            return s.split(\" \").toList\n \
    \       }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    This is a test\"))\n    // (List[String](\"This\", \"is\", \"a\", \"test\"))\n\
    \    def words(s : String) : List[String] = {\n        ", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String)", "        if (strings.isEmpty()) {\n            return \"\"\n   \
    \     } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Sum of all elements in a list\n    // >>> sum(List[Int](1,\
    \ 2, 3))\n    // 6\n    def sum(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            return 0\n        } else {\n            return ints.head + sum(ints.tail)\n\
    \        }\n    }\n\n    // Product of all elements in a list\n    // >>> product(List[Int](1,\
    \ 2, 3))\n    // 6\n    def product(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            return 1\n        } else {\n            return ints.head * product(ints.tail)\n\
    \        }\n    }\n\n    // Find the maximum value in a list\n    // >>> max(List[Int](1,\
    \ 2, 3))\n    // 3\n    def max(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            return 0\n        } else {\n            return max(ints.tail)\n\
    \        }\n    }\n\n    // Find the minimum value in a list\n    // >>> min(List[Int](1,\
    \ 2, 3))\n    // 1\n    def min(ints : List[Int]) : Int = {\n        if (ints.isEmpty())\
    \ {\n            return 0\n        } else {\n            return min(ints.tail)\n\
    \        }\n    }\n\n    // Find the sum of all odd numbers in a list\n    //\
    \ >>> sumOdds(List[Int](1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n    // 25\n    def sumOdds(ints\
    \ : List[Int]) : Int = {\n        if (ints.isEmpty()) {\n            return 0\n\
    \        } else {\n            return sumOdds(ints.tail) + ints.head % 2\n   \
    \     }\n    }\n\n    // Find the product of all odd numbers in a list\n    //\
    \ >>> productOdds(List[Int](1, 2, 3, 4, 5, 6, 7", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n\
    \    // List[Char]('a', 'b', 'c')\n    def stringToList(s : String) : List[Char]\
    \ = {\n        if (s.isEmpty()) {\n            List[Char]()\n        } else {\n\
    \            List[Char](s.toCharArray())\n        }\n    }\n\n    // Convert a\
    \ list of characters to a string\n    // >>> listToString(List[Char]('a', 'b',\
    \ 'c'))\n    // \"abc\"\n    def listToString(chars : List[Char]) : String = {\n\
    \        if (chars.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    StringBuilder sb = new StringBuilder()\n            for (c : List[Char])\
    \ {\n                sb.append(c)\n            }\n            return sb.toString()\n\
    \        }\n    }\n\n    // Convert a string to a list of integers\n    // >>>\
    \ stringToList(\"\")\n    // List[Int]()\n    // >>> stringToList(\"123\")\n \
    \   // List[Int](1, 2, 3)\n    def stringToList(s : String) : List[Int] = {\n\
    \        if (s.isEmpty()) {\n            List[Int]()\n        } else {\n     \
    \       List[Int](s.chars().map(_.toInt).toSeq().toArray())\n        }\n    }\n\
    \n    // Convert a list of integers to a string\n    // >>> listToString(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n\
    \        if (ints.isEmpty()) {\n            \"\"\n        } else {\n         \
    \   StringBuilder sb = new StringBuilder()\n            for (i : List[Int]) {\n\
    \                sb.append(i)\n            }\n            return sb.toString()\n\
    \        }\n    ", "        var result = \"\"\n        for (i <- 0 until strings.length\
    \ - 1) {\n            result += strings(i)\n        }\n        result\n    }\n\
    \n    // Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def\
    \ reverse(s : String) : String = {\n        var result = \"\"\n        for (i\
    \ <- 0 until s.length - 1) {\n            result += s(s.length - i - 1)\n    \
    \    }\n        result\n    }\n\n    // Convert a string to lower case\n    //\
    \ >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) : String = {\n\
    \        s.toLowerCase\n    }\n\n    // Convert a string to upper case\n    //\
    \ >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) : String = {\n\
    \        s.toUpperCase\n    }\n\n    // Convert a string to title case\n    //\
    \ >>> title(\"abc\")\n    // \"Abc\"\n    def title(s : String) : String = {\n\
    \        s.replaceAll(\"(^|_)(.)\", \"$2.toUpperCase\")\n    }\n\n    // Convert\
    \ a string to camel case\n    // >>> camel(\"abc\")\n    // \"abc\"\n    def camel(s\
    \ : String) : String = {\n        s.replaceAll(\"(^|_)(.)\", \"$2.toLowerCase\"\
    )\n    }\n\n    // Convert a string to snake case\n    // >>> snake(\"abc\")\n\
    \    // \"abc\"\n    def snake(s : String) : String = {\n        s.replaceAll(\"\
    (.)([A-Z][a-z]+)\", \"$1_$2\")\n    }\n\n    // Convert a string to pascal case\n\
    \    // >>> pascal(\"abc\")\n    // \"Abc\"\n    def pascal(s : String) : String\
    \ = {\n        s.replaceAll(\"(^|_)(.)\", \"$2.toUpperCase\")\n    }\n\n    //\
    \ Convert a string to kebab case\n    // >>> kebab(\"abc\")\n    // \"abc\"\n\
    \    def kebab(s : String) : String = {\n        s.replaceAll(\"(.)([", "    \
    \    if (strings.isEmpty()) {\n            return \"\"\n        } else {\n   \
    \         return strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello, my name\
    \ is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def\
    \ words(s : String) : List[String] = {\n        var words = List.empty[String]\n\
    \        var word = \"\"\n        for (i <- 0 until s.length) {\n            if\
    \ (s.charAt(i) == ' ') {\n                words = words.append(word)\n       \
    \         word = \"\"\n            } else {\n                word = word.concat(s.charAt(i))\n\
    \            }\n        }\n        words = words.append(word)\n        return\
    \ words\n    }\n\n    // Convert a string to a list of words and return the number\
    \ of words\n    // >>> wordsAndCount(\"Hello, my name is John\")\n    // ([\"\
    Hello\", \"my\", \"name\", \"is\", \"John\"], 5)\n    def wordsAndCount(s : String)\
    \ : Tuple[List[String], Int] = {\n        var words = List.empty[String]\n   \
    \     var word = \"\"\n        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == ' ') {\n                words = words.append(word)\n\
    \                word = \"\"\n                count += 1\n            } else {\n\
    \                word = word.concat(s.charAt(i))\n            }\n        }\n \
    \       words = words.append(word)\n        return (words, count)\n    }\n\n \
    \   // Convert a string to a list of words and return the number of words\n  \
    \  // >>> wordsAndCount2(\"Hello, my name is John\")\n    // ([\"Hello\", \"my\"\
    , \"name\", \"is\", \"John\"], 5)\n    def wordsAndCount2(s : String) : Tuple[List[String],\
    \ Int] = {\n        var words = List.empty[String]\n        var word = \"\"\n\
    \        var count = 0\n        for (i <- 0 until s.length) {", "        var result\
    \ = \"\"\n        for(s in strings) {\n            result += s\n        }\n  \
    \      return result\n    }\n\n    // Concatenate list of strings into a single\
    \ string\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n    //\
    \ (\"abc\")\n    def concatenate2(strings : List[String]) : String = {\n     \
    \   var result = \"\"\n        for(s in strings) {\n            result += s\n\
    \        }\n        return result\n    }\n\n    // Concatenate list of strings\
    \ into a single string\n    // >>> concatenate((List[String](\"a\", \"b\", \"\
    c\")))\n    // (\"abc\")\n    def concatenate3(strings : List[String]) : String\
    \ = {\n        var result = \"\"\n        for(s in strings) {\n            result\
    \ += s\n        }\n        return result\n    }\n\n    // Concatenate list of\
    \ strings into a single string\n    // >>> concatenate((List[String](\"a\", \"\
    b\", \"c\")))\n    // (\"abc\")\n    def concatenate4(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for(s in strings) {\n     \
    \       result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate5(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for(s in strings) {\n     \
    \       result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate6(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for(s in strings) {\n     \
    \       result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"", "        if (strings.isEmpty()) {\n            return \"\"\n\
    \        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is Robert\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"Robert\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a list of words to a single string\n    // >>> sentence(words(\"\
    Hello, my name is Robert\"))\n    // \"Hello, my name is Robert\"\n    def sentence(words\
    \ : List[String]) : String = {\n        return concatenate(words)\n    }\n\n \
    \   // Compute the length of a list of words\n    // >>> length(words(\"Hello,\
    \ my name is Robert\"))\n    // 5\n    def length(words : List[String]) : Int\
    \ = {\n        return words.length\n    }\n\n    // Compute the sum of the lengths\
    \ of a list of words\n    // >>> sumLengths(words(\"Hello, my name is Robert\"\
    ))\n    // 14\n    def sumLengths(words : List[String]) : Int = {\n        return\
    \ words.foldLeft(0, (x, y) => x + y)\n    }\n\n    // Compute the product of the\
    \ lengths of a list of words\n    // >>> productLengths(words(\"Hello, my name\
    \ is Robert\"))\n    // 24\n    def productLengths(words : List[String]) : Int\
    \ = {\n        return words.foldLeft(1, (x, y) => x * y)\n    }\n\n    // Compute\
    \ the sum of the squares of the lengths of a list of words\n    // >>> sumSqLengths(words(\"\
    Hello, my name is Robert\"))\n    // 55\n    def sumSqLengths(words : List[String])\
    \ : Int = {\n        return words.foldLeft(0, (x, y) => x + y * y)\n    }\n\n\
    \    // Compute the product of the squares of the lengths of a list of words\n\
    \    // >>> productSqLengths(words(\"Hello, my name is Robert\"))\n    // 225\n\
    \    def productS", "        var result = \"\"\n        for (s in strings) {\n\
    \            result += s\n        }\n        return result\n    }\n\n    // Reverse\
    \ a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String)\
    \ : String = {\n        var result = \"\"\n        for (i in range(len(s) - 1,\
    \ -1, -1)) {\n            result += s[i]\n        }\n        return result\n \
    \   }\n\n    // Convert a string to lower case\n    // >>> lower(\"ABC\")\n  \
    \  // \"abc\"\n    def lower(s : String) : String = {\n        return s.toLowerCase()\n\
    \    }\n\n    // Convert a string to upper case\n    // >>> upper(\"abc\")\n \
    \   // \"ABC\"\n    def upper(s : String) : String = {\n        return s.toUpperCase()\n\
    \    }\n\n    // Convert a string to title case\n    // >>> title(\"abc\")\n \
    \   // \"Abc\"\n    def title(s : String) : String = {\n        return s.substring(0,\
    \ 1).toUpper() + s.substring(1)\n    }\n\n    // Convert a string to camel case\n\
    \    // >>> camel(\"abc\")\n    // \"abc\"\n    def camel(s : String) : String\
    \ = {\n        return s.substring(0, 1).toLower() + s.substring(1)\n    }\n\n\
    \    // Convert a string to snake case\n    // >>> snake(\"abc\")\n    // \"abc\"\
    \n    def snake(s : String) : String = {\n        return s.substring(0, 1).toUpper()\
    \ + s.substring(1)\n    }\n\n    // Convert a string to pascal case\n    // >>>\
    \ pascal(\"abc\")\n    // \"Abc\"\n    def pascal(s : String) : String = {\n \
    \       return s.substring(0, 1).toUpper() + s.substring(1)\n    }\n\n    // Convert\
    \ a string to kebab case\n    // >>> kebab(\"abc\")\n    // \"abc\"\n    def kebab(s\
    \ : String) : String = {\n        return s.substring(", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i <- 0 until strings.length - 1) {\n                result += strings(i)\n\
    \            }\n            result\n        }\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"\
    world\"]\n    def words(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var word\
    \ = \"\"\n            while (index < s.length && s(index) != ' ') {\n        \
    \        word += s(index)\n                index += 1\n            }\n       \
    \     index += 1\n            result += word\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String] =\
    \ {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var word = \"\"\n            while (index\
    \ < s.length && s(index) != ' ') {\n                word += s(index)\n       \
    \         index += 1\n            }\n            index += 1\n            result\
    \ += word\n        }\n        result\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words3(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var word\
    \ = \"\"\n            while (index < s.length && s(index) != ' ') {\n        \
    \        word += s(index)\n                index += 1\n            }\n       \
    \     index += 1\n            result += word\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello world\"\
    )\n    // [\"Hello\", \"world\"]\n    def words4(s : String) : List[String] =\
    \ {\n        var result = List[String]()", "        if (strings.isEmpty()) {\n\
    \            return \"\"\n        } else {\n            return strings.head +\
    \ concatenate(strings.tail)\n        }\n    }\n\n    // Return a list of strings\
    \ from a string\n    // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\"\
    , \"c\"))\n    def split(str : String) : List[String] = {\n        if (str.isEmpty())\
    \ {\n            return List[String]()\n        } else {\n            return List[String](str.split(\"\
    ,\"))\n        }\n    }\n\n    // Return a list of strings from a string\n   \
    \ // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def\
    \ split_with_empty(str : String) : List[String] = {\n        if (str.isEmpty())\
    \ {\n            return List[String]()\n        } else {\n            return List[String](str.split(\"\
    ,\"))\n        }\n    }\n\n    // Return a list of strings from a string\n   \
    \ // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def\
    \ split_with_empty_list(str : String) : List[String] = {\n        if (str.isEmpty())\
    \ {\n            return List[String]()\n        } else {\n            return List[String](str.split(\"\
    ,\"))\n        }\n    }\n\n    // Return a list of strings from a string\n   \
    \ // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def\
    \ split_with_empty_list_2(str : String) : List[String] = {\n        if (str.isEmpty())\
    \ {\n            return List[String]()\n        } else {\n            return List[String](str.split(\"\
    ,\"))\n        }\n    }\n\n    // Return a list of strings from a string\n   \
    \ // >>> split(\"a,b,c\")\n    // (List[String](\"a\", \"b\", \"c\"))\n    def\
    \ split_with_empty_list_3(str : String) : List[String] =", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // []\n    // >>> stringToList(\"a\")\n    // [97]\n\
    \    // >>> stringToList(\"ab\")\n    // [97, 98]\n    def stringToList(s : String)\
    \ : List[Integer] = {\n        if (s.isEmpty()) {\n            List.empty\n  \
    \      } else {\n            List(s.toCharArray).map(c => c.asInt)\n        }\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> listToString(List[Integer]())\n\
    \    // \"\"\n    // >>> listToString(List[Integer](97, 98))\n    // \"ab\"\n\
    \    def listToString(l : List[Integer]) : String = {\n        if (l.isEmpty())\
    \ {\n            \"\"\n        } else {\n            StringBuilder sb = new StringBuilder()\n\
    \            l.foreach(i => sb.append(i))\n            sb.toString()\n       \
    \ }\n    }\n\n    // Convert a string to a list of words\n    // >>> stringToWords(\"\
    \")\n    // []\n    // >>> stringToWords(\"a\")\n    // [[\"a\"]]\n    // >>>\
    \ stringToWords(\"ab\")\n    // [[\"a\"], [\"b\"]]\n    // >>> stringToWords(\"\
    a b\")\n    // [[\"a\"], [\"b\"]]\n    // >>> stringToWords(\"a  b\")\n    //\
    \ [[\"a\"], [\"b\"]]\n    def stringToWords(s : String) : List[List[String]] =\
    \ {\n        if (s.isEmpty()) {\n            List.empty\n        } else {\n  \
    \          List(s.split(\" \")).map(w => List(w.toLowerCase().split(\"\")))\n\
    \        }\n    }\n\n    // Convert a list of words to a string\n    // >>> wordsToString(List[List[String]]())\n\
    \    // \"\"\n    // >>> wordsToString(List[List[String]](List([\"a", "      \
    \  if (strings.isEmpty()) {\n            \"\"\n        } else {\n            strings.head._\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, world!\")\n    // [\"Hello\", \"\
    world\"]\n    def words(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, world!\")\n    // [\"Hello\", \"world\"]\n    def words2(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello, world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words3(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello, world!\")\n    // [\"\
    Hello\", \"world\"]\n    def words4(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello, world!\")\n    // [\"Hello\", \"world\"]\n    def words5(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello, world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words", "        var result = \"\"\n\
    \        for (i <- 0 until strings.length - 1) {\n            result = result\
    \ + strings(i)\n        }\n        result\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello, world!\")\n    // [\"Hello\", \"\
    world\"]\n    def words(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var next\
    \ = s.indexOf(\" \", index)\n            if (next == -1) {\n                next\
    \ = s.length\n            }\n            result = result + s.substring(index,\
    \ next)\n            index = next + 1\n        }\n        result\n    }\n\n  \
    \  // Convert a string to a list of words\n    // >>> words(\"Hello, world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String] =\
    \ {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var next = s.indexOf(\" \", index)\n     \
    \       if (next == -1) {\n                next = s.length\n            }\n  \
    \          result = result + s.substring(index, next)\n            index = next\
    \ + 1\n        }\n        result\n    }\n\n    // Convert a string to a list of\
    \ words\n    // >>> words(\"Hello, world!\")\n    // [\"Hello\", \"world\"]\n\
    \    def words3(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var next\
    \ = s.indexOf(\" \", index)\n            if (next == -1) {\n                next\
    \ = s.length\n            }\n            result = result + s.substring(index,\
    \ next)\n            index = next + 1\n        }\n        result\n    }\n\n  \
    \  // Convert a string to a list of words\n    // >>> words(\"Hello, world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words4(s : String) : List[String] =\
    \ {\n        var result = List[String]", "        if (strings.isEmpty()) {\n \
    \           \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            List[String]()\n        } else\
    \ {\n            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String) :", "        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head._ + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words(s : String) : List[String] = {\n        s.split(\" \")\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello, my name\
    \ is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def\
    \ words2(s : String) : List[String] = {\n        s.split(\" \")\n    }\n\n   \
    \ // Convert a string to a list of words\n    // >>> words(\"Hello, my name is\
    \ John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words3(s\
    \ : String) : List[String] = {\n        s.split(\" \")\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello, my name is John\")\n\
    \    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words4(s : String)\
    \ : List[String] = {\n        s.split(\" \")\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello, my name is John\")\n    // [\"\
    Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words5(s : String) : List[String]\
    \ = {\n        s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\"\
    , \"is\", \"John\"]\n    def words6(s : String) : List[String] = {\n        s.split(\"\
    \ \")\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"\
    ]\n    def words7(s : String) : List[", "        if (strings.isEmpty()) {\n  \
    \          \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"\")\n    // List[Char]()\n    // >>> toList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def toList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray())\n\
    \        }\n    }\n\n    // Convert a string to a list of integers\n    // >>>\
    \ toList(\"\")\n    // List[Int]()\n    // >>> toList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def toList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.toCharArray().stream().map(_.toInt).toArray)\n\
    \        }\n    }\n\n    // Convert a string to a list of strings\n    // >>>\
    \ toList(\"\")\n    // List[String]()\n    // >>> toList(\"abc\")\n    // List[String](List[Char]('a',\
    \ 'b', 'c'))\n    def toList(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.toCharArray().stream().map(_.toString()).toArray)\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ fromList(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    // >>> fromList(List[Char]('a',\
    \ 'b', 'c', 'd'))\n    // \"abcd\"\n    def fromList(chars : List[Char]) : String\
    \ = {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n  \
    \          StringBuilder sb = new StringBuilder()\n            for (char c :",
  "        if (strings.isEmpty()) {\n            return \"\"\n        } else {\n \
    \           return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a list of words to a single\
    \ string\n    // >>> sentence(\"Hello\", \"World\")\n    // \"Hello World\"\n\
    \    def sentence(words : List[String]) : String = {\n        return concatenate(words)\n\
    \    }\n\n    // Compute the length of a list of words\n    // >>> length(words(\"\
    Hello World!\"))\n    // 13\n    def length(words : List[String]) : Int = {\n\
    \        return words.length\n    }\n\n    // Compute the length of a string\n\
    \    // >>> length(\"Hello World!\")\n    // 13\n    def length(s : String) :\
    \ Int = {\n        return s.length\n    }\n\n    // Compute the sum of the lengths\
    \ of the words in a string\n    // >>> sumLengths(\"Hello World!\")\n    // 13\n\
    \    def sumLengths(s : String) : Int = {\n        return sum(map(length, words(s)))\n\
    \    }\n\n    // Compute the product of the lengths of the words in a string\n\
    \    // >>> productLengths(\"Hello World!\")\n    // 6\n    def productLengths(s\
    \ : String) : Int = {\n        return product(map(length, words(s)))\n    }\n\n\
    \    // Compute the sum of the squares of the lengths of the words in a string\n\
    \    // >>> sumLengthSquares(\"Hello World!\")\n    // 14\n    def sumLengthSquares(s\
    \ : String) : Int = {\n        return sum(map(lengthSquared, words(s)))\n    }\n\
    \n    // Compute the product of the squares of the lengths of the words in a string\n\
    \    // >>> productLengthSquares(\"Hello World!\")\n    // 6\n    def productLengthSquares(s\
    \ : String) : Int = {\n        return product(map(lengthSquared, words", "   \
    \     if (strings.isEmpty()) {\n            \"\"\n        } else {\n         \
    \   strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Reverse\
    \ a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String)\
    \ : String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            s.reverse() + s.reverse()\n        }\n    }\n\n    // Compute the\
    \ length of a string\n    // >>> length(\"abc\")\n    // 3\n    def length(s :\
    \ String) : Int = {\n        if (s.isEmpty()) {\n            0\n        } else\
    \ {\n            1 + length(s.tail)\n        }\n    }\n\n    // Compute the length\
    \ of a list\n    // >>> length(List[String](\"a\", \"b\", \"c\"))\n    // 3\n\
    \    def length(list : List[String]) : Int = {\n        if (list.isEmpty()) {\n\
    \            0\n        } else {\n            1 + length(list.tail)\n        }\n\
    \    }\n\n    // Compute the length of a list of lists\n    // >>> length(List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\"))))\n    // 2\n    def length(listOfLists : List[List[String]])\
    \ : Int = {\n        if (listOfLists.isEmpty()) {\n            0\n        } else\
    \ {\n            1 + length(listOfLists.tail)\n        }\n    }\n\n    // Compute\
    \ the length of a list of lists of lists\n    // >>> length(List[List[List[String]]](List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\"))))))\n    // 1\n    def length(listOfListsOfLists\
    \ : List[List[List[String]]]) : Int = {\n        if (listOfListsOfLists.isEmpty())\
    \ {\n            0\n        } else {\n            1 + length(listOfListsOfLists.tail)\n\
    \        }\n    }\n\n    // Compute the length of a list of lists of lists of\
    \ lists\n    ", "        var result = \"\"\n        for (i <- 0 until strings.length\
    \ - 1) {\n            result += strings(i)\n        }\n        result\n    }\n\
    \n    // Convert a string to a list of characters\n    // >>> stringToList(\"\
    abc\")\n    // List(a, b, c)\n    def stringToList(s : String) : List[Char] =\
    \ {\n        var result = List[Char]().apply$mcZ$sp()\n        for (i <- 0 until\
    \ s.length - 1) {\n            result = result.updated(i, s(i))\n        }\n \
    \       result\n    }\n\n    // Convert a list of characters to a string\n   \
    \ // >>> listToString(List(a, b, c))\n    // \"abc\"\n    def listToString(l :\
    \ List[Char]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ l.length - 1) {\n            result += l(i)\n        }\n        result\n   \
    \ }\n\n    // Convert a string to a list of integers\n    // >>> stringToList(\"\
    123\")\n    // List(1, 2, 3)\n    def stringToListInt(s : String) : List[Int]\
    \ = {\n        var result = List[Int]().apply$mcZ$sp()\n        for (i <- 0 until\
    \ s.length - 1) {\n            result = result.updated(i, s(i).toInt)\n      \
    \  }\n        result\n    }\n\n    // Convert a list of integers to a string\n\
    \    // >>> listToString(List(1, 2, 3))\n    // \"123\"\n    def listToStringInt(l\
    \ : List[Int]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ l.length - 1) {\n            result += l(i).toString\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of doubles\n    // >>> stringToList(\"\
    123.45\")\n    // List(1.2345, 2.3455, 3.4555)\n    def stringToListDouble(s :\
    \ String) : List[Double] = {\n        var result = List[Double]().apply$mcZ$sp()\n\
    \        for", "        if (strings.isEmpty()) {\n            \"\"\n        }\
    \ else {\n            strings.head._ + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello,\
    \ my name is John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n\
    \    def words(s : String) : List[String] = {\n        s.split(\" \")\n    }\n\
    \n    // Convert a string to a list of words, but ignoring punctuation\n    //\
    \ >>> words2(\"Hello, my name is John\")\n    // [\"Hello\", \"my\", \"name\"\
    , \"John\"]\n    def words2(s : String) : List[String] = {\n        s.split(\"\
    \ \").filter(_.matches(\"\\\\w+\"))\n    }\n\n    // Convert a string to a list\
    \ of words, ignoring punctuation\n    // >>> words3(\"Hello, my name is John\"\
    )\n    // [\"Hello\", \"my\", \"name\", \"John\"]\n    def words3(s : String)\
    \ : List[String] = {\n        s.split(\" \").filter(_.matches(\"\\\\w+\"))\n \
    \   }\n\n    // Convert a string to a list of words, ignoring punctuation and\
    \ case\n    // >>> words4(\"Hello, my name is John\")\n    // [\"hello\", \"my\"\
    , \"name\", \"is\", \"john\"]\n    def words4(s : String) : List[String] = {\n\
    \        s.toLowerCase().split(\" \").filter(_.matches(\"\\\\w+\"))\n    }\n\n\
    \    // Convert a string to a list of words, ignoring punctuation and case\n \
    \   // >>> words5(\"Hello, my name is John\")\n    // [\"hello\", \"my\", \"name\"\
    , \"is\", \"john\"]\n    def words5(s : String) : List[String] = {\n        s.toLowerCase().split(\"\
    \ \").filter(_.matches(\"\\\\w+\"))\n    }\n\n    // Convert a string to a list\
    \ of words, ignoring punctuation and case\n    // >>> words6(\"Hello, my name\
    \ is John\")\n    // [\"hello\", \"my\", \"name\", \"is\", \"john\"]\n    def\
    \ words6(s : String", "        if (strings.isEmpty()) {\n            return \"\
    \"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        return s.reverse()\n\
    \    }\n\n    // Convert a string to lower case\n    // >>> lower(\"ABC\")\n \
    \   // \"abc\"\n    def lower(s : String) : String = {\n        return s.toLowerCase()\n\
    \    }\n\n    // Convert a string to upper case\n    // >>> upper(\"abc\")\n \
    \   // \"ABC\"\n    def upper(s : String) : String = {\n        return s.toUpperCase()\n\
    \    }\n\n    // Convert a string to title case\n    // >>> title(\"abc\")\n \
    \   // \"Abc\"\n    def title(s : String) : String = {\n        return s.toUpper().replaceAll(\"\
    \\\\s\", \" \")\n    }\n\n    // Convert a string to camel case\n    // >>> camel(\"\
    abc\")\n    // \"abc\"\n    def camel(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"\\\\s+\", \"\")\n    }\n\n    // Convert a string to\
    \ snake case\n    // >>> snake(\"abc\")\n    // \"abc\"\n    def snake(s : String)\
    \ : String = {\n        return s.replaceAll(\"\\\\s+\", \"_\")\n    }\n\n    //\
    \ Convert a string to pascal case\n    // >>> pascal(\"abc\")\n    // \"Abc\"\n\
    \    def pascal(s : String) : String = {\n        return s.toUpper().replaceAll(\"\
    \\\\s\", \"\")\n    }\n\n    // Convert a string to kebab case\n    // >>> kebab(\"\
    abc\")\n    // \"abc\"\n    def kebab(s : String) : String = {\n        return\
    \ s.replaceAll(\"\\\\s+\", \"-\")\n    }\n\n    // Convert a string to space case\n\
    \    // >>> space(\"abc\")\n    // \"abc\"\n    def space(s : String) : String\
    \ = {\n        return s.replaceAll(\"\\\\s", "        if (strings.isEmpty()) {\n\
    \            return \"\"\n        } else {\n            return strings.head +\
    \ concatenate(strings.tail)\n        }\n    }\n\n    // Reverse a string\n   \
    \ // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s : String) : String\
    \ = {\n        return s.reverse()\n    }\n\n    // Compute the length of a string\n\
    \    // >>> length(\"abc\")\n    // 3\n    def length(s : String) : Int = {\n\
    \        return s.length()\n    }\n\n    // Compute the length of a list\n   \
    \ // >>> length(List[String](\"a\", \"b\", \"c\"))\n    // 3\n    def length(list\
    \ : List[String]) : Int = {\n        return list.length()\n    }\n\n    // Compute\
    \ the length of a list of lists\n    // >>> length(List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\"))))\n    // 2\n    def length(listOfLists : List[List[String]])\
    \ : Int = {\n        return listOfLists.length()\n    }\n\n    // Compute the\
    \ length of a list of lists of lists\n    // >>> length(List[List[List[String]]](List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\"))))))\n    // 1\n    def length(listOfListsOfLists\
    \ : List[List[List[String]]]) : Int = {\n        return listOfListsOfLists.length()\n\
    \    }\n\n    // Compute the length of a list of lists of lists of lists\n   \
    \ // >>> length(List[List[List[List[String]]]](List[List[List[String]]](List[List[String]](List[String]((\"\
    a\", \"b\"), (\"c\", \"d\")))))))\n    // 0\n    def length(listOfListsOfListsOfLists\
    \ : List[List[List[List[String]]]]) : Int = {\n        return listOfListsOfListsOfLists.length()\n\
    \    }\n\n    // Compute the length of a list of lists of lists of lists of lists\n\
    \    // >>> length", "        var result = \"\"\n        for (s in strings) {\n\
    \            result += s\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words('')\n    // []\n    // >>> words('hello')\n\
    \    // ['hello']\n    // >>> words('hello world')\n    // ['hello', 'world']\n\
    \    def words(s : String) : List[String] = {\n        var result = []\n     \
    \   var index = 0\n        while (index < s.length) {\n            var end = s.indexOf('\
    \ ', index)\n            if (end == -1) {\n                end = s.length\n  \
    \          }\n            result += s.substring(index, end).split(' ')\n     \
    \       index = end + 1\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words2('')\n    // []\n    // >>> words2('hello')\n\
    \    // ['hello']\n    // >>> words2('hello world')\n    // ['hello', 'world']\n\
    \    def words2(s : String) : List[String] = {\n        var result = []\n    \
    \    var index = 0\n        while (index < s.length) {\n            var end =\
    \ s.indexOf(' ', index)\n            if (end == -1) {\n                end = s.length\n\
    \            }\n            result += s.substring(index, end).split(' ')\n   \
    \         index = end + 1\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words3('')\n    // []\n    // >>> words3('hello')\n\
    \    // ['hello']\n    // >>> words3('hello world')\n    // ['hello', 'world']\n\
    \    def words3(s : String) : List[String] = {\n        var result = []\n    \
    \    var index = 0\n        while (index < s.length) {\n            var end =\
    \ s.indexOf(' ', index)\n            if (end == -1) {\n                end = s.length\n\
    \            }\n            result += s.substring(index, end).split(' ')\n   \
    \         index = end + 1\n        ", "        if (strings.isEmpty()) {\n    \
    \        return \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ world\")\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"", " \
    \       if (strings.isEmpty()) {\n            \"\"\n        } else {\n       \
    \     strings.head + concatenate(strings.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(String(\"this is a test\"))\n\
    \    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"is\", \"a\"\
    , \"test\"]\n    def words(s : String) : List[String] = {\n        s.split(\"\
    \ \")\n    }\n\n    // Convert a string to a list of words\n    // >>> words(String(\"\
    this is a test\"))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        s.split(\" \")\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(String(\"this is a test\"))\n\
    \    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"is\", \"a\"\
    , \"test\"]\n    def words(s : String) : List[String] = {\n        s.split(\"\
    \ \")\n    }\n\n    // Convert a string to a list of words\n    // >>> words(String(\"\
    this is a test\"))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        s.split(\" \")\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(String(\"this is a test\"))\n\
    \    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    ", "        if (strings.isEmpty()) {\n            return \"\"\n        }\
    \ else {\n            return strings.head + concatenate(strings.tail)\n      \
    \  }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(String(\"\
    this is a test\"))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        return s.split(\" \")\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(String(\"this is a test\"\
    ))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"\
    is\", \"a\", \"test\"]\n    def words(s : String) : List[String] = {\n       \
    \ return s.split(\" \")\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"is\", \"a\"\
    , \"test\"]\n    def words(s : String) : List[String] = {\n        return s.split(\"\
    \ \")\n    }\n\n    // Convert a string to a list of words\n    // >>> words(String(\"\
    this is a test\"))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s\
    \ : String) : List[String] = {\n        return s.split(\" \")\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(String(\"this is a test\"\
    ))\n    // [\"this\", \"is\", \"a\", \"test\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(String(\"this is a test\"))\n    // [\"this\", \"\
    is\", \"a\", \"test\"]\n    def words(s : String) : List[String] = {\n       \
    \ return s.split(\" \")\n    }\n\n    // Convert", "        var result = \"\"\n\
    \        for (i <- 0 until strings.size) {\n            result = result + strings.apply(i)\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of characters\n\
    \    // >>> toList(\"abc\")\n    // List(a, b, c)\n    def toList(s : String)\
    \ : List[Char] = {\n        var result = List[Char]()\n        for (i <- 0 until\
    \ s.length) {\n            result = result + s.apply(i)\n        }\n        result\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> fromList(List(a,\
    \ b, c))\n    // \"abc\"\n    def fromList(chars : List[Char]) : String = {\n\
    \        var result = \"\"\n        for (i <- 0 until chars.size) {\n        \
    \    result = result + chars.apply(i)\n        }\n        result\n    }\n\n  \
    \  // Convert a string to a list of integers\n    // >>> toList(\"123\")\n   \
    \ // List(1, 2, 3)\n    def toList(s : String) : List[Int] = {\n        var result\
    \ = List[Int]()\n        for (i <- 0 until s.length) {\n            result = result\
    \ + s.apply(i).toInt\n        }\n        result\n    }\n\n    // Convert a list\
    \ of integers to a string\n    // >>> fromList(List(1, 2, 3))\n    // \"123\"\n\
    \    def fromList(ints : List[Int]) : String = {\n        var result = \"\"\n\
    \        for (i <- 0 until ints.size) {\n            result = result + ints.apply(i).toString\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of strings\n\
    \    // >>> toList(\"ab\")\n    // List(a, b)\n    def toList(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        for (i <- 0 until s.length)\
    \ {\n            result = result + s.apply(i)\n        }\n        result\n   \
    \ }\n\n    // Convert a list of strings to a string\n    // >>> from", "     \
    \   if (strings.isEmpty()) {\n            return \"\"\n        } else {\n    \
    \        return strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n\
    \        return s.split(\" \")\n    }\n\n    // Convert a list of words to a single\
    \ string\n    // >>> sentence(\"Hello\", \"world\")\n    // \"Hello world!\"\n\
    \    def sentence(words : List[String]) : String = {\n        return words.mkString(\"\
    \ \")\n    }\n\n    // Compute the length of a list of words\n    // >>> length(words(\"\
    Hello world!\"))\n    // 13\n    def length(words : List[String]) : Int = {\n\
    \        return words.length\n    }\n\n    // Compute the sum of the lengths of\
    \ the words in a list of words\n    // >>> sumLengths(words(\"Hello world!\"))\n\
    \    // 13\n    def sumLengths(words : List[String]) : Int = {\n        return\
    \ words.foldLeft(0, (x, y) => x + y)\n    }\n\n    // Compute the product of the\
    \ lengths of the words in a list of words\n    // >>> productLengths(words(\"\
    Hello world!\"))\n    // 6\n    def productLengths(words : List[String]) : Int\
    \ = {\n        return words.foldLeft(1, (x, y) => x * y)\n    }\n\n    // Compute\
    \ the sum of the squares of the lengths of the words in a list of words\n    //\
    \ >>> sumSqLengths(words(\"Hello world!\"))\n    // 130\n    def sumSqLengths(words\
    \ : List[String]) : Int = {\n        return words.foldLeft(0, (x, y) => x + y\
    \ * y)\n    }\n\n    // Compute the product of the squares of the lengths of the\
    \ words in a list of words\n    // >>> productSqLengths(words(\"Hello world!\"\
    ))\n    // 36\n    def productSqLengths(words : List[String]) : Int = {\n    \
    \    return words.foldLeft(", "        if (strings.isEmpty()) {\n            \"\
    \"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    a b c d\"))\n    // (List[\"a\", \"b\", \"c\", \"d\"])\n    def words(string :\
    \ String) : List[String] = {\n        if (string.isEmpty()) {\n            List.empty[String]\n\
    \        } else {\n            List.of(string.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    a b c d\"))\n    // (List[\"a\", \"b\", \"c\", \"d\"])\n    def words(string :\
    \ String) : List[String] = {\n        if (string.isEmpty()) {\n            List.empty[String]\n\
    \        } else {\n            List.of(string.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    a b c d\"))\n    // (List[\"a\", \"b\", \"c\", \"d\"])\n    def words(string :\
    \ String) : List[String] = {\n        if (string.isEmpty()) {\n            List.empty[String]\n\
    \        } else {\n            List.of(string.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    a b c d\"))\n    // (List[\"a\", \"b\", \"c\", \"d\"])\n    def words(string :\
    \ String) : List[String] = {\n        if (string.isEmpty()) {\n            List.empty[String]\n\
    \        } else {\n            List.of(string.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(List[String](\"\
    a b c d\"))\n    // (List[\"a\", \"b\", \"c\", \"d\"])\n    def words(string :\
    \ String) : List[String] = {\n        if (string", "        var result = \"\"\n\
    \        for (s in strings) {\n            result += s\n        }\n        return\
    \ result\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < s.length) {\n            var word = \"\"\n            while (index\
    \ < s.length && s[index] != ' ') {\n                word += s[index]\n       \
    \         index += 1\n            }\n            result += word\n            if\
    \ (index < s.length) {\n                index += 1\n            }\n        }\n\
    \        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n    def words2(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ index = 0\n        while (index < s.length) {\n            var word = \"\"\n\
    \            while (index < s.length && s[index] != ' ') {\n                word\
    \ += s[index]\n                index += 1\n            }\n            result +=\
    \ word\n            if (index < s.length) {\n                index += 1\n    \
    \        }\n        }\n        return result\n    }\n\n    // Convert a string\
    \ to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"\
    World\"]\n    def words3(s : String) : List[String] = {\n        var result =\
    \ List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var word = \"\"\n            while (index < s.length && s[index]\
    \ != ' ') {\n                word += s[index]\n                index += 1\n  \
    \          }\n            result += word\n            if (index < s.length) {\n\
    \                index += 1\n            }\n        }\n        return result\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String) :", "  \
    \      var result = \"\"\n        for (i <- 0 until strings.length) {\n      \
    \      result += strings(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of characters\n    // >>> stringToList(\"\")\n    // List()\n\
    \    // >>> stringToList(\"abc\")\n    // List(\"a\", \"b\", \"c\")\n    def stringToList(s\
    \ : String) : List[Char] = {\n        var result = List.empty[Char]\n        for\
    \ (i <- 0 until s.length) {\n            result = result.append(s(i))\n      \
    \  }\n        result\n    }\n\n    // Convert a list of characters to a string\n\
    \    // >>> listToString(List())\n    // \"\"\n    // >>> listToString(List(\"\
    a\", \"b\", \"c\"))\n    // \"abc\"\n    def listToString(chars : List[Char])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until chars.length)\
    \ {\n            result += chars(i)\n        }\n        result\n    }\n\n    //\
    \ Convert a string to a list of integers\n    // >>> stringToList(\"\")\n    //\
    \ List()\n    // >>> stringToList(\"123\")\n    // List(1, 2, 3)\n    def stringToListInt(s\
    \ : String) : List[Int] = {\n        var result = List.empty[Int]\n        for\
    \ (i <- 0 until s.length) {\n            result = result.append(s(i).toInt)\n\
    \        }\n        result\n    }\n\n    // Convert a list of integers to a string\n\
    \    // >>> listToString(List())\n    // \"\"\n    // >>> listToString(List(1,\
    \ 2, 3))\n    // \"123\"\n    def listToStringInt(ints : List[Int]) : String =\
    \ {\n        var result = \"\"\n        for (i <- 0 until ints.length) {\n   \
    \         result += ints(i).toString\n        }\n        result\n    }\n\n   \
    \ // Convert a string to a list of doubles\n    // >>> stringToList(\"\")\n  \
    \  // List()\n    // >>> stringToList(\"123.45\")\n    // List(1.23", "      \
    \  var result = \"\"\n        for (i <- 0 until strings.length - 1) {\n      \
    \      result += strings(i)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        var result\
    \ = List[String]()\n        var index = 0\n        while (index < s.length) {\n\
    \            var next_index = s.indexOf(\" \", index)\n            if (next_index\
    \ == -1) {\n                result += s.substring(index)\n                index\
    \ = s.length\n            } else {\n                result += s.substring(index,\
    \ next_index)\n                index = next_index\n            }\n        }\n\
    \        result\n    }\n\n    // Convert a string to a list of words\n    // >>>\
    \ words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words2(s : String)\
    \ : List[String] = {\n        var result = List[String]()\n        var index =\
    \ 0\n        while (index < s.length) {\n            var next_index = s.indexOf(\"\
    \ \", index)\n            if (next_index == -1) {\n                result += s.substring(index)\n\
    \                index = s.length\n            } else {\n                result\
    \ += s.substring(index, next_index)\n                index = next_index\n    \
    \        }\n        }\n        result\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n\
    \    def words3(s : String) : List[String] = {\n        var result = List[String]()\n\
    \        var index = 0\n        while (index < s.length) {\n            var next_index\
    \ = s.indexOf(\" \", index)\n            if (next_index == -1) {\n           \
    \     result += s.substring(index)\n                index = s.length\n       \
    \     } else {\n                result += s.substring(index, next_index)\n   \
    \             index = next_index\n            }\n        }\n        result\n \
    \   }\n\n    // Convert a", "        if (strings.isEmpty()) {\n            return\
    \ \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(\"Hello\", \"World\")\n    // \"Hello\
    \ World\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ concatenate(words)\n    }\n\n    // Compute the length of a list of words\n\
    \    // >>> length(words(\"Hello World\"))\n    // 5\n    def length(words : List[String])\
    \ : Int = {\n        return words.length\n    }\n\n    // Compute the length of\
    \ a string\n    // >>> length(\"Hello World\")\n    // 11\n    def length(s :\
    \ String) : Int = {\n        return s.length\n    }\n\n    // Compute the sum\
    \ of the lengths of a list of words\n    // >>> sumLengths(words(\"Hello\", \"\
    World\"))\n    // 11\n    def sumLengths(words : List[String]) : Int = {\n   \
    \     return sum(map(length, words))\n    }\n\n    // Compute the sum of the lengths\
    \ of a string\n    // >>> sumLengths(\"Hello World\")\n    // 11\n    def sumLengths(s\
    \ : String) : Int = {\n        return sum(map(length, words(s)))\n    }\n\n  \
    \  // Compute the product of the lengths of a list of words\n    // >>> productLengths(words(\"\
    Hello\", \"World\"))\n    // 121\n    def productLengths(words : List[String])\
    \ : Int = {\n        return product(map(length, words))\n    }\n\n    // Compute\
    \ the product of the lengths of a string\n    // >>> productLengths(\"Hello World\"\
    )\n    // 121\n    def productLengths(s : String) : Int = {\n        return product(map(length,\
    \ words(s)))\n    }\n\n    // Compute the sum of the squares of the lengths of\
    \ a", "        if (strings.isEmpty()) {\n            return \"\"\n        } else\
    \ {\n            return strings.head + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Concatenate list of strings into a single string\n    // >>>\
    \ concatenate((List[String](\"a\", \"b\", \"c\")))\n    // (\"abc\")\n    def\
    \ concatenate(strings : List[String]) : String = {\n        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Concatenate list of\
    \ strings into a single string\n    // >>> concatenate((List[String](\"a\", \"\
    b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String]) :\
    \ String = {\n        if (strings.isEmpty()) {\n            return \"\"\n    \
    \    } else {\n            return strings.head + concatenate(strings.tail)\n \
    \       }\n    }\n\n    // Concatenate list of strings into a single string\n\
    \    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n    // (\"abc\"\
    )\n    def concatenate(strings : List[String]) : String = {\n        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Concatenate list of\
    \ strings into a single string\n    // >>> concatenate((List[String](\"a\", \"\
    b\", \"c\")))\n    // (\"abc\")\n    def concatenate(strings : List[String]) :\
    \ String = {\n        if (strings.isEmpty()) {\n            return \"\"\n    \
    \    } else {\n            return strings.head + concatenate(strings.tail)\n \
    \       }\n    }\n\n    // Concatenate list of strings into a single string\n\
    \    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n    // (\"abc\"\
    )\n    def concatenate(strings : List[String]) : String = {\n        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (s in strings) {\n                result += s\n            }\n   \
    \     }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n    //\
    \ \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i in range(s.length() - 1, -1, -1)) {\n                result +=\
    \ s.charAt(i)\n            }\n        }\n    }\n\n    // Convert a string to lower\
    \ case\n    // >>> lower(\"ABC\")\n    // \"abc\"\n    def lower(s : String) :\
    \ String = {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n\
    \            var result = \"\"\n            for (i in range(s.length())) {\n \
    \               result += s.charAt(i).toLowerCase()\n            }\n        }\n\
    \    }\n\n    // Convert a string to upper case\n    // >>> upper(\"abc\")\n \
    \   // \"ABC\"\n    def upper(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i in range(s.length())) {\n                result += s.charAt(i).toUpperCase()\n\
    \            }\n        }\n    }\n\n    // Convert a string to title case\n  \
    \  // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s : String) : String =\
    \ {\n        if (s.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    var result = \"\"\n            for (i in range(s.length())) {\n         \
    \       if (s.charAt(i) == ' ') {\n                    result += \" \"\n     \
    \           } else {\n                    result += s.charAt(i).toUpperCase()\n\
    \                }\n            }\n        }\n    }\n\n    // Convert a string\
    \ to camel case\n    // >>> camel(\"abc\")\n    // \"abc\"\n    def camel(s :\
    \ String) : String = {\n        if", "        var result = \"\"\n        for (s\
    \ in strings) {\n            result += s\n        }\n        return result\n \
    \   }\n\n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate2(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate2(List[String](\"\
    a\", \"b\", \"c\"))\n    // (\"abc\")\n    def concatenate3(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate3(List[String](\"\
    a\", \"b\", \"c\"))\n    // (\"abc\")\n    def concatenate4(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate4(List[String](\"\
    a\", \"b\", \"c\"))\n    // (\"abc\")\n    def concatenate5(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate5(List[String](\"\
    a\", \"b\", \"c\"))\n    // (\"abc\")\n    def concatenate6(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (s in strings) {\n    \
    \        result += s\n        }\n        return result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate6(List[String](\"\
    a\", \"b\",", "        if (strings.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of characters\n    // >>> stringToList(\"\"\
    )\n    // List[Char]()\n    // >>> stringToList(\"abc\")\n    // List[Char]('a',\
    \ 'b', 'c')\n    def stringToList(s : String) : List[Char] = {\n        if (s.isEmpty())\
    \ {\n            List[Char]()\n        } else {\n            List[Char](s.toCharArray())\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        if (chars.isEmpty()) {\n            \"\"\
    \n        } else {\n            String(chars.toArray(Array[Char]()))\n       \
    \ }\n    }\n\n    // Convert a string to a list of integers\n    // >>> stringToList(\"\
    \")\n    // List[Int]()\n    // >>> stringToList(\"123\")\n    // List[Int](1,\
    \ 2, 3)\n    def stringToList(s : String) : List[Int] = {\n        if (s.isEmpty())\
    \ {\n            List[Int]()\n        } else {\n            List[Int](s.toCharArray().stream().map(c\
    \ -> (int)(c - '0')).toArray(Int[]::new))\n        }\n    }\n\n    // Convert\
    \ a list of integers to a string\n    // >>> listToString(List[Int](1, 2, 3))\n\
    \    // \"123\"\n    def listToString(ints : List[Int]) : String = {\n       \
    \ if (ints.isEmpty()) {\n            \"\"\n        } else {\n            String(ints.toArray(Array[Int]()).stream().map(i\
    \ -> (String)((int)(i) + \"\")).toArray(String[]::new))\n        }\n    }\n\n\
    \    // Convert a string to a list of doubles\n    // >>> string", "        if\
    \ (strings.isEmpty()) {\n            return \"\"\n        } else {\n         \
    \   return strings.head + concatenate(strings.tail)\n        }\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(\"Hello World!\")\n  \
    \  // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n \
    \       var words = List.empty[String]\n        var word = \"\"\n        for (i\
    \ <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n            \
    \    words = words.append(word)\n                word = \"\"\n            } else\
    \ {\n                word = word.concat(s.charAt(i))\n            }\n        }\n\
    \        words = words.append(word)\n        return words\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n        var\
    \ words = List.empty[String]\n        var word = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            if (s.charAt(i) == ' ') {\n                words =\
    \ words.append(word)\n                word = \"\"\n            } else {\n    \
    \            word = word.concat(s.charAt(i))\n            }\n        }\n     \
    \   words = words.append(word)\n        return words\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words3(s : String) : List[String] = {\n        var\
    \ words = List.empty[String]\n        var word = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            if (s.charAt(i) == ' ') {\n                words =\
    \ words.append(word)\n                word = \"\"\n            } else {\n    \
    \            word = word.concat(s.charAt(i))\n            }\n        }\n     \
    \   words = words.append(word)\n        return words\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello", "        var result\
    \ = \"\"\n        for (i <- 0 until strings.length) {\n            result += strings(i)\n\
    \        }\n        result\n    }\n\n    // Convert a string to a list of characters\n\
    \    // >>> stringToList(\"abc\")\n    // List[Char]('a', 'b', 'c')\n    def stringToList(s\
    \ : String) : List[Char] = {\n        var result = List[Char]()\n        for (i\
    \ <- 0 until s.length) {\n            result += (s(i) as Char)\n        }\n  \
    \      result\n    }\n\n    // Convert a list of characters to a string\n    //\
    \ >>> listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(l\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ l.length) {\n            result += l(i)\n        }\n        result\n    }\n\n\
    \    // Convert a string to a list of integers\n    // >>> stringToList(\"123\"\
    )\n    // List[Int](1, 2, 3)\n    def stringToListOfInts(s : String) : List[Int]\
    \ = {\n        var result = List[Int]()\n        for (i <- 0 until s.length) {\n\
    \            result += (s(i) as Int)\n        }\n        result\n    }\n\n   \
    \ // Convert a list of integers to a string\n    // >>> listToString(List[Int](1,\
    \ 2, 3))\n    // \"123\"\n    def listToStringOfInts(l : List[Int]) : String =\
    \ {\n        var result = \"\"\n        for (i <- 0 until l.length) {\n      \
    \      result += (l(i) as Int)\n        }\n        result\n    }\n\n    // Convert\
    \ a string to a list of doubles\n    // >>> stringToList(\"123.45\")\n    // List[Double](1.2345,\
    \ 2.3455, 3.4555)\n    def stringToListOfDoubles(s : String) : List[Double] =\
    \ {\n        var result = List[Double]()\n        for (i <- 0 until s.length)\
    \ {\n            result", "        if (strings.isEmpty()) {\n            return\
    \ \"\"\n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words2(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words4(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words5(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words6(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World!\")\n    // [\"Hello\", \"World\"]\n    def words7(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n\
    \    def words8(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    ", "        var result = \"\"\n        for (i <- 0 until strings.length\
    \ - 1) {\n            result += strings(i)\n        }\n        result\n    }\n\
    \n    // Return a list of strings with the first string repeated n times\n   \
    \ // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"a\", \"a\", \"\
    a\"))\n    def repeat(strings : List[String], n : Int) : List[String] = {\n  \
    \      var result = List[String]()\n        for (i <- 0 until n) {\n         \
    \   result += strings\n        }\n        result\n    }\n\n    // Return a list\
    \ of strings with the first string repeated n times\n    // >>> repeat(List[String](\"\
    a\"), 3)\n    // (List[String](\"a\", \"a\", \"a\"))\n    def repeat(strings :\
    \ List[String], n : Int) : List[String] = {\n        var result = List[String]()\n\
    \        for (i <- 0 until n) {\n            result += strings\n        }\n  \
    \      result\n    }\n\n    // Return a list of strings with the first string\
    \ repeated n times\n    // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"\
    a\", \"a\", \"a\"))\n    def repeat(strings : List[String], n : Int) : List[String]\
    \ = {\n        var result = List[String]()\n        for (i <- 0 until n) {\n \
    \           result += strings\n        }\n        result\n    }\n\n    // Return\
    \ a list of strings with the first string repeated n times\n    // >>> repeat(List[String](\"\
    a\"), 3)\n    // (List[String](\"a\", \"a\", \"a\"))\n    def repeat(strings :\
    \ List[String], n : Int) : List[String] = {\n        var result = List[String]()\n\
    \        for (i <- 0 until n) {\n            result += strings\n        }\n  \
    \      result\n    }\n\n    // Return a list of strings with the first string\
    \ repeated n times\n    // >>> repeat(List[String](\"a\"), 3)\n    // (List[String](\"\
    a\", \"a\", \"a\"))\n    def repeat(strings : List[String], n", "        if (strings.isEmpty())\
    \ {\n            return \"\"\n        } else {\n            return strings.head\
    \ + concatenate(strings.tail)\n        }\n    }\n\n    // Convert a string to\
    \ a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"\
    ]\n    def words(s : String) : List[String] = {\n        return s.split(\" \"\
    )\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World\")\n    // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words3(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World\")\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words5(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World\")\n    // [\"Hello\", \"World\"]\n    def words6(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\", \"World\"]\n\
    \    def words7(s : String) : List[String] = {\n        return s.split(\" \")\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello\
    \ World\")\n    // [\"Hello\", \"World\"]\n    def words8(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a string to a list\
    \ of", "        if (strings.isEmpty()) {\n            return \"\"\n        } else\
    \ {\n            return strings.head + concatenate(strings.tail)\n        }\n\
    \    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\
    \n    def reverse(s : String) : String = {\n        if (s.isEmpty()) {\n     \
    \       return \"\"\n        } else {\n            return reverse(s.tail) + s.head\n\
    \        }\n    }\n\n    // Convert a string to lower case\n    // >>> lower(\"\
    ABC\")\n    // \"abc\"\n    def lower(s : String) : String = {\n        return\
    \ s.toLowerCase()\n    }\n\n    // Convert a string to upper case\n    // >>>\
    \ upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) : String = {\n   \
    \     return s.toUpperCase()\n    }\n\n    // Convert a string to title case\n\
    \    // >>> title(\"abc\")\n    // \"Abc\"\n    def title(s : String) : String\
    \ = {\n        return s.toUpper().replaceAll(\"\\\\s\", \" \")\n    }\n\n    //\
    \ Convert a string to camel case\n    // >>> camel(\"abc\")\n    // \"abc\"\n\
    \    def camel(s : String) : String = {\n        return s.toLower().replaceAll(\"\
    \\\\s\", \"\")\n    }\n\n    // Convert a string to snake case\n    // >>> snake(\"\
    abc\")\n    // \"abc\"\n    def snake(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"(.)([A-Z][a-z]+)\", \"$1_$2\")\n    }\n\n    // Convert\
    \ a string to pascal case\n    // >>> pascal(\"abc\")\n    // \"Abc\"\n    def\
    \ pascal(s : String) : String = {\n        return s.toUpper().replaceAll(\"\\\\\
    s\", \"\")\n    }\n\n    // Convert a string to kebab case\n    // >>> kebab(\"\
    abc\")\n    // \"abc\"\n    def kebab(s : String) : String = {\n        return\
    \ s.toLower().replaceAll(\"\\\\s\", \"-\")\n    }\n\n", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            var result = \"\"\n     \
    \       for (i <- 0 until strings.length - 1) {\n                result = result\
    \ + strings(i)\n            }\n            result\n        }\n    }\n\n    //\
    \ Convert a string to a list of words\n    // >>> words(concatenate(\"\"))\n \
    \   // []\n    // >>> words(concatenate(\" \"))\n    // [\"\"]\n    // >>> words(concatenate(\"\
    a b c\"))\n    // [\"a\", \"b\", \"c\"]\n    def words(string : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < string.length) {\n            var nextIndex = string.indexOf(\" \"\
    , index)\n            if (nextIndex == -1) {\n                nextIndex = string.length\n\
    \            }\n            result = result + List[String](string.substring(index,\
    \ nextIndex))\n            index = nextIndex + 1\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\" \")\n    // [\"\"]\n    // >>> words(\"a b c\"\
    )\n    // [\"a\", \"b\", \"c\"]\n    def words(string : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        while\
    \ (index < string.length) {\n            var nextIndex = string.indexOf(\" \"\
    , index)\n            if (nextIndex == -1) {\n                nextIndex = string.length\n\
    \            }\n            result = result + List[String](string.substring(index,\
    \ nextIndex))\n            index = nextIndex + 1\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\")\n\
    \    // []\n    // >>> words(\" \")\n    // [\"\"]\n    // >>> words(\"a b c\"\
    )\n    // [\"a\", \"b\", \"c\"]\n    def words(string : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var index = 0\n        ",
  "        var result = \"\"\n        for (s in strings) {\n            result +=\
    \ s\n        }\n        return result\n    }\n\n    // Convert a string to a list\
    \ of characters\n    // >>> toList(\"abc\")\n    // List(a, b, c)\n    def toList(s\
    \ : String) : List[Char] = {\n        var result = List[Char]().setEmpty()\n \
    \       for (c in s) {\n            result += c\n        }\n        return result\n\
    \    }\n\n    // Convert a string to a list of integers\n    // >>> toList(\"\
    123\")\n    // List(1, 2, 3)\n    def toList(s : String) : List[Int] = {\n   \
    \     var result = List[Int]().setEmpty()\n        for (c in s) {\n          \
    \  result += c.toInt\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of strings\n    // >>> toList(\"abc\")\n    // List(\"a\"\
    , \"b\", \"c\")\n    def toList(s : String) : List[String] = {\n        var result\
    \ = List[String]().setEmpty()\n        for (c in s) {\n            result += c\n\
    \        }\n        return result\n    }\n\n    // Convert a list of characters\
    \ to a string\n    // >>> fromList(List(a, b, c))\n    // \"abc\"\n    def fromList(chars\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for (c in chars)\
    \ {\n            result += c\n        }\n        return result\n    }\n\n    //\
    \ Convert a list of integers to a string\n    // >>> fromList(List(1, 2, 3))\n\
    \    // \"123\"\n    def fromList(ints : List[Int]) : String = {\n        var\
    \ result = \"\"\n        for (i in ints) {\n            result += i.toString\n\
    \        }\n        return result\n    }\n\n    // Convert a list of strings to\
    \ a string\n    // >>> fromList(List(\"a\", \"b\", \"c\"))\n    // \"abc\"\n \
    \   def fromList(strings : List[String]) : String = {\n        var result = \"\
    \"\n        for (s in", "        if (strings.isEmpty()) {\n            \"\"\n\
    \        } else {\n            strings.head + concatenate(strings.tail)\n    \
    \    }\n    }\n\n    // Convert a string to a list of characters\n    // >>> toList(\"\
    \")\n    // List()\n    // >>> toList(\"abc\")\n    // List(\"a\", \"b\", \"c\"\
    )\n    def toList(s : String) : List[String] = {\n        if (s.isEmpty()) {\n\
    \            List()\n        } else {\n            List(s.head, toList(s.tail))\n\
    \        }\n    }\n\n    // Convert a list of strings to a string\n    // >>>\
    \ fromList(List())\n    // \"\"\n    // >>> fromList(List(\"a\", \"b\", \"c\"\
    ))\n    // \"abc\"\n    def fromList(strings : List[String]) : String = {\n  \
    \      if (strings.isEmpty()) {\n            \"\"\n        } else {\n        \
    \    fromList(strings.tail) + strings.head\n        }\n    }\n\n    // Convert\
    \ a string to a list of integers\n    // >>> toInts(\"\")\n    // List()\n   \
    \ // >>> toInts(\"123\")\n    // List(1, 2, 3)\n    def toInts(s : String) : List[Int]\
    \ = {\n        if (s.isEmpty()) {\n            List()\n        } else {\n    \
    \        List(s.head.toInt, toInts(s.tail))\n        }\n    }\n\n    // Convert\
    \ a list of strings to a string\n    // >>> fromInts(List())\n    // \"\"\n  \
    \  // >>> fromInts(List(1, 2, 3))\n    // \"123\"\n    def fromInts(ints : List[Int])\
    \ : String = {\n        if (ints.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            fromInts(ints.tail) + ints.head.toString()\n        }\n    }\n\
    \n    // Convert a string to a list of integers\n    // >>> toInts(\"\")\n   \
    \ // List()\n    // >>> toInts(\"123\")\n    // List(1, 2, 3)\n    def toInts(s\
    \ : String)", "        if (strings.isEmpty()) {\n            return \"\"\n   \
    \     } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ stringToList(\"\")\n    // []\n    // >>> stringToList(\"a\")\n    // [97]\n\
    \    // >>> stringToList(\"ab\")\n    // [97, 98]\n    def stringToList(s : String)\
    \ : List[Integer] = {\n        if (s.isEmpty()) {\n            return List.empty()\n\
    \        } else {\n            return List.range(s.head, s.tail)\n        }\n\
    \    }\n\n    // Convert a list of characters to a string\n    // >>> listToString([])\n\
    \    // \"\"\n    // >>> listToString([97])\n    // \"a\"\n    // >>> listToString([97,\
    \ 98])\n    // \"ab\"\n    def listToString(l : List[Integer]) : String = {\n\
    \        if (l.isEmpty()) {\n            return \"\"\n        } else {\n     \
    \       return String.fromCharCode(l.head) + listToString(l.tail)\n        }\n\
    \    }\n\n    // Convert a string to a list of words\n    // >>> stringToWords(\"\
    \")\n    // []\n    // >>> stringToWords(\"a\")\n    // [[\"a\"]]\n    // >>>\
    \ stringToWords(\"ab\")\n    // [[\"a\"], [\"b\"]]\n    // >>> stringToWords(\"\
    abcd\")\n    // [[\"a\"], [\"b\"], [\"c\"], [\"d\"]]\n    def stringToWords(s\
    \ : String) : List[List[String]] = {\n        if (s.isEmpty()) {\n           \
    \ return List.empty()\n        } else {\n            return List.of(List.of(s.head),\
    \ stringToWords(s.tail))\n        }\n    }\n\n    // Convert a list of words to\
    \ a string\n    // >>> wordsToString([])\n    // \"\"\n    // >>> wordsToString([[\"\
    a\"]])\n    // \"a\"\n    // >>> wordsToString([[\"a\"], [\"b\"]])\n    // \"\
    ab\"\n    // >>> wordsToString", "        var result = \"\"\n        for (i <-\
    \ 0 until strings.length - 1) {\n            result += strings(i)\n        }\n\
    \        result\n    }\n\n    // Convert a string to a list of characters\n  \
    \  // >>> stringToList(\"abc\")\n    // List[Char]('a', 'b', 'c')\n    def stringToList(s\
    \ : String) : List[Char] = {\n        var result = List[Char]().setPrefixLength(s.length)\n\
    \        for (i <- 0 until s.length) {\n            result(i) = s(i)\n       \
    \ }\n        result\n    }\n\n    // Convert a list of characters to a string\n\
    \    // >>> listToString(List[Char]('a', 'b', 'c'))\n    // \"abc\"\n    def listToString(chars\
    \ : List[Char]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ chars.length - 1) {\n            result += chars(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of integers\n    // >>> stringToList(\"\
    123\")\n    // List[Int](1, 2, 3)\n    def stringToList(s : String) : List[Int]\
    \ = {\n        var result = List[Int]().setPrefixLength(s.length)\n        for\
    \ (i <- 0 until s.length) {\n            result(i) = s(i) - '0'\n        }\n \
    \       result\n    }\n\n    // Convert a list of integers to a string\n    //\
    \ >>> listToString(List[Int](1, 2, 3))\n    // \"123\"\n    def listToString(ints\
    \ : List[Int]) : String = {\n        var result = \"\"\n        for (i <- 0 until\
    \ ints.length - 1) {\n            result += ints(i)\n        }\n        result\n\
    \    }\n\n    // Convert a string to a list of doubles\n    // >>> stringToList(\"\
    123.45\")\n    // List[Double](1.2345, 2.3455, 3.4555)\n    def stringToList(s\
    \ : String) : List[Double] = {\n        var result = List[Double]().", "     \
    \   if (strings.isEmpty()) {\n            return \"\"\n        } else {\n    \
    \        return strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words('')\n    // []\n\
    \    // >>> words(\"\")\n    // []\n    // >>> words(\"Hello World\")\n    //\
    \ [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n     \
    \   if (s.isEmpty()) {\n            return List.empty()\n        } else {\n  \
    \          return List.of(s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\"\
    , \"World\"]\n    // >>> words(\"Hello World \")\n    // [\"Hello\", \"World\"\
    ]\n    // >>> words(\"Hello World, Hello World\")\n    // [\"Hello\", \"World\"\
    , \"Hello\", \"World\"]\n    def words2(s : String) : List[String] = {\n     \
    \   if (s.isEmpty()) {\n            return List.empty()\n        } else {\n  \
    \          return List.of(s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\"\
    , \"World\"]\n    // >>> words(\"Hello World \")\n    // [\"Hello\", \"World\"\
    ]\n    // >>> words(\"Hello World, Hello World\")\n    // [\"Hello\", \"World\"\
    , \"Hello\", \"World\"]\n    def words3(s : String) : List[String] = {\n     \
    \   if (s.isEmpty()) {\n            return List.empty()\n        } else {\n  \
    \          return List.of(s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World\")\n    // [\"Hello\"\
    , \"World\"]\n    // >>> words(\"Hello World \")\n    // [\"Hello\", \"World\"\
    ]\n    // >>> words(\"Hello World, Hello World\")\n    // [\"Hello\", \"World\"\
    , \"Hello\", \"World\"]\n    def words4(s : String) : List[String] = {\n     \
    \   if (s.", "        var result = \"\"\n        for(s in strings) {\n       \
    \     result += s\n        }\n        return result\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello world\")\n    // [\"Hello\"\
    , \"world\"]\n    def words(s : String) : List[String] = {\n        var result\
    \ = List[String]()\n        var word = \"\"\n        for(i in range(0, len(s)))\
    \ {\n            if(s[i] == ' ') {\n                if(!word.isEmpty()) {\n  \
    \                  result += word\n                    word = \"\"\n         \
    \       }\n            } else {\n                word += s[i]\n            }\n\
    \        }\n        if(!word.isEmpty()) {\n            result += word\n      \
    \  }\n        return result\n    }\n\n    // Convert a string to a list of words\n\
    \    // >>> words(\"Hello world\")\n    // [\"Hello\", \"world\"]\n    def words2(s\
    \ : String) : List[String] = {\n        var result = List[String]()\n        var\
    \ word = \"\"\n        for(i in range(0, len(s))) {\n            if(s[i] == '\
    \ ') {\n                if(!word.isEmpty()) {\n                    result += word\n\
    \                    word = \"\"\n                }\n            } else {\n  \
    \              word += s[i]\n            }\n        }\n        if(!word.isEmpty())\
    \ {\n            result += word\n        }\n        return result\n    }\n\n \
    \   // Convert a string to a list of words\n    // >>> words(\"Hello world\")\n\
    \    // [\"Hello\", \"world\"]\n    def words3(s : String) : List[String] = {\n\
    \        var result = List[String]()\n        var word = \"\"\n        for(i in\
    \ range(0, len(s))) {\n            if(s[i] == ' ') {\n                if(!word.isEmpty())\
    \ {\n                    result += word\n                    word = \"\"\n   \
    \             }\n            } else {\n                word += s[i]\n        \
    \    }\n        }\n        if(!word.isEmpty()) {\n            result += word\n\
    \        }\n        return result\n    }\n\n    // Convert a string to", "   \
    \     if (strings.isEmpty()) {\n            return \"\"\n        } else {\n  \
    \          return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\")\")\n    //\
    \ (\")\")\n    // >>> words(\"a(b(c)d)e\")\n    // (\"a\", \"b\", \"c\", \"d\"\
    , \"e\")\n    def words(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            return List.empty()\n        } else {\n            return s.split(\"\
    \\\\s+\")\n        }\n    }\n\n    // Convert a string to a list of words\n  \
    \  // >>> words(\"(\")\n    // (\")\")\n    // >>> words(\"a(b(c)d)e\")\n    //\
    \ (\"a\", \"b\", \"c\", \"d\", \"e\")\n    def words2(s : String) : List[String]\
    \ = {\n        if (s.isEmpty()) {\n            return List.empty()\n        }\
    \ else {\n            return s.split(\"\\\\s+\")\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"(\")\n    // (\")\")\n    //\
    \ >>> words(\"a(b(c)d)e\")\n    // (\"a\", \"b\", \"c\", \"d\", \"e\")\n    def\
    \ words3(s : String) : List[String] = {\n        if (s.isEmpty()) {\n        \
    \    return List.empty()\n        } else {\n            return s.split(\"\\\\\
    s+\")\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"(\")\n    // (\")\")\n    // >>> words(\"a(b(c)d)e\")\n    // (\"\
    a\", \"b\", \"c\", \"d\", \"e\")\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            return List.empty()\n        } else\
    \ {\n            return s.split(\"\\\\s+\")\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    //", "        var result = \"\"\n        for\
    \ (i <- 0 until strings.size) {\n            result += strings.apply(i)\n    \
    \    }\n        result\n    }\n\n    // Concatenate list of strings into a single\
    \ string\n    // >>> concatenate((List[String](\"a\", \"b\", \"c\")))\n    //\
    \ (\"abc\")\n    def concatenate2(strings : List[String]) : String = {\n     \
    \   var result = \"\"\n        for (i <- 0 until strings.size) {\n           \
    \ result += strings.apply(i)\n        }\n        result\n    }\n\n    // Concatenate\
    \ list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate3(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.size)\
    \ {\n            result += strings.apply(i)\n        }\n        result\n    }\n\
    \n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate4(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.size)\
    \ {\n            result += strings.apply(i)\n        }\n        result\n    }\n\
    \n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate5(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.size)\
    \ {\n            result += strings.apply(i)\n        }\n        result\n    }\n\
    \n    // Concatenate list of strings into a single string\n    // >>> concatenate((List[String](\"\
    a\", \"b\", \"c\")))\n    // (\"abc\")\n    def concatenate6(strings : List[String])\
    \ : String = {\n        var result = \"\"\n        for (i <- 0 until strings.size)\
    \ {\n            result +=", "        var result = \"\"\n        for (s in strings)\
    \ {\n            result += s\n        }\n        return result\n    }\n\n    //\
    \ Reverse a string\n    // >>> reverse(\"abc\")\n    // \"cba\"\n    def reverse(s\
    \ : String) : String = {\n        var result = \"\"\n        for (i in range(len(s)))\
    \ {\n            result += s[len(s) - 1 - i]\n        }\n        return result\n\
    \    }\n\n    // Reverse a list\n    // >>> reverse(List[String](\"abc\"))\n \
    \   // List[String](\"cba\")\n    def reverseList(strings : List[String]) : List[String]\
    \ = {\n        var result = List[String]()\n        for (s in strings) {\n   \
    \         result += s\n        }\n        return result\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello world!\")\n    // [\"\
    Hello\", \"world\"]\n    def words(s : String) : List[String] = {\n        var\
    \ result = List[String]()\n        var words = s.split(\" \")\n        for (w\
    \ in words) {\n            result += w\n        }\n        return result\n   \
    \ }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello world!\"\
    )\n    // [\"Hello\", \"world\"]\n    def words2(s : String) : List[String] =\
    \ {\n        var result = List[String]()\n        var words = s.split(\" \")\n\
    \        for (w in words) {\n            result += w\n        }\n        return\
    \ result\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words3(s : String) : List[String]\
    \ = {\n        var result = List[String]()\n        var words = s.split(\" \"\
    )\n        for (w in words) {\n            result += w\n        }\n        return\
    \ result\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello world!\")\n    // [\"Hello\", \"world\"]\n    def words4(s : String) : List[String]\
    \ = {", "        if (strings.isEmpty()) {\n            \"\"\n        } else {\n\
    \            strings.head + concatenate(strings.tail)\n        }\n    }\n\n  \
    \  // Convert a string to a list of words\n    // >>> words(\"Hello, my name is\
    \ John\")\n    // [\"Hello\", \"my\", \"name\", \"is\", \"John\"]\n    def words(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a list of words to a single string\n    // >>> sentence(\"Hello,\
    \ my name is John\")\n    // \"Hello my name is John\"\n    def sentence(words\
    \ : List[String]) : String = {\n        if (words.isEmpty()) {\n            \"\
    \"\n        } else {\n            words.head + \" \" + sentence(words.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ chars(\"Hello, my name is John\")\n    // [\"H\", \"e\", \"l\", \"l\", \"o\"\
    , \" \", \"m\", \"y\", \" \", \"n\", \"a\", \"m\", \"e\", \" \", \"J\", \"o\"\
    , \"n\", \"n\"]\n    def chars(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.toCharArray())\n\
    \        }\n    }\n\n    // Convert a list of characters to a string\n    // >>>\
    \ string(List[String]([\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"m\", \"y\"\
    , \" \", \"n\", \"a\", \"m\", \"e\", \" \", \"J\", \"o\", \"n\", \"n\"]))\n  \
    \  // \"Hello my name is John\"\n    def string(chars : List[String]) : String\
    \ = {\n        if (chars.isEmpty()) {\n            \"\"\n        } else {\n  \
    \          String(chars.toArray(Array[String]()))\n        }\n    }\n\n    //\
    \ Convert a string to a list of integers\n    //", "        if (strings.isEmpty())\
    \ {\n            \"\"\n        } else {\n            strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Reverse a string\n    // >>> reverse(\"abc\")\n  \
    \  // \"cba\"\n    def reverse(s : String) : String = {\n        if (s.isEmpty())\
    \ {\n            \"\"\n        } else {\n            s.reverse() + s.reverse()\n\
    \        }\n    }\n\n    // Reverse a list\n    // >>> reverse(List[String](\"\
    abc\"))\n    // List[String](\"cba\")\n    def reverseList(list : List[String])\
    \ : List[String] = {\n        if (list.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](list.tail + reverse(list.head))\n\
    \        }\n    }\n\n    // Convert a string to a list of characters\n    // >>>\
    \ toList(\"abc\")\n    // List[String](\"abc\")\n    def toList(s : String) :\
    \ List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n \
    \       } else {\n            List[String](s.toCharArray())\n        }\n    }\n\
    \n    // Convert a list of characters to a string\n    // >>> fromList(List[String](\"\
    abc\"))\n    // \"abc\"\n    def fromList(list : List[String]) : String = {\n\
    \        if (list.isEmpty()) {\n            \"\"\n        } else {\n         \
    \   String(list.head) + fromList(list.tail)\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> toWords(\"abc\")\n    // List[String](\"\
    abc\")\n    def toWords(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \\\\s+\"))\n        }\n    }\n\n    // Convert a list of words to a string\n \
    \   // >>> fromWords(List[String](\"abc\"))\n    // \"abc\"\n    def fromWords(list\
    \ : List[String]) : String = {\n        if", "        if (strings.isEmpty()) {\n\
    \            \"\"\n        } else {\n            strings.head._ + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        var words = List.empty[String]\n        var word = \"\"\n     \
    \   for (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n   \
    \             words = words.append(word)\n                word = \"\"\n      \
    \      } else {\n                word = word.concat(s.charAt(i))\n           \
    \ }\n        }\n        words = words.append(word)\n        return words\n   \
    \ }\n\n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words2(s : String) : List[String] =\
    \ {\n        var words = List.empty[String]\n        var word = \"\"\n       \
    \ for (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n     \
    \           words = words.append(word)\n                word = \"\"\n        \
    \    } else {\n                word = word.concat(s.charAt(i))\n            }\n\
    \        }\n        words = words.append(word)\n        return words\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words3(s : String) : List[String] =\
    \ {\n        var words = List.empty[String]\n        var word = \"\"\n       \
    \ for (i <- 0 until s.length) {\n            if (s.charAt(i) == ' ') {\n     \
    \           words = words.append(word)\n                word = \"\"\n        \
    \    } else {\n                word = word.concat(s.charAt(i))\n            }\n\
    \        }\n        words = words.append(word)\n        return words\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World",
  "        if (strings.isEmpty()) {\n            return \"\"\n        } else {\n \
    \           return strings.head + concatenate(strings.tail)\n        }\n    }\n\
    \n    // Return the length of a string\n    // >>> stringLength(\"\")\n    //\
    \ 0\n    // >>> stringLength(\"abc\")\n    // 3\n    def stringLength(s : String)\
    \ : Int = {\n        return s.length\n    }\n\n    // Return a string with all\
    \ the characters in reverse order\n    // >>> reverseString(\"\")\n    // \"\"\
    \n    // >>> reverseString(\"abc\")\n    // \"cba\"\n    def reverseString(s :\
    \ String) : String = {\n        return s.reverse.mkString()\n    }\n\n    // Return\
    \ a string with the first and last characters exchanged\n    // >>> firstAndLastCharExchange(\"\
    \")\n    // \"\"\n    // >>> firstAndLastCharExchange(\"abc\")\n    // \"cba\"\
    \n    def firstAndLastCharExchange(s : String) : String = {\n        return s.substring(1,\
    \ s.length() - 1) + s.substring(0, 1)\n    }\n\n    // Return a string with the\
    \ first and last two characters exchanged\n    // >>> firstAndLastTwoCharExchange(\"\
    \")\n    // \"\"\n    // >>> firstAndLastTwoCharExchange(\"abc\")\n    // \"bac\"\
    \n    def firstAndLastTwoCharExchange(s : String) : String = {\n        return\
    \ s.substring(2, s.length() - 2) + s.substring(0, 2)\n    }\n\n    // Return a\
    \ string with the first and last three characters exchanged\n    // >>> firstAndLastThreeCharExchange(\"\
    \")\n    // \"\"\n    // >>> firstAndLastThreeCharExchange(\"abc\")\n    // \"\
    bca\"\n    def firstAndLastThreeCharExchange(s : String) : String = {\n      \
    \  return s.substring(3, s.length() - 3) + s.substring(0, 3)\n    }\n\n    //\
    \ Return a string with the first and last four characters exchanged\n    // >>>\
    \ firstAndLastFourCharExchange(\"\")\n    // \"\"\n    // >>> firstAndLastFourCharExchange(\"\
    abc\")\n    // \"", "        if (strings.isEmpty()) {\n            return \"\"\
    \n        } else {\n            return strings.head + concatenate(strings.tail)\n\
    \        }\n    }\n\n    // Convert a string to a list of words\n    // >>> words(\"\
    Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String]\
    \ = {\n        return s.split(\" \")\n    }\n\n    // Convert a list of words\
    \ to a single string\n    // >>> sentence(\"Hello\", \"World\")\n    // \"Hello\
    \ World\"\n    def sentence(words : List[String]) : String = {\n        return\
    \ concatenate(words)\n    }\n\n    // Compute the length of a list of words\n\
    \    // >>> length(words(\"Hello World!\"))\n    // 13\n    def length(words :\
    \ List[String]) : Int = {\n        return words.length()\n    }\n\n    // Compute\
    \ the length of a string\n    // >>> length(\"Hello World!\")\n    // 13\n   \
    \ def length(s : String) : Int = {\n        return s.length()\n    }\n\n    //\
    \ Compute the sum of the lengths of a list of words\n    // >>> sum(length(words(\"\
    Hello\", \"World\")))\n    // 13\n    def sum(words : List[String]) : Int = {\n\
    \        return sum(words.length())\n    }\n\n    // Compute the sum of the lengths\
    \ of a string\n    // >>> sum(length(\"Hello\", \"World\"))\n    // 13\n    def\
    \ sum(s : String) : Int = {\n        return sum(s.length())\n    }\n\n    // Compute\
    \ the product of the lengths of a list of words\n    // >>> product(length(words(\"\
    Hello\", \"World\")))\n    // 26\n    def product(words : List[String]) : Int\
    \ = {\n        return product(words.length())\n    }\n\n    // Compute the product\
    \ of the lengths of a string\n    // >>> product(length(\"Hello\", \"World\"))\n\
    \    // 26\n    def product(s : String) : Int = {\n        return product(s.length())\n\
    \    }\n\n    // Compute the sum of the squares of the lengths of a list of words\n\
    \    // >>> sum(", "        if (strings.isEmpty()) {\n            \"\"\n     \
    \   } else {\n            var result = \"\"\n            for (i <- 0 until strings.size\
    \ - 1) {\n                result += strings.apply(i)\n            }\n        \
    \    result\n        }\n    }\n\n    // Sum of all elements in a list\n    //\
    \ >>> sum(List[Int](1, 2, 3))\n    // 6\n    def sum(ints : List[Int]) : Int =\
    \ {\n        var result = 0\n        for (i <- 0 until ints.size - 1) {\n    \
    \        result += ints.apply(i)\n        }\n        result\n    }\n\n    // Product\
    \ of all elements in a list\n    // >>> product(List[Int](1, 2, 3))\n    // 6\n\
    \    def product(ints : List[Int]) : Int = {\n        var result = 1\n       \
    \ for (i <- 0 until ints.size - 1) {\n            result *= ints.apply(i)\n  \
    \      }\n        result\n    }\n\n    // Find the maximum value in a list\n \
    \   // >>> max(List[Int](1, 2, 3))\n    // 3\n    def max(ints : List[Int]) :\
    \ Int = {\n        var result = ints.apply(0)\n        for (i <- 1 until ints.size\
    \ - 1) {\n            if (ints.apply(i) > result) {\n                result =\
    \ ints.apply(i)\n            }\n        }\n        result\n    }\n\n    // Find\
    \ the minimum value in a list\n    // >>> min(List[Int](1, 2, 3))\n    // 1\n\
    \    def min(ints : List[Int]) : Int = {\n        var result = ints.apply(0)\n\
    \        for (i <- 1 until ints.size - 1) {\n            if (ints.apply(i) < result)\
    \ {\n                result = ints.apply(i)\n            }\n        }\n      \
    \  result\n    }\n\n    // Find the sum of the squares of the elements in a list\n\
    \    // >>> sumOfSquares(List[Int](1, 2, 3))\n    // 14\n    def sumOfSquares(ints\
    \ : List[Int]) : Int = {\n", "        if (strings.isEmpty()) {\n            \"\
    \"\n        } else {\n            strings.head + concatenate(strings.tail)\n \
    \       }", "        if (strings.isEmpty()) {\n            \"\"\n        } else\
    \ {\n            strings.head + concatenate(strings.tail)\n        }\n    }\n\n\
    \    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words(s : String) : List[String] = {\n\
    \        if (s.isEmpty()) {\n            List[String]()\n        } else {\n  \
    \          List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert a\
    \ string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"Hello\"\
    , \"World\"]\n    def words2(s : String) : List[String] = {\n        if (s.isEmpty())\
    \ {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words3(s\
    \ : String) : List[String] = {\n        if (s.isEmpty()) {\n            List[String]()\n\
    \        } else {\n            List[String](s.split(\" \"))\n        }\n    }\n\
    \n    // Convert a string to a list of words\n    // >>> words(\"Hello World!\"\
    )\n    // [\"Hello\", \"World\"]\n    def words4(s : String) : List[String] =\
    \ {\n        if (s.isEmpty()) {\n            List[String]()\n        } else {\n\
    \            List[String](s.split(\" \"))\n        }\n    }\n\n    // Convert\
    \ a string to a list of words\n    // >>> words(\"Hello World!\")\n    // [\"\
    Hello\", \"World\"]\n    def words5(s : String) : List[String] = {\n        if\
    \ (s.isEmpty()) {\n            List[String]()\n        } else {\n            List[String](s.split(\"\
    \ \"))\n        }\n    }\n\n    // Convert a string to a list of words\n    //\
    \ >>> words(\"Hello World!\")\n    // [\"Hello\", \"World\"]\n    def words6(s\
    \ : String) :"]
stop_tokens:
- "\n    }\n"

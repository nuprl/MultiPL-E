name: HumanEval_97_multiply
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Complete the function that takes two integers and returns \n    // the product\
  \ of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n\
  \    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>> multiply((19l), (28l))\n\
  \    // (72l)\n    // >>> multiply((2020l), (1851l))\n    // (0l)\n    // >>> multiply((14l),\
  \ (-15l))\n    // (20l)\n    def multiply(a : Long, b : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l),\
  \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
  \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
  \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
  \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
completions: ["        var a_ = a\n        var b_ = b\n        var a_ = a_\n     \
    \   var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var", "        if (a == 0 ||\
    \ b == 0) {\n            return 0l\n        } else {\n            return a * b\
    \ / 10l\n        }", "        val aa = a.toString\n        val bb = b.toString\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val aa_digits_length_minus_two = aa_digits_length - 2\n        val bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   val aa_digits_length_minus_four = aa_digits_length - 4\n        val bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  val aa_digits_length_minus_six = aa_digits_length - 6\n        val bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   val aa_digits_length_minus_eight = aa_digits_length - 8\n        val bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        val bb_digits_length_minus_nine = bb_dig", "        var result\
    \ = 0l\n        for (var i = 0; i < a.toString().length(); i++) {\n          \
    \  result += a.toString().charAt(i) * b.toString().charAt(i)\n        }\n    \
    \    return result", "        if (a == 0 || b == 0) {\n            return 0\n\
    \        }\n        var a_digits = a.toString().split(\"\")\n        var b_digits\
    \ = b.toString().split(\"\")\n        var a_digits_length = a_digits.length\n\
    \        var b_digits_length = b_digits.length\n        var a_digits_index = 0\n\
    \        var b_digits_index = 0\n        var product = 0l\n        while (a_digits_index\
    \ < a_digits_length && b_digits_index < b_digits_length) {\n            var a_digit\
    \ = a_digits[a_digits_index]\n            var b_digit = b_digits[b_digits_index]\n\
    \            if (a_digit.equals(\"0\") || b_digit.equals(\"0\")) {\n         \
    \       a_digits_index += 1\n                b_digits_index += 1\n           \
    \ } else {\n                product += (a_digit.toLong() * b_digit.toLong())\n\
    \                a_digits_index += 1\n                b_digits_index += 1\n  \
    \          }\n        }\n        return product", "        var a1 = a % 10\n \
    \       var a2 = a / 10\n        var b1 = b % 10\n        var b2 = b / 10\n  \
    \      var result = a1 * b1\n        if (a2 != 0) {\n            result = result\
    \ + a2 * b1\n        }\n        if (b2 != 0) {\n            result = result +\
    \ a1 * b2\n        }\n        return result", "        var a_digits = a.toString().split(\"\
    l\")\n        var b_digits = b.toString().split(\"l\")\n        var a_unit_digits\
    \ = a_digits[0].split(\"\")\n        var b_unit_digits = b_digits[0].split(\"\"\
    )\n        var a_unit_digits_product = a_unit_digits.reduce(0, (a, b) => a * b)\n\
    \        var b_unit_digits_product = b_unit_digits.reduce(0, (a, b) => a * b)\n\
    \        var result = a_unit_digits_product * b_unit_digits_product\n        return\
    \ result", "        var result = 0l\n        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        for (i <- 0 until\
    \ a_digits.length) {\n            result = result + (a_digits[i].toInt * b_digits[i].toInt)\n\
    \        }\n        return result", "        val aa = a.toString.toUpperCase\n\
    \        val bb = b.toString.toUpperCase\n        val aa_digits = aa.split(\"\"\
    )\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_1\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_1 = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_2 = aa_digits_length - 2\n        val\
    \ bb_digits_length_minus_2 = bb_digits_length - 2\n        val aa_digits_length_minus_3\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_3 = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_4 = aa_digits_length - 4\n        val\
    \ bb_digits_length_minus_4 = bb_digits_length - 4\n        val aa_digits_length_minus_5\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_5 = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_6 = aa_digits_length - 6\n        val\
    \ bb_digits_length_minus_6 = bb_digits_length - 6\n        val aa_digits_length_minus_7\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_7 = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_8 = aa_digits_length - 8\n        val\
    \ bb_digits_length_minus_8 = bb_digits_length - 8\n        val aa_digits_length_minus_9\
    \ = aa_digits_length - 9\n        val bb_digits_", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_array = new Array[Long](a_digits_length)\n        for (i <- 0 until\
    \ a_digits_length) {\n            a_digits_array(i) = Long.parseLong(a_digits(i))\n\
    \        }\n        var b_digits_array = new Array[Long](b_digits_length)\n  \
    \      for (i <- 0 until b_digits_length) {\n            b_digits_array(i) = Long.parseLong(b_digits(i))\n\
    \        }\n        var result = 0l\n        for (i <- 0 until a_digits_length)\
    \ {\n            for (j <- 0 until b_digits_length) {\n                result\
    \ += a_digits_array(i) * b_digits_array(j)\n            }\n        }\n       \
    \ return result", "        var aa = a\n        var bb = b\n        var result\
    \ = 0l\n        while (aa != 0l) {\n            var aaa = aa % 10l\n         \
    \   var bbb = bb % 10l\n            result = result * 10l + aaa * bbb\n      \
    \      aa = aa / 10l\n            bb = bb / 10l\n        }\n        return result",
  "        val aa = a.toString\n        val bb = b.toString\n        val aa_digits\
    \ = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length\
    \ = aa_digits.length\n        val bb_digits_length = bb_digits.length\n      \
    \  val aa_digits_length_minus_one = aa_digits_length - 1\n        val bb_digits_length_minus_one\
    \ = bb_digits_length - 1\n        val aa_digits_length_minus_two = aa_digits_length\
    \ - 2\n        val bb_digits_length_minus_two = bb_digits_length - 2\n       \
    \ val aa_digits_length_minus_three = aa_digits_length - 3\n        val bb_digits_length_minus_three\
    \ = bb_digits_length - 3\n        val aa_digits_length_minus_four = aa_digits_length\
    \ - 4\n        val bb_digits_length_minus_four = bb_digits_length - 4\n      \
    \  val aa_digits_length_minus_five = aa_digits_length - 5\n        val bb_digits_length_minus_five\
    \ = bb_digits_length - 5\n        val aa_digits_length_minus_six = aa_digits_length\
    \ - 6\n        val bb_digits_length_minus_six = bb_digits_length - 6\n       \
    \ val aa_digits_length_minus_seven = aa_digits_length - 7\n        val bb_digits_length_minus_seven\
    \ = bb_digits_length - 7\n        val aa_digits_length_minus_eight = aa_digits_length\
    \ - 8\n        val bb_digits_length_minus_eight = bb_digits_length - 8\n     \
    \   val aa_digits_length_minus_nine = aa_digits_length - 9\n        val bb_digits_length_minus_nine\
    \ = bb_dig", "        if (a == 0) {\n            return 0\n        }\n       \
    \ if (b == 0) {\n            return 0\n        }\n        if (a < 0) {\n     \
    \       return -1 * multiply(-a, b)\n        }\n        if (b < 0) {\n       \
    \     return -1 * multiply(a, -b)\n        }\n        if (a < 10 && b < 10) {\n\
    \            return a * b\n        }\n        if (a < 10) {\n            return\
    \ multiply(a, b)\n        }\n        if (b < 10) {\n            return multiply(a,\
    \ b)\n        }\n        if (a < 100) {\n            return multiply(a, b)\n \
    \       }\n        if (b < 100) {\n            return multiply(a, b)\n       \
    \ }\n        if (a < 1000) {\n            return multiply(a, b)\n        }\n \
    \       if (b < 1000) {\n            return multiply(a, b)\n        }\n      \
    \  if (a < 10000) {\n            return multiply(a, b)\n        }\n        if\
    \ (b < 10000) {\n            return multiply(a, b)\n        }\n        if (a <\
    \ 100000) {\n            return multiply(a, b)\n        }\n        if (b < 100000)\
    \ {\n            return multiply(a, b)\n        }\n        if (a < 1000000) {\n\
    \            return multiply(a, b)\n        }\n        if (b < 1000000) {\n  \
    \          return multiply(a, b)\n        }\n        if (a < 10000000) {\n   \
    \         return multiply(a, b)\n        }\n        if (b < 10000000) {\n    \
    \        return multiply(a, b)\n        }\n        if (a < 100000000) {\n    \
    \        return multiply(a, b)\n        }\n        if (b < 100000000) {\n    \
    \        return multiply(a, b)\n        }\n        if (a < 1000000000) {\n   \
    \         return multiply(a, b)\n        }\n        if (b < 1000000000) {\n  \
    \          return multiply(a, b)\n        }\n        if (a < 10000000000l) {\n\
    \            return multiply(a, b)\n        ", "        var a_digits = a.toString.split(\"\
    \")\n        var b_digits = b.toString.split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 to a_digits.length - 1) {\n            result = result +\
    \ (a_digits[i].toInt * b_digits[i].toInt)\n        }\n        return result",
  "        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var a_unit_digits = a_digits.takeWhile(d -> d.equals(\"0\") || d.equals(\"\
    1\"))\n        var b_unit_digits = b_digits.takeWhile(d -> d.equals(\"0\") ||\
    \ d.equals(\"1\"))\n        var a_unit_digits_count = a_unit_digits.length\n \
    \       var b_unit_digits_count = b_unit_digits.length\n        var result = 0l\n\
    \        for (i <- 0 until a_unit_digits_count) {\n            result = result\
    \ * 10 + a_unit_digits[i]\n        }\n        for (i <- 0 until b_unit_digits_count)\
    \ {\n            result = result * 10 + b_unit_digits[i]\n        }\n        return\
    \ result", "        val a_digits = a.toString.split(\"\")\n        val b_digits\
    \ = b.toString.split(\"\")\n        val a_digits_length = a_digits.length\n  \
    \      val b_digits_length = b_digits.length\n        val result = 0l\n      \
    \  for (i <- 0 until a_digits_length) {\n            val a_digit = a_digits[i]\n\
    \            val b_digit = b_digits[i]\n            result = result + (a_digit\
    \ * b_digit)\n        }\n        result", "        var a_digits = a.toString.split(\"\
    \")\n        var b_digits = b.toString.split(\"\")\n        var a_digits_len =\
    \ a_digits.length\n        var b_digits_len = b_digits.length\n        var a_digits_len_minus_1\
    \ = a_digits_len - 1\n        var b_digits_len_minus_1 = b_digits_len - 1\n  \
    \      var a_digits_len_minus_2 = a_digits_len - 2\n        var b_digits_len_minus_2\
    \ = b_digits_len - 2\n        var a_digits_len_minus_3 = a_digits_len - 3\n  \
    \      var b_digits_len_minus_3 = b_digits_len - 3\n        var a_digits_len_minus_4\
    \ = a_digits_len - 4\n        var b_digits_len_minus_4 = b_digits_len - 4\n  \
    \      var a_digits_len_minus_5 = a_digits_len - 5\n        var b_digits_len_minus_5\
    \ = b_digits_len - 5\n        var a_digits_len_minus_6 = a_digits_len - 6\n  \
    \      var b_digits_len_minus_6 = b_digits_len - 6\n        var a_digits_len_minus_7\
    \ = a_digits_len - 7\n        var b_digits_len_minus_7 = b_digits_len - 7\n  \
    \      var a_digits_len_minus_8 = a_digits_len - 8\n        var b_digits_len_minus_8\
    \ = b_digits_len - 8\n        var a_digits_len_minus_9 = a_digits_len - 9\n  \
    \      var b_digits_len_minus_9 = b_digits_len - 9\n        var a_digits_len_minus_10\
    \ = a_digits_len - 10\n        var b_digits_len_minus_10 = b_digits_len - 10\n\
    \        var a_digits_len", "        var result = 0l\n        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        for (i <- 0 to a_digits.length\
    \ - 1) {\n            result += (a_digits[i].toInt * b_digits[i].toInt)\n    \
    \    }\n        return result", "        var aa = a.toString\n        var bb =\
    \ b.toString\n        var aa_digits = aa.split(\"\")\n        var bb_digits =\
    \ bb.split(\"\")\n        var result = 0l\n        for (i <- 0 until aa_digits.length)\
    \ {\n            var aa_digit = aa_digits[i]\n            var bb_digit = bb_digits[i]\n\
    \            var aa_digit_int = aa_digit.toInt\n            var bb_digit_int =\
    \ bb_digit.toInt\n            result = result + (aa_digit_int * bb_digit_int)\n\
    \        }\n        return result", "        val aa = a.toString\n        val\
    \ bb = b.toString\n        val aa_digits = aa.split(\"\")\n        val bb_digits\
    \ = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n        val\
    \ bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_1 =\
    \ aa_digits_length - 1\n        val bb_digits_length_minus_1 = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_2 = aa_digits_length - 2\n        val\
    \ bb_digits_length_minus_2 = bb_digits_length - 2\n        val aa_digits_length_minus_3\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_3 = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_4 = aa_digits_length - 4\n        val\
    \ bb_digits_length_minus_4 = bb_digits_length - 4\n        val aa_digits_length_minus_5\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_5 = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_6 = aa_digits_length - 6\n        val\
    \ bb_digits_length_minus_6 = bb_digits_length - 6\n        val aa_digits_length_minus_7\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_7 = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_8 = aa_digits_length - 8\n        val\
    \ bb_digits_length_minus_8 = bb_digits_length - 8\n        val aa_digits_length_minus_9\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_9 = bb_dig", "  \
    \      val aa = a.toString.toUpperCase.replaceAll(\"[^0-9]\", \"\")\n        val\
    \ bb = b.toString.toUpperCase.replaceAll(\"[^0-9]\", \"\")\n        val aa_digits\
    \ = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n        val result\
    \ = 0l\n        for (i <- 0 until aa_digits.length) {\n            result = result\
    \ + (aa_digits[i] * bb_digits[i])\n        }\n        result", "        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        var a_digits_length = a_digits.length\n        var b_digits_length =\
    \ b_digits.length\n        var a_digits_product = 1l\n        var b_digits_product\
    \ = 1l\n        for (i <- 0 until a_digits_length) {\n            a_digits_product\
    \ *= Long.parseLong(a_digits[i])\n        }\n        for (i <- 0 until b_digits_length)\
    \ {\n            b_digits_product *= Long.parseLong(b_digits[i])\n        }\n\
    \        return a_digits_product * b_digits_product", "        var a_ = a\n  \
    \      var b_ = b\n        var a_ = a_\n        var b_ = b_\n        var a_ =\
    \ a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var\
    \ a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n   \
    \     var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ =\
    \ b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var\
    \ b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n   \
    \     var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ =\
    \ a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var\
    \ a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n   \
    \     var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ =\
    \ b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var\
    \ b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n   \
    \     var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ =\
    \ a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var\
    \ a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n   \
    \     var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ =\
    \ b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var\
    \ b_ = b_\n        var", "        var a_digits = a.toString.split(\"\")\n    \
    \    var b_digits = b.toString.split(\"\")\n        var a_unit_digits = a_digits.filter(_.match(_.toInt)).toList\n\
    \        var b_unit_digits = b_digits.filter(_.match(_.toInt)).toList\n      \
    \  var a_unit_digits_product = a_unit_digits.map(x => x * b_unit_digits.head).reduce(_.add)\n\
    \        var b_unit_digits_product = b_unit_digits.map(x => x * a_unit_digits.head).reduce(_.add)\n\
    \        var a_unit_digits_product_string = a_unit_digits_product.toString\n \
    \       var b_unit_digits_product_string = b_unit_digits_product.toString\n  \
    \      var a_unit_digits_product_string_length = a_unit_digits_product_string.length\n\
    \        var b_unit_digits_product_string_length = b_unit_digits_product_string.length\n\
    \        var a_unit_digits_product_string_length_difference = a_unit_digits_product_string_length\
    \ - b_unit_digits_product_string_length\n        var a_unit_digits_product_string_difference\
    \ = a_unit_digits_product_string_length_difference * \"0\"\n        var b_unit_digits_product_string_difference\
    \ = b_unit_digits_product_string_length_difference * \"0\"\n        var a_unit_digits_product_string_difference\
    \ = a_unit_digits_product_string_difference + b_unit_digits_product_string_difference\n\
    \        var a_unit_digits_product_string_difference_length = a_unit_digits_product_string_difference.length\n\
    \        var a_unit_digits_product_string_difference_length_difference = a_unit_digits_product_string_difference_length\
    \ - b_unit_digits_product_string_", "        var a_digits = a.toString.split(\"\
    \")\n        var b_digits = b.toString.split(\"\")\n        var a_unit_digits\
    \ = a_digits.filter(_.isDigit).toList\n        var b_unit_digits = b_digits.filter(_.isDigit).toList\n\
    \        var a_unit_digits_product = a_unit_digits.map(_.toInt).reduce(_.times)\n\
    \        var b_unit_digits_product = b_unit_digits.map(_.toInt).reduce(_.times)\n\
    \        var result = a_unit_digits_product * b_unit_digits_product\n        return\
    \ result", "        val aa = a.toString.toUpperCase\n        val bb = b.toString.toUpperCase\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_1 = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_1 = bb_digits_length - 1\n        val\
    \ aa_digits_length_minus_2 = aa_digits_length - 2\n        val bb_digits_length_minus_2\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_3 = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_3 = bb_digits_length - 3\n        val\
    \ aa_digits_length_minus_4 = aa_digits_length - 4\n        val bb_digits_length_minus_4\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_5 = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_5 = bb_digits_length - 5\n        val\
    \ aa_digits_length_minus_6 = aa_digits_length - 6\n        val bb_digits_length_minus_6\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_7 = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_7 = bb_digits_length - 7\n        val\
    \ aa_digits_length_minus_8 = aa_digits_length - 8\n        val bb_digits_length_minus_8\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_9 = aa_digits_length\
    \ - 9\n        val bb_digits_", "        var result = 0l\n        for (var i =\
    \ 0; i < a.toString().length(); i++) {\n            result += (a.toString().charAt(i)\
    \ - '0') * (b.toString().charAt(i) - '0')\n        }\n        return result",
  "        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var a_unit_digits = a_digits.takeWhile(x => x.toInt() != 0)\n   \
    \     var b_unit_digits = b_digits.takeWhile(x => x.toInt() != 0)\n        var\
    \ a_unit_digits_product = a_unit_digits.product(b_unit_digits)\n        return\
    \ a_unit_digits_product.toInt()", "        var a1 = a % 10\n        var b1 = b\
    \ % 10\n        var a2 = a / 10\n        var b2 = b / 10\n        var a3 = a2\
    \ % 10\n        var b3 = b2 % 10\n        var a4 = a3 / 10\n        var b4 = b3\
    \ / 10\n        var a5 = a4 % 10\n        var b5 = b4 % 10\n        var a6 = a5\
    \ / 10\n        var b6 = b5 / 10\n        var a7 = a6 % 10\n        var b7 = b6\
    \ % 10\n        var a8 = a7 / 10\n        var b8 = b7 / 10\n        var a9 = a8\
    \ % 10\n        var b9 = b8 % 10\n        var a10 = a9 / 10\n        var b10 =\
    \ b9 / 10\n        var a11 = a10 % 10\n        var b11 = b10 % 10\n        var\
    \ a12 = a11 / 10\n        var b12 = b11 / 10\n        var a13 = a12 % 10\n   \
    \     var b13 = b12 % 10\n        var a14 = a13 / 10\n        var b14 = b13 /\
    \ 10\n        var a15 = a14 % 10\n        var b15 = b14 % 10\n        var a16\
    \ = a15 / 10\n        var b16 = b15 / 10\n        var a17 = a16 % 10\n       \
    \ var b17 = b16 % 10\n        var a18 = a17 / 10\n        var b18 = b17 / 10\n\
    \        var a19 = a18 % 10\n        var b19 = b18 % 10\n        var a20 = a19\
    \ / 10\n        var b20 = b19 / 10\n        var a21 = a20 % 10\n        var b21\
    \ = b20 % 10\n        var a22 = a21 / 10\n        var b22 = b21 / 10\n       \
    \ var a23 = a22 % 10\n        var b23 = b22 % 10\n        var a24 = a23 / 10\n\
    \        var b24 = b23 / 10\n        var a25 = a24 % 10\n        var b25 = b24\
    \ % 10\n        var a26 = a25 / 10\n        var b26 = b", "        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        var product = 0l\n        for (i <- 0 until a_digits.length) {\n    \
    \        product = product + (a_digits[i].toInt * b_digits[i].toInt)\n       \
    \ }\n        return product", "        var a_digits = a.toString().split(\"\"\
    )\n        var b_digits = b.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_product = 0l\n        var b_digits_product = 0l\n        for (var i\
    \ = 0; i < a_digits_length; i++) {\n            a_digits_product = a_digits_product\
    \ * 10 + Long.parseLong(a_digits[i])\n        }\n        for (var i = 0; i < b_digits_length;\
    \ i++) {\n            b_digits_product = b_digits_product * 10 + Long.parseLong(b_digits[i])\n\
    \        }\n        return a_digits_product * b_digits_product", "        val\
    \ aa = a.toString\n        val bb = b.toString\n        val aa_digits = aa.split(\"\
    \")\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_nine = bb_dig", " \
    \       var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var a_unit_digits = a_digits.takeWhile(d -> d.equals(\"0\") || d.equals(\"\
    1\"))\n        var b_unit_digits = b_digits.takeWhile(d -> d.equals(\"0\") ||\
    \ d.equals(\"1\"))\n        var a_unit_digits_product = a_unit_digits.product(b_unit_digits)\n\
    \        var a_unit_digits_sum = a_unit_digits.sum(b_unit_digits)\n        var\
    \ a_unit_digits_product_sum = a_unit_digits_product.sum(a_unit_digits_sum)\n \
    \       return a_unit_digits_product_sum", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_sum = 0l\n        var b_digits_sum = 0l\n        for (i <- 0 until\
    \ a_digits_length) {\n            a_digits_sum += (a_digits[i].toInt * 10)\n \
    \       }\n        for (i <- 0 until b_digits_length) {\n            b_digits_sum\
    \ += (b_digits[i].toInt * 10)\n        }\n        var result = 0l\n        for\
    \ (i <- 0 until a_digits_length) {\n            result += (a_digits_sum * b_digits_sum)\n\
    \            a_digits_sum -= (a_digits[i].toInt * 10)\n            b_digits_sum\
    \ -= (b_digits[i].toInt * 10)\n        }\n        return result", "        val\
    \ a_digits = a.toString.split(\"l\")\n        val b_digits = b.toString.split(\"\
    l\")\n        val a_digits_int = toInt(a_digits[0])\n        val b_digits_int\
    \ = toInt(b_digits[0])\n        val a_digits_unit = a_digits[1].split(\"\")\n\
    \        val b_digits_unit = b_digits[1].split(\"\")\n        val a_digits_unit_int\
    \ = toInt(a_digits_unit[0])\n        val b_digits_unit_int = toInt(b_digits_unit[0])\n\
    \        val a_digits_unit_unit = a_digits_unit[1].split(\"\")\n        val b_digits_unit_unit\
    \ = b_digits_unit[1].split(\"\")\n        val a_digits_unit_unit_int = toInt(a_digits_unit_unit[0])\n\
    \        val b_digits_unit_unit_int = toInt(b_digits_unit_unit[0])\n        val\
    \ a_digits_unit_unit_unit = a_digits_unit_unit[1].split(\"\")\n        val b_digits_unit_unit_unit\
    \ = b_digits_unit_unit[1].split(\"\")\n        val a_digits_unit_unit_unit_int\
    \ = toInt(a_digits_unit_unit_unit[0])\n        val b_digits_unit_unit_unit_int\
    \ = toInt(b_digits_unit_unit_unit[0])\n        val a_digits_unit_unit_unit_unit\
    \ = a_digits_unit_unit_unit[1].split(\"\")\n        val b_digits_unit_unit_unit_unit\
    \ = b_digits_unit_unit_unit[1].split(\"\")\n        val a_digits_unit_unit_unit_unit_int\
    \ = toInt(a_digits_unit_unit_unit_unit[0])\n        val b_digits_unit_unit_unit_unit_int\
    \ = toInt(b_digits_unit", "        var a_digits = a.toString().split(\"\")\n \
    \       var b_digits = b.toString().split(\"\")\n        var result = 0l\n   \
    \     for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        var result = 0l\n\
    \        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        for (i <- 0 to a_digits.length - 1) {\n            result += (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        var a_ = a\n   \
    \     var b_ = b\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n       \
    \ var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n     \
    \   var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n   \
    \     var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n \
    \       var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ =", "        var a_digits = a.toString().split(\"\")\n       \
    \ var b_digits = b.toString().split(\"\")\n        var result = 0l\n        for\
    \ (i <- 0 to a_digits.length - 1) {\n            var a_digit = a_digits[i]\n \
    \           var b_digit = b_digits[i]\n            result += (a_digit * b_digit)\n\
    \        }\n        return result", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_unit_digits\
    \ = a_digits.filter(x => x.equals(\"1\")).toList\n        var b_unit_digits =\
    \ b_digits.filter(x => x.equals(\"1\")).toList\n        var a_unit_digits_product\
    \ = a_unit_digits.map(x => x * b_unit_digits.head).reduce(0l, (x, y) => x + y)\n\
    \        var b_unit_digits_product = b_unit_digits.map(x => x * a_unit_digits.head).reduce(0l,\
    \ (x, y) => x + y)\n        var a_unit_digits_product_str = a_unit_digits_product.toString()\n\
    \        var b_unit_digits_product_str = b_unit_digits_product.toString()\n  \
    \      var a_unit_digits_product_str_length = a_unit_digits_product_str.length\n\
    \        var b_unit_digits_product_str_length = b_unit_digits_product_str.length\n\
    \        var a_unit_digits_product_str_length_diff = a_unit_digits_product_str_length\
    \ - b_unit_digits_product_str_length\n        var a_unit_digits_product_str_length_diff_str\
    \ = a_unit_digits_product_str_length_diff.toString()\n        var a_unit_digits_product_str_length_diff_str_length\
    \ = a_unit_digits_product_str_length_diff_str.length\n        var a_unit_digits_product_str_length_diff_str_length_str\
    \ = a_unit_digits_product_str_length_diff_str_length.toString()\n        var a_unit_digits_product_str_length_diff_str_length_str_length\
    \ = a_unit_digits_product_str_length_diff_str_length_str.length", "        val\
    \ a_ = a\n        val b_ = b\n        val a_ = a_ % 10\n        val b_ = b_ %\
    \ 10\n        val a_ = a_ * b_\n        val b_ = b_ * a_\n        val a_ = a_\
    \ % 10\n        val b_ = b_ % 10\n        val a_ = a_ * b_\n        val b_ = b_\
    \ * a_\n        val a_ = a_ % 10\n        val b_ = b_ % 10\n        val a_ = a_\
    \ * b_\n        val b_ = b_ * a_\n        val a_ = a_ % 10\n        val b_ = b_\
    \ % 10\n        val a_ = a_ * b_\n        val b_ = b_ * a_\n        val a_ = a_\
    \ % 10\n        val b_ = b_ % 10\n        val a_ = a_ * b_\n        val b_ = b_\
    \ * a_\n        val a_ = a_ % 10\n        val b_ = b_ % 10\n        val a_ = a_\
    \ * b_\n        val b_ = b_ * a_\n        val a_ = a_ % 10\n        val b_ = b_\
    \ % 10\n        val a_ = a_ * b_\n        val b_ = b_ * a_\n        val a_ = a_\
    \ % 10\n        val b_ = b_ % 10\n        val a_ = a_ * b_\n        val b_ = b_\
    \ * a_\n        val a_ = a_ % 10\n        val b_ = b_ % 10\n        val a_ = a_\
    \ * b_\n        val b_ = b_ * a_\n        val a_ = a_ % 10\n        val b_ = b_\
    \ % 10\n        val a_ = a_ * b_\n        val b_ = b_ * a_\n        val a_ = a_\
    \ % 10\n        val b_ = b_ % 10\n        val a_ = a_ * b_\n        val b_ = b_\
    \ * a_\n        val a_ = a_ % 10\n        val b_ = b_ % 10\n        val a_ = a_\
    \ * b_\n        val b_ =", "        var a_digits = a.toString().split(\"\")\n\
    \        var b_digits = b.toString().split(\"\")\n        var result = 0l\n  \
    \      for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i].toLong\
    \ * b_digits[i].toLong)\n        }\n        return result", "        var a1 =\
    \ a % 10\n        var a2 = a / 10\n        var b1 = b % 10\n        var b2 = b\
    \ / 10\n        var a3 = a2 * b1\n        var a4 = a1 * b2\n        var a5 = a3\
    \ + a4\n        var a6 = a5 % 10\n        var a7 = a5 / 10\n        var a8 = a6\
    \ + a7\n        var a9 = a8 % 10\n        var a10 = a8 / 10\n        var a11 =\
    \ a9 + a10\n        var a12 = a11 % 10\n        var a13 = a11 / 10\n        var\
    \ a14 = a12 + a13\n        var a15 = a14 % 10\n        var a16 = a14 / 10\n  \
    \      var a17 = a15 + a16\n        var a18 = a17 % 10\n        var a19 = a17\
    \ / 10\n        var a20 = a18 + a19\n        var a21 = a20 % 10\n        var a22\
    \ = a20 / 10\n        var a23 = a21 + a22\n        var a24 = a23 % 10\n      \
    \  var a25 = a23 / 10\n        var a26 = a24 + a25\n        var a27 = a26 % 10\n\
    \        var a28 = a26 / 10\n        var a29 = a27 + a28\n        var a30 = a29\
    \ % 10\n        var a31 = a29 / 10\n        var a32 = a30 + a31\n        var a33\
    \ = a32 % 10\n        var a34 = a32 / 10\n        var a35 = a33 + a34\n      \
    \  var a36 = a35 % 10\n        var a37 = a35 / 10\n        var a38 = a36 + a37\n\
    \        var a39 = a38 % 10\n        var a40 = a38 / 10\n        var a41 = a39\
    \ + a40\n        var a42 = a41 % 10\n        var a43 = a41 / 10\n        var a44\
    \ = a42 + a43\n        var a45 = a44 % 10\n        var a46 = a44 / 10\n      \
    \  var a47 = a45 + a46\n        var a48 = a47 % 10", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result * 10\
    \ + Long(a_digits[i]) * Long(b_digits[i])\n        }\n        return result",
  "        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 until a_digits.length) {\n \
    \           result += (a_digits[i] * b_digits[i])\n        }\n        return result",
  "        val a_digits = a.toString.split(\"\")\n        val b_digits = b.toString.split(\"\
    \")\n        val a_digits_len = a_digits.length\n        val b_digits_len = b_digits.length\n\
    \        val a_digits_len_minus_one = a_digits_len - 1\n        val b_digits_len_minus_one\
    \ = b_digits_len - 1\n        val a_digits_len_minus_two = a_digits_len - 2\n\
    \        val b_digits_len_minus_two = b_digits_len - 2\n        val a_digits_len_minus_three\
    \ = a_digits_len - 3\n        val b_digits_len_minus_three = b_digits_len - 3\n\
    \        val a_digits_len_minus_four = a_digits_len - 4\n        val b_digits_len_minus_four\
    \ = b_digits_len - 4\n        val a_digits_len_minus_five = a_digits_len - 5\n\
    \        val b_digits_len_minus_five = b_digits_len - 5\n        val a_digits_len_minus_six\
    \ = a_digits_len - 6\n        val b_digits_len_minus_six = b_digits_len - 6\n\
    \        val a_digits_len_minus_seven = a_digits_len - 7\n        val b_digits_len_minus_seven\
    \ = b_digits_len - 7\n        val a_digits_len_minus_eight = a_digits_len - 8\n\
    \        val b_digits_len_minus_eight = b_digits_len - 8\n        val a_digits_len_minus_nine\
    \ = a_digits_len - 9\n        val b_digits_len_minus_nine = b_digits_len - 9\n\
    \        val a_digits_len_minus_ten = a_digits_len - 10\n        val b_digits_len_minus_ten\
    \ = b_digits_len - 10\n        val a_digits_len", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_unit_digits\
    \ = a_digits.takeWhile(d -> d.equals(\"0\") || d.equals(\"1\"))\n        var b_unit_digits\
    \ = b_digits.takeWhile(d -> d.equals(\"0\") || d.equals(\"1\"))\n        var a_unit_digits_product\
    \ = a_unit_digits.product(b_unit_digits)\n        var a_unit_digits_sum = a_unit_digits.sum(b_unit_digits)\n\
    \        var a_unit_digits_product_sum = a_unit_digits_product.sum(a_unit_digits_sum)\n\
    \        return a_unit_digits_product_sum", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_len\
    \ = a_digits.length\n        var b_digits_len = b_digits.length\n        var result\
    \ = 0l\n        for (var i = 0; i < a_digits_len; i++) {\n            for (var\
    \ j = 0; j < b_digits_len; j++) {\n                result += (Long.parseLong(a_digits[i])\
    \ * Long.parseLong(b_digits[j]))\n            }\n        }\n        return result",
  "        val aa = a.toString\n        val bb = b.toString\n        val aa_digits\
    \ = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length\
    \ = aa_digits.length\n        val bb_digits_length = bb_digits.length\n      \
    \  val aa_digits_length_minus_one = aa_digits_length - 1\n        val bb_digits_length_minus_one\
    \ = bb_digits_length - 1\n        val aa_digits_length_minus_two = aa_digits_length\
    \ - 2\n        val bb_digits_length_minus_two = bb_digits_length - 2\n       \
    \ val aa_digits_length_minus_three = aa_digits_length - 3\n        val bb_digits_length_minus_three\
    \ = bb_digits_length - 3\n        val aa_digits_length_minus_four = aa_digits_length\
    \ - 4\n        val bb_digits_length_minus_four = bb_digits_length - 4\n      \
    \  val aa_digits_length_minus_five = aa_digits_length - 5\n        val bb_digits_length_minus_five\
    \ = bb_digits_length - 5\n        val aa_digits_length_minus_six = aa_digits_length\
    \ - 6\n        val bb_digits_length_minus_six = bb_digits_length - 6\n       \
    \ val aa_digits_length_minus_seven = aa_digits_length - 7\n        val bb_digits_length_minus_seven\
    \ = bb_digits_length - 7\n        val aa_digits_length_minus_eight = aa_digits_length\
    \ - 8\n        val bb_digits_length_minus_eight = bb_digits_length - 8\n     \
    \   val aa_digits_length_minus_nine = aa_digits_length - 9\n        val bb_digits_length_minus_nine\
    \ = bb_dig", "        val aa = a.toString\n        val bb = b.toString\n     \
    \   val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n \
    \       val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_1 = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_1 = bb_digits_length - 1\n        val\
    \ aa_digits_length_minus_2 = aa_digits_length - 2\n        val bb_digits_length_minus_2\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_3 = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_3 = bb_digits_length - 3\n        val\
    \ aa_digits_length_minus_4 = aa_digits_length - 4\n        val bb_digits_length_minus_4\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_5 = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_5 = bb_digits_length - 5\n        val\
    \ aa_digits_length_minus_6 = aa_digits_length - 6\n        val bb_digits_length_minus_6\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_7 = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_7 = bb_digits_length - 7\n        val\
    \ aa_digits_length_minus_8 = aa_digits_length - 8\n        val bb_digits_length_minus_8\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_9 = aa_digits_length\
    \ - 9\n        val bb_digits_length_minus_9 = bb_dig", "        val aa = a.toString\n\
    \        val bb = b.toString\n        val aa_digits = aa.split(\"\")\n       \
    \ val bb_digits = bb.split(\"\")\n        val result = \"\"\n        for (i <-\
    \ 0 until aa_digits.length) {\n            for (j <- 0 until bb_digits.length)\
    \ {\n                result += (aa_digits[i] * bb_digits[j])\n            }\n\
    \        }\n        return Long.parseLong(result)", "        var a_ = a\n    \
    \    var b_ = b\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ =", "        var result = 0l\n        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        for (i <- 0 to a_digits.length\
    \ - 1) {\n            result += (a_digits[i] * b_digits[i])\n        }\n     \
    \   return result", "        val aa = a.toString.toUpperCase\n        val bb =\
    \ b.toString.toUpperCase\n        val aa_digits = aa.split(\"\")\n        val\
    \ bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_", "        var a1 = a % 10\n\
    \        var a2 = a / 10\n        var b1 = b % 10\n        var b2 = b / 10\n \
    \       var a3 = a2 * b1\n        var a4 = a1 * b2\n        var a5 = a3 + a4\n\
    \        var a6 = a5 % 10\n        var a7 = a5 / 10\n        var a8 = a6 + a7\n\
    \        var a9 = a8 % 10\n        var a10 = a8 / 10\n        var a11 = a9 + a10\n\
    \        var a12 = a11 % 10\n        var a13 = a11 / 10\n        var a14 = a12\
    \ + a13\n        var a15 = a14 % 10\n        var a16 = a14 / 10\n        var a17\
    \ = a15 + a16\n        var a18 = a17 % 10\n        var a19 = a17 / 10\n      \
    \  var a20 = a18 + a19\n        var a21 = a20 % 10\n        var a22 = a20 / 10\n\
    \        var a23 = a21 + a22\n        var a24 = a23 % 10\n        var a25 = a23\
    \ / 10\n        var a26 = a24 + a25\n        var a27 = a26 % 10\n        var a28\
    \ = a26 / 10\n        var a29 = a27 + a28\n        var a30 = a29 % 10\n      \
    \  var a31 = a29 / 10\n        var a32 = a30 + a31\n        var a33 = a32 % 10\n\
    \        var a34 = a32 / 10\n        var a35 = a33 + a34\n        var a36 = a35\
    \ % 10\n        var a37 = a35 / 10\n        var a38 = a36 + a37\n        var a39\
    \ = a38 % 10\n        var a40 = a38 / 10\n        var a41 = a39 + a40\n      \
    \  var a42 = a41 % 10\n        var a43 = a41 / 10\n        var a44 = a42 + a43\n\
    \        var a45 = a44 % 10\n        var a46 = a44 / 10\n        var a47 = a45\
    \ + a46\n        var a48 = a47 % 10", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_unit_digits\
    \ = a_digits.takeWhile(x => x.equals(\"0\") || x.equals(\"1\") || x.equals(\"\
    2\") || x.equals(\"3\") || x.equals(\"4\") || x.equals(\"5\") || x.equals(\"6\"\
    ) || x.equals(\"7\") || x.equals(\"8\") || x.equals(\"9\"))\n        var b_unit_digits\
    \ = b_digits.takeWhile(x => x.equals(\"0\") || x.equals(\"1\") || x.equals(\"\
    2\") || x.equals(\"3\") || x.equals(\"4\") || x.equals(\"5\") || x.equals(\"6\"\
    ) || x.equals(\"7\") || x.equals(\"8\") || x.equals(\"9\"))\n        var a_unit_digits_string\
    \ = a_unit_digits.mkString(\"\")\n        var b_unit_digits_string = b_unit_digits.mkString(\"\
    \")\n        var a_unit_digits_int = a_unit_digits_string.toInt\n        var b_unit_digits_int\
    \ = b_unit_digits_string.toInt\n        var a_unit_digits_product = a_unit_digits_int\
    \ * b_unit_digits_int\n        var a_unit_digits_product_string = a_unit_digits_product.toString\n\
    \        return a_unit_digits_product_string", "        if (a == 0 || b == 0)\
    \ {\n            return 0\n        }\n        if (a < 0 && b < 0) {\n        \
    \    return -1 * multiply(-a, -b)\n        }\n        if (a < 0) {\n         \
    \   return -1 * multiply(-a, b)\n        }\n        if (b < 0) {\n           \
    \ return -1 * multiply(a, -b)\n        }\n        return a * b / 10", "      \
    \  var a_digits = a.toString.split(\"l\")\n        var b_digits = b.toString.split(\"\
    l\")\n        var a_digit_product = a_digits[0].toInt\n        var b_digit_product\
    \ = b_digits[0].toInt\n        var a_digit_product_multiplied = a_digit_product\
    \ * b_digit_product\n        var a_digit_product_multiplied_string = a_digit_product_multiplied.toString\n\
    \        var a_digit_product_multiplied_string_split = a_digit_product_multiplied_string.split(\"\
    l\")\n        var a_digit_product_multiplied_string_split_string = a_digit_product_multiplied_string_split[0]\n\
    \        var a_digit_product_multiplied_string_split_string_int = a_digit_product_multiplied_string_split_string.toInt\n\
    \        var a_digit_product_multiplied_string_split_string_int_string = a_digit_product_multiplied_string_split_string_int.toString\n\
    \        var a_digit_product_multiplied_string_split_string_int_string_split =\
    \ a_digit_product_multiplied_string_split_string_int_string.split(\"l\")\n   \
    \     var a_digit_product_multiplied_string_split_string_int_string_split_string\
    \ = a_digit_product_multiplied_string_split_string_int_string_split[0]\n     \
    \   var a_digit_product_multiplied_string_split_string_int_string_split_string_int\
    \ = a_digit_product_multiplied_string_split_string_int_string_split_string.toInt\n\
    \        var a_digit_product_multiplied_string_split_string_int_string_split_string_int_string\
    \ = a_digit_product_multiplied_string_split_string_int_string_split_string_int.toString\n\
    \        var a_digit_product_multiplied_string_split_string_int_string_split_string_int_string_split_string_int\
    \ = a_digit_product_multiplied_string_", "        var a_digits = a.toString.split(\"\
    \")\n        var b_digits = b.toString.split(\"\")\n        var a_unit_digits\
    \ = a_digits.filter(_.isDigit).toList\n        var b_unit_digits = b_digits.filter(_.isDigit).toList\n\
    \        var a_unit_digits_product = a_unit_digits.map(x => _.toInt(x)).reduce(_.times)\n\
    \        var b_unit_digits_product = b_unit_digits.map(x => _.toInt(x)).reduce(_.times)\n\
    \        var product = a_unit_digits_product * b_unit_digits_product\n       \
    \ return product", "        if (a == 0 || b == 0) {\n            return 0\n  \
    \      }\n        return a * b / 10", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_product = 1l\n        var b_digits_product = 1l\n        for (i <-\
    \ 0 until a_digits_length) {\n            a_digits_product *= Long.parseLong(a_digits[i])\n\
    \        }\n        for (i <- 0 until b_digits_length) {\n            b_digits_product\
    \ *= Long.parseLong(b_digits[i])\n        }\n        return a_digits_product *\
    \ b_digits_product", "        var a_digits = a.toString().split(\"\")\n      \
    \  var b_digits = b.toString().split(\"\")\n        var result = 0l\n        for\
    \ (i <- 0 until a_digits.length) {\n            result = result * 10 + Long.parseLong(a_digits[i])\
    \ * Long.parseLong(b_digits[i])\n        }\n        return result", "        var\
    \ a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 until a_digits.length) {\n \
    \           var a_digit = a_digits[i]\n            var b_digit = b_digits[i]\n\
    \            result = result + (a_digit * b_digit)\n        }\n        return\
    \ result", "        val aa = a.toString.toUpperCase\n        val bb = b.toString.toUpperCase\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val aa_digits_length_minus_two = aa_digits_length - 2\n        val bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   val aa_digits_length_minus_four = aa_digits_length - 4\n        val bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  val aa_digits_length_minus_six = aa_digits_length - 6\n        val bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   val aa_digits_length_minus_eight = aa_digits_length - 8\n        val bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        val bb_digits_", "        var a_digits = a.toString.split(\"\"\
    )\n        var b_digits = b.toString.split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ result = 0l\n        for (var i = 0; i < a_digits_length; i++) {\n         \
    \   var a_digit = a_digits[i]\n            for (var j = 0; j < b_digits_length;\
    \ j++) {\n                var b_digit = b_digits[j]\n                if (a_digit\
    \ == \"0\" || b_digit == \"0\") {\n                    continue\n            \
    \    }\n                result += (Long.parseLong(a_digit) * Long.parseLong(b_digit))\n\
    \            }\n        }\n        return result", "        var a_ = a\n     \
    \   var b_ = b\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var", "        if (a == 0 || b == 0)\n            return\
    \ 0l\n        else if (a < 0 && b < 0)\n            return -1l\n        else if\
    \ (a < 0)\n            return -1l\n        else if (b < 0)\n            return\
    \ -1l\n        else {\n            var a_digits = a.toString().split(\"\")\n \
    \           var b_digits = b.toString().split(\"\")\n            var a_unit_digits\
    \ = a_digits.filter(elem -> elem.equals(\"1\")).toList()\n            var b_unit_digits\
    \ = b_digits.filter(elem -> elem.equals(\"1\")).toList()\n            var a_unit_digits_product\
    \ = a_unit_digits.map(elem -> elem * b_unit_digits.head).reduce(0l, (a, b) ->\
    \ a + b)\n            var b_unit_digits_product = b_unit_digits.map(elem -> elem\
    \ * a_unit_digits.head).reduce(0l, (a, b) -> a + b)\n            return a_unit_digits_product\
    \ * b_unit_digits_product\n        }", "        var a_digits = a.toString.split(\"\
    \")\n        var b_digits = b.toString.split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result * 10\
    \ + Long.parseLong(a_digits[i]) * Long.parseLong(b_digits[i])\n        }\n   \
    \     return result", "        var a_digits = a.toString.split(\"\")\n       \
    \ var b_digits = b.toString.split(\"\")\n        var a_digits_length = a_digits.length\n\
    \        var b_digits_length = b_digits.length\n        var a_digits_sum = 0l\n\
    \        var b_digits_sum = 0l\n        for (i <- 0 until a_digits_length) {\n\
    \            a_digits_sum += (a_digits[i].toInt * 10)\n        }\n        for\
    \ (i <- 0 until b_digits_length) {\n            b_digits_sum += (b_digits[i].toInt\
    \ * 10)\n        }\n        var product = a_digits_sum * b_digits_sum\n      \
    \  return product", "        var a1 = a % 10\n        var b1 = b % 10\n      \
    \  var a2 = a / 10\n        var b2 = b / 10\n        var a3 = a2 % 10\n      \
    \  var b3 = b2 % 10\n        var a4 = a3 / 10\n        var b4 = b3 / 10\n    \
    \    var a5 = a4 % 10\n        var b5 = b4 % 10\n        var a6 = a5 / 10\n  \
    \      var b6 = b5 / 10\n        var a7 = a6 % 10\n        var b7 = b6 % 10\n\
    \        var a8 = a7 / 10\n        var b8 = b7 / 10\n        var a9 = a8 % 10\n\
    \        var b9 = b8 % 10\n        var a10 = a9 / 10\n        var b10 = b9 / 10\n\
    \        var a11 = a10 % 10\n        var b11 = b10 % 10\n        var a12 = a11\
    \ / 10\n        var b12 = b11 / 10\n        var a13 = a12 % 10\n        var b13\
    \ = b12 % 10\n        var a14 = a13 / 10\n        var b14 = b13 / 10\n       \
    \ var a15 = a14 % 10\n        var b15 = b14 % 10\n        var a16 = a15 / 10\n\
    \        var b16 = b15 / 10\n        var a17 = a16 % 10\n        var b17 = b16\
    \ % 10\n        var a18 = a17 / 10\n        var b18 = b17 / 10\n        var a19\
    \ = a18 % 10\n        var b19 = b18 % 10\n        var a20 = a19 / 10\n       \
    \ var b20 = b19 / 10\n        var a21 = a20 % 10\n        var b21 = b20 % 10\n\
    \        var a22 = a21 / 10\n        var b22 = b21 / 10\n        var a23 = a22\
    \ % 10\n        var b23 = b22 % 10\n        var a24 = a23 / 10\n        var b24\
    \ = b23 / 10\n        var a25 = a24 % 10\n        var b25 = b24 % 10\n       \
    \ var a26 = a25 / 10\n        var b26 = b", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_len\
    \ = a_digits.length\n        var b_digits_len = b_digits.length\n        var a_digits_len_minus_one\
    \ = a_digits_len - 1\n        var b_digits_len_minus_one = b_digits_len - 1\n\
    \        var a_digits_len_minus_two = a_digits_len - 2\n        var b_digits_len_minus_two\
    \ = b_digits_len - 2\n        var a_digits_len_minus_three = a_digits_len - 3\n\
    \        var b_digits_len_minus_three = b_digits_len - 3\n        var a_digits_len_minus_four\
    \ = a_digits_len - 4\n        var b_digits_len_minus_four = b_digits_len - 4\n\
    \        var a_digits_len_minus_five = a_digits_len - 5\n        var b_digits_len_minus_five\
    \ = b_digits_len - 5\n        var a_digits_len_minus_six = a_digits_len - 6\n\
    \        var b_digits_len_minus_six = b_digits_len - 6\n        var a_digits_len_minus_seven\
    \ = a_digits_len - 7\n        var b_digits_len_minus_seven = b_digits_len - 7\n\
    \        var a_digits_len_minus_eight = a_digits_len - 8\n        var b_digits_len_minus_eight\
    \ = b_digits_len - 8\n        var a_digits_len_minus_nine = a_digits_len - 9\n\
    \        var b_digits_len_minus_nine = b_digits_len - 9\n        var a_digits_len_minus_ten\
    \ = a_digits_len - 10\n        var b_digits_len_minus_ten = b_digits_len - 10\n\
    \        var a_digits_len", "        var a_digits = a.toString().split(\"l\")\n\
    \        var b_digits = b.toString().split(\"l\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_sum = 0l\n        var b_digits_sum = 0l\n        for (var i = 0; i\
    \ < a_digits_length; i++) {\n            a_digits_sum += Long.parseLong(a_digits[i])\n\
    \        }\n        for (var i = 0; i < b_digits_length; i++) {\n            b_digits_sum\
    \ += Long.parseLong(b_digits[i])\n        }\n        var a_digits_sum_mod = a_digits_sum\
    \ % 10\n        var b_digits_sum_mod = b_digits_sum % 10\n        var product\
    \ = a_digits_sum_mod * b_digits_sum_mod\n        if (product > 9) {\n        \
    \    product = product % 10\n        }\n        return product", "        val\
    \ aa = a.toString\n        val bb = b.toString\n        val aa_digits = aa.split(\"\
    \")\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_1\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_1 = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_2 = aa_digits_length - 2\n        val\
    \ bb_digits_length_minus_2 = bb_digits_length - 2\n        val aa_digits_length_minus_3\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_3 = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_4 = aa_digits_length - 4\n        val\
    \ bb_digits_length_minus_4 = bb_digits_length - 4\n        val aa_digits_length_minus_5\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_5 = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_6 = aa_digits_length - 6\n        val\
    \ bb_digits_length_minus_6 = bb_digits_length - 6\n        val aa_digits_length_minus_7\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_7 = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_8 = aa_digits_length - 8\n        val\
    \ bb_digits_length_minus_8 = bb_digits_length - 8\n        val aa_digits_length_minus_9\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_9 = bb_dig", "  \
    \      var result = 0l\n        for (var i = 0; i < a.toString().length(); i++)\
    \ {\n            var digit = a.toString().charAt(i) - '0'\n            result\
    \ += digit * b.toString().charAt(i) - '0'\n        }\n        return result",
  "        var a_ = a\n        var b_ = b\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var", "        val aa = a.toString\n    \
    \    val bb = b.toString\n        val aa_digits = aa.split(\"\")\n        val\
    \ bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_nine = bb_dig", " \
    \       var a_ = a\n        var b_ = b\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var\
    \ b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var\
    \ a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var\
    \ b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var\
    \ a_ = a_ * b_\n        var b_ =", "        var a1 = a % 10\n        var a2 =\
    \ a / 10\n        var b1 = b % 10\n        var b2 = b / 10\n        var result\
    \ = a1 * b1\n        if (a2 > 0) {\n            result += a2 * b1\n        }\n\
    \        if (b2 > 0) {\n            result += a1 * b2\n        }\n        return\
    \ result", "        val aa = a.toString\n        val bb = b.toString\n       \
    \ val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n   \
    \     val aa_digits_length = aa_digits.length\n        val bb_digits_length =\
    \ bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val aa_digits_length_minus_two = aa_digits_length - 2\n        val bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   val aa_digits_length_minus_four = aa_digits_length - 4\n        val bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  val aa_digits_length_minus_six = aa_digits_length - 6\n        val bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   val aa_digits_length_minus_eight = aa_digits_length - 8\n        val bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        val bb_digits_length_minus_nine = bb_dig", "        var a_digits\
    \ = a.toString.split(\"l\")\n        var b_digits = b.toString.split(\"l\")\n\
    \        var a_digits_int = a_digits[0].toInt\n        var b_digits_int = b_digits[0].toInt\n\
    \        var a_digits_int_product = a_digits_int * b_digits_int\n        var a_digits_int_product_string\
    \ = a_digits_int_product.toString\n        var a_digits_int_product_string_split\
    \ = a_digits_int_product_string.split(\"l\")\n        var a_digits_int_product_string_split_int\
    \ = a_digits_int_product_string_split[0].toInt\n        var a_digits_int_product_string_split_int_product\
    \ = a_digits_int_product_string_split_int * b_digits_int\n        var a_digits_int_product_string_split_int_product_string\
    \ = a_digits_int_product_string_split_int_product.toString\n        var a_digits_int_product_string_split_int_product_string_split\
    \ = a_digits_int_product_string_split_int_product_string.split(\"l\")\n      \
    \  var a_digits_int_product_string_split_int_product_string_split_int = a_digits_int_product_string_split_int_product_string_split[0].toInt\n\
    \        var a_digits_int_product_string_split_int_product_string_split_int_product\
    \ = a_digits_int_product_string_split_int_product_string_split_int * b_digits_int\n\
    \        var a_digits_int_product_string_split_int_product_string_split_int_product_string\
    \ = a_digits_int_product_string_split_int_product_string_split_int_product_string.toString\n\
    \        var a_digits_int_product_string_split_int_product_string_split_int_product_string",
  "        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var a_unit_digits = a_digits.takeWhile(x => x.toInt() != 0)\n   \
    \     var b_unit_digits = b_digits.takeWhile(x => x.toInt() != 0)\n        var\
    \ a_unit_digits_product = a_unit_digits.product(b_unit_digits)\n        var a_unit_digits_sum\
    \ = a_unit_digits.sum(b_unit_digits)\n        var a_unit_digits_product_sum =\
    \ a_unit_digits_product.sum(a_unit_digits_sum)\n        return a_unit_digits_product_sum",
  "        var result = 0l\n        for (var i = 0; i < a.length(); i++) {\n     \
    \       result = result * 10 + a.apply(i)\n        }\n        for (var i = 0;\
    \ i < b.length(); i++) {\n            result = result * 10 + b.apply(i)\n    \
    \    }\n        return result", "        val aa = a.toString\n        val bb =\
    \ b.toString\n        val aa_len = aa.length\n        val bb_len = bb.length\n\
    \        val aa_digits = aa.substring(0, aa_len - 1)\n        val bb_digits =\
    \ bb.substring(0, bb_len - 1)\n        val aa_digits_len = aa_digits.length\n\
    \        val bb_digits_len = bb_digits.length\n        val aa_digits_digits =\
    \ aa_digits.substring(0, aa_digits_len - 1)\n        val bb_digits_digits = bb_digits.substring(0,\
    \ bb_digits_len - 1)\n        val aa_digits_digits_len = aa_digits_digits.length\n\
    \        val bb_digits_digits_len = bb_digits_digits.length\n        val aa_digits_digits_digits\
    \ = aa_digits_digits.substring(0, aa_digits_digits_len - 1)\n        val bb_digits_digits_digits\
    \ = bb_digits_digits.substring(0, bb_digits_digits_len - 1)\n        val aa_digits_digits_digits_len\
    \ = aa_digits_digits_digits.length\n        val bb_digits_digits_digits_len =\
    \ bb_digits_digits_digits.length\n        val aa_digits_digits_digits_digits =\
    \ aa_digits_digits_digits.substring(0, aa_digits_digits_digits_len - 1)\n    \
    \    val bb_digits_digits_digits_digits = bb_digits_digits_digits.substring(0,\
    \ bb_digits_digits_digits_len - 1)\n        val aa_digits_digits_digits_digits_len\
    \ = aa_digits", "        var a_digits = a.toString().split(\"\")\n        var\
    \ b_digits = b.toString().split(\"\")\n        var a_digits_len = a_digits.length\n\
    \        var b_digits_len = b_digits.length\n        var a_digits_product = a_digits.reduce((a,\
    \ b) -> a * b)\n        var b_digits_product = b_digits.reduce((a, b) -> a * b)\n\
    \        var a_digits_product_len = a_digits_product.toString().length\n     \
    \   var b_digits_product_len = b_digits_product.toString().length\n        var\
    \ a_digits_product_len_mod_10 = a_digits_product_len % 10\n        var b_digits_product_len_mod_10\
    \ = b_digits_product_len % 10\n        var a_digits_product_len_mod_100 = a_digits_product_len\
    \ % 100\n        var b_digits_product_len_mod_100 = b_digits_product_len % 100\n\
    \        var a_digits_product_len_mod_1000 = a_digits_product_len % 1000\n   \
    \     var b_digits_product_len_mod_1000 = b_digits_product_len % 1000\n      \
    \  var a_digits_product_len_mod_10000 = a_digits_product_len % 10000\n       \
    \ var b_digits_product_len_mod_10000 = b_digits_product_len % 10000\n        var\
    \ a_digits_product_len_mod_100000 = a_digits_product_len % 100000\n        var\
    \ b_digits_product_len_mod_100000 = b_digits_product_len % 100000\n        var\
    \ a_digits_product_len_mod_1000000 = a_digits_product_len % 1000000\n        var\
    \ b_digits_product_len_mod_1000000 = b_digits_product_len % 1000000\n        var\
    \ a_digits_product_len_mod_10000000 = a_digits_product_len % 10000000\n", "  \
    \      var a_ = a\n        var b_ = b\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var", "        var a1 = a % 10\n        var\
    \ a2 = a / 10\n        var b1 = b % 10\n        var b2 = b / 10\n        var a3\
    \ = a2 * b1\n        var a4 = a1 * b2\n        var a5 = a3 + a4\n        var a6\
    \ = a5 % 10\n        var a7 = a5 / 10\n        var a8 = a6 + a7\n        var a9\
    \ = a8 % 10\n        var a10 = a8 / 10\n        var a11 = a9 + a10\n        var\
    \ a12 = a11 % 10\n        var a13 = a11 / 10\n        var a14 = a12 + a13\n  \
    \      var a15 = a14 % 10\n        var a16 = a14 / 10\n        var a17 = a15 +\
    \ a16\n        var a18 = a17 % 10\n        var a19 = a17 / 10\n        var a20\
    \ = a18 + a19\n        var a21 = a20 % 10\n        var a22 = a20 / 10\n      \
    \  var a23 = a21 + a22\n        var a24 = a23 % 10\n        var a25 = a23 / 10\n\
    \        var a26 = a24 + a25\n        var a27 = a26 % 10\n        var a28 = a26\
    \ / 10\n        var a29 = a27 + a28\n        var a30 = a29 % 10\n        var a31\
    \ = a29 / 10\n        var a32 = a30 + a31\n        var a33 = a32 % 10\n      \
    \  var a34 = a32 / 10\n        var a35 = a33 + a34\n        var a36 = a35 % 10\n\
    \        var a37 = a35 / 10\n        var a38 = a36 + a37\n        var a39 = a38\
    \ % 10\n        var a40 = a38 / 10\n        var a41 = a39 + a40\n        var a42\
    \ = a41 % 10\n        var a43 = a41 / 10\n        var a44 = a42 + a43\n      \
    \  var a45 = a44 % 10\n        var a46 = a44 / 10\n        var a47 = a45 + a46\n\
    \        var a48 = a47 % 10", "        val aa = a.toString.toUpperCase\n     \
    \   val bb = b.toString.toUpperCase\n        val aa_digits = aa.split(\"\")\n\
    \        val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_", "        var a_digits = a.toString.split(\"\
    l\")\n        var b_digits = b.toString.split(\"l\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_result = \"\"\n        var b_digits_result = \"\"\n        var a_digits_index\
    \ = 0\n        var b_digits_index = 0\n        var a_digit = 0\n        var b_digit\
    \ = 0\n        var a_digit_multiplier = 1\n        var b_digit_multiplier = 1\n\
    \        var a_digit_multiplier_sum = 0\n        var b_digit_multiplier_sum =\
    \ 0\n        var a_digit_multiplier_sum_sum = 0\n        var b_digit_multiplier_sum_sum\
    \ = 0\n        var a_digit_multiplier_sum_sum_sum = 0\n        var b_digit_multiplier_sum_sum_sum\
    \ = 0\n        var a_digit_multiplier_sum_sum_sum_sum = 0\n        var b_digit_multiplier_sum_sum_sum_sum\
    \ = 0\n        var a_digit_multiplier_sum_sum_sum_sum_sum = 0\n        var b_digit_multiplier_sum_sum_sum_sum_sum\
    \ = 0\n        while (a_digits_index < a_digits_length) {\n            a_digit\
    \ = Long.parseLong(a_digits[a_digits_index])\n            a_digit_multiplier =\
    \ a_digit\n            a_digit_multiplier_sum = a_digit\n            a_digit_multiplier_sum_sum\
    \ = a_digit\n            a_digit_multiplier_sum_sum_sum = a_digit\n          \
    \  a_digit_multiplier_sum_sum_sum_sum = a_digit\n            a_digits_index +=\
    \ 1\n        }\n        while (b_digits_index < b_digits_length) {\n         \
    \   b_digit = Long.parseLong(b_digits[b_digits_index])\n            b_digit_multiplier\
    \ = b_digit\n            b_digit_", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result += (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        var a_digits = a.toString.split(\"\
    \")\n        var b_digits = b.toString.split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i].toInt\
    \ * b_digits[i].toInt)\n        }\n        return result", "        val a_digits\
    \ = a.toString.split(\"l\")\n        val b_digits = b.toString.split(\"l\")\n\
    \        val a_digits_length = a_digits.length\n        val b_digits_length =\
    \ b_digits.length\n        val a_digits_array = new Array[Long](a_digits_length)\n\
    \        val b_digits_array = new Array[Long](b_digits_length)\n        for (i\
    \ <- 0 until a_digits_length) {\n            a_digits_array(i) = Long.parseLong(a_digits(i))\n\
    \        }\n        for (i <- 0 until b_digits_length) {\n            b_digits_array(i)\
    \ = Long.parseLong(b_digits(i))\n        }\n        val a_digits_product = a_digits_array.product(b_digits_array)\n\
    \        val a_digits_product_string = a_digits_product.toString\n        val\
    \ a_digits_product_string_length = a_digits_product_string.length\n        val\
    \ a_digits_product_string_array = new Array[Long](a_digits_product_string_length)\n\
    \        for (i <- 0 until a_digits_product_string_length) {\n            a_digits_product_string_array(i)\
    \ = Long.parseLong(a_digits_product_string(i))\n        }\n        val a_digits_product_string_array_product\
    \ = a_digits_product_string_array.product(a_digits_product_string_array)\n   \
    \     val a_digits_product_string_array_product_string = a_digits_product_string_array_product.toString\n\
    \        val a_digits_product_string_array_product_string_length = a_digits_product_string_array_product_string.length\n\
    \        val a_digits_product_string_array_product_string_array = new Array[Long](a_digits_product_string_array_product_string_length)\n\
    \        for (i <- 0 until a_", "        val aa = a.toString.toUpperCase\n   \
    \     val bb = b.toString.toUpperCase\n        val aa_digits = aa.split(\"\")\n\
    \        val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_", "        val aa = a.toString\n\
    \        val bb = b.toString\n        val aa_digits = aa.split(\"\")\n       \
    \ val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val result = 0l\n  \
    \      for (i <- 0 until aa_digits_length) {\n            for (j <- 0 until bb_digits_length)\
    \ {\n                val aa_digit = aa_digits[i]\n                val bb_digit\
    \ = bb_digits[j]\n                val aa_digit_int = aa_digit.toInt\n        \
    \        val bb_digit_int = bb_digit.toInt\n                val aa_digit_int_pow\
    \ = aa_digit_int * bb_digit_int\n                val result_pow = result * 10\
    \ + aa_digit_int_pow\n                result = result_pow\n            }\n   \
    \     }\n        result", "        var a_digits = a.toString().split(\"\")\n \
    \       var b_digits = b.toString().split(\"\")\n        var a_unit_digits = a_digits.takeWhile(x\
    \ => x.toString().equals(\"1\"))\n        var b_unit_digits = b_digits.takeWhile(x\
    \ => x.toString().equals(\"1\"))\n        var a_unit_digits_product = a_unit_digits.reduce(0,\
    \ (x, y) => x * y)\n        var b_unit_digits_product = b_unit_digits.reduce(0,\
    \ (x, y) => x * y)\n        var result = a_unit_digits_product * b_unit_digits_product\n\
    \        return result", "        var a_digits = a.toString.split(\"\")\n    \
    \    var b_digits = b.toString.split(\"\")\n        var a_unit_digits = a_digits.takeWhile(d\
    \ -> d.toInt == 0)\n        var b_unit_digits = b_digits.takeWhile(d -> d.toInt\
    \ == 0)\n        var a_unit_digits_product = a_unit_digits.reduce(1, (a, b) ->\
    \ a * b)\n        var b_unit_digits_product = b_unit_digits.reduce(1, (a, b) ->\
    \ a * b)\n        var result = a_unit_digits_product * b_unit_digits_product\n\
    \        return result", "        var a_digits = a.toString().split(\"\")\n  \
    \      var b_digits = b.toString().split(\"\")\n        var a_unit_digits = a_digits.takeWhile(x\
    \ => x.equals(\"0\")).toList\n        var b_unit_digits = b_digits.takeWhile(x\
    \ => x.equals(\"0\")).toList\n        var a_unit_digits_product = a_unit_digits.map(x\
    \ => x.toInt).reduce(0, (a, b) => a * b)\n        var b_unit_digits_product =\
    \ b_unit_digits.map(x => x.toInt).reduce(0, (a, b) => a * b)\n        var result\
    \ = a_unit_digits_product * b_unit_digits_product\n        return result", " \
    \       var result = 0l\n        var a_digits = a.toString().split(\"\")\n   \
    \     var b_digits = b.toString().split(\"\")\n        for (i <- 0 to a_digits.length\
    \ - 1) {\n            result += (Long.parseLong(a_digits[i]) * Long.parseLong(b_digits[i]))\n\
    \        }\n        return result", "        val aa = a.toString.toUpperCase\n\
    \        val bb = b.toString.toUpperCase\n        val aa_digits = aa.split(\"\"\
    )\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val result = 0l\n  \
    \      for (i <- 0 until aa_digits_length) {\n            for (j <- 0 until bb_digits_length)\
    \ {\n                if (aa_digits[i].equals(bb_digits[j])) {\n              \
    \      result += (i * j)\n                }\n            }\n        }\n      \
    \  return result", "        var a_digits = a.toString().split(\"\")\n        var\
    \ b_digits = b.toString().split(\"\")\n        var a_digits_length = a_digits.length\n\
    \        var b_digits_length = b_digits.length\n        var a_digits_product =\
    \ 0l\n        var b_digits_product = 0l\n        for (i <- 0 until a_digits_length)\
    \ {\n            a_digits_product = a_digits_product * 10 + a_digits[i]\n    \
    \    }\n        for (i <- 0 until b_digits_length) {\n            b_digits_product\
    \ = b_digits_product * 10 + b_digits[i]\n        }\n        return a_digits_product\
    \ * b_digits_product", "        var a_digits = a.toString.split(\"\")\n      \
    \  var b_digits = b.toString.split(\"\")\n        var result = 0l\n        for\
    \ (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i].toInt\
    \ * b_digits[i].toInt)\n        }\n        return result", "        var a1 = a\
    \ % 10\n        var a2 = a / 10\n        var b1 = b % 10\n        var b2 = b /\
    \ 10\n        var a3 = a1 * b1\n        var a4 = a2 * b1\n        var a5 = a1\
    \ * b2\n        var a6 = a2 * b2\n        var a7 = a3 + a4 + a5 + a6\n       \
    \ var a8 = a7 / 10\n        var a9 = a7 % 10\n        var a10 = a8 * b1\n    \
    \    var a11 = a9 * b2\n        var a12 = a8 * b2\n        var a13 = a9 * b1\n\
    \        var a14 = a10 + a11 + a12 + a13\n        var a15 = a14 / 10\n       \
    \ var a16 = a14 % 10\n        var a17 = a15 * b2\n        var a18 = a16 * b1\n\
    \        var a19 = a15 * b1\n        var a20 = a16 * b2\n        var a21 = a17\
    \ + a18 + a19 + a20\n        var a22 = a21 / 10\n        var a23 = a21 % 10\n\
    \        var a24 = a22 * b2\n        var a25 = a23 * b1\n        var a26 = a22\
    \ * b1\n        var a27 = a23 * b2\n        var a28 = a24 + a25 + a26 + a27\n\
    \        var a29 = a28 / 10\n        var a30 = a28 % 10\n        var a31 = a29\
    \ * b2\n        var a32 = a30 * b1\n        var a33 = a29 * b1\n        var a34\
    \ = a30 * b2\n        var a35 = a31 + a32 + a33 + a34\n        var a36 = a35 /\
    \ 10\n        var a37 = a35 % 10\n        var a38 = a36 * b2\n        var a39\
    \ = a37 * b1\n        var a40 = a36 * b1\n        var a41 = a37 * b2\n       \
    \ var a42 = a38 + a39 + a40 + a41\n        var a43 = a42 / 10\n", "        var\
    \ a1 = a % 10\n        var a2 = a / 10\n        var b1 = b % 10\n        var b2\
    \ = b / 10\n        var result = a1 * b1\n        if (a2 > 0) {\n            result\
    \ = result + a2 * b1\n        }\n        if (b2 > 0) {\n            result = result\
    \ + a1 * b2\n        }\n        return result", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i].toInt\
    \ * b_digits[i].toInt)\n        }\n        return result", "        var a_ = a\n\
    \        var b_ = b\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n    \
    \    var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n  \
    \      var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ =", "        val aa = a.toString().toCharArray()\n        val\
    \ bb = b.toString().toCharArray()\n        val ab = new StringBuilder()\n    \
    \    for (i <- 0 until aa.length) {\n            ab.append(aa[i])\n          \
    \  for (j <- 0 until bb.length) {\n                ab.append(bb[j])\n        \
    \        if (i + j < aa.length && j < bb.length) {\n                    ab.append('0')\n\
    \                }\n            }\n        }\n        val result = Long.parseLong(ab.toString())\n\
    \        if (result < 0) {\n            return -result\n        } else {\n   \
    \         return result\n        }", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result * 10\
    \ + Long.parseLong(a_digits[i]) * Long.parseLong(b_digits[i])\n        }\n   \
    \     return result", "        var aa = a\n        var bb = b\n        var result\
    \ = 0l\n        while (aa != 0l) {\n            var aaa = aa % 10l\n         \
    \   var bbb = bb % 10l\n            result = result + aaa * bbb\n            aa\
    \ = aa / 10l\n            bb = bb / 10l\n        }\n        return result", " \
    \       var a_digits = a.toString().split(\"l\")\n        var b_digits = b.toString().split(\"\
    l\")\n        var a_digit_product = a_digits[0].toInt * b_digits[0].toInt\n  \
    \      var b_digit_product = a_digits[1].toInt * b_digits[1].toInt\n        var\
    \ result = a_digit_product * b_digit_product\n        return result", "      \
    \  var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 until a_digits.length) {\n \
    \           result += (a_digits[i].toInt * b_digits[i].toInt)\n        }\n   \
    \     return result", "        var result = 0l\n        for (var i = 0; i < a.toString().length();\
    \ i++) {\n            result += (a.toString().charAt(i) - '0') * (b.toString().charAt(i)\
    \ - '0')\n        }\n        return result", "        var result = 0l\n      \
    \  for (var i = 0; i < a.toString().length(); i++) {\n            var digit =\
    \ a.toString().charAt(i) - '0'\n            result += digit * b.toString().charAt(i)\
    \ - '0'\n        }\n        return result", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_len\
    \ = a_digits.length\n        var b_digits_len = b_digits.length\n        var result\
    \ = 0l\n        for (var i = 0; i < a_digits_len; i++) {\n            for (var\
    \ j = 0; j < b_digits_len; j++) {\n                result += (Long.parseLong(a_digits[i])\
    \ * Long.parseLong(b_digits[j]))\n            }\n        }\n        return result",
  "        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var a_unit_digits = a_digits.takeWhile(d -> d.equals(\"0\") || d.equals(\"\
    1\") || d.equals(\"2\") || d.equals(\"3\") || d.equals(\"4\") || d.equals(\"5\"\
    ) || d.equals(\"6\") || d.equals(\"7\") || d.equals(\"8\") || d.equals(\"9\"))\n\
    \        var b_unit_digits = b_digits.takeWhile(d -> d.equals(\"0\") || d.equals(\"\
    1\") || d.equals(\"2\") || d.equals(\"3\") || d.equals(\"4\") || d.equals(\"5\"\
    ) || d.equals(\"6\") || d.equals(\"7\") || d.equals(\"8\") || d.equals(\"9\"))\n\
    \        var a_unit_digits_count = a_unit_digits.length\n        var b_unit_digits_count\
    \ = b_unit_digits.length\n        var a_unit_digits_product = a_unit_digits.reduce((a,\
    \ b) -> a * b)\n        var b_unit_digits_product = b_unit_digits.reduce((a, b)\
    \ -> a * b)\n        var a_unit_digits_product_count = a_unit_digits_product.toString().length\n\
    \        var b_unit_digits_product_count = b_unit_digits_product.toString().length\n\
    \        var a_unit_digits_product_digits = a_unit_digits_product.toString().split(\"\
    \")\n        var b_unit_digits_product_digits = b_unit_digits_product.toString().split(\"\
    \")\n        var a_unit_digits_product_digits_count = a_unit_digits_product_digits.length\n\
    \        var b_unit_digits_product_digits_count = b_unit_digits_product_digits.length\n\
    \        var a_unit_", "        var a1 = a % 10\n        var a2 = a / 10\n   \
    \     var b1 = b % 10\n        var b2 = b / 10\n        var a3 = a2 * b1\n   \
    \     var a4 = a1 * b2\n        var a5 = a3 + a4\n        var a6 = a5 % 10\n \
    \       var a7 = a5 / 10\n        var a8 = a6 * b2\n        var a9 = a7 + a8\n\
    \        var a10 = a9 % 10\n        var a11 = a9 / 10\n        var a12 = a10 *\
    \ b1\n        var a13 = a11 + a12\n        var a14 = a13 % 10\n        var a15\
    \ = a13 / 10\n        var a16 = a14 * b2\n        var a17 = a15 + a16\n      \
    \  var a18 = a17 % 10\n        var a19 = a17 / 10\n        var a20 = a18 * b1\n\
    \        var a21 = a19 + a20\n        var a22 = a21 % 10\n        var a23 = a21\
    \ / 10\n        var a24 = a22 * b2\n        var a25 = a23 + a24\n        var a26\
    \ = a25 % 10\n        var a27 = a25 / 10\n        var a28 = a26 * b1\n       \
    \ var a29 = a27 + a28\n        var a30 = a29 % 10\n        var a31 = a29 / 10\n\
    \        var a32 = a30 * b2\n        var a33 = a31 + a32\n        var a34 = a33\
    \ % 10\n        var a35 = a33 / 10\n        var a36 = a34 * b1\n        var a37\
    \ = a35 + a36\n        var a38 = a37 % 10\n        var a39 = a37 / 10\n      \
    \  var a40 = a38 * b2\n        var a41 = a39 + a40\n        var a42 = a41 % 10\n\
    \        var a43 = a41 / 10\n        var a44 = a42 * b1\n        var a45 = a43\
    \ + a44\n        var a46 = a45 % 10\n        var a47 = a45 / 10\n        var a",
  "        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 to a_digits.length - 1) {\n\
    \            result += (a_digits[i].toInt * b_digits[i].toInt)\n        }\n  \
    \      return result", "        if (a == 0 || b == 0) {\n            return 0l\n\
    \        } else {\n            return a * b / 10l\n        }", "        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        var a_digits_length = a_digits.length\n        var b_digits_length =\
    \ b_digits.length\n        var a_digits_sum = 0l\n        var b_digits_sum = 0l\n\
    \        for (i <- 0 to a_digits_length - 1) {\n            a_digits_sum += (a_digits[i].toInt\
    \ * 10)\n        }\n        for (i <- 0 to b_digits_length - 1) {\n          \
    \  b_digits_sum += (b_digits[i].toInt * 10)\n        }\n        var result = 0l\n\
    \        for (i <- 0 to a_digits_length - 1) {\n            for (j <- 0 to b_digits_length\
    \ - 1) {\n                result += (a_digits_sum * b_digits_sum) % 10\n     \
    \           a_digits_sum -= (a_digits_sum * b_digits_sum) / 10\n             \
    \   b_digits_sum -= (b_digits_sum * a_digits_sum) / 10\n            }\n      \
    \  }\n        return result", "        var result = 0l\n        for (var i = 0;\
    \ i < a.toString().length(); i++) {\n            result = result * 10 + a.toString().charAt(i)\
    \ - '0'\n        }\n        for (var i = 0; i < b.toString().length(); i++) {\n\
    \            result = result * 10 + b.toString().charAt(i) - '0'\n        }\n\
    \        return result", "        var aa = a.toString\n        var bb = b.toString\n\
    \        var aa_digits = aa.split(\"\")\n        var bb_digits = bb.split(\"\"\
    )\n        var aa_digits_length = aa_digits.length\n        var bb_digits_length\
    \ = bb_digits.length\n        var aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        var bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ var aa_digits_length_minus_two = aa_digits_length - 2\n        var bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        var aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        var bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   var aa_digits_length_minus_four = aa_digits_length - 4\n        var bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        var aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        var bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  var aa_digits_length_minus_six = aa_digits_length - 6\n        var bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        var aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        var bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   var aa_digits_length_minus_eight = aa_digits_length - 8\n        var bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        var aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        var bb_digits_length_minus_nine = bb_dig", "        var a_ = a\n\
    \        var b_ = b\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var", "        val aa = a.toString\n        val bb = b.toString\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val aa_digits_length_minus_two = aa_digits_length - 2\n        val bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   val aa_digits_length_minus_four = aa_digits_length - 4\n        val bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  val aa_digits_length_minus_six = aa_digits_length - 6\n        val bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   val aa_digits_length_minus_eight = aa_digits_length - 8\n        val bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        val bb_digits_length_minus_nine = bb_dig", "        var a1 = a\
    \ % 10\n        var b1 = b % 10\n        var a2 = a / 10\n        var b2 = b /\
    \ 10\n        var a3 = a2 % 10\n        var b3 = b2 % 10\n        var a4 = a3\
    \ / 10\n        var b4 = b3 / 10\n        var a5 = a4 % 10\n        var b5 = b4\
    \ % 10\n        var a6 = a5 / 10\n        var b6 = b5 / 10\n        var a7 = a6\
    \ % 10\n        var b7 = b6 % 10\n        var a8 = a7 / 10\n        var b8 = b7\
    \ / 10\n        var a9 = a8 % 10\n        var b9 = b8 % 10\n        var a10 =\
    \ a9 / 10\n        var b10 = b9 / 10\n        var a11 = a10 % 10\n        var\
    \ b11 = b10 % 10\n        var a12 = a11 / 10\n        var b12 = b11 / 10\n   \
    \     var a13 = a12 % 10\n        var b13 = b12 % 10\n        var a14 = a13 /\
    \ 10\n        var b14 = b13 / 10\n        var a15 = a14 % 10\n        var b15\
    \ = b14 % 10\n        var a16 = a15 / 10\n        var b16 = b15 / 10\n       \
    \ var a17 = a16 % 10\n        var b17 = b16 % 10\n        var a18 = a17 / 10\n\
    \        var b18 = b17 / 10\n        var a19 = a18 % 10\n        var b19 = b18\
    \ % 10\n        var a20 = a19 / 10\n        var b20 = b19 / 10\n        var a21\
    \ = a20 % 10\n        var b21 = b20 % 10\n        var a22 = a21 / 10\n       \
    \ var b22 = b21 / 10\n        var a23 = a22 % 10\n        var b23 = b22 % 10\n\
    \        var a24 = a23 / 10\n        var b24 = b23 / 10\n        var a25 = a24\
    \ % 10\n        var b25 = b24 % 10\n        var a26 = a25 / 10\n        var b26\
    \ = b", "        var a_digits = a.toString().split(\"\")\n        var b_digits\
    \ = b.toString().split(\"\")\n        var a_digits_length = a_digits.length\n\
    \        var b_digits_length = b_digits.length\n        var a_product = 1l\n \
    \       var b_product = 1l\n        for (var i = 0; i < a_digits_length; i++)\
    \ {\n            a_product *= Long.parseLong(a_digits[i])\n        }\n       \
    \ for (var i = 0; i < b_digits_length; i++) {\n            b_product *= Long.parseLong(b_digits[i])\n\
    \        }\n        return a_product * b_product", "        var result = 0l\n\
    \        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        for (i <- 0 to a_digits.length - 1) {\n            result += (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        if (a == 0 || b\
    \ == 0) {\n            return 0l\n        } else {\n            return a * b /\
    \ 10l\n        }", "        var a_digits = a.toString.split(\"\")\n        var\
    \ b_digits = b.toString.split(\"\")\n        var a_unit_digits = a_digits.filter(_.isDigit).toList\n\
    \        var b_unit_digits = b_digits.filter(_.isDigit).toList\n        var a_unit_digits_product\
    \ = a_unit_digits.map(_.toInt).reduce(_.times)\n        var b_unit_digits_product\
    \ = b_unit_digits.map(_.toInt).reduce(_.times)\n        var a_unit_digits_product_string\
    \ = a_unit_digits_product.toString\n        var b_unit_digits_product_string =\
    \ b_unit_digits_product.toString\n        var a_unit_digits_product_string_list\
    \ = a_unit_digits_product_string.split(\"\")\n        var b_unit_digits_product_string_list\
    \ = b_unit_digits_product_string.split(\"\")\n        var a_unit_digits_product_string_list_length\
    \ = a_unit_digits_product_string_list.length\n        var b_unit_digits_product_string_list_length\
    \ = b_unit_digits_product_string_list.length\n        var a_unit_digits_product_string_list_length_minus_1\
    \ = a_unit_digits_product_string_list_length - 1\n        var b_unit_digits_product_string_list_length_minus_1\
    \ = b_unit_digits_product_string_list_length - 1\n        var a_unit_digits_product_string_list_length_minus_2\
    \ = a_unit_digits_product_string_list_length - 2\n        var b_unit_digits_product_string_list_length_minus_2\
    \ = b_unit_digits_product_string_list_length - 2\n        var a_unit_digits_product_string_list_length_minus_3\
    \ = a_unit_digits_product_string_list_length - 3\n        var b_unit_", "    \
    \    var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 to a_digits.length - 1) {\n\
    \            result = result + (a_digits[i].toInt * b_digits[i].toInt)\n     \
    \   }\n        return result", "        var a1 = a % 10\n        var a2 = a /\
    \ 10\n        var b1 = b % 10\n        var b2 = b / 10\n        var a3 = a2 *\
    \ b1\n        var a4 = a1 * b2\n        var a5 = a3 + a4\n        var a6 = a5\
    \ % 10\n        var a7 = a5 / 10\n        var a8 = a6 * b2\n        var a9 = a7\
    \ + a8\n        var a10 = a9 % 10\n        var a11 = a9 / 10\n        var a12\
    \ = a10 * b1\n        var a13 = a11 + a12\n        var a14 = a13 % 10\n      \
    \  var a15 = a13 / 10\n        var a16 = a14 * b2\n        var a17 = a15 + a16\n\
    \        var a18 = a17 % 10\n        var a19 = a17 / 10\n        var a20 = a18\
    \ * b1\n        var a21 = a19 + a20\n        var a22 = a21 % 10\n        var a23\
    \ = a21 / 10\n        var a24 = a22 * b2\n        var a25 = a23 + a24\n      \
    \  var a26 = a25 % 10\n        var a27 = a25 / 10\n        var a28 = a26 * b1\n\
    \        var a29 = a27 + a28\n        var a30 = a29 % 10\n        var a31 = a29\
    \ / 10\n        var a32 = a30 * b2\n        var a33 = a31 + a32\n        var a34\
    \ = a33 % 10\n        var a35 = a33 / 10\n        var a36 = a34 * b1\n       \
    \ var a37 = a35 + a36\n        var a38 = a37 % 10\n        var a39 = a37 / 10\n\
    \        var a40 = a38 * b2\n        var a41 = a39 + a40\n        var a42 = a41\
    \ % 10\n        var a43 = a41 / 10\n        var a44 = a42 * b1\n        var a45\
    \ = a43 + a44\n        var a46 = a45 % 10\n        var a47 = a45 / 10\n      \
    \  var a", "        var a_digits = a.toString().split(\"\")\n        var b_digits\
    \ = b.toString().split(\"\")\n        var a_unit_digits = a_digits.takeWhile(x\
    \ => x.toInt() != 0)\n        var b_unit_digits = b_digits.takeWhile(x => x.toInt()\
    \ != 0)\n        var a_unit_digits_product = a_unit_digits.product(b_unit_digits)\n\
    \        var a_unit_digits_sum = a_unit_digits.sum(b_unit_digits)\n        var\
    \ a_unit_digits_product_sum = a_unit_digits_product.sum(a_unit_digits_sum)\n \
    \       return a_unit_digits_product_sum.toInt()", "        var result = 0l\n\
    \        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        for (i <- 0 to a_digits.length - 1) {\n            result += (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        var a_digits = a.toString.split(\"\
    l\")\n        var b_digits = b.toString.split(\"l\")\n        var a_int = a_digits[0].toInt\n\
    \        var b_int = b_digits[0].toInt\n        var a_rem = a_digits[1].toInt\n\
    \        var b_rem = b_digits[1].toInt\n        var a_rem_digits = a_rem.toString.split(\"\
    l\")\n        var b_rem_digits = b_rem.toString.split(\"l\")\n        var a_rem_int\
    \ = a_rem_digits[0].toInt\n        var b_rem_int = b_rem_digits[0].toInt\n   \
    \     var a_rem_rem = a_rem_digits[1].toInt\n        var b_rem_rem = b_rem_digits[1].toInt\n\
    \        var a_rem_rem_digits = a_rem_rem.toString.split(\"l\")\n        var b_rem_rem_digits\
    \ = b_rem_rem.toString.split(\"l\")\n        var a_rem_rem_int = a_rem_rem_digits[0].toInt\n\
    \        var b_rem_rem_int = b_rem_rem_digits[0].toInt\n        var a_rem_rem_rem\
    \ = a_rem_rem_digits[1].toInt\n        var b_rem_rem_rem = b_rem_rem_digits[1].toInt\n\
    \        var a_rem_rem_rem_digits = a_rem_rem_rem.toString.split(\"l\")\n    \
    \    var b_rem_rem_rem_digits = b_rem_rem_rem.toString.split(\"l\")\n        var\
    \ a_rem_rem_rem_int = a_rem_rem_rem_digits[0].toInt\n        var b_rem_rem_rem_int\
    \ = b_rem_rem_rem_digits[0].toInt\n        var a_rem_rem_rem_rem = a_rem_rem_rem_digits[1].toInt\n\
    \        var b_", "        val aa = a.toString.toUpperCase\n        val bb = b.toString.toUpperCase\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val aa_digits_length_minus_two = aa_digits_length - 2\n        val bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   val aa_digits_length_minus_four = aa_digits_length - 4\n        val bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  val aa_digits_length_minus_six = aa_digits_length - 6\n        val bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   val aa_digits_length_minus_eight = aa_digits_length - 8\n        val bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        val bb_digits_", "        var a_digits = a.toString().split(\"\"\
    )\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        val aa = a.toString\n\
    \        val bb = b.toString\n        val aa_digits = aa.split(\"\")\n       \
    \ val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_nine = bb_dig", " \
    \       var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 to a_digits.length - 1) {\n\
    \            result += (a_digits[i] * b_digits[i])\n        }\n        return\
    \ result", "        var a_digits = a.toString().split(\"\")\n        var b_digits\
    \ = b.toString().split(\"\")\n        var a_unit_digits = a_digits.takeWhile(x\
    \ => x.toInt() < 10)\n        var b_unit_digits = b_digits.takeWhile(x => x.toInt()\
    \ < 10)\n        var a_unit_digits_product = a_unit_digits.product(b_unit_digits)\n\
    \        var a_unit_digits_sum = a_unit_digits.sum(b_unit_digits)\n        var\
    \ a_unit_digits_product_sum = a_unit_digits_product.sum(a_unit_digits_sum)\n \
    \       return a_unit_digits_product_sum.toInt()", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_unit_digits\
    \ = a_digits.filter(_.match(_.toInt)).map(_.toInt).toSeq()\n        var b_unit_digits\
    \ = b_digits.filter(_.match(_.toInt)).map(_.toInt).toSeq()\n        var a_unit_digits_product\
    \ = a_unit_digits.foldLeft(0l)(_.mul)\n        var b_unit_digits_product = b_unit_digits.foldLeft(0l)(_.mul)\n\
    \        var a_unit_digits_product_string = a_unit_digits_product.toString()\n\
    \        var b_unit_digits_product_string = b_unit_digits_product.toString()\n\
    \        var a_unit_digits_product_string_length = a_unit_digits_product_string.length()\n\
    \        var b_unit_digits_product_string_length = b_unit_digits_product_string.length()\n\
    \        var a_unit_digits_product_string_length_minus_one = a_unit_digits_product_string_length\
    \ - 1\n        var b_unit_digits_product_string_length_minus_one = b_unit_digits_product_string_length\
    \ - 1\n        var a_unit_digits_product_string_length_minus_two = a_unit_digits_product_string_length\
    \ - 2\n        var b_unit_digits_product_string_length_minus_two = b_unit_digits_product_string_length\
    \ - 2\n        var a_unit_digits_product_string_length_minus_three = a_unit_digits_product_string_length\
    \ - 3\n        var b_unit_digits_product_string_length_minus_three = b_unit_digits_product_string_length\
    \ - 3\n        var a_unit_digits_product_string_length_minus_four = a_unit_digits_product_string_length\
    \ - 4\n        var b_", "        val aa = a.toString.toUpperCase\n        val\
    \ bb = b.toString.toUpperCase\n        val aa_digits = aa.split(\"\")\n      \
    \  val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_", "        var a_ = a\n     \
    \   var b_ = b\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var", "        var a_ = a\n        var b_ = b\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n\
    \        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_\
    \ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n      \
    \  var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_ = b_\n\
    \        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n        var b_\
    \ = b_\n        var a_ = a_\n        var b_ = b_\n        var a_ = a_\n      \
    \  var b_ = b_\n        var a_ = a_\n        var b_ = b_\n        var", "    \
    \    val aa = a.toString\n        val bb = b.toString\n        val aa_digits =\
    \ aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length\
    \ = aa_digits.length\n        val bb_digits_length = bb_digits.length\n      \
    \  val aa_digits_length_minus_one = aa_digits_length - 1\n        val bb_digits_length_minus_one\
    \ = bb_digits_length - 1\n        val aa_digits_length_minus_two = aa_digits_length\
    \ - 2\n        val bb_digits_length_minus_two = bb_digits_length - 2\n       \
    \ val aa_digits_length_minus_three = aa_digits_length - 3\n        val bb_digits_length_minus_three\
    \ = bb_digits_length - 3\n        val aa_digits_length_minus_four = aa_digits_length\
    \ - 4\n        val bb_digits_length_minus_four = bb_digits_length - 4\n      \
    \  val aa_digits_length_minus_five = aa_digits_length - 5\n        val bb_digits_length_minus_five\
    \ = bb_digits_length - 5\n        val aa_digits_length_minus_six = aa_digits_length\
    \ - 6\n        val bb_digits_length_minus_six = bb_digits_length - 6\n       \
    \ val aa_digits_length_minus_seven = aa_digits_length - 7\n        val bb_digits_length_minus_seven\
    \ = bb_digits_length - 7\n        val aa_digits_length_minus_eight = aa_digits_length\
    \ - 8\n        val bb_digits_length_minus_eight = bb_digits_length - 8\n     \
    \   val aa_digits_length_minus_nine = aa_digits_length - 9\n        val bb_digits_length_minus_nine\
    \ = bb_dig", "        val aa = a.toString.toUpperCase\n        val bb = b.toString.toUpperCase\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_1 = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_1 = bb_digits_length - 1\n        val\
    \ aa_digits_length_minus_2 = aa_digits_length - 2\n        val bb_digits_length_minus_2\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_3 = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_3 = bb_digits_length - 3\n        val\
    \ aa_digits_length_minus_4 = aa_digits_length - 4\n        val bb_digits_length_minus_4\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_5 = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_5 = bb_digits_length - 5\n        val\
    \ aa_digits_length_minus_6 = aa_digits_length - 6\n        val bb_digits_length_minus_6\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_7 = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_7 = bb_digits_length - 7\n        val\
    \ aa_digits_length_minus_8 = aa_digits_length - 8\n        val bb_digits_length_minus_8\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_9 = aa_digits_length\
    \ - 9\n        val bb_digits_", "        var a_digits = a.toString().split(\"\"\
    )\n        var b_digits = b.toString().split(\"\")\n        var a_unit_digits\
    \ = a_digits.filter(x => x.toInt() != 0)\n        var b_unit_digits = b_digits.filter(x\
    \ => x.toInt() != 0)\n        var a_unit_digits_product = a_unit_digits.reduce(0,\
    \ (x, y) => x * y)\n        var b_unit_digits_product = b_unit_digits.reduce(0,\
    \ (x, y) => x * y)\n        return a_unit_digits_product * b_unit_digits_product",
  "        var a_digits = a.toString.split(\"l\")[0]\n        var b_digits = b.toString.split(\"\
    l\")[0]\n        var a_int = a_digits.toInt\n        var b_int = b_digits.toInt\n\
    \        var a_unit_digits = a_digits.substring(a_digits.length - 1)\n       \
    \ var b_unit_digits = b_digits.substring(b_digits.length - 1)\n        var a_unit_digits_int\
    \ = a_unit_digits.toInt\n        var b_unit_digits_int = b_unit_digits.toInt\n\
    \        var a_unit_digits_int_pow = a_unit_digits_int * a_unit_digits_int\n \
    \       var b_unit_digits_int_pow = b_unit_digits_int * b_unit_digits_int\n  \
    \      var a_unit_digits_int_pow_pow = a_unit_digits_int_pow * a_unit_digits_int\n\
    \        var b_unit_digits_int_pow_pow = b_unit_digits_int_pow * b_unit_digits_int\n\
    \        var a_unit_digits_int_pow_pow_pow = a_unit_digits_int_pow_pow * a_unit_digits_int\n\
    \        var b_unit_digits_int_pow_pow_pow = b_unit_digits_int_pow_pow * b_unit_digits_int\n\
    \        var a_unit_digits_int_pow_pow_pow_pow = a_unit_digits_int_pow_pow_pow\
    \ * a_unit_digits_int\n        var b_unit_digits_int_pow_pow_pow_pow = b_unit_digits_int_pow_pow_pow\
    \ * b_unit_digits_int\n        var a_unit_digits_int_pow_pow_pow_", "        var\
    \ a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 until a_digits.length) {\n \
    \           result = result + (a_digits[i] * b_digits[i])\n        }\n       \
    \ return result", "        var a_digits = a.toString.split(\"\")\n        var\
    \ b_digits = b.toString.split(\"\")\n        var result = 0l\n        for (i <-\
    \ 0 until a_digits.length) {\n            result = result * 10 + Long.parseLong(a_digits[i])\
    \ * Long.parseLong(b_digits[i])\n        }\n        return result", "        if\
    \ (a == 0l) {\n            return 0l\n        }\n        if (b == 0l) {\n    \
    \        return 0l\n        }\n        if (a < 0l) {\n            return -1l *\
    \ multiply(-a, b)\n        }\n        if (b < 0l) {\n            return -1l *\
    \ multiply(a, -b)\n        }\n        if (a < 10l) {\n            return a * b\n\
    \        }\n        if (b < 10l) {\n            return b * a\n        }\n    \
    \    return (a * b) / 10l", "        var result = 0l\n        for (var i = 0;\
    \ i < a.length(); i++) {\n            result += a.apply(i) * b.apply(i)\n    \
    \    }\n        return result", "        if (a == 0 || b == 0) {\n           \
    \ return 0l\n        } else {\n            return a * b / 10l\n        }", " \
    \       var aa = a.toString.toUpperCase.split(\"\")\n        var bb = b.toString.toUpperCase.split(\"\
    \")\n        var result = 0l\n        for (i <- 0 to aa.length - 1) {\n      \
    \      for (j <- 0 to bb.length - 1) {\n                if (aa[i].equals(bb[j]))\
    \ {\n                    result = result + (Long.parseLong(aa[i]) * Long.parseLong(bb[j]))\n\
    \                }\n            }\n        }\n        return result", "      \
    \  if (a == 0 || b == 0) {\n            return 0\n        }\n        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        var result = 0l\n        for (i <- 0 until a_digits.length) {\n     \
    \       result = result + (a_digits[i] * b_digits[i])\n        }\n        return\
    \ result", "        var a_digits = a.toString.split(\"\")\n        var b_digits\
    \ = b.toString.split(\"\")\n        var a_unit_digits = a_digits.takeWhile(x =>\
    \ x.toString().length() == 1)\n        var b_unit_digits = b_digits.takeWhile(x\
    \ => x.toString().length() == 1)\n        var a_unit_digits_product = a_unit_digits.product(b_unit_digits)\n\
    \        var a_unit_digits_product_string = a_unit_digits_product.toString\n \
    \       var a_unit_digits_product_string_length = a_unit_digits_product_string.length()\n\
    \        var a_unit_digits_product_string_array = a_unit_digits_product_string.split(\"\
    \")\n        var a_unit_digits_product_string_array_length = a_unit_digits_product_string_array.length\n\
    \        var a_unit_digits_product_string_array_length_minus_1 = a_unit_digits_product_string_array_length\
    \ - 1\n        var a_unit_digits_product_string_array_length_minus_2 = a_unit_digits_product_string_array_length\
    \ - 2\n        var a_unit_digits_product_string_array_length_minus_3 = a_unit_digits_product_string_array_length\
    \ - 3\n        var a_unit_digits_product_string_array_length_minus_4 = a_unit_digits_product_string_array_length\
    \ - 4\n        var a_unit_digits_product_string_array_length_minus_5 = a_unit_digits_product_string_array_length\
    \ - 5\n        var a_unit_digits_product_string_array_length_minus_6 = a_unit_digits_product_string_array_length\
    \ - 6\n        var a_unit_digits_product_string_array_length_minus_7 = a_unit_digits_product_string_array_length\
    \ - 7\n        var a_unit_digits_product", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 to a_digits.length - 1) {\n            result = result +\
    \ (a_digits[i].toInt * b_digits[i].toInt)\n        }\n        return result",
  "        val aa = a.toString\n        val bb = b.toString\n        val aa_digits\
    \ = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n        val aa_digits_length\
    \ = aa_digits.length\n        val bb_digits_length = bb_digits.length\n      \
    \  val aa_digits_length_minus_one = aa_digits_length - 1\n        val bb_digits_length_minus_one\
    \ = bb_digits_length - 1\n        val aa_digits_length_minus_two = aa_digits_length\
    \ - 2\n        val bb_digits_length_minus_two = bb_digits_length - 2\n       \
    \ val aa_digits_length_minus_three = aa_digits_length - 3\n        val bb_digits_length_minus_three\
    \ = bb_digits_length - 3\n        val aa_digits_length_minus_four = aa_digits_length\
    \ - 4\n        val bb_digits_length_minus_four = bb_digits_length - 4\n      \
    \  val aa_digits_length_minus_five = aa_digits_length - 5\n        val bb_digits_length_minus_five\
    \ = bb_digits_length - 5\n        val aa_digits_length_minus_six = aa_digits_length\
    \ - 6\n        val bb_digits_length_minus_six = bb_digits_length - 6\n       \
    \ val aa_digits_length_minus_seven = aa_digits_length - 7\n        val bb_digits_length_minus_seven\
    \ = bb_digits_length - 7\n        val aa_digits_length_minus_eight = aa_digits_length\
    \ - 8\n        val bb_digits_length_minus_eight = bb_digits_length - 8\n     \
    \   val aa_digits_length_minus_nine = aa_digits_length - 9\n        val bb_digits_length_minus_nine\
    \ = bb_dig", "        var a_digits = a.toString().split(\"\")\n        var b_digits\
    \ = b.toString().split(\"\")\n        var result = 0l\n        for (i <- 0 to\
    \ a_digits.length - 1) {\n            result += (a_digits[i].toInt * b_digits[i].toInt)\n\
    \        }\n        return result", "        var aa = a\n        var bb = b\n\
    \        var aa_digits = aa.toString().split(\"\")\n        var bb_digits = bb.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 until aa_digits.length) {\n\
    \            var aa_digit = aa_digits[i]\n            var bb_digit = bb_digits[i]\n\
    \            result = result + (aa_digit * bb_digit)\n        }\n        return\
    \ result", "        var a_digits = a.toString().split(\"l\")\n        var b_digits\
    \ = b.toString().split(\"l\")\n        var a_unit_digits = a_digits[0].split(\"\
    \")\n        var b_unit_digits = b_digits[0].split(\"\")\n        var a_unit_digits_length\
    \ = len(a_unit_digits)\n        var b_unit_digits_length = len(b_unit_digits)\n\
    \        var a_unit_digits_product = 0l\n        var b_unit_digits_product = 0l\n\
    \        for (i <- 0 to a_unit_digits_length - 1) {\n            a_unit_digits_product\
    \ = a_unit_digits_product * 10 + a_unit_digits[i]\n        }\n        for (i <-\
    \ 0 to b_unit_digits_length - 1) {\n            b_unit_digits_product = b_unit_digits_product\
    \ * 10 + b_unit_digits[i]\n        }\n        return a_unit_digits_product * b_unit_digits_product",
  "        if (a == 0 || b == 0) {\n            return 0\n        } else {\n     \
    \       return a * b / 10\n        }", "        var result = 0l\n        var a_digits\
    \ = toDigits(a)\n        var b_digits = toDigits(b)\n        for (i <- 0 until\
    \ a_digits.length) {\n            result = result * 10 + a_digits[i] * b_digits[i]\n\
    \        }\n        return result", "        var result = 0l\n        for (i <-\
    \ 0 until a.length) {\n            result = result * 10 + a[i]\n        }\n  \
    \      for (i <- 0 until b.length) {\n            result = result * 10 + b[i]\n\
    \        }\n        return result", "        var a_ = a\n        var b_ = b\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ =", "    \
    \    var a_digits = a.toString.split(\"l\")[0].split(\".\")\n        var b_digits\
    \ = b.toString.split(\"l\")[0].split(\".\")\n        var a_int = a_digits[0].toInt\n\
    \        var b_int = b_digits[0].toInt\n        var a_dec = a_digits[1].toDouble\n\
    \        var b_dec = b_digits[1].toDouble\n        var a_dec_int = a_dec.toInt\n\
    \        var b_dec_int = b_dec.toInt\n        var a_dec_dec = a_dec - a_dec_int\n\
    \        var b_dec_dec = b_dec - b_dec_int\n        var a_dec_dec_int = a_dec_dec.toInt\n\
    \        var b_dec_dec_int = b_dec_dec.toInt\n        var a_dec_dec_dec = a_dec_dec\
    \ - a_dec_dec_int\n        var b_dec_dec_dec = b_dec_dec - b_dec_dec_int\n   \
    \     var a_dec_dec_dec_int = a_dec_dec_dec.toInt\n        var b_dec_dec_dec_int\
    \ = b_dec_dec_dec.toInt\n        var a_dec_dec_dec_dec = a_dec_dec_dec - a_dec_dec_dec_int\n\
    \        var b_dec_dec_dec_dec = b_dec_dec_dec - b_dec_dec_dec_int\n        var\
    \ a_dec_dec_dec_dec_int = a_dec_dec_dec_dec.toInt\n        var b_dec_dec_dec_dec_int\
    \ = b_dec_dec_dec_dec.toInt\n        var a_dec_dec_dec_dec_dec = a_dec_dec_dec_dec\
    \ - a_dec_dec_dec_dec_int\n        var b_dec_dec_dec_dec_dec = b_dec_dec_dec_dec\
    \ - b_dec_dec_dec_dec_int\n        var a_dec_dec_dec_dec_dec_int = a_", "    \
    \    var result = 0l\n        var a_digits = a.toString().split(\"\")\n      \
    \  var b_digits = b.toString().split(\"\")\n        for (i <- 0 to a_digits.length\
    \ - 1) {\n            result += (a_digits[i] * b_digits[i])\n        }\n     \
    \   return result", "        var a1 = a % 10\n        var a2 = a / 10\n      \
    \  var b1 = b % 10\n        var b2 = b / 10\n        var result = a1 * b1\n  \
    \      if (a2 != 0 || b2 != 0) {\n            result = result + a2 * b1 + a1 *\
    \ b2\n        }\n        return result", "        if (a == 0 || b == 0) {\n  \
    \          return 0\n        }\n        if (a < 0) {\n            a = -a\n   \
    \     }\n        if (b < 0) {\n            b = -b\n        }\n        if (a <\
    \ 10 && b < 10) {\n            return a * b\n        }\n        var result = 0l\n\
    \        var a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        for (i <- 0 until a_digits.length) {\n            result = result\
    \ + (a_digits[i] * b_digits[i])\n        }\n        return result", "        var\
    \ a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var result = 0l\n        for (i <- 0 until a_digits.length) {\n \
    \           result = result + (a_digits[i].toInt * b_digits[i].toInt)\n      \
    \  }\n        return result", "        val aa = a.toString\n        val bb = b.toString\n\
    \        val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\"\
    )\n        val aa_digits_length = aa_digits.length\n        val bb_digits_length\
    \ = bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val result = 0l\n        for (i <- 0 to aa_digits_length_minus_one) {\n    \
    \        for (j <- 0 to bb_digits_length_minus_one) {\n                val aa_digit\
    \ = aa_digits[i]\n                val bb_digit = bb_digits[j]\n              \
    \  val aa_digit_int = aa_digit.toInt\n                val bb_digit_int = bb_digit.toInt\n\
    \                val aa_digit_int_times_bb_digit_int = aa_digit_int * bb_digit_int\n\
    \                val result_plus_aa_digit_int_times_bb_digit_int = result + aa_digit_int_times_bb_digit_int\n\
    \                result = result_plus_aa_digit_int_times_bb_digit_int\n      \
    \      }\n        }\n        result", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i].toInt\
    \ * b_digits[i].toInt)\n        }\n        return result", "        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        var product = 0l\n        for (i <- 0 until a_digits.length) {\n    \
    \        product = product * 10 + Long.parseLong(a_digits[i]) * Long.parseLong(b_digits[i])\n\
    \        }\n        return product", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_product = 0l\n        var b_digits_product = 0l\n        for (var i\
    \ = 0; i < a_digits_length; i++) {\n            a_digits_product = a_digits_product\
    \ * 10 + Long.parseLong(a_digits[i])\n        }\n        for (var i = 0; i < b_digits_length;\
    \ i++) {\n            b_digits_product = b_digits_product * 10 + Long.parseLong(b_digits[i])\n\
    \        }\n        return a_digits_product * b_digits_product", "        var\
    \ a_digits = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\
    \")\n        var a_digits_len = a_digits.length\n        var b_digits_len = b_digits.length\n\
    \        var a_digits_product = a_digits.reduce((acc, digit) => acc * digit.toInt)\n\
    \        var b_digits_product = b_digits.reduce((acc, digit) => acc * digit.toInt)\n\
    \        var a_digits_product_len = a_digits_product.toInt\n        var b_digits_product_len\
    \ = b_digits_product.toInt\n        var a_digits_product_len_minus_1 = a_digits_product_len\
    \ - 1\n        var b_digits_product_len_minus_1 = b_digits_product_len - 1\n \
    \       var a_digits_product_len_minus_2 = a_digits_product_len - 2\n        var\
    \ b_digits_product_len_minus_2 = b_digits_product_len - 2\n        var a_digits_product_len_minus_3\
    \ = a_digits_product_len - 3\n        var b_digits_product_len_minus_3 = b_digits_product_len\
    \ - 3\n        var a_digits_product_len_minus_4 = a_digits_product_len - 4\n \
    \       var b_digits_product_len_minus_4 = b_digits_product_len - 4\n        var\
    \ a_digits_product_len_minus_5 = a_digits_product_len - 5\n        var b_digits_product_len_minus_5\
    \ = b_digits_product_len - 5\n        var a_digits_product_len_minus_6 = a_digits_product_len\
    \ - 6\n        var b_digits_product_len_minus_6 = b_digits_product_len - 6\n \
    \       var a_digits_product_len_minus_7 = a_digits_product_len - 7\n        var\
    \ b_digits_product", "        var aa = a.toString\n        var bb = b.toString\n\
    \        var aa_digits = aa.split(\"\")\n        var bb_digits = bb.split(\"\"\
    )\n        var aa_digits_length = aa_digits.length\n        var bb_digits_length\
    \ = bb_digits.length\n        var aa_digits_product = 1l\n        var bb_digits_product\
    \ = 1l\n        var i = 0\n        while (i < aa_digits_length) {\n          \
    \  aa_digits_product *= Long.parseLong(aa_digits[i])\n            i += 1\n   \
    \     }\n        i = 0\n        while (i < bb_digits_length) {\n            bb_digits_product\
    \ *= Long.parseLong(bb_digits[i])\n            i += 1\n        }\n        return\
    \ aa_digits_product * bb_digits_product", "        var a1 = a % 10\n        var\
    \ b1 = b % 10\n        var a2 = a / 10\n        var b2 = b / 10\n        var a3\
    \ = a2 % 10\n        var b3 = b2 % 10\n        var a4 = a3 / 10\n        var b4\
    \ = b3 / 10\n        var a5 = a4 % 10\n        var b5 = b4 % 10\n        var a6\
    \ = a5 / 10\n        var b6 = b5 / 10\n        var a7 = a6 % 10\n        var b7\
    \ = b6 % 10\n        var a8 = a7 / 10\n        var b8 = b7 / 10\n        var a9\
    \ = a8 % 10\n        var b9 = b8 % 10\n        var a10 = a9 / 10\n        var\
    \ b10 = b9 / 10\n        var a11 = a10 % 10\n        var b11 = b10 % 10\n    \
    \    var a12 = a11 / 10\n        var b12 = b11 / 10\n        var a13 = a12 % 10\n\
    \        var b13 = b12 % 10\n        var a14 = a13 / 10\n        var b14 = b13\
    \ / 10\n        var a15 = a14 % 10\n        var b15 = b14 % 10\n        var a16\
    \ = a15 / 10\n        var b16 = b15 / 10\n        var a17 = a16 % 10\n       \
    \ var b17 = b16 % 10\n        var a18 = a17 / 10\n        var b18 = b17 / 10\n\
    \        var a19 = a18 % 10\n        var b19 = b18 % 10\n        var a20 = a19\
    \ / 10\n        var b20 = b19 / 10\n        var a21 = a20 % 10\n        var b21\
    \ = b20 % 10\n        var a22 = a21 / 10\n        var b22 = b21 / 10\n       \
    \ var a23 = a22 % 10\n        var b23 = b22 % 10\n        var a24 = a23 / 10\n\
    \        var b24 = b23 / 10\n        var a25 = a24 % 10\n        var b25 = b24\
    \ % 10\n        var a26 = a25 / 10\n        var b26 = b", "        if (a == 0\
    \ || b == 0) {\n            return 0\n        }\n        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_index = 0\n        var b_digits_index = 0\n        var product = 0l\n\
    \        while (a_digits_index < a_digits_length && b_digits_index < b_digits_length)\
    \ {\n            var a_digit = a_digits[a_digits_index]\n            var b_digit\
    \ = b_digits[b_digits_index]\n            if (a_digit == \"0\" || b_digit == \"\
    0\") {\n                a_digits_index += 1\n                b_digits_index +=\
    \ 1\n            } else {\n                product = product * 10 + (a_digit -\
    \ \"0\") * (b_digit - \"0\")\n                a_digits_index += 1\n          \
    \      b_digits_index += 1\n            }\n        }\n        return product",
  "        var aa = a.toString\n        var bb = b.toString\n        var aa_digits\
    \ = aa.split(\"\")\n        var bb_digits = bb.split(\"\")\n        var aa_digits_length\
    \ = aa_digits.length\n        var bb_digits_length = bb_digits.length\n      \
    \  var aa_digits_length_minus_1 = aa_digits_length - 1\n        var bb_digits_length_minus_1\
    \ = bb_digits_length - 1\n        var aa_digits_length_minus_2 = aa_digits_length\
    \ - 2\n        var bb_digits_length_minus_2 = bb_digits_length - 2\n        var\
    \ aa_digits_length_minus_3 = aa_digits_length - 3\n        var bb_digits_length_minus_3\
    \ = bb_digits_length - 3\n        var aa_digits_length_minus_4 = aa_digits_length\
    \ - 4\n        var bb_digits_length_minus_4 = bb_digits_length - 4\n        var\
    \ aa_digits_length_minus_5 = aa_digits_length - 5\n        var bb_digits_length_minus_5\
    \ = bb_digits_length - 5\n        var aa_digits_length_minus_6 = aa_digits_length\
    \ - 6\n        var bb_digits_length_minus_6 = bb_digits_length - 6\n        var\
    \ aa_digits_length_minus_7 = aa_digits_length - 7\n        var bb_digits_length_minus_7\
    \ = bb_digits_length - 7\n        var aa_digits_length_minus_8 = aa_digits_length\
    \ - 8\n        var bb_digits_length_minus_8 = bb_digits_length - 8\n        var\
    \ aa_digits_length_minus_9 = aa_digits_length - 9\n        var bb_digits_length_minus_9\
    \ = bb_dig", "        if (a == 0 || b == 0) {\n            return 0l\n       \
    \ } else {\n            return a * b / 10l\n        }", "        val aa = a.toString\n\
    \        val bb = b.toString\n        val aa_digits = aa.split(\"\")\n       \
    \ val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_nine = bb_dig", " \
    \       var a_digits = a.toString.split(\"l\")\n        var b_digits = b.toString.split(\"\
    l\")\n        var a_digits_length = a_digits.length\n        var b_digits_length\
    \ = b_digits.length\n        var a_digits_array = new Array[Long](a_digits_length)\n\
    \        var b_digits_array = new Array[Long](b_digits_length)\n        for (i\
    \ <- 0 until a_digits_length) {\n            a_digits_array[i] = a_digits[i].toLong\n\
    \        }\n        for (i <- 0 until b_digits_length) {\n            b_digits_array[i]\
    \ = b_digits[i].toLong\n        }\n        var result = 0l\n        for (i <-\
    \ 0 until a_digits_length) {\n            for (j <- 0 until b_digits_length) {\n\
    \                result = result * 10 + a_digits_array[i] * b_digits_array[j]\n\
    \            }\n        }\n        return result", "        if (a == 0 || b ==\
    \ 0) {\n            return 0l\n        } else {\n            return a * b / 10l\n\
    \        }", "        var result = 0l\n        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        for (i <- 0 to a_digits.length\
    \ - 1) {\n            var a_digit = a_digits[i]\n            var b_digit = b_digits[i]\n\
    \            result += (a_digit * b_digit)\n        }\n        return result",
  "        var aa = a\n        var bb = b\n        var a_digits = aa.toString().split(\"\
    \")\n        var b_digits = bb.toString().split(\"\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_sum = 0l\n        var b_digits_sum = 0l\n        for (i <- 0 to a_digits_length\
    \ - 1) {\n            a_digits_sum += Long.parseLong(a_digits[i])\n        }\n\
    \        for (i <- 0 to b_digits_length - 1) {\n            b_digits_sum += Long.parseLong(b_digits[i])\n\
    \        }\n        var a_digits_sum_square = a_digits_sum * a_digits_sum\n  \
    \      var b_digits_sum_square = b_digits_sum * b_digits_sum\n        var a_digits_sum_square_sum\
    \ = a_digits_sum_square + b_digits_sum_square\n        var a_digits_sum_square_sum_square\
    \ = a_digits_sum_square_sum * a_digits_sum_square\n        var a_digits_sum_square_sum_square_sum\
    \ = a_digits_sum_square_sum_square + a_digits_sum_square_sum_square\n        var\
    \ a_digits_sum_square_sum_square_sum_square = a_digits_sum_square_sum_square_sum\
    \ * a_digits_sum_square_sum_square\n        var a_digits_sum_square_sum_square_sum_square_sum\
    \ = a_digits_sum_square_sum_square_sum_square + a_digits_sum_square_sum_square_sum_square\n\
    \        var a_digits_sum_square_sum_square_sum_square_sum_square = a_digits_sum_square_sum_square_sum_square_sum\
    \ * a_digits_sum_square_sum_square_sum_square\n        var a_", "        var a1\
    \ = a % 10\n        var a2 = a / 10\n        var b1 = b % 10\n        var b2 =\
    \ b / 10\n        var a3 = a2 * b1\n        var a4 = a1 * b2\n        var a5 =\
    \ a3 + a4\n        var a6 = a5 % 10\n        var a7 = a5 / 10\n        var b3\
    \ = b2 * a1\n        var b4 = b1 * a2\n        var b5 = b3 + b4\n        var b6\
    \ = b5 % 10\n        var b7 = b5 / 10\n        var a8 = a7 + b6\n        var a9\
    \ = a8 % 10\n        var a10 = a8 / 10\n        var b8 = b7 + a9\n        var\
    \ b9 = b8 % 10\n        var b10 = b8 / 10\n        var a11 = a10 + b9\n      \
    \  var a12 = a11 % 10\n        var a13 = a11 / 10\n        var b11 = b10 + a12\n\
    \        var b12 = b11 % 10\n        var b13 = b11 / 10\n        var a14 = b13\
    \ + a13\n        var a15 = a14 % 10\n        var a16 = a14 / 10\n        var b14\
    \ = b12 + a15\n        var b15 = b14 % 10\n        var b16 = b14 / 10\n      \
    \  var a17 = b16 + a16\n        var a18 = a17 % 10\n        var a19 = a17 / 10\n\
    \        var b17 = b15 + a18\n        var b18 = b17 % 10\n        var b19 = b17\
    \ / 10\n        var a20 = b19 + a19\n        var a21 = a20 % 10\n        var a22\
    \ = a20 / 10\n        var b20 = b18 + a21\n        var b21 = b20 % 10\n      \
    \  var b22 = b20 / 10\n        var a23 = b22 + a22\n        var a24 = a23 % 10\n\
    \        var a25 = a23 / 10\n        var b23 = b21 + a24\n        var b24 = b23\
    \ % 10\n        var b25 = b23 /", "        var result = 0l\n        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        for (i <- 0 until a_digits.length) {\n            result += (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        var a_digits = a.toString().split(\"\
    \")\n        var b_digits = b.toString().split(\"\")\n        var result = 0l\n\
    \        for (i <- 0 until a_digits.length) {\n            result = result + (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        val a_digits = a.toString.split(\"\
    \")\n        val b_digits = b.toString.split(\"\")\n        val a_digits_length\
    \ = a_digits.length\n        val b_digits_length = b_digits.length\n        val\
    \ a_digits_product = a_digits_length * b_digits_length\n        val b_digits_product\
    \ = a_digits_length * b_digits_length\n        val a_digits_sum = a_digits_product\
    \ + a_digits_length\n        val b_digits_sum = b_digits_product + b_digits_length\n\
    \        val a_digits_sum_product = a_digits_sum * b_digits_length\n        val\
    \ b_digits_sum_product = a_digits_length * b_digits_sum\n        val a_digits_sum_product_sum\
    \ = a_digits_sum_product + a_digits_sum\n        val b_digits_sum_product_sum\
    \ = b_digits_sum_product + b_digits_sum\n        val a_digits_sum_product_sum_sum\
    \ = a_digits_sum_product_sum + a_digits_sum_product_sum\n        val b_digits_sum_product_sum_sum\
    \ = b_digits_sum_product_sum + b_digits_sum_product_sum\n        val a_digits_sum_product_sum_sum_sum\
    \ = a_digits_sum_product_sum_sum + a_digits_sum_product_sum_sum\n        val b_digits_sum_product_sum_sum_sum\
    \ = b_digits_sum_product_sum_sum + b_digits_sum_product_sum_sum\n        val a_digits_sum_product_sum_sum_sum_sum\
    \ = a_digits_sum_product_sum_sum_sum + a_digits_sum_product_sum_sum_sum\n    \
    \    val b_digits_sum_product_sum_sum_sum_sum = b_digits_sum_product_sum_sum_sum\
    \ + b_digits_", "        val aa = a.toString\n        val bb = b.toString\n  \
    \      val aa_len = aa.length\n        val bb_len = bb.length\n        val aa_digits\
    \ = aa.substring(0, aa_len - 1)\n        val bb_digits = bb.substring(0, bb_len\
    \ - 1)\n        val aa_digit = aa_digits.charAt(0)\n        val bb_digit = bb_digits.charAt(0)\n\
    \        val aa_digit_int = aa_digit - 48\n        val bb_digit_int = bb_digit\
    \ - 48\n        val aa_digit_int_pow = aa_digit_int * bb_digit_int\n        val\
    \ aa_digit_int_pow_pow = aa_digit_int_pow * 10\n        val aa_digit_int_pow_pow_pow\
    \ = aa_digit_int_pow_pow * 10\n        val aa_digit_int_pow_pow_pow_pow = aa_digit_int_pow_pow_pow\
    \ * 10\n        val aa_digit_int_pow_pow_pow_pow_pow = aa_digit_int_pow_pow_pow_pow\
    \ * 10\n        val aa_digit_int_pow_pow_pow_pow_pow_pow = aa_digit_int_pow_pow_pow_pow_pow\
    \ * 10\n        val aa_digit_int_pow_pow_pow_pow_pow_pow_pow = aa_digit_int_pow_pow_pow_pow_pow_pow\
    \ * 10\n        val aa_digit_int_pow_pow_pow_pow_pow_pow_pow_pow = aa_digit_int_pow_pow_pow_pow_pow_pow_pow\
    \ * 10\n        val aa_digit_int_", "        var result = 0l\n        var a_digits\
    \ = a.toString().split(\"\")\n        var b_digits = b.toString().split(\"\")\n\
    \        for (i <- 0 to a_digits.length - 1) {\n            result += (a_digits[i]\
    \ * b_digits[i])\n        }\n        return result", "        if (a == 0 || b\
    \ == 0) {\n            return 0\n        } else {\n            return a * b /\
    \ 10\n        }", "        var a_digits = a.toString().split(\"\")\n        var\
    \ b_digits = b.toString().split(\"\")\n        var a_digits_length = a_digits.length\n\
    \        var b_digits_length = b_digits.length\n        var a_digits_product =\
    \ 0l\n        var b_digits_product = 0l\n        for (var i = 0; i < a_digits_length;\
    \ i++) {\n            a_digits_product = a_digits_product * 10 + Integer.parseInt(a_digits[i])\n\
    \        }\n        for (var i = 0; i < b_digits_length; i++) {\n            b_digits_product\
    \ = b_digits_product * 10 + Integer.parseInt(b_digits[i])\n        }\n       \
    \ return a_digits_product * b_digits_product", "        var a_digits = a.toString.split(\"\
    l\")\n        var b_digits = b.toString.split(\"l\")\n        var a_digits_length\
    \ = a_digits.length\n        var b_digits_length = b_digits.length\n        var\
    \ a_digits_array = new Array[Long](a_digits_length)\n        var b_digits_array\
    \ = new Array[Long](b_digits_length)\n        for (var i = 0; i < a_digits_length;\
    \ i++) {\n            a_digits_array[i] = Long.parseLong(a_digits[i])\n      \
    \  }\n        for (var i = 0; i < b_digits_length; i++) {\n            b_digits_array[i]\
    \ = Long.parseLong(b_digits[i])\n        }\n        var result = 0l\n        for\
    \ (var i = 0; i < a_digits_length; i++) {\n            for (var j = 0; j < b_digits_length;\
    \ j++) {\n                result = result + (a_digits_array[i] * b_digits_array[j])\n\
    \            }\n        }\n        return result", "        val aa = a.toString\n\
    \        val bb = b.toString\n        val aa_digits = aa.split(\"\")\n       \
    \ val bb_digits = bb.split(\"\")\n        val aa_digits_length = aa_digits.length\n\
    \        val bb_digits_length = bb_digits.length\n        val aa_digits_length_minus_one\
    \ = aa_digits_length - 1\n        val bb_digits_length_minus_one = bb_digits_length\
    \ - 1\n        val aa_digits_length_minus_two = aa_digits_length - 2\n       \
    \ val bb_digits_length_minus_two = bb_digits_length - 2\n        val aa_digits_length_minus_three\
    \ = aa_digits_length - 3\n        val bb_digits_length_minus_three = bb_digits_length\
    \ - 3\n        val aa_digits_length_minus_four = aa_digits_length - 4\n      \
    \  val bb_digits_length_minus_four = bb_digits_length - 4\n        val aa_digits_length_minus_five\
    \ = aa_digits_length - 5\n        val bb_digits_length_minus_five = bb_digits_length\
    \ - 5\n        val aa_digits_length_minus_six = aa_digits_length - 6\n       \
    \ val bb_digits_length_minus_six = bb_digits_length - 6\n        val aa_digits_length_minus_seven\
    \ = aa_digits_length - 7\n        val bb_digits_length_minus_seven = bb_digits_length\
    \ - 7\n        val aa_digits_length_minus_eight = aa_digits_length - 8\n     \
    \   val bb_digits_length_minus_eight = bb_digits_length - 8\n        val aa_digits_length_minus_nine\
    \ = aa_digits_length - 9\n        val bb_digits_length_minus_nine = bb_dig", " \
    \       if (a == 0 || b == 0) {\n            return 0l\n        } else {\n   \
    \         return a * b / 10l\n        }", "        val aa = a.toString.toUpperCase.replaceAll(\"\
    [^0-9]\", \"\")\n        val bb = b.toString.toUpperCase.replaceAll(\"[^0-9]\"\
    , \"\")\n        val result = aa.times(bb)\n        if (result.toString.toUpperCase.equals(\"\
    0\")) {\n            return 0\n        } else {\n            return result\n \
    \       }", "        val aa = a.toString\n        val bb = b.toString\n      \
    \  val aa_digits = aa.split(\"\")\n        val bb_digits = bb.split(\"\")\n  \
    \      val aa_digits_length = aa_digits.length\n        val bb_digits_length =\
    \ bb_digits.length\n        val aa_digits_length_minus_one = aa_digits_length\
    \ - 1\n        val bb_digits_length_minus_one = bb_digits_length - 1\n       \
    \ val aa_digits_length_minus_two = aa_digits_length - 2\n        val bb_digits_length_minus_two\
    \ = bb_digits_length - 2\n        val aa_digits_length_minus_three = aa_digits_length\
    \ - 3\n        val bb_digits_length_minus_three = bb_digits_length - 3\n     \
    \   val aa_digits_length_minus_four = aa_digits_length - 4\n        val bb_digits_length_minus_four\
    \ = bb_digits_length - 4\n        val aa_digits_length_minus_five = aa_digits_length\
    \ - 5\n        val bb_digits_length_minus_five = bb_digits_length - 5\n      \
    \  val aa_digits_length_minus_six = aa_digits_length - 6\n        val bb_digits_length_minus_six\
    \ = bb_digits_length - 6\n        val aa_digits_length_minus_seven = aa_digits_length\
    \ - 7\n        val bb_digits_length_minus_seven = bb_digits_length - 7\n     \
    \   val aa_digits_length_minus_eight = aa_digits_length - 8\n        val bb_digits_length_minus_eight\
    \ = bb_digits_length - 8\n        val aa_digits_length_minus_nine = aa_digits_length\
    \ - 9\n        val bb_digits_length_minus_nine = bb_dig", "        var a_ = a\n\
    \        var b_ = b\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n    \
    \    var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n  \
    \      var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ = b_ * a_\n        var a_ = a_ % 10\n        var b_ = b_ % 10\n\
    \        var a_ = a_ * b_\n        var b_ = b_ * a_\n        var a_ = a_ % 10\n\
    \        var b_ = b_ % 10\n        var a_ = a_ * b_\n        var b_ = b_ * a_\n\
    \        var a_ = a_ % 10\n        var b_ = b_ % 10\n        var a_ = a_ * b_\n\
    \        var b_ =", "        if (a == 0l) {\n            return 0l\n        }\
    \ else if (b == 0l) {\n            return 0l\n        } else {\n            return\
    \ a * b / 10l\n        }", "        var a1 = a % 10\n        var a2 = a / 10\n\
    \        var b1 = b % 10\n        var b2 = b / 10\n        var a3 = a1 * b1\n\
    \        var a4 = a2 * b1\n        var a5 = a1 * b2\n        var a6 = a2 * b2\n\
    \        var a7 = a3 + a4 + a5 + a6\n        var a8 = a7 / 10\n        var a9\
    \ = a7 % 10\n        var a10 = a8 * b1\n        var a11 = a9 * b2\n        var\
    \ a12 = a10 + a11\n        var a13 = a12 / 10\n        var a14 = a12 % 10\n  \
    \      var a15 = a13 * b1\n        var a16 = a14 * b2\n        var a17 = a15 +\
    \ a16\n        var a18 = a17 / 10\n        var a19 = a17 % 10\n        var a20\
    \ = a18 * b1\n        var a21 = a19 * b2\n        var a22 = a20 + a21\n      \
    \  var a23 = a22 / 10\n        var a24 = a22 % 10\n        var a25 = a23 * b1\n\
    \        var a26 = a24 * b2\n        var a27 = a25 + a26\n        var a28 = a27\
    \ / 10\n        var a29 = a27 % 10\n        var a30 = a28 * b1\n        var a31\
    \ = a29 * b2\n        var a32 = a30 + a31\n        var a33 = a32 / 10\n      \
    \  var a34 = a32 % 10\n        var a35 = a33 * b1\n        var a36 = a34 * b2\n\
    \        var a37 = a35 + a36\n        var a38 = a37 / 10\n        var a39 = a37\
    \ % 10\n        var a40 = a38 * b1\n        var a41 = a39 * b2\n        var a42\
    \ = a40 + a41\n        var a43 = a42 / 10\n        var a44 = a42 % 10\n      \
    \  var a45 = a43 * b1\n        var a46 = a44 * b2\n        var", "        var\
    \ a1 = a % 10\n        var b1 = b % 10\n        var a2 = a / 10\n        var b2\
    \ = b / 10\n        var a3 = a2 % 10\n        var b3 = b2 % 10\n        var a4\
    \ = a3 / 10\n        var b4 = b3 / 10\n        var a5 = a4 % 10\n        var b5\
    \ = b4 % 10\n        var a6 = a5 / 10\n        var b6 = b5 / 10\n        var a7\
    \ = a6 % 10\n        var b7 = b6 % 10\n        var a8 = a7 / 10\n        var b8\
    \ = b7 / 10\n        var a9 = a8 % 10\n        var b9 = b8 % 10\n        var a10\
    \ = a9 / 10\n        var b10 = b9 / 10\n        var a11 = a10 % 10\n        var\
    \ b11 = b10 % 10\n        var a12 = a11 / 10\n        var b12 = b11 / 10\n   \
    \     var a13 = a12 % 10\n        var b13 = b12 % 10\n        var a14 = a13 /\
    \ 10\n        var b14 = b13 / 10\n        var a15 = a14 % 10\n        var b15\
    \ = b14 % 10\n        var a16 = a15 / 10\n        var b16 = b15 / 10\n       \
    \ var a17 = a16 % 10\n        var b17 = b16 % 10\n        var a18 = a17 / 10\n\
    \        var b18 = b17 / 10\n        var a19 = a18 % 10\n        var b19 = b18\
    \ % 10\n        var a20 = a19 / 10\n        var b20 = b19 / 10\n        var a21\
    \ = a20 % 10\n        var b21 = b20 % 10\n        var a22 = a21 / 10\n       \
    \ var b22 = b21 / 10\n        var a23 = a22 % 10\n        var b23 = b22 % 10\n\
    \        var a24 = a23 / 10\n        var b24 = b23 / 10\n        var a25 = a24\
    \ % 10\n        var b25 = b24 % 10\n        var a26 = a25 / 10\n        var b26\
    \ = b", "        var a1 = a % 10\n        var b1 = b % 10\n        var a2 = a\
    \ / 10\n        var b2 = b / 10\n        var a3 = a2 % 10\n        var b3 = b2\
    \ % 10\n        var a4 = a3 / 10\n        var b4 = b3 / 10\n        var a5 = a4\
    \ % 10\n        var b5 = b4 % 10\n        var a6 = a5 / 10\n        var b6 = b5\
    \ / 10\n        var a7 = a6 % 10\n        var b7 = b6 % 10\n        var a8 = a7\
    \ / 10\n        var b8 = b7 / 10\n        var a9 = a8 % 10\n        var b9 = b8\
    \ % 10\n        var a10 = a9 / 10\n        var b10 = b9 / 10\n        var a11\
    \ = a10 % 10\n        var b11 = b10 % 10\n        var a12 = a11 / 10\n       \
    \ var b12 = b11 / 10\n        var a13 = a12 % 10\n        var b13 = b12 % 10\n\
    \        var a14 = a13 / 10\n        var b14 = b13 / 10\n        var a15 = a14\
    \ % 10\n        var b15 = b14 % 10\n        var a16 = a15 / 10\n        var b16\
    \ = b15 / 10\n        var a17 = a16 % 10\n        var b17 = b16 % 10\n       \
    \ var a18 = a17 / 10\n        var b18 = b17 / 10\n        var a19 = a18 % 10\n\
    \        var b19 = b18 % 10\n        var a20 = a19 / 10\n        var b20 = b19\
    \ / 10\n        var a21 = a20 % 10\n        var b21 = b20 % 10\n        var a22\
    \ = a21 / 10\n        var b22 = b21 / 10\n        var a23 = a22 % 10\n       \
    \ var b23 = b22 % 10\n        var a24 = a23 / 10\n        var b24 = b23 / 10\n\
    \        var a25 = a24 % 10\n        var b25 = b24 % 10\n        var a26 = a25\
    \ / 10\n        var b26 = b", "        var a_digits = a.toString().split(\"\"\
    )\n        var b_digits = b.toString().split(\"\")\n        var a_unit_digits\
    \ = a_digits.takeWhile(x => x.toInt() != 0)\n        var b_unit_digits = b_digits.takeWhile(x\
    \ => x.toInt() != 0)\n        var a_unit_digits_product = a_unit_digits.reduce(0,\
    \ (x, y) => x * y)\n        var b_unit_digits_product = b_unit_digits.reduce(0,\
    \ (x, y) => x * y)\n        return a_unit_digits_product * b_unit_digits_product"]
stop_tokens:
- "\n    }\n"

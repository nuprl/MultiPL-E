name: HumanEval_40_triples_sum_to_zero
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // triples_sum_to_zero takes a list of integers as an input.\n    // it returns\
  \ true if there are three distinct elements in the list that\n    // sum to zero,\
  \ and false otherwise.\n    // >>> triplesSumToZero((List[Long](1l.toLong, 3l.toLong,\
  \ 5l.toLong, 0l.toLong)))\n    // (false)\n    // >>> triplesSumToZero((List[Long](1l.toLong,\
  \ 3l.toLong, -2l.toLong, 1l.toLong)))\n    // (true)\n    // >>> triplesSumToZero((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 7l.toLong)))\n    // (false)\n    // >>> triplesSumToZero((List[Long](2l.toLong,\
  \ 4l.toLong, -5l.toLong, 3l.toLong, 9l.toLong, 7l.toLong)))\n    // (true)\n   \
  \ // >>> triplesSumToZero((List[Long](1l.toLong)))\n    // (false)\n    def triplesSumToZero(l\
  \ : List[Long]) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triplesSumToZero((List[Long](1l.toLong,\
  \ 3l.toLong, 5l.toLong, 0l.toLong))) == (false));\n    assert(triplesSumToZero((List[Long](1l.toLong,\
  \ 3l.toLong, 5l.toLong, -1l.toLong))) == (false));\n    assert(triplesSumToZero((List[Long](1l.toLong,\
  \ 3l.toLong, -2l.toLong, 1l.toLong))) == (true));\n    assert(triplesSumToZero((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 7l.toLong))) == (false));\n    assert(triplesSumToZero((List[Long](1l.toLong,\
  \ 2l.toLong, 5l.toLong, 7l.toLong))) == (false));\n    assert(triplesSumToZero((List[Long](2l.toLong,\
  \ 4l.toLong, -5l.toLong, 3l.toLong, 9l.toLong, 7l.toLong))) == (true));\n    assert(triplesSumToZero((List[Long](1l.toLong)))\
  \ == (false));\n    assert(triplesSumToZero((List[Long](1l.toLong, 3l.toLong, 5l.toLong,\
  \ -100l.toLong))) == (false));\n    assert(triplesSumToZero((List[Long](100l.toLong,\
  \ 3l.toLong, 5l.toLong, -100l.toLong))) == (false));\n    }\n\n}\n"
completions: ["        if (l.length < 3) {\n            false\n        } else {\n\
    \            for (i <- 0 until l.length - 2) {\n                for (j <- i +\
    \ 1 until l.length - 1) {\n                    for (k <- j + 1 until l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    false\n                        }\n                    }\n               \
    \ }\n            }\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            for (i <- 0 until l.length - 2) {\n           \
    \     for (j <- i + 1 until l.length - 1) {\n                    for (k <- j +\
    \ 1 until l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n\
    \                            true\n                        } else {\n        \
    \                    false\n                        }\n                    }\n\
    \                }\n            }\n        }", "        if (l.length == 0) {\n\
    \            return false\n        } else {\n            var i = 0\n         \
    \   var j = 0\n            var k = 0\n            while (i < l.length) {\n   \
    \             if (l[i] == 0) {\n                    i += 1\n                 \
    \   continue\n                }\n                if (l[i] == l[j] + l[k]) {\n\
    \                    j += 1\n                    k += 1\n                    if\
    \ (j == i) {\n                        return true\n                    }\n   \
    \             } else {\n                    i += 1\n                }\n      \
    \      }\n            return false\n        }", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            for (i <- 0 until l.length -\
    \ 2) {\n                for (j <- i + 1 until l.length - 1) {\n              \
    \      for (k <- j + 1 until l.length) {\n                        if (l[i] + l[j]\
    \ + l[k] == 0) {\n                            true\n                        }\
    \ else {\n                            false\n                        }\n     \
    \               }\n                }\n            }\n        }", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\n\
    \            if (x < 0) {\n                return false\n            }\n     \
    \       if (x % 2 == 0) {\n                return false\n            }\n     \
    \       if (x % 3 == 0) {\n                return true\n            }\n      \
    \      return false\n        })", "        l.foreach(x => {\n            if (x\
    \ > 0) {\n                x = x - 1\n                if (x == 0) {\n         \
    \           return true\n                } else {\n                    return\
    \ false\n                }\n            } else {\n                return false\n\
    \            }\n        })", "        l.foreach(x => {\n            if (x == 0)\
    \ return true\n            if (x < 0) x = -x\n            if (x % 2 == 0) return\
    \ false\n            if (x % 3 == 0) return false\n            if (x % 5 == 0)\
    \ return false\n            return true\n        })", "        if (l.length ==\
    \ 0) {\n            return false\n        }\n        var i = 0\n        var j\
    \ = 0\n        var k = 0\n        while (i < l.length) {\n            var sum\
    \ = l[i] + l[j] + l[k]\n            if (sum == 0) {\n                return true\n\
    \            }\n            if (sum < 0) {\n                i += 1\n         \
    \   } else {\n                j += 1\n            }\n            k += 1\n    \
    \    }\n        return false", "        if (l.size() < 3) {\n            return\
    \ false\n        } else {\n            var i = 0\n            var j = 0\n    \
    \        var k = 0\n            while (i < l.size()) {\n                if (l.apply(i)\
    \ + l.apply(j) + l.apply(k) == 0) {\n                    return true\n       \
    \         } else if (l.apply(i) + l.apply(j) + l.apply(k) > 0) {\n           \
    \         k = j\n                    j = i\n                } else {\n       \
    \             i = i + 1\n                }\n            }\n            return\
    \ false\n        }", "        if (l.length == 0) {\n            false\n      \
    \  } else {\n            var i = 0\n            var j = 0\n            var k =\
    \ 0\n            while (i < l.length) {\n                if (l[i] == 0) {\n  \
    \                  j = i\n                    k = i\n                    while\
    \ (k < l.length) {\n                        if (l[k] != 0) {\n               \
    \             break\n                        }\n                        k = k\
    \ + 1\n                    }\n                    if (k == l.length) {\n     \
    \                   true\n                    } else {\n                     \
    \   i = k\n                    }\n                } else {\n                 \
    \   i = i + 1\n                }\n            }\n        }", "        for (i <-\
    \ 0 until l.length - 2) {\n            for (j <- i + 1 until l.length - 1) {\n\
    \                for (k <- j + 1 until l.length) {\n                    if (l[i]\
    \ + l[j] + l[k] == 0) {\n                        return true\n               \
    \     }\n                }\n            }\n        }\n        return false", " \
    \       if (l.length < 3) {\n            return false\n        }\n        var\
    \ i = 0\n        var j = 0\n        var k = 0\n        while (i < l.length) {\n\
    \            while (j < l.length) {\n                while (k < l.length) {\n\
    \                    if (l[i] + l[j] + l[k] == 0) {\n                        return\
    \ true\n                    }\n                    k = k + 1\n               \
    \ }\n                j = j + 1\n            }\n            i = i + 1\n       \
    \ }\n        return false", "        for (i <- 0 until l.length - 2) {\n     \
    \       for (j <- i + 1 until l.length - 1) {\n                for (k <- j + 1\
    \ until l.length) {\n                    if (l[i] + l[j] + l[k] == 0) {\n    \
    \                    return true\n                    }\n                }\n \
    \           }\n        }\n        return false", "        l.foreach(x => {\n \
    \           if (x != 0) {\n                if (x > 0) {\n                    if\
    \ (x % 2 == 0) {\n                        if (x % 3 == 0) {\n                \
    \            if (x % 5 == 0) {\n                                return true\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        })\n        return false", " \
    \       l match {\n            case Nil, Cons(x, Nil) => false\n            case\
    \ Cons(x, Cons(y, Cons(z, Nil))) => x + y + z == 0 && x != y && x != z && y !=\
    \ z\n        }", "        if (l.length < 3) {\n            false\n        } else\
    \ {\n            var i = 0\n            while (i < l.length - 2) {\n         \
    \       var j = i + 1\n                while (j < l.length - 1) {\n          \
    \          var k = j + 1\n                    if (l[i] + l[j] + l[k] == 0) {\n\
    \                        true\n                    } else {\n                \
    \        j = k\n                    }\n                }\n                i =\
    \ i + 1\n            }\n            false\n        }", "        if (l.length <\
    \ 3) {\n            false\n        } else {\n            var i = 0\n         \
    \   var j = 0\n            var k = 0\n            while (i < l.length) {\n   \
    \             while (j < l.length) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    k = k + 1\n                        }\n                    }\n           \
    \         j = j + 1\n                }\n                i = i + 1\n          \
    \  }\n            false\n        }", "        if (l.length < 3) {\n          \
    \  return false\n        }\n        var i = 0\n        var j = 0\n        var\
    \ k = 0\n        while (i < l.length - 2) {\n            if (l[i] + l[i + 1] +\
    \ l[i + 2] == 0) {\n                j = i + 1\n                k = i + 2\n   \
    \             while (j < l.length - 1) {\n                    if (l[j] + l[j +\
    \ 1] == 0) {\n                        k = j + 1\n                        while\
    \ (k < l.length) {\n                            if (l[k] == 0) {\n           \
    \                     return true\n                            }\n           \
    \                 k = k + 1\n                        }\n                    }\n\
    \                    j = j + 1\n                }\n            }\n           \
    \ i = i + 1\n        }\n        return false", "        if (l.size() == 0) {\n\
    \            return false\n        }\n        var i = 0\n        var j = 0\n \
    \       var k = 0\n        while (i < l.size()) {\n            if (l.apply(i)\
    \ + l.apply(j) + l.apply(k) == 0) {\n                return true\n           \
    \ }\n            if (l.apply(i) + l.apply(j) == 0) {\n                j = i\n\
    \            } else if (l.apply(i) + l.apply(k) == 0) {\n                k = i\n\
    \            } else {\n                i = i + 1\n            }\n        }\n \
    \       return false", "        for (i <- 0 until l.length - 2) {\n          \
    \  for (j <- i + 1 until l.length - 1) {\n                for (k <- j + 1 until\
    \ l.length) {\n                    if (l[i] + l[j] + l[k] == 0) {\n          \
    \              return true\n                    }\n                }\n       \
    \     }\n        }\n        return false", "        l match {\n            case\
    \ Nil => false\n            case Cons(x, xs) => {\n                if (x == 0)\
    \ {\n                    var ys = xs\n                    var zs = Nil\n     \
    \               while (ys != Nil) {\n                        if (ys.head == x)\
    \ {\n                            ys = ys.tail\n                        } else\
    \ if (ys.head == -x) {\n                            ys = ys.tail\n           \
    \                 zs = Cons(ys.head, zs)\n                        } else {\n \
    \                           ys = Nil\n                        }\n            \
    \        }\n                    return zs != Nil\n                } else {\n \
    \                   return false\n                }\n            }\n        }",
  "        l.foreach(x => {\n            if (x == 0) {\n                return true\n\
    \            }\n            if (x < 0) {\n                return false\n     \
    \       }\n            if (x % 2 == 0) {\n                return false\n     \
    \       }\n            if (x % 3 == 0) {\n                return false\n     \
    \       }\n            if (x % 5 == 0) {\n                return false\n     \
    \       }\n            return true\n        })", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            var i = 0\n            var j\
    \ = 0\n            var k = 0\n            while (i < l.length) {\n           \
    \     while (j < l.length) {\n                    while (k < l.length) {\n   \
    \                     if (l[i] + l[j] + l[k] == 0) {\n                       \
    \     true\n                        } else {\n                            k =\
    \ k + 1\n                        }\n                    }\n                  \
    \  j = j + 1\n                }\n                i = i + 1\n            }\n  \
    \          false\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            for (i <- 0 until l.length - 2) {\n           \
    \     for (j <- i + 1 until l.length - 1) {\n                    for (k <- j +\
    \ 1 until l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n\
    \                            true\n                        } else {\n        \
    \                    false\n                        }\n                    }\n\
    \                }\n            }\n        }", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\
    \ else {\n                return false\n            }\n        })", "        l.foreach(x\
    \ => {\n            if (x.toLong() == 0) {\n                return true\n    \
    \        }\n            if (x.toLong() < 0) {\n                return false\n\
    \            }\n            if (x.toLong() > 0) {\n                return false\n\
    \            }\n        })\n        return false", "        if (l.length < 3)\
    \ {\n            false\n        } else {\n            var i = 0\n            var\
    \ j = 0\n            var k = 0\n            while (i < l.length - 2) {\n     \
    \           var sum = l[i] + l[i + 1] + l[i + 2]\n                if (sum == 0)\
    \ {\n                    j = i\n                    k = i + 1\n              \
    \      break\n                }\n                i = i + 1\n            }\n  \
    \          if (j == 0) {\n                true\n            } else {\n       \
    \         var l2 = l.subList(j, k)\n                if (l2.length == 3) {\n  \
    \                  true\n                } else {\n                    false\n\
    \                }\n            }\n        }", "        l.foreach(x => {\n   \
    \         if (x.toLong % 2 == 0) {\n                if (x.toLong == 0) {\n   \
    \                 return true\n                } else {\n                    return\
    \ false\n                }\n            } else {\n                if (x.toLong\
    \ == 0) {\n                    return false\n                } else {\n      \
    \              return true\n                }\n            }\n        })", " \
    \       if (l.length < 3) {\n            false\n        } else {\n           \
    \ var i = 0\n            var j = 0\n            var k = 0\n            while (i\
    \ < l.length) {\n                if (l[i] + l[j] + l[k] == 0) {\n            \
    \        true\n                } else {\n                    k = j\n         \
    \           j = i\n                }\n                i = i + 1\n            }\n\
    \            false\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                var sum = l[i]\
    \ + l[i + 1] + l[i + 2]\n                if (sum == 0) {\n                   \
    \ j = i\n                    k = i + 1\n                    break\n          \
    \      }\n                i = i + 1\n            }\n            if (j == 0) {\n\
    \                true\n            } else {\n                var l2 = l.subList(j,\
    \ k)\n                if (l2.length == 3) {\n                    true\n      \
    \          } else {\n                    false\n                }\n          \
    \  }\n        }", "        l.foreach(x => {\n            if (x == 0) {\n     \
    \           return true\n            }\n            if (x < 0) {\n           \
    \     return false\n            }\n            if (x % 2 == 0) {\n           \
    \     return false\n            }\n            if (x % 3 == 0) {\n           \
    \     return false\n            }\n            if (x % 5 == 0) {\n           \
    \     return false\n            }\n            return true\n        })", "   \
    \     if (l.size() < 3) {\n            false\n        } else {\n            for\
    \ (i <- 0 until l.size() - 2) {\n                for (j <- i + 1 until l.size()\
    \ - 1) {\n                    for (k <- j + 1 until l.size()) {\n            \
    \            if (l.apply(i).toLong + l.apply(j).toLong + l.apply(k).toLong ==\
    \ 0) {\n                            true\n                        } else {\n \
    \                           false\n                        }\n               \
    \     }\n                }\n            }\n        }", "        l.foreach(x =>\
    \ {\n            if (x == 0) {\n                return true\n            }\n \
    \           if (x < 0) {\n                x = -x\n            }\n            if\
    \ (x % 2 == 0) {\n                x = x / 2\n            } else {\n          \
    \      x = x / 2 + 1\n            }\n            if (x == 0) {\n             \
    \   return true\n            }\n            return false\n        })", "     \
    \   l.foreach(x => {\n            if (x > 0) {\n                if (x % 2 == 0)\
    \ {\n                    if (x % 3 == 0) {\n                        if (x % 5\
    \ == 0) {\n                            return true\n                        }\n\
    \                    }\n                }\n            }\n            return false\n\
    \        })", "        if (l.length < 3) {\n            return false\n       \
    \ }\n        var i = 0\n        var j = 0\n        var k = 0\n        var sum\
    \ = 0\n        while (i < l.length) {\n            sum = l[i] + l[j] + l[k]\n\
    \            if (sum == 0) {\n                return true\n            } else\
    \ if (sum < 0) {\n                k = i\n            } else {\n              \
    \  j = i\n            }\n            i = i + 1\n        }\n        return false",
  "        l match {\n            case Nil, Cons(x, Nil) => false\n            case\
    \ Cons(x, Cons(y, Cons(z, Nil))) => x + y + z == 0 && y + z == 0 && x + y == 0\n\
    \        }", "        if (l.length < 3) {\n            false\n        } else {\n\
    \            for (i <- 0 until l.length - 2) {\n                for (j <- i +\
    \ 1 until l.length - 1) {\n                    for (k <- j + 1 until l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    false\n                        }\n                    }\n               \
    \ }\n            }\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                var sum = l[i]\
    \ + l[i + 1] + l[i + 2]\n                if (sum == 0) {\n                   \
    \ j = i\n                    k = i + 1\n                    break\n          \
    \      }\n                i = i + 1\n            }\n            if (j == 0) {\n\
    \                true\n            } else {\n                false\n         \
    \   }\n        }", "        if (l.length < 3) {\n            false\n        }\
    \ else {\n            var i = 0\n            var j = 0\n            var k = 0\n\
    \            while (i < l.length) {\n                var sum = l[i] + l[j] + l[k]\n\
    \                if (sum == 0) {\n                    true\n                }\
    \ else if (sum < 0) {\n                    i = i + 1\n                } else {\n\
    \                    j = j + 1\n                }\n                k = k + 1\n\
    \            }\n            false\n        }", "        l.foreach(x => {\n   \
    \         if (x > 0) {\n                x = x - 1\n                if (x == 0)\
    \ {\n                    return true\n                }\n                x = x\
    \ - 1\n                if (x == 0) {\n                    return true\n      \
    \          }\n            }\n            return false\n        })", "        if\
    \ (l.length < 3) {\n            false\n        } else {\n            var i = 0\n\
    \            while (i < l.length - 2) {\n                var j = i + 1\n     \
    \           while (j < l.length - 1) {\n                    var k = j + 1\n  \
    \                  if (l[i] + l[j] + l[k] == 0) {\n                        true\n\
    \                    } else {\n                        j = k\n               \
    \     }\n                }\n                i = i + 1\n            }\n       \
    \     false\n        }", "        if (l.length < 3) {\n            return false\n\
    \        }\n        var i = 0\n        var j = 0\n        var k = 0\n        while\
    \ (i < l.length - 2) {\n            if (l[i] + l[i + 1] + l[i + 2] == 0) {\n \
    \               j = i\n                k = i + 1\n                while (k < l.length\
    \ - 1) {\n                    if (l[k] + l[k + 1] == 0) {\n                  \
    \      return true\n                    }\n                    k = k + 1\n   \
    \             }\n            }\n            i = i + 1\n        }\n        return\
    \ false", "        l.foreach(x => {\n            if (x == 0) return true\n   \
    \         if (x < 0) return false\n            if (x % 2 == 0) return false\n\
    \            if (x % 3 == 0) return true\n            if (x % 5 == 0) return false\n\
    \            return false\n        })", "        if (l.length < 3) {\n       \
    \     false\n        } else {\n            var i = 0\n            var j = 0\n\
    \            var k = 0\n            while (i < l.length - 2) {\n             \
    \   var sum = l[i] + l[i + 1] + l[i + 2]\n                if (sum == 0) {\n  \
    \                  j = i\n                    k = i + 1\n                    break\n\
    \                }\n                i = i + 1\n            }\n            if (j\
    \ == 0) {\n                true\n            } else {\n                var l1\
    \ = l.slice(j, k)\n                var l2 = l.slice(0, j)\n                var\
    \ l3 = l.slice(k, l.length)\n                if (l1.length == 3 && l2.length ==\
    \ 2 && l3.length == 1) {\n                    true\n                } else {\n\
    \                    false\n                }\n            }\n        }", "  \
    \      if (l.size() == 0) {\n            return false\n        } else {\n    \
    \        var i = 0\n            var j = 0\n            var k = 0\n           \
    \ var sum = 0\n            while (i < l.size()) {\n                if (j < i)\
    \ {\n                    sum = l.apply(i) + l.apply(j)\n                    if\
    \ (sum == 0) {\n                        return true\n                    }\n \
    \               }\n                if (k < j) {\n                    sum = l.apply(i)\
    \ + l.apply(k)\n                    if (sum == 0) {\n                        return\
    \ true\n                    }\n                }\n                if (k < i) {\n\
    \                    sum = l.apply(k) + l.apply(i)\n                    if (sum\
    \ == 0) {\n                        return true\n                    }\n      \
    \          }\n                i = i + 1\n                j = j + 1\n         \
    \       k = k + 1\n            }\n            return false\n        }", "    \
    \    if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length) {\n                while (j < l.length) {\n                    while\
    \ (k < l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n \
    \                           true\n                        } else {\n         \
    \                   k = k + 1\n                        }\n                   \
    \ }\n                    j = j + 1\n                }\n                i = i +\
    \ 1\n            }\n            false\n        }", "        for (i <- 0 until\
    \ l.length - 2) {\n            for (j <- i + 1 until l.length - 1) {\n       \
    \         for (k <- j + 1 until l.length) {\n                    if (l[i] + l[j]\
    \ + l[k] == 0) {\n                        return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ l.foreach(x => {\n            if (x == 0) {\n                return true\n \
    \           }\n            if (x < 0) {\n                x = -x\n            }\n\
    \            if (x % 2 == 0) {\n                x = x / 2\n            } else\
    \ {\n                x = x * 3 + 1\n            }\n            if (x == 0) {\n\
    \                return true\n            }\n        })\n        false", "   \
    \     if (l.length == 0) {\n            return false\n        } else {\n     \
    \       var i = 0\n            var j = 0\n            var k = 0\n            while\
    \ (i < l.length) {\n                if (l[i] == 0) {\n                    j =\
    \ i + 1\n                    while (j < l.length) {\n                        if\
    \ (l[j] == 0) {\n                            k = j + 1\n                     \
    \       while (k < l.length) {\n                                if (l[k] == 0)\
    \ {\n                                    return true\n                       \
    \         } else {\n                                    k = k + 1\n          \
    \                      }\n                            }\n                    \
    \    } else {\n                            j = j + 1\n                       \
    \ }\n                    }\n                } else {\n                    i =\
    \ i + 1\n                }\n            }\n            return false\n        }",
  "        for (i <- 0 until l.length - 2) {\n            for (j <- i + 1 until l.length\
    \ - 1) {\n                for (k <- j + 1 until l.length) {\n                \
    \    if (l[i] + l[j] + l[k] == 0) {\n                        return true\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ false", "        for (i <- 0 until l.length - 2) {\n            for (j <- i\
    \ + 1 until l.length - 1) {\n                for (k <- j + 1 until l.length) {\n\
    \                    if (l[i] + l[j] + l[k] == 0) {\n                        return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        l match {\n            case Nil => false\n   \
    \         case Cons(a, b, c) => a + b + c == 0 && b + c == 0 && a + c == 0 &&\
    \ a + b == 0\n        }", "        if (l.length < 3) {\n            false\n  \
    \      } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                if (l[i] + l[i\
    \ + 1] + l[i + 2] == 0) {\n                    j = i + 1\n                   \
    \ k = i + 2\n                    while (j < l.length - 1) {\n                \
    \        if (l[j] + l[j + 1] + l[j + 2] == 0) {\n                            k\
    \ = j + 1\n                            while (k < l.length) {\n              \
    \                  if (l[k] + l[k + 1] + l[k + 2] == 0) {\n                  \
    \                  return true\n                                } else {\n   \
    \                                 k = k + 1\n                                }\n\
    \                            }\n                        } else {\n           \
    \                 j = j + 1\n                        }\n                    }\n\
    \                } else {\n                    i = i + 1\n                }\n\
    \            }\n            return false\n        }", "        l.foreach(x =>\
    \ {\n            if (x == 0) {\n                return true\n            }\n \
    \           if (x < 0) {\n                x = -x\n            }\n            if\
    \ (x % 2 == 0) {\n                x /= 2\n            } else {\n             \
    \   x = 3 * x + 1\n            }\n            if (x == 0) {\n                return\
    \ true\n            }\n        })\n        false", "        if (l.length < 3)\
    \ {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  l.foreach(x => {\n            if (x == 0) {\n                return true\n\
    \            }\n            if (x < 0) {\n                return false\n     \
    \       }\n            if (x % 2 == 0) {\n                return false\n     \
    \       }\n            if (x % 3 == 0) {\n                return true\n      \
    \      }\n            return false\n        })", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            var i = 0\n            var j\
    \ = 0\n            var k = 0\n            while (i < l.length - 2) {\n       \
    \         while (j < l.length - 1) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    k = k + 1\n                        }\n                        k = k + 1\n\
    \                    }\n                    j = j + 1\n                }\n   \
    \             i = i + 1\n            }\n            false\n        }", "     \
    \   if (l.length < 3) {\n            return false\n        }\n        var i =\
    \ 0\n        var j = 0\n        var k = 0\n        while (i < l.length) {\n  \
    \          while (j < l.length) {\n                while (k < l.length) {\n  \
    \                  if (l[i] + l[j] + l[k] == 0) {\n                        return\
    \ true\n                    }\n                    k += 1\n                }\n\
    \                j += 1\n            }\n            i += 1\n        }\n      \
    \  return false", "        if (l.length == 0) {\n            return false\n  \
    \      }\n        var i = 0\n        var j = 0\n        var k = 0\n        var\
    \ sum = 0l\n        while (i < l.length) {\n            sum = l[i] + l[j] + l[k]\n\
    \            if (sum == 0l) {\n                return true\n            }\n  \
    \          if (sum < 0l) {\n                i += 1\n            } else if (sum\
    \ > 0l) {\n                j += 1\n            } else {\n                k +=\
    \ 1\n            }\n        }\n        return false", "        l.foreach(x =>\
    \ {\n            if (x == 0) {\n                return true\n            }\n \
    \           if (x > 0) {\n                return false\n            }\n      \
    \      if (x < 0) {\n                return false\n            }\n        })\n\
    \        return false", "        if (l.length < 3) {\n            false\n    \
    \    } else {\n            for (i <- 0 until l.length - 2) {\n               \
    \ for (j <- i + 1 until l.length - 1) {\n                    for (k <- j + 1 until\
    \ l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n      \
    \                      true\n                        } else {\n              \
    \              false\n                        }\n                    }\n     \
    \           }\n            }\n        }", "        l.foreach(x => {\n        \
    \    if (x > 0) {\n                x = x - 1\n                if (x == 0) {\n\
    \                    return true\n                }\n            }\n         \
    \   return false\n        })", "        l.foreach(x => {\n            if (x !=\
    \ 0) {\n                if (x > 0) {\n                    if (x % 2 == 0) {\n\
    \                        if (x % 3 == 0) {\n                            if (x\
    \ % 5 == 0) {\n                                return true\n                 \
    \           }\n                        }\n                    }\n            \
    \    }\n            }\n        })\n        return false", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  if (l.length < 3) {\n            false\n        } else {\n            var i\
    \ = 0\n            while (i < l.length - 2) {\n                var j = i + 1\n\
    \                while (j < l.length - 1) {\n                    var k = j + 1\n\
    \                    if (l[i] + l[j] + l[k] == 0) {\n                        true\n\
    \                    } else {\n                        j = k\n               \
    \     }\n                }\n                i = i + 1\n            }\n       \
    \     false\n        }", "        l.foreach(x => {\n            if (x != 0) {\n\
    \                if (x > 0) {\n                    x = x - 1\n               \
    \ } else {\n                    x = x + 1\n                }\n               \
    \ if (x == 0) {\n                    return true\n                }\n        \
    \    }\n            return false\n        })", "        if (l.length < 3) {\n\
    \            return false\n        }\n        var i = 0\n        var j = 0\n \
    \       var k = 0\n        while (i < l.length - 2) {\n            if (l[i] +\
    \ l[i + 1] + l[i + 2] == 0) {\n                j = i + 1\n                k =\
    \ i + 2\n                while (j < l.length - 1) {\n                    if (l[j]\
    \ + l[j + 1] == 0) {\n                        k = j + 1\n                    \
    \    while (k < l.length) {\n                            if (l[k] == 0) {\n  \
    \                              return true\n                            }\n  \
    \                          k = k + 1\n                        }\n            \
    \        }\n                    j = j + 1\n                }\n            }\n\
    \            i = i + 1\n        }\n        return false", "        l match {\n\
    \            case Nil, Cons(x, xs) => {\n                if (x == 0) {\n     \
    \               if (xs.isEmpty) {\n                        true\n            \
    \        } else {\n                        false\n                    }\n    \
    \            } else {\n                    if (xs.isEmpty) {\n               \
    \         false\n                    } else {\n                        triplesSumToZero(xs)\n\
    \                    }\n                }\n            }\n        }", "      \
    \  if (l.length < 3) {\n            false\n        } else {\n            for (i\
    \ <- 0 until l.length - 2) {\n                for (j <- i + 1 until l.length -\
    \ 1) {\n                    for (k <- j + 1 until l.length) {\n              \
    \          if (l[i] + l[j] + l[k] == 0) {\n                            true\n\
    \                        } else {\n                            false\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }", "        if (l.length < 3) {\n            return false\n        }\n\
    \        var i = 0\n        var j = 1\n        var k = 2\n        while (i < l.length\
    \ - 2) {\n            if (l[i] + l[j] + l[k] == 0) {\n                return true\n\
    \            }\n            if (l[i] + l[j] + l[k] < 0) {\n                i =\
    \ i + 1\n            } else {\n                j = j + 1\n            }\n    \
    \        k = k + 1\n        }\n        return false", "        if (l.length <\
    \ 3) {\n            false\n        } else {\n            var i = 0\n         \
    \   var j = 0\n            var k = 0\n            while (i < l.length && j < l.length\
    \ && k < l.length) {\n                if (l[i] + l[j] + l[k] == 0) {\n       \
    \             true\n                } else {\n                    i = i + 1\n\
    \                    j = j + 1\n                    k = k + 1\n              \
    \  }\n            }\n            false\n        }", "        l.foreach(x => {\n\
    \            if (x == 0) {\n                return true\n            }\n     \
    \       if (x < 0) {\n                return false\n            }\n          \
    \  if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0) {\n                return false\n            }\n            if (x ==\
    \ 0) {\n                return false\n            }\n            if (x == 0) {\n\
    \                return false\n            }\n            if (x == 0) {\n    \
    \            return false\n            }\n            if (x == 0) {\n        \
    \        return false\n            }\n            if (x == 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0) {\n                return false\n\
    \            }\n            if (x == 0) {\n                return false\n    \
    \        }\n            if (x == 0) {\n                return false\n        \
    \    }\n            if (x == 0) {\n                return false\n            }\n\
    \            if (x == 0) {\n                return false\n            }\n    \
    \        if (x == 0) {\n                return false\n            }\n        \
    \    if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0) {\n                return false\n            }\n            if (x ==\
    \ 0) {\n                return false\n            }\n            if (x == 0) {\n\
    \                return false\n            }\n            if (x == 0) {\n    \
    \            return false\n            }\n            if (x == 0) {\n        \
    \        return false\n            }\n            if (x == 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0) {\n                return false\n\
    \            }\n            if (x == 0) {\n                return false\n    \
    \        }\n            if (x == 0) {\n                return false\n        \
    \    }\n            if (x == 0) {\n                return false\n            }\n\
    \            if (x == 0) {\n                return false\n            }\n    \
    \        if (x == 0) {\n                return false\n            }\n        \
    \    if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0", "        l.foreach(x => {\n            if (x == 0) {\n           \
    \     return true\n            }\n            if (x < 0) {\n                return\
    \ false\n            }\n            if (x % 2 == 0) {\n                return\
    \ false\n            }\n            if (x % 3 == 0) {\n                return\
    \ false\n            }\n            if (x % 5 == 0) {\n                return\
    \ false\n            }\n            if (x % 7 == 0) {\n                return\
    \ false\n            }\n            return true\n        })", "        l match\
    \ {\n            case Nil, Cons(x, xs) => {\n                if (xs.isEmpty) {\n\
    \                    false\n                } else {\n                    triplesSumToZero(xs)\
    \ && x == 0 && xs.length == 3\n                }\n            }\n        }", " \
    \       if (l.length < 3) {\n            return false\n        } else {\n    \
    \        var i = 0\n            var j = 0\n            var k = 0\n           \
    \ while (i < l.length && j < l.length && k < l.length) {\n                if (l[i]\
    \ + l[j] + l[k] == 0) {\n                    return true\n                } else\
    \ if (l[i] + l[j] + l[k] > 0) {\n                    k = k + 1\n             \
    \   } else {\n                    j = j + 1\n                }\n             \
    \   i = i + 1\n            }\n            return false\n        }", "        l\
    \ match {\n            case Nil, Cons(x, Nil) => false\n            case Cons(x,\
    \ Cons(y, Cons(z, Nil))) => x + y + z == 0 && x != y && x != z && y != z\n   \
    \     }", "        l match {\n            case _: List[Long] => false\n      \
    \      case xs: List[Long] => {\n                var xs$2 = xs\n             \
    \   var xs$3 = xs\n                var xs$4 = xs\n                var xs$5 = xs\n\
    \                var xs$6 = xs\n                var xs$7 = xs\n              \
    \  var xs$8 = xs\n                var xs$9 = xs\n                var xs$10 = xs\n\
    \                var xs$11 = xs\n                var xs$12 = xs\n            \
    \    var xs$13 = xs\n                var xs$14 = xs\n                var xs$15\
    \ = xs\n                var xs$16 = xs\n                var xs$17 = xs\n     \
    \           var xs$18 = xs\n                var xs$19 = xs\n                var\
    \ xs$20 = xs\n                var xs$21 = xs\n                var xs$22 = xs\n\
    \                var xs$23 = xs\n                var xs$24 = xs\n            \
    \    var xs$25 = xs\n                var xs$26 = xs\n                var xs$27\
    \ = xs\n                var xs$28 = xs\n                var xs$29 = xs\n     \
    \           var xs$30 = xs\n                var xs$31 = xs\n                var\
    \ xs$32 = xs\n                var xs$33 = xs\n                var xs$34 = xs\n\
    \                var xs$35 = xs\n                var xs$36 = xs\n            \
    \    var xs$37 = xs\n                var xs$38 = xs\n                var xs$39\
    \ = xs\n                var xs$40 = xs\n                var xs$41 = xs\n     \
    \           var xs$42 = xs\n                var xs$43 = xs\n                var\
    \ xs$44 = xs\n                var xs$45 = xs\n                var xs$46 = xs\n\
    \                var xs$47 = xs\n                var xs$48 = xs\n            \
    \    var xs$49 = xs\n                var xs", "        if (l.length < 3) {\n \
    \           false\n        } else {\n            var i = 0\n            var j\
    \ = 0\n            var k = 0\n            while (i < l.length - 2) {\n       \
    \         while (j < l.length - 1) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    k = k + 1\n                        }\n                        k = k + 1\n\
    \                    }\n                    j = j + 1\n                }\n   \
    \             i = i + 1\n            }\n            false\n        }", "     \
    \   if (l.length == 0) {\n            return false\n        } else {\n       \
    \     var i = 0\n            var j = 0\n            var k = 0\n            while\
    \ (i < l.length) {\n                if (l[i] == 0) {\n                    i +=\
    \ 1\n                    continue\n                }\n                while (j\
    \ < l.length) {\n                    if (l[j] == 0) {\n                      \
    \  j += 1\n                        continue\n                    }\n         \
    \           while (k < l.length) {\n                        if (l[k] == 0) {\n\
    \                            k += 1\n                            continue\n  \
    \                      }\n                        if (l[i] + l[j] + l[k] == 0)\
    \ {\n                            return true\n                        }\n    \
    \                    k += 1\n                    }\n                    j += 1\n\
    \                }\n                i += 1\n            }\n            return\
    \ false\n        }", "        if (l.length == 0) {\n            return false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length && j < l.length && k < l.length) {\n\
    \                var sum = l[i] + l[j] + l[k]\n                if (sum == 0) {\n\
    \                    return true\n                } else if (sum > 0) {\n    \
    \                k = k + 1\n                } else {\n                    j =\
    \ j + 1\n                }\n                i = i + 1\n            }\n       \
    \     return false\n        }", "        l.foreach(x => {\n            if (x ==\
    \ 0) {\n                return true\n            }\n            if (x < 0) {\n\
    \                return false\n            }\n            if (x % 2 == 0) {\n\
    \                return false\n            }\n            if (x % 3 == 0) {\n\
    \                return false\n            }\n            if (x % 5 == 0) {\n\
    \                return false\n            }\n            if (x % 7 == 0) {\n\
    \                return false\n            }\n            return true\n      \
    \  })", "        l match {\n            case Nil => false\n            case Cons(x,\
    \ l2) => {\n                if (x == 0) {\n                    triplesSumToZero(l2)\n\
    \                } else {\n                    triplesSumToZero(l2.tail)\n   \
    \             }\n            }\n        }", "        l.foreach(x => {\n      \
    \      if (x != 0) {\n                if (x % 2 == 0) {\n                    x\
    \ /= 2\n                } else {\n                    x = 3 * x + 1\n        \
    \        }\n                if (x == 0) {\n                    return true\n \
    \               }\n            }\n            return false\n        })", "   \
    \     if (l.length < 3) {\n            false\n        } else {\n            for\
    \ (i <- 0 until l.length - 2) {\n                for (j <- i + 1 until l.length\
    \ - 1) {\n                    for (k <- j + 1 until l.length) {\n            \
    \            if (l[i] + l[j] + l[k] == 0) {\n                            true\n\
    \                        } else {\n                            false\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }", "        l.foreach(x => {\n            if (x > 0) {\n           \
    \     if (x == 1) {\n                    return true\n                } else {\n\
    \                    return false\n                }\n            } else {\n \
    \               return false\n            }\n        })", "        var i = 0\n\
    \        while (i < l.length - 2) {\n            var j = i + 1\n            while\
    \ (j < l.length - 1) {\n                var k = j + 1\n                while (k\
    \ < l.length) {\n                    if (l[i] + l[j] + l[k] == 0) {\n        \
    \                return true\n                    }\n                    k = k\
    \ + 1\n                }\n                j = j + 1\n            }\n         \
    \   i = i + 1\n        }\n        return false", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  if (l.length < 3) {\n            return false\n        } else {\n         \
    \   var i = 0\n            var j = 0\n            var k = 0\n            while\
    \ (i < l.length) {\n                while (j < l.length) {\n                 \
    \   while (k < l.length) {\n                        if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                            return true\n                        } else\
    \ {\n                            k += 1\n                        }\n         \
    \           }\n                    j += 1\n                }\n               \
    \ i += 1\n            }\n            return false\n        }", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            var i = 0\n       \
    \     var j = 0\n            var k = 0\n            while (i < l.length) {\n \
    \               while (j < l.length) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    k = k + 1\n                        }\n                    }\n           \
    \         j = j + 1\n                }\n                i = i + 1\n          \
    \  }\n        }\n        false", "        l.foreach(x => {\n            if (x\
    \ > 0) {\n                if (x == 1) {\n                    return true\n   \
    \             } else {\n                    return false\n                }\n\
    \            } else {\n                return false\n            }\n        })",
  "        if (l.size() < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.size() && j < l.size() && k < l.size()) {\n                var a = l.apply(i)\n\
    \                var b = l.apply(j)\n                var c = l.apply(k)\n    \
    \            if (a + b + c == 0) {\n                    true\n               \
    \ } else {\n                    i = i + 1\n                    j = j + 1\n   \
    \                 k = k + 1\n                }\n            }\n            false\n\
    \        }", "        for (i <- 0 until l.length - 2) {\n            for (j <-\
    \ i + 1 until l.length - 1) {\n                for (k <- j + 1 until l.length)\
    \ {\n                    if (l[i] + l[j] + l[k] == 0) {\n                    \
    \    return true\n                    }\n                }\n            }\n  \
    \      }\n        return false", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            while (i < l.length - 2)\
    \ {\n                var j = i + 1\n                while (j < l.length - 1) {\n\
    \                    var k = j + 1\n                    if (l[i] + l[j] + l[k]\
    \ == 0) {\n                        true\n                    } else {\n      \
    \                  j = k\n                    }\n                }\n         \
    \       i = i + 1\n            }\n            false\n        }", "        l match\
    \ {\n            case Nil, Cons(x, Nil) => false\n            case Cons(x, Cons(y,\
    \ Cons(z, Nil))) => x + y + z == 0 && x != y && x != z && y != z\n        }",
  "        for (i <- 0 until l.length - 2) {\n            for (j <- i + 1 until l.length\
    \ - 1) {\n                for (k <- j + 1 until l.length) {\n                \
    \    if (l[i] + l[j] + l[k] == 0) {\n                        return true\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ false", "        if (l.length < 3) {\n            false\n        } else {\n\
    \            for (i <- 0 until l.length - 2) {\n                for (j <- i +\
    \ 1 until l.length - 1) {\n                    for (k <- j + 1 until l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    false\n                        }\n                    }\n               \
    \ }\n            }\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length) {\n                if (l[i] == 0) {\n\
    \                    j = i + 1\n                    while (j < l.length) {\n \
    \                       if (l[j] == 0) {\n                            k = j +\
    \ 1\n                            while (k < l.length) {\n                    \
    \            if (l[k] == 0) {\n                                    return true\n\
    \                                } else {\n                                  \
    \  k = k + 1\n                                }\n                            }\n\
    \                        } else {\n                            j = j + 1\n   \
    \                     }\n                    }\n                } else {\n   \
    \                 i = i + 1\n                }\n            }\n            return\
    \ false\n        }", "        if (l.length < 3) {\n            false\n       \
    \ } else {\n            var i = 0\n            var j = 0\n            var k =\
    \ 0\n            while (i < l.length) {\n                while (j < l.length)\
    \ {\n                    while (k < l.length) {\n                        if (l[i]\
    \ + l[j] + l[k] == 0) {\n                            true\n                  \
    \      } else {\n                            k = k + 1\n                     \
    \   }\n                    }\n                    j = j + 1\n                }\n\
    \                i = i + 1\n            }\n            false\n        }", "  \
    \      if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length - 2) {\n                if (l[i] + l[i + 1] + l[i + 2] == 0) {\n  \
    \                  j = i + 1\n                    k = i + 2\n                \
    \    while (j < l.length - 1) {\n                        if (l[j] + l[j + 1] +\
    \ l[j + 2] == 0) {\n                            k = j + 1\n                  \
    \          while (k < l.length) {\n                                if (l[k] +\
    \ l[k + 1] + l[k + 2] == 0) {\n                                    return true\n\
    \                                } else {\n                                  \
    \  k = k + 1\n                                }\n                            }\n\
    \                        } else {\n                            j = j + 1\n   \
    \                     }\n                    }\n                } else {\n   \
    \                 i = i + 1\n                }\n            }\n            return\
    \ false\n        }", "        if (l.length < 3) {\n            false\n       \
    \ } else {\n            var i = 0\n            var j = 0\n            var k =\
    \ 0\n            while (i < l.length) {\n                while (j < l.length)\
    \ {\n                    while (k < l.length) {\n                        if (l[i]\
    \ + l[j] + l[k] == 0) {\n                            true\n                  \
    \      } else {\n                            k = k + 1\n                     \
    \   }\n                    }\n                    j = j + 1\n                }\n\
    \                i = i + 1\n            }\n            false\n        }", "  \
    \      if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length - 2) {\n                if (l[i] + l[i + 1] + l[i + 2] == 0) {\n  \
    \                  j = i + 1\n                    k = i + 2\n                \
    \    while (j < l.length - 1) {\n                        if (l[j] + l[j + 1] +\
    \ l[j + 2] == 0) {\n                            k = j + 1\n                  \
    \          while (k < l.length) {\n                                if (l[k] +\
    \ l[k + 1] + l[k + 2] == 0) {\n                                    return true\n\
    \                                }\n                                k = k + 1\n\
    \                            }\n                        }\n                  \
    \      j = j + 1\n                    }\n                }\n                i\
    \ = i + 1\n            }\n            return false\n        }", "        for (i\
    \ <- 0 until l.length - 2) {\n            for (j <- i + 1 until l.length - 1)\
    \ {\n                for (k <- j + 1 until l.length) {\n                    if\
    \ (l[i] + l[j] + l[k] == 0) {\n                        return true\n         \
    \           }\n                }\n            }\n        }\n        return false",
  "        if (l.length < 3) {\n            false\n        } else {\n            for\
    \ (i <- 0 until l.length - 2) {\n                for (j <- i + 1 until l.length\
    \ - 1) {\n                    for (k <- j + 1 until l.length) {\n            \
    \            if (l[i] + l[j] + l[k] == 0) {\n                            true\n\
    \                        } else {\n                            false\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }", "        if (l.length < 3) {\n            return false\n        }\
    \ else {\n            var i = 0\n            var j = 1\n            var k = 2\n\
    \            while (j < l.length) {\n                if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                    return true\n                } else if (l[i] + l[j]\
    \ + l[k] > 0) {\n                    k = j\n                    j = i\n      \
    \              i = k + 1\n                } else {\n                    j = i\
    \ + 1\n                }\n            }\n            return false\n        }",
  "        if (l.length < 3) {\n            return false\n        }\n        var i\
    \ = 0\n        var j = 0\n        var k = 0\n        while (i < l.length - 2)\
    \ {\n            var sum = l[i] + l[i + 1] + l[i + 2]\n            if (sum ==\
    \ 0) {\n                j = i\n                k = i + 1\n                break\n\
    \            }\n            i = i + 1\n        }\n        if (j == 0) {\n    \
    \        return false\n        }\n        while (k < l.length - 1) {\n       \
    \     var sum = l[k] + l[k + 1] + l[k + 2]\n            if (sum == 0) {\n    \
    \            return true\n            }\n            k = k + 1\n        }\n  \
    \      return false", "        if (l.length < 3) {\n            false\n      \
    \  } else {\n            for (i <- 0 until l.length - 2) {\n                for\
    \ (j <- i + 1 until l.length - 1) {\n                    for (k <- j + 1 until\
    \ l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n      \
    \                      true\n                        } else {\n              \
    \              false\n                        }\n                    }\n     \
    \           }\n            }\n        }", "        l match {\n            case\
    \ Nil, Cons(x, Nil) => false\n            case Cons(x, Cons(y, Cons(z, Nil)))\
    \ => x + y + z == 0 && x != y && x != z && y != z\n        }", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\n\
    \            if (x < 0) {\n                return false\n            }\n     \
    \       if (x % 2 == 0) {\n                return false\n            }\n     \
    \       if (x % 3 == 0) {\n                return false\n            }\n     \
    \       if (x % 5 == 0) {\n                return false\n            }\n     \
    \       if (x % 7 == 0) {\n                return false\n            }\n     \
    \       return true\n        })", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            for (i <- 0 until l.length - 2) {\n           \
    \     for (j <- i + 1 until l.length - 1) {\n                    for (k <- j +\
    \ 1 until l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n\
    \                            true\n                        } else {\n        \
    \                    false\n                        }\n                    }\n\
    \                }\n            }\n        }", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            var i = 0\n            while\
    \ (i < l.length - 2) {\n                var j = i + 1\n                while (j\
    \ < l.length - 1) {\n                    var k = j + 1\n                    if\
    \ (l[i] + l[j] + l[k] == 0) {\n                        true\n                \
    \    } else {\n                        j = k\n                    }\n        \
    \        }\n                i = i + 1\n            }\n            false\n    \
    \    }", "        if (l.length < 3) {\n            false\n        } else {\n \
    \           for (i <- 0 until l.length - 2) {\n                for (j <- i + 1\
    \ until l.length - 1) {\n                    for (k <- j + 1 until l.length) {\n\
    \                        if (l[i] + l[j] + l[k] == 0) {\n                    \
    \        true\n                        } else {\n                            false\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }", "        if (l.length < 3) {\n            return false\n\
    \        }\n        var i = 0\n        var j = 1\n        var k = 2\n        while\
    \ (j < l.length) {\n            if (l[i] + l[j] + l[k] == 0) {\n             \
    \   return true\n            }\n            if (l[i] + l[j] + l[k] < 0) {\n  \
    \              i = i + 1\n            } else {\n                j = j + 1\n  \
    \          }\n            k = k + 1\n        }\n        return false", "     \
    \   if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length - 2) {\n                while (j < l.length - 1) {\n              \
    \      while (k < l.length) {\n                        if (l[i] + l[j] + l[k]\
    \ == 0) {\n                            true\n                        } else {\n\
    \                            k = k + 1\n                        }\n          \
    \              k = k + 1\n                    }\n                    j = j + 1\n\
    \                }\n                i = i + 1\n            }\n            false\n\
    \        }", "        l.foreach(x => {\n            if (x == 0) {\n          \
    \      return true\n            } else {\n                if (x < 0) {\n     \
    \               return false\n                } else {\n                    return\
    \ triplesSumToZero(l.filter(x - x._))\n                }\n            }\n    \
    \    })", "        l.foreach(x => {\n            if (x == 0) {\n             \
    \   return true\n            }\n            if (x < 0) {\n                return\
    \ false\n            }\n            if (x % 2 == 0) {\n                return\
    \ false\n            }\n            if (x % 3 == 0) {\n                return\
    \ false\n            }\n            if (x % 5 == 0) {\n                return\
    \ false\n            }\n            return true\n        })", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\n\
    \            if (x < 0) {\n                return false\n            }\n     \
    \       if (x == 0) {\n                return false\n            }\n         \
    \   if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0) {\n                return false\n            }\n            if (x ==\
    \ 0) {\n                return false\n            }\n            if (x == 0) {\n\
    \                return false\n            }\n            if (x == 0) {\n    \
    \            return false\n            }\n            if (x == 0) {\n        \
    \        return false\n            }\n            if (x == 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0) {\n                return false\n\
    \            }\n            if (x == 0) {\n                return false\n    \
    \        }\n            if (x == 0) {\n                return false\n        \
    \    }\n            if (x == 0) {\n                return false\n            }\n\
    \            if (x == 0) {\n                return false\n            }\n    \
    \        if (x == 0) {\n                return false\n            }\n        \
    \    if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0) {\n                return false\n            }\n            if (x ==\
    \ 0) {\n                return false\n            }\n            if (x == 0) {\n\
    \                return false\n            }\n            if (x == 0) {\n    \
    \            return false\n            }\n            if (x == 0) {\n        \
    \        return false\n            }\n            if (x == 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0) {\n                return false\n\
    \            }\n            if (x == 0) {\n                return false\n    \
    \        }\n            if (x == 0) {\n                return false\n        \
    \    }\n            if (x == 0) {\n                return false\n            }\n\
    \            if (x == 0) {\n                return false\n            }\n    \
    \        if (x == 0) {\n                return false\n            }\n        \
    \    if (x == 0", "        if (l.size() < 3) {\n            false\n        } else\
    \ {\n            var i = 0\n            var j = 0\n            var k = 0\n   \
    \         while (i < l.size() - 2) {\n                var sum = l.apply(i).toLong\
    \ + l.apply(i + 1).toLong + l.apply(i + 2).toLong\n                if (sum ==\
    \ 0) {\n                    j = i\n                    k = i + 1\n           \
    \         break\n                }\n                i = i + 1\n            }\n\
    \            if (j == 0) {\n                false\n            } else {\n    \
    \            var l2 = l.subList(j, k + 1)\n                if (l2.size() == 3)\
    \ {\n                    true\n                } else {\n                    false\n\
    \                }\n            }\n        }", "        if (l.length < 3) {\n\
    \            return false\n        }\n        var i = 0\n        var j = 0\n \
    \       var k = 0\n        var sum = 0l\n        while (i < l.length) {\n    \
    \        if (j < i) {\n                sum = sum + l[i] - l[j]\n            }\n\
    \            if (k < j) {\n                sum = sum + l[j] - l[k]\n         \
    \   }\n            if (sum == 0l) {\n                return true\n           \
    \ }\n            i = i + 1\n            j = j + 1\n            k = k + 1\n   \
    \     }\n        return false", "        if (l.length == 0) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length) {\n                var sum = l[i] +\
    \ l[j] + l[k]\n                if (sum == 0) {\n                    true\n   \
    \             } else if (sum < 0) {\n                    i = i + 1\n         \
    \       } else {\n                    j = j + 1\n                }\n         \
    \       k = k + 1\n            }\n            false\n        }", "        if (l.length\
    \ < 3) {\n            return false\n        }\n        var i = 0\n        var\
    \ j = 0\n        var k = 0\n        while (i < l.length - 2) {\n            var\
    \ sum = l[i] + l[i + 1] + l[i + 2]\n            if (sum == 0) {\n            \
    \    j = i\n                k = i + 1\n                break\n            }\n\
    \            i = i + 1\n        }\n        if (j == 0) {\n            return false\n\
    \        }\n        i = j + 1\n        while (i < l.length) {\n            var\
    \ sum = l[i] + l[j] + l[k]\n            if (sum == 0) {\n                return\
    \ true\n            }\n            i = i + 1\n        }\n        return false",
  "        for (i <- 0 until l.length - 2) {\n            for (j <- i + 1 until l.length\
    \ - 1) {\n                for (k <- j + 1 until l.length) {\n                \
    \    if (l[i] + l[j] + l[k] == 0) {\n                        return true\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ false\n    }\n\n    // triples_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns true if there are three distinct elements in the list that\n\
    \    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((List[Long](1l.toLong,\
    \ 3l.toLong, 5l.toLong, 0l.toLong)))\n    // (false)\n    // >>> triplesSumToZero((List[Long](1l.toLong,\
    \ 3l.toLong, -2l.toLong, 1l.toLong)))\n    // (true)\n    // >>> triplesSumToZero((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 7l.toLong)))\n    // (false)\n    // >>> triplesSumToZero((List[Long](2l.toLong,\
    \ 4l.toLong, -5l.toLong, 3l.toLong, 9l.toLong, 7l.toLong)))\n    // (true)\n \
    \   // >>> triplesSumToZero((List[Long](1l.toLong)))\n    // (false)\n    def\
    \ triplesSumToZero2(l : List[Long]) : Boolean = {\n        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  l.foreach(x => {\n            if (x == 0) {\n                return true\n\
    \            }\n            if (x > 0) {\n                return false\n     \
    \       }\n            if (x < 0) {\n                return false\n          \
    \  }\n        })\n        return false", "        if (l.length < 3) {\n      \
    \      false\n        } else {\n            var i = 0\n            while (i <\
    \ l.length - 2) {\n                var j = i + 1\n                while (j < l.length\
    \ - 1) {\n                    var k = j + 1\n                    if (l[i] + l[j]\
    \ + l[k] == 0) {\n                        true\n                    } else {\n\
    \                        j = k\n                    }\n                }\n   \
    \             i = i + 1\n            }\n            false\n        }", "     \
    \   if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length) {\n                if (l[i] + l[j] + l[k] == 0) {\n              \
    \      true\n                } else {\n                    i = i + 1\n       \
    \             j = j + 1\n                    k = k + 1\n                }\n  \
    \          }\n            false\n        }", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\n\
    \            if (x < 0) {\n                return false\n            }\n     \
    \       if (x % 2 == 0) {\n                return false\n            }\n     \
    \       if (x % 3 == 0) {\n                return true\n            }\n      \
    \      return false\n        })", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                if (l[i] + l[i\
    \ + 1] + l[i + 2] == 0) {\n                    j = i + 1\n                   \
    \ k = i + 2\n                    while (j < l.length - 1) {\n                \
    \        if (l[j] + l[j + 1] == 0) {\n                            k = j + 1\n\
    \                            break\n                        }\n              \
    \          j = j + 1\n                    }\n                    if (k == l.length\
    \ - 1) {\n                        true\n                    }\n              \
    \  }\n                i = i + 1\n            }\n        }", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\n\
    \            if (x < 0) {\n                return false\n            }\n     \
    \       if (x % 2 == 0) {\n                return false\n            }\n     \
    \       if (x % 3 == 0) {\n                return false\n            }\n     \
    \       if (x % 5 == 0) {\n                return false\n            }\n     \
    \       return true\n        })", "        if (l.length == 0) {\n            return\
    \ false\n        } else {\n            var i = 0\n            var j = 0\n    \
    \        var k = 0\n            var sum = 0\n            while (i < l.length)\
    \ {\n                while (j < l.length) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            return true\n                        } else {\n                 \
    \           k = k + 1\n                        }\n                    }\n    \
    \                k = 0\n                    j = j + 1\n                }\n   \
    \             j = 0\n                i = i + 1\n            }\n            return\
    \ false\n        }", "        l match {\n            case Nil => false\n     \
    \       case Cons(a, b, c) => a + b + c == 0 && b + c == 0 && a + c == 0 && b\
    \ + a == 0 && c + b == 0 && a + b + c == 0\n        }", "        if (l.length\
    \ < 3) {\n            return false\n        }\n        var i = 0\n        var\
    \ j = 0\n        var k = 0\n        while (i < l.length && j < l.length && k <\
    \ l.length) {\n            var sum = l[i] + l[j] + l[k]\n            if (sum ==\
    \ 0) {\n                return true\n            } else if (sum < 0) {\n     \
    \           i += 1\n            } else {\n                j += 1\n           \
    \ }\n            k += 1\n        }\n        return false", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            var i = 0\n       \
    \     var j = 0\n            var k = 0\n            while (i < l.length - 2) {\n\
    \                var sum = l[i] + l[i + 1] + l[i + 2]\n                if (sum\
    \ == 0) {\n                    j = i\n                    k = i + 1\n        \
    \            break\n                }\n                i = i + 1\n           \
    \ }\n            if (j == 0) {\n                true\n            } else {\n \
    \               var l2 = l.subList(j, k)\n                if (l2.length == 3)\
    \ {\n                    true\n                } else {\n                    false\n\
    \                }\n            }\n        }", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            var i = 0\n       \
    \     var j = 0\n            var k = 0\n            while (i < l.length - 2) {\n\
    \                var sum = l[i] + l[i + 1] + l[i + 2]\n                if (sum\
    \ == 0) {\n                    j = i\n                    k = i + 1\n        \
    \            break\n                }\n                i = i + 1\n           \
    \ }\n            if (j == 0) {\n                false\n            } else {\n\
    \                var l1 = l.slice(j, k)\n                var l2 = l.slice(k, l.length)\n\
    \                if (l1.length == 3 && l2.length == 3) {\n                   \
    \ true\n                } else {\n                    false\n                }\n\
    \            }\n        }", "        if (l.size() < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            while (i < l.size() - 2)\
    \ {\n                var j = i + 1\n                while (j < l.size() - 1) {\n\
    \                    var k = j + 1\n                    if (l.apply(i).toLong\
    \ + l.apply(j).toLong + l.apply(k).toLong == 0) {\n                        true\n\
    \                    } else {\n                        false\n               \
    \     }\n                    j = k\n                }\n                i = i +\
    \ 1\n            }\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length) {\n                while (j < l.length)\
    \ {\n                    while (k < l.length) {\n                        if (l[i]\
    \ + l[j] + l[k] == 0) {\n                            true\n                  \
    \      } else {\n                            k = k + 1\n                     \
    \   }\n                    }\n                    j = j + 1\n                }\n\
    \                i = i + 1\n            }\n            false\n        }", "  \
    \      if (l.length < 3) {\n            return false\n        }\n        var i\
    \ = 0\n        var j = 0\n        var k = 0\n        while (i < l.length - 2)\
    \ {\n            if (l[i] + l[i + 1] + l[i + 2] == 0) {\n                j = i\
    \ + 1\n                k = i + 2\n                while (j < l.length - 1) {\n\
    \                    if (l[j] + l[j + 1] + l[j + 2] == 0) {\n                \
    \        k = j + 1\n                        while (k < l.length) {\n         \
    \                   if (l[k] + l[k + 1] + l[k + 2] == 0) {\n                 \
    \               return true\n                            }\n                 \
    \           k = k + 1\n                        }\n                    }\n    \
    \                j = j + 1\n                }\n            }\n            i =\
    \ i + 1\n        }\n        return false", "        l match {\n            case\
    \ Nil => false\n            case Cons(a, b, c) =>\n                a.toLong +\
    \ b.toLong + c.toLong == 0 &&\n                b.toLong + c.toLong == 0 &&\n \
    \               a.toLong + c.toLong == 0\n        }", "        if (l.length <\
    \ 3) {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  if (l.length < 3) {\n            return false\n        }\n        var i = 0\n\
    \        var j = 0\n        var k = 0\n        while (i < l.length - 2) {\n  \
    \          if (l[i] + l[i + 1] + l[i + 2] == 0) {\n                j = i + 1\n\
    \                k = i + 2\n                while (j < l.length - 1) {\n     \
    \               if (l[j] + l[j + 1] + l[j + 2] == 0) {\n                     \
    \   k = j + 1\n                        while (k < l.length) {\n              \
    \              if (l[k] + l[k + 1] + l[k + 2] == 0) {\n                      \
    \          return true\n                            }\n                      \
    \      k = k + 1\n                        }\n                    }\n         \
    \           j = j + 1\n                }\n            }\n            i = i + 1\n\
    \        }\n        return false", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                var sum = l[i]\
    \ + l[i + 1] + l[i + 2]\n                if (sum == 0) {\n                   \
    \ j = i\n                    k = i + 1\n                    break\n          \
    \      }\n                i = i + 1\n            }\n            if (j == 0) {\n\
    \                true\n            } else {\n                var l2 = l.subList(j,\
    \ k)\n                if (l2.length == 3) {\n                    true\n      \
    \          } else {\n                    false\n                }\n          \
    \  }\n        }", "        l.foreach(x => {\n            if (x > 0) {\n      \
    \          x = x - 1\n                if (x == 0) {\n                    return\
    \ true\n                } else {\n                    return false\n         \
    \       }\n            } else {\n                return false\n            }\n\
    \        })", "        if (l.length < 3) {\n            false\n        } else\
    \ {\n            var i = 0\n            var j = 0\n            var k = 0\n   \
    \         while (i < l.length) {\n                while (j < l.length) {\n   \
    \                 while (k < l.length) {\n                        if (l[i] + l[j]\
    \ + l[k] == 0) {\n                            true\n                        }\
    \ else {\n                            k = k + 1\n                        }\n \
    \                   }\n                    j = j + 1\n                }\n    \
    \            i = i + 1\n            }\n            false\n        }", "      \
    \  if (l.length < 3) {\n            return false\n        }\n        var i = 0\n\
    \        var j = 0\n        var k = 0\n        while (i < l.length) {\n      \
    \      if (l[i] == 0) {\n                j = i + 1\n                while (j <\
    \ l.length && l[j] == 0) {\n                    j += 1\n                }\n  \
    \              if (j - i == 3) {\n                    k = j + 1\n            \
    \        while (k < l.length && l[k] == 0) {\n                        k += 1\n\
    \                    }\n                    if (k - j == 3) {\n              \
    \          return true\n                    }\n                }\n           \
    \ }\n            i += 1\n        }\n        return false", "        if (l.length\
    \ < 3) {\n            return false\n        }\n        var i = 0\n        var\
    \ j = 0\n        var k = 0\n        var sum = 0\n        while (i < l.length)\
    \ {\n            if (l[i] == 0) {\n                sum = 0\n                j\
    \ = i + 1\n                while (j < l.length) {\n                    if (l[j]\
    \ != 0) {\n                        sum = sum + l[j]\n                        k\
    \ = j + 1\n                        while (k < l.length) {\n                  \
    \          if (l[k] == 0) {\n                                return true\n   \
    \                         }\n                            if (l[k] == l[j]) {\n\
    \                                return false\n                            }\n\
    \                            k = k + 1\n                        }\n          \
    \          }\n                    j = j + 1\n                }\n            }\n\
    \            i = i + 1\n        }\n        return false", "        if (l.length\
    \ == 0) {\n            return false\n        } else {\n            var i = 0\n\
    \            var j = 0\n            var k = 0\n            while (i < l.length)\
    \ {\n                var sum = l[i] + l[j] + l[k]\n                if (sum ==\
    \ 0) {\n                    return true\n                } else if (sum < 0) {\n\
    \                    i = i + 1\n                } else if (sum > 0) {\n      \
    \              j = j + 1\n                } else {\n                    k = k\
    \ + 1\n                }\n            }\n            return false\n        }",
  "        l.foreach(x => {\n            if (x > 0) {\n                if (x == 1)\
    \ {\n                    return true\n                } else {\n             \
    \       return false\n                }\n            } else {\n              \
    \  return false\n            }\n        })", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        l match {\n\
    \            case Nil => false\n            case Cons(x, l2) => {\n          \
    \      if (x.toLong + l2.head.toLong == 0) {\n                    triplesSumToZero(l2.tail)\n\
    \                } else {\n                    triplesSumToZero(l2)\n        \
    \        }\n            }\n        }", "        if (l.size == 0) {\n         \
    \   false\n        } else {\n            var i = 0\n            while (i < l.size\
    \ - 2) {\n                var j = i + 1\n                while (j < l.size - 1)\
    \ {\n                    var k = j + 1\n                    while (k < l.size)\
    \ {\n                        if (l(i) + l(j) + l(k) == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    false\n                        }\n                        k = k + 1\n   \
    \                 }\n                    j = j + 1\n                }\n      \
    \          i = i + 1\n            }\n            false\n        }", "        l.foreach(x\
    \ => {\n            if (x == 0) {\n                return true\n            }\n\
    \            if (x < 0) {\n                return false\n            }\n     \
    \       if (x % 2 == 0) {\n                return false\n            }\n     \
    \       if (x % 3 == 0) {\n                return false\n            }\n     \
    \       if (x % 5 == 0) {\n                return false\n            }\n     \
    \       return true\n        })", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length) {\n                while (j < l.length)\
    \ {\n                    while (k < l.length) {\n                        if (l[i]\
    \ + l[j] + l[k] == 0) {\n                            true\n                  \
    \      } else {\n                            k = k + 1\n                     \
    \   }\n                    }\n                    j = j + 1\n                }\n\
    \                i = i + 1\n            }\n            false\n        }", "  \
    \      if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length - 2) {\n                while (j < l.length - 1) {\n              \
    \      while (k < l.length) {\n                        if (l[i] + l[j] + l[k]\
    \ == 0) {\n                            true\n                        } else {\n\
    \                            k = k + 1\n                        }\n          \
    \              k = k + 1\n                    }\n                    j = j + 1\n\
    \                }\n                i = i + 1\n            }\n            false\n\
    \        }", "        l.foreach(x => {\n            if (x > 0) {\n           \
    \     if (x % 2 == 0) {\n                    if (x % 3 == 0) {\n             \
    \           if (x % 5 == 0) {\n                            return true\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        })\n        return false", "        if (l.length < 3) {\n           \
    \ false\n        } else {\n            var i = 0\n            var j = 0\n    \
    \        var k = 0\n            while (i < l.length && j < l.length && k < l.length)\
    \ {\n                if (l[i] + l[j] + l[k] == 0) {\n                    true\n\
    \                } else {\n                    i = i + 1\n                   \
    \ j = j + 1\n                    k = k + 1\n                }\n            }\n\
    \            false\n        }", "        if (l.length < 3) {\n            return\
    \ false\n        }\n        var i = 0\n        var j = 0\n        var k = 0\n\
    \        while (i < l.length) {\n            if (l[i] == 0) {\n              \
    \  i += 1\n                continue\n            }\n            while (j < l.length)\
    \ {\n                if (l[j] == 0) {\n                    j += 1\n          \
    \          continue\n                }\n                while (k < l.length) {\n\
    \                    if (l[k] == 0) {\n                        k += 1\n      \
    \                  continue\n                    }\n                    if (l[i]\
    \ + l[j] + l[k] == 0) {\n                        return true\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        return false", "      \
    \  if (l.length < 3) {\n            false\n        } else {\n            var i\
    \ = 0\n            var j = 0\n            var k = 0\n            while (i < l.length\
    \ - 2) {\n                if (l[i] + l[i + 1] + l[i + 2] == 0) {\n           \
    \         j = i\n                    k = i + 1\n                    while (k <\
    \ l.length - 1) {\n                        if (l[k] + l[k + 1] + l[k + 2] == 0)\
    \ {\n                            k += 1\n                        } else {\n  \
    \                          break\n                        }\n                \
    \    }\n                    if (k == l.length - 1) {\n                       \
    \ true\n                    }\n                }\n                i += 1\n   \
    \         }\n        }", "        if (l.length < 3) {\n            false\n   \
    \     } else {\n            for (i <- 0 until l.length - 2) {\n              \
    \  for (j <- i + 1 until l.length - 1) {\n                    for (k <- j + 1\
    \ until l.length) {\n                        if (l[i] + l[j] + l[k] == 0) {\n\
    \                            true\n                        } else {\n        \
    \                    false\n                        }\n                    }\n\
    \                }\n            }\n        }", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        l match {\n\
    \            case Nil, Cons(x, xs) => {\n                if (xs.isEmpty) {\n \
    \                   false\n                } else {\n                    triplesSumToZero(xs)\
    \ && x == 0 && xs.length == 3\n                }\n            }\n        }", " \
    \       if (l.length < 3) {\n            false\n        } else {\n           \
    \ for (i <- 0 until l.length - 2) {\n                for (j <- i + 1 until l.length\
    \ - 1) {\n                    for (k <- j + 1 until l.length) {\n            \
    \            if (l[i] + l[j] + l[k] == 0) {\n                            true\n\
    \                        } else {\n                            false\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }", "        l.foreach(x => {\n            if (x == 0) {\n          \
    \      return true\n            }\n            if (x < 0) {\n                x\
    \ = -x\n            }\n            if (x % 2 == 0) {\n                return false\n\
    \            }\n            if (x % 3 == 0) {\n                return false\n\
    \            }\n            return true\n        })", "        if (l.length <\
    \ 3) {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  for (i <- 0 until l.length - 2) {\n            for (j <- i + 1 until l.length\
    \ - 1) {\n                for (k <- j + 1 until l.length) {\n                \
    \    if (l[i] + l[j] + l[k] == 0) {\n                        return true\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ false", "        if (l.length < 3) {\n            false\n        } else {\n\
    \            var i = 0\n            var j = 0\n            var k = 0\n       \
    \     while (i < l.length - 2) {\n                if (l[i] + l[i + 1] + l[i +\
    \ 2] == 0) {\n                    j = i + 1\n                    k = i + 2\n \
    \                   while (j < l.length - 1) {\n                        if (l[j]\
    \ + l[j + 1] == 0) {\n                            k = j + 1\n                \
    \            while (k < l.length) {\n                                if (l[k]\
    \ == 0) {\n                                    true\n                        \
    \        } else {\n                                    false\n               \
    \                 }\n                                k = k + 1\n             \
    \               }\n                        } else {\n                        \
    \    j = j + 1\n                        }\n                    }\n           \
    \     } else {\n                    i = i + 1\n                }\n           \
    \ }\n        }", "        l.foreach(x => {\n            if (x == 0) {\n      \
    \          return true\n            }\n            if (x < 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0) {\n                return false\n\
    \            }\n            if (x == 0) {\n                return false\n    \
    \        }\n            if (x == 0) {\n                return false\n        \
    \    }\n            if (x == 0) {\n                return false\n            }\n\
    \            if (x == 0) {\n                return false\n            }\n    \
    \        if (x == 0) {\n                return false\n            }\n        \
    \    if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0) {\n                return false\n            }\n            if (x ==\
    \ 0) {\n                return false\n            }\n            if (x == 0) {\n\
    \                return false\n            }\n            if (x == 0) {\n    \
    \            return false\n            }\n            if (x == 0) {\n        \
    \        return false\n            }\n            if (x == 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0) {\n                return false\n\
    \            }\n            if (x == 0) {\n                return false\n    \
    \        }\n            if (x == 0) {\n                return false\n        \
    \    }\n            if (x == 0) {\n                return false\n            }\n\
    \            if (x == 0) {\n                return false\n            }\n    \
    \        if (x == 0) {\n                return false\n            }\n        \
    \    if (x == 0) {\n                return false\n            }\n            if\
    \ (x == 0) {\n                return false\n            }\n            if (x ==\
    \ 0) {\n                return false\n            }\n            if (x == 0) {\n\
    \                return false\n            }\n            if (x == 0) {\n    \
    \            return false\n            }\n            if (x == 0) {\n        \
    \        return false\n            }\n            if (x == 0) {\n            \
    \    return false\n            }\n            if (x == 0) {\n                return\
    \ false\n            }\n            if (x == 0", "        for (i <- 0 until l.length\
    \ - 2) {\n            for (j <- i + 1 until l.length - 1) {\n                for\
    \ (k <- j + 1 until l.length) {\n                    if (l[i] + l[j] + l[k] ==\
    \ 0) {\n                        return true\n                    }\n         \
    \       }\n            }\n        }\n        return false", "        for (i <-\
    \ 0 until l.length - 2) {\n            for (j <- i + 1 until l.length - 1) {\n\
    \                for (k <- j + 1 until l.length) {\n                    if (l[i]\
    \ + l[j] + l[k] == 0) {\n                        return true\n               \
    \     }\n                }\n            }\n        }\n        return false", " \
    \       if (l.length < 3) {\n            false\n        } else {\n           \
    \ var i = 0\n            while (i < l.length - 2) {\n                var j = i\
    \ + 1\n                while (j < l.length - 1) {\n                    var k =\
    \ j + 1\n                    if (l[i] + l[j] + l[k] == 0) {\n                \
    \        true\n                    } else {\n                        j = k\n \
    \                   }\n                }\n                i = i + 1\n        \
    \    }\n            false\n        }", "        if (l.length < 3) {\n        \
    \    false\n        } else {\n            var i = 0\n            var j = 0\n \
    \           var k = 0\n            while (i < l.length - 2) {\n              \
    \  if (l[i] + l[i + 1] + l[i + 2] == 0) {\n                    j = i + 1\n   \
    \                 k = i + 2\n                    while (j < l.length - 1) {\n\
    \                        if (l[j] + l[j + 1] + l[j + 2] == 0) {\n            \
    \                k = j + 1\n                            while (k < l.length) {\n\
    \                                if (l[k] + l[k + 1] + l[k + 2] == 0) {\n    \
    \                                return true\n                               \
    \ }\n                                k = k + 1\n                            }\n\
    \                        }\n                        j = j + 1\n              \
    \      }\n                }\n                i = i + 1\n            }\n      \
    \      return false\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                var sum = l[i]\
    \ + l[i + 1] + l[i + 2]\n                if (sum == 0) {\n                   \
    \ j = i\n                    k = i + 1\n                    break\n          \
    \      }\n                i = i + 1\n            }\n            if (j == 0) {\n\
    \                false\n            } else {\n                if (k == 0) {\n\
    \                    true\n                } else {\n                    if (l[j]\
    \ == l[k]) {\n                        true\n                    } else {\n   \
    \                     false\n                    }\n                }\n      \
    \      }\n        }", "        if (l.length < 3) {\n            return false\n\
    \        }\n        var i = 0\n        var j = 0\n        var k = 0\n        while\
    \ (i < l.length) {\n            var sum = l[i] + l[j] + l[k]\n            if (sum\
    \ == 0) {\n                return true\n            } else if (sum > 0) {\n  \
    \              k = j\n                j = i\n            } else {\n          \
    \      i = i + 1\n            }\n        }\n        return false", "        if\
    \ (l.length == 0) {\n            return false\n        } else {\n            var\
    \ i = 0\n            var j = 0\n            var k = 0\n            while (i <\
    \ l.length && j < l.length && k < l.length) {\n                if (l[i] + l[j]\
    \ + l[k] == 0) {\n                    return true\n                } else if (l[i]\
    \ + l[j] + l[k] > 0) {\n                    k = k + 1\n                } else\
    \ {\n                    j = j + 1\n                }\n                i = i +\
    \ 1\n            }\n            return false\n        }", "        l.foreach(x\
    \ => {\n            if (x == 0) return true\n            if (x < 0) return false\n\
    \            if (x % 2 == 0) return false\n            if (x % 3 == 0) return\
    \ true\n            if (x % 5 == 0) return true\n            return false\n  \
    \      })", "        if (l.length < 3) {\n            false\n        } else {\n\
    \            var i = 0\n            var j = 0\n            var k = 0\n       \
    \     while (i < l.length - 2) {\n                var sum = l[i] + l[i + 1] +\
    \ l[i + 2]\n                if (sum == 0) {\n                    j = i\n     \
    \               k = i + 1\n                    break\n                }\n    \
    \            i = i + 1\n            }\n            if (j == 0) {\n           \
    \     false\n            } else {\n                if (k == 0) {\n           \
    \         true\n                } else {\n                    if (l[j] == l[k])\
    \ {\n                        true\n                    } else {\n            \
    \            false\n                    }\n                }\n            }\n\
    \        }", "        if (l.length == 0) {\n            return false\n       \
    \ } else {\n            var i = 0\n            var j = 0\n            var k =\
    \ 0\n            while (i < l.length) {\n                while (j < l.length)\
    \ {\n                    while (k < l.length) {\n                        if (l[i]\
    \ + l[j] + l[k] == 0) {\n                            return true\n           \
    \             }\n                        k = k + 1\n                    }\n  \
    \                  j = j + 1\n                }\n                i = i + 1\n \
    \           }\n            return false\n        }", "        if (l.length < 3)\
    \ {\n            false\n        } else {\n            var i = 0\n            var\
    \ j = 0\n            var k = 0\n            while (i < l.length - 2) {\n     \
    \           while (j < l.length - 1) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    k = k + 1\n                        }\n                        k = k + 1\n\
    \                    }\n                    j = j + 1\n                }\n   \
    \             i = i + 1\n            }\n            false\n        }", "     \
    \   if (l.length < 3) {\n            false\n        } else {\n            var\
    \ i = 0\n            while (i < l.length - 2) {\n                var j = i + 1\n\
    \                while (j < l.length - 1) {\n                    var k = j + 1\n\
    \                    if (l[i] + l[j] + l[k] == 0) {\n                        true\n\
    \                    } else {\n                        j = k\n               \
    \     }\n                }\n                i = i + 1\n            }\n       \
    \     false\n        }", "        if (l.length < 3) {\n            false\n   \
    \     } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length) {\n                while (j < l.length)\
    \ {\n                    while (k < l.length) {\n                        if (l[i]\
    \ + l[j] + l[k] == 0) {\n                            true\n                  \
    \      } else {\n                            k = k + 1\n                     \
    \   }\n                    }\n                    j = j + 1\n                }\n\
    \                i = i + 1\n            }\n            false\n        }", "  \
    \      if (l.size == 0) {\n            return false\n        } else {\n      \
    \      var i = 0\n            var j = 0\n            var k = 0\n            var\
    \ sum = 0\n            while (i < l.size) {\n                sum = l.apply(i)\
    \ + l.apply(j) + l.apply(k)\n                if (sum == 0) {\n               \
    \     return true\n                } else if (sum < 0) {\n                   \
    \ i = i + 1\n                } else if (sum > 0) {\n                    j = j\
    \ + 1\n                } else {\n                    k = k + 1\n             \
    \   }\n            }\n            return false\n        }", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            for (i <- 0 until l.length\
    \ - 2) {\n                for (j <- i + 1 until l.length - 1) {\n            \
    \        for (k <- j + 1 until l.length) {\n                        if (l[i] +\
    \ l[j] + l[k] == 0) {\n                            true\n                    \
    \    } else {\n                            false\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  if (l.length < 3) {\n            false\n        } else {\n            var i\
    \ = 0\n            var j = 0\n            var k = 0\n            while (i < l.length\
    \ - 2) {\n                var sum = l[i] + l[i + 1] + l[i + 2]\n             \
    \   if (sum == 0) {\n                    j = i\n                    k = i + 1\n\
    \                    break\n                }\n                i = i + 1\n   \
    \         }\n            if (j == 0) {\n                true\n            } else\
    \ {\n                var l2 = l.subList(j, k + 1)\n                if (l2.length\
    \ == 3) {\n                    true\n                } else {\n              \
    \      false\n                }\n            }\n        }", "        if (l.length\
    \ < 3) {\n            false\n        } else {\n            var i = 0\n       \
    \     var j = 0\n            var k = 0\n            while (i < l.length - 2) {\n\
    \                var sum = l[i] + l[i + 1] + l[i + 2]\n                if (sum\
    \ == 0) {\n                    j = i\n                    k = i + 1\n        \
    \            break\n                }\n                i = i + 1\n           \
    \ }\n            if (j == 0) {\n                true\n            } else {\n \
    \               var l2 = l.subList(j, k)\n                if (l2.length == 3)\
    \ {\n                    true\n                } else {\n                    false\n\
    \                }\n            }\n        }", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            var i = 0\n            var j\
    \ = 0\n            var k = 0\n            while (i < l.length - 2) {\n       \
    \         while (j < l.length - 1) {\n                    while (k < l.length)\
    \ {\n                        if (l[i] + l[j] + l[k] == 0) {\n                \
    \            true\n                        } else {\n                        \
    \    k = k + 1\n                        }\n                        k = k + 1\n\
    \                    }\n                    j = j + 1\n                }\n   \
    \             i = i + 1\n            }\n            false\n        }", "     \
    \   l.foreach(x => {\n            if (x == 0) {\n                return true\n\
    \            }\n            if (x < 0) {\n                return false\n     \
    \       }\n            if (x % 2 == 0) {\n                return false\n     \
    \       }\n            if (x % 3 == 0) {\n                return false\n     \
    \       }\n            if (x % 5 == 0) {\n                return false\n     \
    \       }\n            if (x % 7 == 0) {\n                return false\n     \
    \       }\n            return true\n        })", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            var a : Long = l.head\n    \
    \        var b : Long = l.tail.head\n            var c : Long = l.tail.tail.head\n\
    \            var d : Long = l.tail.tail.tail.head\n            var e : Long =\
    \ l.tail.tail.tail.tail.head\n            var f : Long = l.tail.tail.tail.tail.tail.head\n\
    \            var g : Long = l.tail.tail.tail.tail.tail.tail.head\n           \
    \ var h : Long = l.tail.tail.tail.tail.tail.tail.tail.head\n            var i\
    \ : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.head\n            var j :\
    \ Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n            var\
    \ k : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n      \
    \      var l : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var m : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var n : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var o : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var p : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var q : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var r : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var s : Long = l.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \            var t", "        if (l.length < 3) {\n            false\n       \
    \ } else {\n            var i = 0\n            var j = 0\n            var k =\
    \ 0\n            while (i < l.length) {\n                if (l[i] + l[j] + l[k]\
    \ == 0) {\n                    j++\n                    k++\n                }\
    \ else {\n                    j = 0\n                    k = 0\n             \
    \   }\n                i++\n            }\n            if (j == 3) {\n       \
    \         true\n            } else {\n                false\n            }\n \
    \       }", "        if (l.length < 3) {\n            false\n        } else {\n\
    \            var i = 0\n            while (i < l.length - 2) {\n             \
    \   var j = i + 1\n                while (j < l.length - 1) {\n              \
    \      var k = j + 1\n                    if (l[i] + l[j] + l[k] == 0) {\n   \
    \                     true\n                    } else {\n                   \
    \     j = k\n                    }\n                }\n                i = i +\
    \ 1\n            }\n            false\n        }", "        for (i <- 0 until\
    \ l.length - 2) {\n            for (j <- i + 1 until l.length - 1) {\n       \
    \         for (k <- j + 1 until l.length) {\n                    if (l[i] + l[j]\
    \ + l[k] == 0) {\n                        return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ l match {\n            case Nil, Cons(x, xs) =>\n                if (xs.isEmpty)\
    \ {\n                    false\n                } else {\n                   \
    \ triplesSumToZero(xs) && x == 0 && xs.length == 3\n                }\n      \
    \      case _ => true\n        }", "        if (l.length < 3) {\n            return\
    \ false\n        }\n        var i = 0\n        var j = 0\n        var k = 0\n\
    \        while (i < l.length - 2) {\n            if (l[i] + l[i + 1] + l[i + 2]\
    \ == 0) {\n                j = i + 1\n                k = i + 2\n            \
    \    while (j < l.length - 1) {\n                    if (l[j] + l[j + 1] + l[j\
    \ + 2] == 0) {\n                        k = j + 1\n                        while\
    \ (k < l.length) {\n                            if (l[k] + l[k + 1] + l[k + 2]\
    \ == 0) {\n                                return true\n                     \
    \       }\n                            k = k + 1\n                        }\n\
    \                    }\n                    j = j + 1\n                }\n   \
    \         }\n            i = i + 1\n        }\n        return false", "      \
    \  l.foreach(x => {\n            if (x == 0) {\n                return true\n\
    \            }\n            if (x < 0) {\n                return false\n     \
    \       }\n            if (x % 2 == 0) {\n                return false\n     \
    \       }\n            if (x % 3 == 0) {\n                return false\n     \
    \       }\n            if (x % 5 == 0) {\n                return false\n     \
    \       }\n            if (x % 7 == 0) {\n                return false\n     \
    \       }\n            return true\n        })", "        if (l.length < 3) {\n\
    \            false\n        } else {\n            var i = 0\n            var j\
    \ = 0\n            var k = 0\n            while (i < l.length - 2) {\n       \
    \         var sum = l[i] + l[i + 1] + l[i + 2]\n                if (sum == 0)\
    \ {\n                    j = i\n                    k = i + 1\n              \
    \      break\n                }\n                i = i + 1\n            }\n  \
    \          if (j == 0) {\n                false\n            } else {\n      \
    \          var l1 = l.slice(j, k)\n                var l2 = l.slice(k, l.length)\n\
    \                if (l1.length == 3 && l2.length == 3) {\n                   \
    \ true\n                } else {\n                    false\n                }\n\
    \            }\n        }", "        if (l.length < 3) {\n            false\n\
    \        } else {\n            var i = 0\n            var j = 0\n            var\
    \ k = 0\n            while (i < l.length - 2) {\n                if (l[i] + l[i\
    \ + 1] + l[i + 2] == 0) {\n                    j = i + 1\n                   \
    \ k = i + 2\n                    while (j < l.length - 1) {\n                \
    \        if (l[j] + l[j + 1] + l[j + 2] == 0) {\n                            k\
    \ = j + 1\n                            while (k < l.length) {\n              \
    \                  if (l[k] + l[k + 1] + l[k + 2] == 0) {\n                  \
    \                  return true\n                                }\n          \
    \                      k = k + 1\n                            }\n            \
    \            }\n                        j = j + 1\n                    }\n   \
    \             }\n                i = i + 1\n            }\n            return\
    \ false\n        }", "        l.foreach(x => {\n            if (x > 0) {\n   \
    \             if (x % 2 == 0) {\n                    if (x % 3 == 0) {\n     \
    \                   return true\n                    }\n                }\n  \
    \          }\n            return false\n        })", "        if (l.length < 3)\
    \ {\n            return false\n        }\n        var i = 0\n        var j = 1\n\
    \        var k = 2\n        while (j < l.length) {\n            if (l[i] + l[j]\
    \ + l[k] == 0) {\n                return true\n            }\n            if (l[i]\
    \ + l[j] + l[k] > 0) {\n                k = j\n            } else {\n        \
    \        j = i\n            }\n            i = j\n            j = k\n        \
    \    k = i + 1\n        }\n        return false", "        if (l.length < 3) {\n\
    \            return false\n        }\n        var i = 0\n        var j = 0\n \
    \       var k = 0\n        var sum = 0l\n        while (i < l.length) {\n    \
    \        sum = l[i] + l[j] + l[k]\n            if (sum == 0l) {\n            \
    \    return true\n            }\n            if (sum < 0l) {\n               \
    \ i = i + 1\n            } else {\n                j = j + 1\n            }\n\
    \            if (sum > 0l) {\n                k = k + 1\n            }\n     \
    \   }\n        return false"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_34_unique",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))).equals((List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))));\n    }\n\n}\n",
  "completions": [
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>>",
    "        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size()) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                } else {\n                    result.add(e)\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size()) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                } else {\n                    result.add(e)\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == 1) {\n                result = result.append(l.head)\n                break\n            }\n            if (l.head == l.tail.head) {\n                result = result.append(l.head)\n                l = l.tail\n            } else {\n                l = l.tail\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == 1) {\n                result = result.append(l.head)\n                break\n            }\n            if (l.head == l.tail.head) {\n                result = result.append(l.head)\n                l = l.tail\n            } else {\n                l = l.tail\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            if (result.contains(e)) continue\n            result += e\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            if (result.contains(e)) continue\n            result += e\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123, -123)))\n    // (List[Int](0, 2, 3, 5, 9, 123, -123))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            if (result.contains(e)) continue\n            result += e\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0, -123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0, -123.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            if (result.contains(e)) continue\n            result += e\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Float](5.0f, 3.0f, 5.0f, 2.0f, 3.0f, 3.0f, 9.0f, 0.0f, 123.0f, -123.0f)))\n    // (List[Float](0.0f, 2.0f, 3.0f, 5.0f, 9.0f, 123.0f, -123.0f))\n    def unique(l : List[Float]) : List[Float] =",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += element\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += element\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result.add(l(i))\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 4\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 4\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 4\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result.append(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum = sum + i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum = sum + i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum = sum + i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum = sum + i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum = sum + i * i\n        }\n        return sum\n    }\n\n    ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 6l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 6l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 3l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 1l.toLong\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                var e2 = l[j]\n                if (e == e2) {\n                    break\n                } else {\n                    result = result.append(e)\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                var e2 = l[j]\n                if (e == e2) {\n                    break\n                } else {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> length(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def length(l : List[Long]) : Int = {\n        return l.length\n    }\n\n    // Return the number of elements in a list\n    // >>> length(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def length2(l : List[Long]) : Int = {\n        return l.length\n    }\n\n    // Return the number of elements in a list\n    //",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result = 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result = 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result = 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- 0 until result.size) {\n                if (result.get(j) == e) break\n            }\n            if (j == result.size) result.add(e)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.size) {\n            if (l.get(i) > result) result =",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result.append(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result.append(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l[i])\n            } else {\n                if (l[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == 1) {\n                result = l\n                break\n            }\n            if (l.length == 2) {\n                if (l[0] == l[1]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length == 3) {\n                if (l[0] == l[1] && l[0] == l[2]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length == 4) {\n                if (l[0] == l[1] && l[0] == l[2] && l[0] == l[3]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length == 5) {\n                if (l[0] == l[1] && l[0] == l[2] && l[0] == l[3] && l[0] == l[4]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length == 6) {\n                if (l[0] == l[1] && l[0] == l[2] && l[0] == l[3] && l[0] == l[4] && l[0] == l[5]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length == 7) {\n                if (l[0] == l[1] && l[0] == l[2] && l[0] == l[3] && l[0] == l[4] && l[0] == l[5] && l[0] == l[6]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                if (e == l[j]) {\n                    break\n                }\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l[i]\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l[i]\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l[0]\n        for (i <- 1 until l.length) {\n            if (l[i] > result) {\n                result = l[i]\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var element = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var element = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var j = i + 1\n            while (j < l.size && l.apply(j) == e) {\n                j += 1\n            }\n            if (j - i > 1) {\n                result.appendAll(l.slice(i, j))\n            }\n            i = j\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var j = i + 1\n            while (j < l.size && l.apply(j) == e) {\n                j += 1\n            }\n            if (j - i > 1) {\n                result.appendAll(l.slice(i, j))\n            }\n            i = j\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                if (e == l[j]) {\n                    break\n                }\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                if (e == l[j]) {\n                    break\n                }\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                if (e == l[j]) {\n                    break",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123)))\n    // (List[Int](0, 2, 3, 5, 9, 123))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Float](5.0f, 3.0f, 5.0f, 2.0f, 3.0f, 3.0f, 9.0f, 0.0f, 123.0f)))\n    // (List[Float](0.0f, 2.0f, 3.0f, 5.0f, 9.0f, 123.0f))\n    def unique(l : List[Float]) : List[Float] = {\n        var result = new ArrayList[Float]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) < result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the average of the elements in a list\n    // >>> avg(List(1",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        var last = null\n        for (i <- 0 until l.size) {\n            if (last == null || l.apply(i) != last) {\n                result.add(l.apply(i))\n                last = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                if (e == l.get(j)) {\n                    break\n                }\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.size) {\n            if (l.get(i) > result) {\n                result = l.get(",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            for (j <- 0 until result.length) {\n                if (e == result(j)) {\n                    break\n                }\n            }\n            if (j == result.length) {\n                result += e\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (Long)(5l.toLong + 3l.toLong + 5l.toLong + 2l.toLong + 3l.toLong + 3l.toLong + 9l.toLong + 0l.toLong + 123l.toLong)\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (Long)(5l.toLong * 3l.toLong * 5l.toLong * 2l.toLong * 3l.toLong * 3l.toLong * 9l.toLong * 0l.toLong * 123l.toLong)\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max((List[Long](5l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            var j = i + 1\n            while (j < l.size) {\n                if (e == l.get(j)) {\n                    j += 1\n                } else {\n                    break\n                }\n            }\n            if (j == l.size) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            var j = i + 1\n            while (j < l.size) {\n                if (e == l.get(j)) {\n                    j += 1\n                } else {\n                    break\n                }\n            }\n            if (j == l.size) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            var j = i + 1\n            while (j < l.size) {\n                if (e == l.get(j)) {\n                    j += 1\n                } else {\n                    break\n                }\n            }\n            if (j == l.size",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (!seen.contains(i)) {\n                result = result.append(i)\n                seen = seen.add(i)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- l) {\n            result = result + i\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- l) {\n            result = result * i\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head\n        for (i <- l.tail) {\n            if (i > result) {\n                result = i\n            }\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min((List[Long](5l.toLong, 3l.toLong,",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) {\n                result.append(l(i))\n            } else {\n                var j = i\n                while (j < l.length - 1 && l(j) == l(j + 1)) {\n                    j += 1\n                }\n                if (j == l.length - 1) {\n                    result.append(l(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.add(i)) result = result.append(i)\n        }\n        return result",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result + 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- l) {\n            result = result + 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- l) {\n            result = result + 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var x = l.apply(i)\n            if (result.contains(x)) continue\n            result = result.append(x)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var x = l.apply(i)\n            if (result.contains(x)) continue\n            result = result.append(x)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var x = l.apply(i)\n            if (result.contains(x)) continue\n            result = result.append(x)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>>",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            for (j <- 0 until result.length) {\n                if (e == result(j)) {\n                    break\n                }\n            }\n            if (j == result.length) {\n                result += e\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            for (j <- 0 until result) {\n                if (e == result(j)) {\n                    break\n                }\n            }\n            if (j == result) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> length(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def length(l : List[Long]) : Int = {\n        return l.length\n    }\n\n    // Return the sum of elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique((List[Long](5l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result) {\n                if (result == j) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> length(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def length(l : List[Long]) : Int = {\n        return l.size\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == 1) {\n                result = l\n                break\n            }\n            if (l.length == 2) {\n                if (l[0] == l[1]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length > 2) {\n                if (l[i] == l[i + 1]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == 1) {\n                result = l\n                break\n            }\n            if (l.length == 2) {\n                if (l[0] == l[1]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n            if (l.length > 2) {\n                if (l[i] == l[i + 1]) {\n                    result = l\n                    break\n                } else {\n                    result = l\n                    break\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0 || l[i - 1] != l[i]) {\n                result = result.append(l[i])\n            }\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 6l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 6l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 3l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 1l.toLong\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result = result.append(l(i))\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) {\n                continue\n            }\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) {\n                continue\n            }\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) {\n                continue\n            }\n            result += 1\n        }",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.index(i) == l.index(i + 1)) {\n                continue\n            }\n            result = result.append(l.index(i))\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l[i]\n            for (j <- i + 1 until l.length) {\n                var e2 = l[j]\n                if (e == e2) {\n                    break\n                }\n                if (e < e2) {\n                    result = result.append(e)\n                    break\n                }\n            }\n            if (j == l.length) {\n                result = result.append(e)\n            }\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var value = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == value) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Return the first n elements in a list\n    // >>> first(List(5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (List(0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def first(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until min(l.length, 10)) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the last n elements in a list\n    // >>> last(List(5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (List(5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    def last(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until min(l.length, 10)) {\n            result += l(l.length - 1 - i)\n        }\n        return result\n    }\n\n    // Return the first n elements in a list\n    // >>> first(List(5l.toLong,",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.to",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123, -1)))\n    // (List[Int](0, 2, 3, 5, 9, 123, -1))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[String](5, \"a\", \"b\", \"c\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    def unique(l : List[String]) : List[String] = {\n        var result = new ArrayList[String]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0, -1.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0, -1.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n",
    "        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- 0 until result.size) {\n                if (result.get(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.get(j)) {\n                    result = j\n                    break\n                }\n            }\n            if (result == j) {\n                result = j + 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value appears in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong), 5l.toLong)\n    // 2\n    def count(l : List[Long], e : Long) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            if (l.get(i) == e) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value appears in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                if (e == l.get(j)) {\n                    break\n                } else {\n                    result = result.append(e)\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                if (e == l.get(j)) {\n                    break\n                } else {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                if (e == l.get(j)) {\n                    break\n                } else {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong,",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min((List[Long",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (result.isEmpty() || l[i] != result.head) {\n                result = result.append(l[i])\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l[i]\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l[i]\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head\n        for (i <- 1 until l.length) {\n            if (l[i] > result) {\n                result = l[i]\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List[Long",
    "        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            if (result.contains(e)) continue\n            result.add(e)\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            if (result.contains(e)) continue\n            result.add(e)\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            if (result.contains(e)) continue\n            result.add(e)\n        }\n        return scala.collection.JavaConversions",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result.append(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result.append(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            var seen = false\n            for (j <- 0 until result.length) {\n                if (result(j) == x) {\n                    seen = true\n                    break\n                }\n            }\n            if (!seen) {\n                result = result.append(x)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            var seen = false\n            for (j <- 0 until result) {\n                if (result(j) == x) {\n                    seen = true\n                    break\n                }\n            }\n            if (!seen) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value occurs in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong), 5l.toLong)\n    // 2\n    def count(l : List[Long], x : Long) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l(i) == x) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value occurs in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- l) {\n            result = result + i\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- l) {\n            result = result * i\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head()\n        for (i <- l.tail()) {\n            if (i > result) result = i\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.apply(j)) {\n                    result = j\n                    break\n                }\n            }\n            if (j == result) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.apply(j)) {\n                    result = j\n                    break\n                }\n            }\n            if (j == result) {\n                result +=",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.apply(j)) {\n                    result = j\n                    break\n                }\n            }\n            if (j == result) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.apply(j)) {\n                    result = j\n                    break\n                }\n            }\n            if (j == result) {\n                result +=",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                result.add(l.apply",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result.append(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> squareSum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (Long)(25l.toLong)\n    def squareSum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.apply(i) * l.apply(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> squareSum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (Long)(25l.toLong)\n    def squareSum2(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.apply(i) * l.apply(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> squareSum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (Long)(25l.toLong)\n    def squareSum",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.length) {\n            if (l.get(i) > result) result = l.get(i)\n        }\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- l) {\n            result = result + i\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- l) {\n            result = result * i\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head()\n        for (i <- l.tail()) {\n            if (i > result) result = i\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            if (result.contains(e)) {\n                continue\n            }\n            result = result.append(e)\n        }\n        return result",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.apply(i) != l.apply(result.length)) {\n                result = result.append(l.apply(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> sumOfSquares(List(1, 2, 3, 4, 5))\n    // 55\n    def sumOf",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result.append(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result + 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result + 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result = result.append(l(i))\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123)))\n    // (List[Int](0, 2, 3, 5, 9, 123))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result = result + l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result = result * l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.size) {\n            if (l.get(i) > result) {\n                result = l.get(i)\n            }\n        }\n        return result\n    }\n\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l[i]\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l[i]\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l[0]\n        for (i <- 1 until l.length) {\n            if (l[i] > result) {\n                result = l[i]\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> squareSum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (Long)(25l.toLong)\n    def squareSum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i) * l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> squareSum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (Long)(25l.toLong)\n    def squareSum2(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i) * l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> squareSum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (Long)(25l.toLong)\n    def squareSum3(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i) * l(i)\n        }\n        return result\n    }\n\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.",
    "        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size()) {\n                if (result.get(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result.add(e)\n            }\n        }\n        return result.toArray(new scala.collection.mutable.ArrayBuffer[Long])\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123)))\n    // (List[Int](0, 2, 3, 5, 9, 123))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size()) {\n                if (result.get(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result.add(e)\n            }\n        }\n        return result.toArray(new scala.collection.mutable.ArrayBuffer[Int])\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size()) {\n                if (result.get(j) == e) {\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the nth prime\n    // >>> prime(100)\n    // 23\n    def prime(n : Int) : Int = {\n        var i = 2\n        while (i < n) {\n            if (n % i == 0) {\n                i += 1\n            } else {\n                i += 2\n            }\n        }\n        return i\n    }\n\n    // Return the sum of the primes below n\n    // >>> sumOfPrimes(100)\n    // 4438\n    def sumOfPrimes(n : Int) : Int = {\n        var sum = 0\n        var i = 2\n        while (i < n) {\n            if (isPrime(i)) {\n                sum += i\n            }\n            i += 1\n        }\n        return sum\n    }\n\n    // Return true if the number is prime\n    // >>> isPrime(23)\n    // false\n    def isPrime(n : Int) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            var i = 3\n            while (i <= Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n                i += 2\n            }\n            return true\n        }\n    }\n\n    // Return the number",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            if (result.contains(e)) {\n                continue\n            }\n            result = result.append(e)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong,",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                }\n                if (e < e2) {\n                    result.add(e)\n                    break\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                }\n                if (e < e2) {\n                    result.add(e)\n                    break\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result = result + l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result = result * l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.size) {\n            if (l.get(i) > result) {\n                result = l.get(i)\n            }\n        }\n        return result\n    }\n\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of all elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of all elements in a list\n    // >>> min(List[Long",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                }\n                if (e < e2) {\n                    result.add(e)\n                    break\n                }\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (result.isEmpty() || l[i] != result.head) {\n                result = result.append(l[i])\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l[i]\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l[i]\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head\n        for (i <- 1 until l.length) {\n            if (l[i] > result) {\n                result = l[i]\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 6l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 6l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 3l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List(1l.toLong, 2l.toLong, 3l.toLong))\n    // 1l.toLong\n    def min(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) < result",
    "        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            for (j <- 0 until result.size()) {\n                if (result.get(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size()) {\n                result.add(e)\n            }\n        }\n        return result.toList()\n    }\n\n    // Return the first n elements in a list\n    // >>> first(List(5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (List(0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def first(l : List[Long]) : List[Long] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until min(l.size(), 10)) {\n            result.add(l.apply(i))\n        }\n        return result.toList()\n    }\n\n    // Return the last n elements in a list\n    // >>> last(List(5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // (List(5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    def last(l : List[Long]) : List[Long] = {\n        var result = new java.util.ArrayList()\n        for (i <- 0 until min(l.size(), 10)) {\n            result.add(l.apply(l.size() - 1 - i))\n        }\n        return result.toList()\n    }\n\n",
    "        var res = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                res = res.append(l.apply(i))\n            } else {\n                if (l.apply(i) != res.apply(res.length - 1)) {\n                    res = res.append(l.apply(i))\n                }\n            }\n        }\n        return res\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var res = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                res = res + 1\n            } else {\n                if (l.apply(i) != l.apply(res - 1)) {\n                    res = res + 1\n                }\n            }\n        }\n        return res\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var res = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                res = res + 1\n            } else {\n                if (l.apply(i) != l.apply(res - 1)) {\n                    res = res + 1\n                }\n            }\n        }\n        return res\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var value = l.apply(i)\n            if (result.contains(value)) {\n                continue\n            }\n            result.add(value)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var value = l.apply(i)\n            if (result.contains(value)) {\n                continue\n            }\n            result.add(value)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var value = l.apply(i)\n            if (result.contains(value)) {\n                continue\n            }\n            result.add(value)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.index(i) == l.index(i + 1)) {\n                continue\n            }\n            result = result.append(l.index(i))\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.index(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l.index(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head\n        for (i <- 1 until l.length) {\n            if (l.index(i) > result) {\n                result = l.index(i)\n            }\n        }\n        return result\n    }\n\n    //",
    "        var res = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen.add(i)\n            res = res.append(i)\n        }\n        return res\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var res = 0l\n        for (i <- l) res = res + i\n        return res\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var res = 1l\n        for (i <- l) res = res * i\n        return res\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var res = l.head\n        for (i <- l.tail) res = Math.max(res, i)\n        return res\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var res = l.head\n        for (i <- l.tail) res = Math.min(res, i)\n        return res\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>> sumSq(List(1, 2, 3, 4, 5))\n    // 55\n    def sumSq(l : List[Long]) : Long = {\n        var res = 0l\n        for (i <- l) res = res + i * i\n        return res\n    }\n\n    // Return the square of the sum of the elements in a list\n    // >>> sumSqToSq(List(1, 2, 3, 4, 5))\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var value = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == value) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var value = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == value) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != null) {\n                if (!result.contains(l.get(i))) {\n                    result.add(l.get(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != null) {\n                if (!result.contains(l.get(i))) {\n                    result.add(l.get(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != null) {\n                if (!result.contains(l.get(i))) {\n                    result.add(l.get(i))\n                }\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[String](\"a\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\"))\n    def unique(l : List[String]) : List[String] = {\n        var result = new ArrayList[String]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](1, 2, 2, 2, 3, 3, 3, 4, 4, 4)))\n    // (List[Int](1, 2, 3, 4))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0)))\n    // (List[Double](1.0, 2.0, 3.0, 4.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Float](",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result = 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result = 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result = 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            for (j <- 0 until result.length) {\n                if (result(j) == x) {\n                    break\n                }\n            }\n            if (j == result.length) {\n                result = result.append(x)\n            }\n        }\n        result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            for (j <- 0 until result.length) {\n                if (result(j) == x) {\n                    break\n                }\n            }\n            if (j == result.length) {\n                result = result.append(x)\n            }\n        }\n        result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            for (j",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result.add(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 6\n    def uniqueCount(l : List[Long]) : Int =",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.size()) {\n            if (result.contains(l.apply(i))) continue\n            result.add(l.apply(i))\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size()) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size()) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size()) {\n            if (l.apply(i) > result) result = l.apply(i)\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size()) {\n            if (l.apply(i) < result) result = l.apply(i)\n        }\n        return result\n    }\n\n    // Return the average of the elements in a list\n    // >>> avg(List(1, 2, 3, 4, 5))\n    // 2.5\n    def avg(l : List[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var x = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == x) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(x)\n            }\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.to",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == 1) {\n                result.add(l.head)\n            } else {\n                if (l.head == l.tail.head) {\n                    result.add(l.head)\n                } else {\n                    result.add(l.tail.head)\n                }\n            }\n            l = l.tail\n        }\n        return result",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            for (j <- 0 until result.length) {\n                if (x == result(j)) {\n                    break\n                }\n            }\n            if (j == result.length) {\n                result = result.append(x)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var element = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var element = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for(i <- l) {\n            if(seen.contains(i)) continue\n            seen.add(i)\n            result = result.append(i)\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result.append(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result + 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result + 1\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result.append(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result + 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result + 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123)))\n    // (List[Int](0, 2, 3, 5, 9, 123))\n    def uniqueInt(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0))\n    def uniqueDouble(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Float](5.0f, 3.0f, 5.0f, 2.0f, 3.0f, 3.0f, 9.0f, 0.0f, 123.0f)))\n    // (List[Float](0.0f, 2.0f, 3.0f, 5.0f, 9.0f, 123.0f))\n    def uniqueFloat(l : List[Float]) : List[Float] = {\n        var result = new ArrayList[Float]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.size()) {\n            var e = l.apply(i)\n            var index = result.indexOf(e)\n            if (index == -1) {\n                result.add(e)\n            }\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()",
    "        var res = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                res.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    res.add(l.apply(i))\n                }\n            }\n        }\n        return res\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var res = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                res.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    res.add(l.apply(i))\n                }\n            }\n        }\n        return res\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var res = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                res.add(l.apply",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var element = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result.add(element)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var element = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result.add(element)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123, -123)))\n    // (List[Int](0, 2, 3, 5, 9, 123, -123))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = List[Int]()\n        var seen = Set[Int]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0, -123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0, -123.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = List[Double]()\n        var seen = Set[Double]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen = seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Float](5.0f, 3.0f, 5.0f, 2.0f, 3.0f, 3.0f, 9.0f, 0.0f, 123.0f, -123.0f)))\n    // (List[Float](0.0f, 2.0f, 3.0f, 5.0f, 9.0",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.index(i) != result.index(i)) {\n                result = result.append(l.index(i))\n            }\n        }\n        return result",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) < result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the average value in a list\n    // >>> avg(List(1, 2, 3, 4, 5))\n    // 2.5\n    def avg(l : List[Long]) : Double = {\n        var result = 0.0\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result / l.length",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> length(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def length(l : List[Long]) : Int = {\n        return l.length\n    }\n\n    // Return the sum of elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(element)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var element = l(i)\n            var found = false\n            for (j <- 0 until result) {\n                if (result(j) == element) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> count",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.size) {\n            if (l.get(i) > result) {\n                result = l.get(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) < result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the average value in a list\n    // >>> avg(List(1, 2, 3, 4, 5))\n    // 2.5\n    def avg(l : List[Long]) : Double = {\n        return sum(l) / (double) l.length\n    }\n\n    // Return the median value in a list\n    // >>> median(List(1, 2, 3",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result = result.append(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result = result.append(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the average of the elements in a list\n    ",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result = result.append(l(i))\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>>",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result.add(l(i))\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result.add(l(i))\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result.add(l(i))\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[String](\"a\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\"))\n    def unique(l : List[String]) : List[String] = {\n        var result = new ArrayList[String]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](1, 2, 2, 2, 3, 3, 3, 4, 4, 4)))\n    // (List[Int](1, 2, 3, 4))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = new ArrayList[Int]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0)))\n    // (List[Double](1.0, 2.0, 3.0, 4.0))\n    def unique(l : List[Double]) : List[Double] = {\n        var result = new ArrayList[Double]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Float](",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (l.get(i) != l.get(result.size)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result = result + l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result = result * l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.size) {\n            if (l.get(i) > result) {\n                result = l.get(i)\n            }\n        }\n        return result\n    }\n\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) result = 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) result = 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) result = 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.to",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0 || l[i] != l[i - 1]) {\n                result.append(l[i])\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0 || l[i] != l[i - 1]) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value appears in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong), 5l.toLong)\n    // 2\n    def count(l : List[Long], v : Long) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l[i] == v) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value appears in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong), 5l.toLong)\n    // 2\n    def count(l : List[Long], v : Long) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l[i] ==",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.get(i) != l.get(result.length - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.length) {\n            if (l.get(i) > result) {\n                result = l.get(i)\n            }\n        }\n        return result\n    }\n\n    ",
    "        var result = new java.util.ArrayList()\n        for (i <- 0 until l.size()) {\n            if (result.size() == 0 || l.apply(i) != result.get(result.size() - 1)) {\n                result.add(l.apply(i))\n            }\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size()) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size()) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size()) {\n            if (l.apply(i) > result) {",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.get(i) != null) {\n                if (!result.contains(l.get(i))) {\n                    result.add(l.get(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.get(i) != null) {\n                if (!result.contains(l.get(i))) {\n                    result.add(l.get(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.get(i) != null) {\n                if (!result.contains(l.get(i))) {\n                    result.add(l.get(i))\n                }\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the average of the elements in a list\n    // >>> avg(List",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.apply(j)) {\n                    break\n                }\n            }\n            if (j == result) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value occurs in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong), 3l.toLong)\n    // 2\n    def count(l : List[Long], e : Long) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e2 = l.apply(i)\n            if (e2 == e) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value occurs in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == x) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(x)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == x) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(x)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l[i])) continue\n            result.add(l[i])\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l[i])) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique2(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l[i])) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique3(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l[i])) continue\n            result += 1\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (result == 0) result = 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            result += 1\n        }\n        return result\n    }\n\n    // Return the sum of elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) {\n                continue\n            }\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) {\n                result = l(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l[i]\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l[i]\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l[0]\n        for (i <- 1 until l.length) {\n            if (l[i] > result) {\n                result = l[i]\n            }\n        }",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[String](\"a\", \"b\", \"a\", \"b\", \"c\", \"c\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    def unique(l : List[String]) : List[String] = {\n        var result = new ArrayList[String]()\n        for (i <- 0 until l.length) {\n            if (l.get(i) != l.get(i - 1)) {\n                result = result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](1, 2, 3, 2, 1, 3, 2, 1, 3, 2, 1, 2, 3, 2, 1, 3, 2, 1, 3, 2, 1, 2, 3, 2, 1, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 3, 2, 1, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2,",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for(i <- l) {\n            if(seen.contains(i)) continue\n            seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for(i <- l) {\n            result = result + i\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for(i <- l) {\n            result = result * i\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head\n        for(i <- l.tail) {\n            if(i > result) result = i\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var x = l.get(i)\n            for (j <- 0 until result.size) {\n                if (result.get(j) == x) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result.add(x)\n            }\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(result).toList()\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result.length) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            var e = l(i)\n            var found = false\n            for (j <- 0 until result) {\n                if (result(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var res = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (res.contains(l(i))) continue\n            res += l(i)\n        }\n        return res\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var res = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            res += 1\n        }\n        return res\n    }\n\n    // Return the number of elements in a list\n    // >>> length(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def length(l : List[Long]) : Int = {\n        return l.length\n    }\n\n    // Return the sum of elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123\n    def sum(l : List[Long]) : Int = {\n        var res = 0\n        for (i <- 0 until l.length) {\n            res += l(i)\n        }\n        return res\n    }\n\n    // Return the product of elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    ",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (seen.contains(i)) continue\n            seen.add(i)\n            result = result.append(i)\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 1 to n) {\n            result = result + i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 1 to n) {\n            result = result + i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 1 to n) {\n            result = result + i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 1 to n) {\n            result = result + i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 1 to n) {\n            result = result + i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sum",
    "        var result = List[Long]()\n        var seen = Set[Long]()\n        for (i <- l) {\n            if (!seen.contains(i)) {\n                result = result.append(i)\n                seen = seen.add(i)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Int](5, 3, 5, 2, 3, 3, 9, 0, 123, -123)))\n    // (List[Int](0, 2, 3, 5, 9, 123, -123))\n    def unique(l : List[Int]) : List[Int] = {\n        var result = List[Int]()\n        var seen = Set[Int]()\n        for (i <- l) {\n            if (!seen.contains(i)) {\n                result = result.append(i)\n                seen = seen.add(i)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[String](5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\")))\n    // (List[String](5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"))\n    def unique(l : List[String]) : List[String] = {\n        var result = List[String]()\n        var seen = Set[String]()\n        for (i <- l) {\n            if (!seen.contains(i)) {\n                result = result.append(i)\n                seen = seen.add(i)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Double](5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0, -123.0)))\n    // (List[Double](0.0, 2.0, 3.0, 5.0, 9.0, 123.0, -123.0))",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- 0 until result.size) {\n                if (result.get(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 7\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- 0 until result) {\n                if (result == j) {\n                    break\n                }\n                if (result == j && e == l.get(j)) {\n                    break\n                }\n            }\n            if (j == result) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value appears in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong), 5l.toLong)\n    // 2\n    def count(l : List[Long], e : Long) : Int = {\n        var result = 0\n        for (i <- 0 until l.size) {\n            var e2 = l.get(i)\n            if (e2 == e) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of times a value appears in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) {\n                result = result.append(l(i))\n            } else {\n                if (l(i).equals(l(i + 1))) {\n                    continue\n                } else {\n                    result = result.append(l(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result = result + l(i)\n        }\n        return result\n    }\n\n    // Return the product of all elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result = result * l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of all elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result += 1\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            var x = l(i)\n            for (j <- 0 until result.length) {\n                if (result(j) == x) {\n                    break\n                }\n            }\n            if (j == result.length) {\n                result += x\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares2(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares3(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares4(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares5(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var index = result.indexOf(e)\n            if (index < 0) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first 100 natural numbers\n    // >>> sumOfSquares(100)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first 100 natural numbers\n    // >>> sumOfSquares(100)\n    // 385\n    def sumOfSquares2(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first 100 natural numbers\n    // >>> sumOfSquares(100)\n    // 385\n    def sumOfSquares3(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first 100 natural numbers\n    // >>> sumOfSquares(100)\n    // 385\n    def sumOfSquares4(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first 100 natural numbers\n    // >>> sumOfSquares(100)\n    // 385\n    def sumOfSquares5(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first 100 natural numbers\n    // >>> sumOfSquares(100)\n    // 385\n",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum element in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the elements in a list\n    // >>>",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.contains(l(i))) continue\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                }\n                if (e < e2) {\n                    result.add(e)\n                    break\n                }\n            }\n            if (j == l.size) {\n                result.add(e)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares2(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares3(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares4(n : Int) : Int = {\n        var sum = 0\n        for (i <- 0 until n) {\n            sum += i * i\n        }\n        return sum\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares5(n : Int) : Int = {\n        var sum =",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == e) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result = result.append(e)\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (result.contains(l(i))) continue\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l(0)\n        for (i <- 1 until l.length) {\n            if (l(i) > result) result = l(i)\n        }\n        return result\n    }\n\n    // Return the minimum of the elements in a list\n    // >>> min(List[Long](5l.toLong, 3l.toLong",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- i + 1 until l.size) {\n                var e2 = l.get(j)\n                if (e == e2) {\n                    break\n                }\n                if (e < e2) {\n                    result.add(e)\n                    break\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.get(0)\n        for (i <- 1 until l.",
    "        var result = new java.util.ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var e = l.get(i)\n            for (j <- 0 until result.size) {\n                if (result.get(j) == e) {\n                    break\n                }\n            }\n            if (j == result.size) {\n                result.add(e)\n            }\n        }\n        return result.toList\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.get(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.get(i)\n        }\n        return result\n    }\n\n    // Return the maximum element in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.head\n        for (i <- 1 until l.size) {\n            if (l",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(5)\n    // 385\n    def sumOfSquares(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i * i\n        }\n        return result\n    }\n\n    // Return the sum of the first n natural numbers\n    // >>> sum(5)\n    // 10\n    def sum(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            result += i\n        }\n        return result\n    }\n\n    // Return the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Return the sum of the first n prime numbers\n    // >>> primeSum(5)\n    // 7\n    def primeSum(n : Int) : Int = {\n        var result = 0\n        for (i <- 0 until n) {\n            if (isPrime(i)) {\n                result += i\n            }\n        }\n        return result\n    }\n\n    // Return true if the number is prime\n    // >>> isPrime(2)\n    // true\n    def isPrime(n : Int) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else {\n            return n % 2 == 0 || !isPrime(n - 1)\n        }\n    }\n\n    // Return the largest prime factor of a number\n    // >>>",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l.apply(i))\n            } else {\n                if (l.apply(i) != l.apply(i - 1)) {\n                    result.add(l.apply(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List(1, 2, 3, 4, 5))\n    // 15\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.length) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List(1, 2, 3, 4, 5))\n    // 120\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.length) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum value in a list\n    // >>> max(List(1, 2, 3, 4, 5))\n    // 5\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) > result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the minimum value in a list\n    // >>> min(List(1, 2, 3, 4, 5))\n    // 1\n    def min(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.length) {\n            if (l.apply(i) < result) {\n                result = l.apply(i)\n            }\n        }\n        return result\n    }\n\n    // Return the average value in a list\n    // >>> avg(List(1",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result.append(l.get(i))\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l.get(i) != l.get(i + 1)) {\n                result.append(l.get(i))\n            }\n        ",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l[i - 1]) {\n                    result.add(l[i])\n                }\n            }\n        }\n        return result\n    }\n\n    // Return sorted unique elements in a list\n    // >>> unique((List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong)))\n    // (List[Long](0l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 9l.toLong, 123l.toLong))\n    def unique(l : List[Long]) : List[Long] = {\n        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (i == 0) {\n                result.add(l[i])\n            } else {\n                if (l[i] != l",
    "        var result = List[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) {\n                result = result.append(l(i))\n            } else {\n                if (l(i) == l(i + 1)) {\n                    continue\n                } else {\n                    result = result.append(l(i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) {\n                result = result + 1\n            } else {\n                if (l(i) == l(i + 1)) {\n                    continue\n                } else {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def uniqueCount(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) {\n                result = result + 1\n            } else {\n                if (l(i) == l(i + 1)) {\n                    continue\n                } else {\n                    result = result + 1\n                }\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> uniqueCount(List[Long](5l.toLong, 3l.",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l[i] != l[i + 1]) {\n                result = result.append(l[i])\n            }\n        }\n        return result\n    }\n\n    // Return the number of unique elements in a list\n    // >>> countUnique(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 6\n    def countUnique(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            if (l[i] != l[i + 1]) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            result += 1\n        }\n        return result\n    }\n\n    // Return the number of elements in a list\n    // >>> count(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9\n    def count(l : List[Long]) : Int = {\n        var result = 0\n        for (i <- 0 until l.length) {\n            if (l.length == i + 1) break\n            result +=",
    "        var result = new ArrayList[Long]()\n        for (i <- 0 until l.size) {\n            var value = l.apply(i)\n            var found = false\n            for (j <- 0 until result.size) {\n                if (result.apply(j) == value) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                result.add(value)\n            }\n        }\n        return result\n    }\n\n    // Return the sum of the elements in a list\n    // >>> sum(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 123l.toLong\n    def sum(l : List[Long]) : Long = {\n        var result = 0l\n        for (i <- 0 until l.size) {\n            result += l.apply(i)\n        }\n        return result\n    }\n\n    // Return the product of the elements in a list\n    // >>> product(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 720l.toLong\n    def product(l : List[Long]) : Long = {\n        var result = 1l\n        for (i <- 0 until l.size) {\n            result *= l.apply(i)\n        }\n        return result\n    }\n\n    // Return the maximum of the elements in a list\n    // >>> max(List[Long](5l.toLong, 3l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong))\n    // 9l.toLong\n    def max(l : List[Long]) : Long = {\n        var result = l.apply(0)\n        for (i <- 1 until l.size) {"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
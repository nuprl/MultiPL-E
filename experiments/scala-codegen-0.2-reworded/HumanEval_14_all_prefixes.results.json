{
  "name": "HumanEval_14_all_prefixes",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string,\n    // where the number of characters in each permutation is the same\n    // >>> allPermutationsSameLength((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutationsSameLength(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfwzphbk5.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfwzphbk5.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfwzphbk5.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfwzphbk5.scala:50:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string, except those that\n    // begin or end with the same character.\n    // >>> allPermutationsExcept(\"abc\")\n    // (List[String](\"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutationsExcept(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j and string.charAt(i) != string.charAt(j)) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8u09sdtg.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8u09sdtg.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8u09sdtg.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8u09sdtg.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8u09sdtg.scala:49:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                \u001b[33mif\u001b[0m (i != j and string.charAt(i) != string.charAt(j)) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value and is not a member of Boolean\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8u09sdtg.scala:50:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u09sdtg.scala:61:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            result = result.append(string.substring(i, string.length()))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            for (var j = 0; j < string.length(); j++) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            for (var j = 0; j < string.length(); j++) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpbq0yge1p.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbq0yge1p.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpbq0yge1p.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpbq0yge1p.scala:20:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbq0yge1p.scala:20:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpbq0yge1p.scala:20:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations2(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo5n6l90h.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            for (j <- 0 until string.length) {\n                var sub2 = string.substring(i, j)\n                for (k <- 0 until string.length) {\n                    var sub3 = string.substring(j, k)\n                    for (l <- 0 until string.length) {\n                        var sub4 = string.substring(k, l)\n                        for (m <- 0 until string.length) {\n                            var sub5 = string.substring(l, m)\n                            for (n <- 0 until string.length) {\n                                var sub6 = string.substring(m, n)\n                                for (o <- 0 until string.length) {\n                                    var sub7 = string.substring(n, o)\n                                    for (p <- 0 until string.length) {\n                                        var sub8 = string.substring(o, p)\n                                        for (q <- 0 until string.length) {\n                                            var sub9 = string.sub\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpklgd565b.scala:57:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklgd565b.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklgd565b.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklgd565b.scala:48:62 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                                            \u001b[33mvar\u001b[0m \u001b[36msub9\u001b[0m = string.sub\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value sub is not a member of String\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpklgd565b.scala:50:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m50 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp4_tjlgfb.scala:50:83 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4_tjlgfb.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Lis",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpobqie49e.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpobqie49e.scala:9:41 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpobqie49e.scala:9:46 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpobqie49e.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import Option.option2Iterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m  |\u001b[0m  import collection.convert.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp4_tjlgfb.scala:50:83 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4_tjlgfb.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Lis",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = mutable.List.empty\n        for (i <- 0 until string.length) {\n            val prefix = string.substring(i)\n            result = result.append(prefix)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292464,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg_qmp41g.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List.empty\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpg_qmp41g.scala:11:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all strings that are substrings of the input string\n    // >>> allSubstrings(\"abc\")\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all strings that are substrings of the input string\n    // >>> allSubstrings(\"abc\")\n    // (\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz38rxzx2.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz38rxzx2.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz38rxzx2.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz38rxzx2.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz38rxzx2.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz38rxzx2.scala:61:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz38rxzx2.scala:62:11 ------------------------\u001b[0m\u001b[0m\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            for (j <- 0 until string.length) {\n                var sub2 = string.substring(i, j)\n                for (k <- 0 until string.length) {\n                    var sub3 = string.substring(j, k)\n                    for (l <- 0 until string.length) {\n                        var sub4 = string.substring(k, l)\n                        for (m <- 0 until string.length) {\n                            var sub5 = string.substring(l, m)\n                            for (n <- 0 until string.length) {\n                                var sub6 = string.substring(m, n)\n                                for (o <- 0 until string.length) {\n                                    var sub7 = string.substring(n, o)\n                                    for (p <- 0 until string.length) {\n                                        var sub8 = string.substring(o, p)\n                                        for (q <- 0 until string.length) {\n                                            var sub9 = string.\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa1dhypv_.scala:49:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa1dhypv_.scala:57:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa1dhypv_.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa1dhypv_.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpa1dhypv_.scala:50:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m50 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string[j] == string[i]) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = string.length - 1\n        while (i >= 0) {\n            var j = i\n            while (j >= 0 && string[j] == string[i]) {\n                j -= 1\n            }\n            result = result.append(string.substring(i, j + 1))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string[j] == string[i]) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        var i\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawk1jtau.scala:61:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawk1jtau.scala:12:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < string.length && string[\u001b[35mj\u001b[0m] == string[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpawk1jtau.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawk1jtau.scala:29:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m            \u001b[33mwhile\u001b[0m (j >= \u001b[31m0\u001b[0m && string[\u001b[35mj\u001b[0m] == string[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpawk1jtau.scala:32:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result = result.append(string.substring(i, j + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawk1jtau.scala:46:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < string.length && string[\u001b[35mj\u001b[0m] == string[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j) + string.substring(j, i))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j) + string.substring(j, i))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz7_kn912.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz7_kn912.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz7_kn912.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz7_kn912.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz7_kn912.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz7_kn912.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz7_kn912.scala:58:11 ------------------------\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = mutable.List[String]()\n        for (i <- 0 until string.length) {\n            val prefix = string.substring(0, i + 1)\n            result.append(prefix)\n        }\n        result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = mutable.List[String]()\n        for (i <- 0 until string.length) {\n            val suffix = string.substring(i, string.length)\n            result.append(suffix)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = mutable.List[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result.append(permutation)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        val result = mutable.List[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result.append(permutation)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292464,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz4xgm0cc.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4xgm0cc.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4xgm0cc.scala:20:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4xgm0cc.scala:32:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4xgm0cc.scala:44:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4xgm0cc.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i, string.length)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8ivla88r.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8ivla88r.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8ivla88r.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8ivla88r.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8ivla88r.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8ivla88r.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8ivla88r.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations2(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo5n6l90h.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string[j] == string[i]) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = string.length - 1\n        while (i >= 0) {\n            var j = i\n            while (j >= 0 && string[j] == string[i]) {\n                j -= 1\n            }\n            result = result.append(string.substring(i, j + 1))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (permutation in permutations) {\n            var suffixes = allSuffixes(string)\n            for (suffix in suffixes) {\n                result = result.append(permutation + suffix)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnn8gyyim.scala:44:42 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mfor\u001b[0m (permutation in permutations) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          '<-' expected, but '{' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnn8gyyim.scala:59:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn8gyyim.scala:12:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < string.length && string[\u001b[35mj\u001b[0m] == string[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnn8gyyim.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn8gyyim.scala:29:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m            \u001b[33mwhile\u001b[0m (j >= \u001b[31m0\u001b[0m && string[\u001b[35mj\u001b[0m] == string[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnn8gyyim.scala:32:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result = result.append(string.substring(i, j + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] N",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String]\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppo_du720.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:58:11 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfmq4qjps.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (var i = 0; i < permutations.length(); i++) {\n            var permutation = permutations.apply(i)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (var i = 0; i < permutations.length(); i++) {\n            var permutation = permutations.apply(i)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> all\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpkysfmjqh.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkysfmjqh.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpkysfmjqh.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpkysfmjqh.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkysfmjqh.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpkysfmjqh.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1, string.length))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string,\n    // but with duplicates removed\n    // >>> allUniquePermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allUniquePermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result.filter\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv_2myd_y.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv_2myd_y.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv_2myd_y.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv_2myd_y.scala:50:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_2myd_y.scala:54:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        \u001b[33mreturn\u001b[0m result.filter\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31m=\u001b[0m\u001b[1m\u001b[31m>\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mBoolean\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31m=\u001b[0m\u001b[1m\u001b[31m>\u001b[0m\u001b[1m\u001b[31m \u001b[0mList[String]\n\u001b[31m   |\u001b[0m               Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String]\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppo_du720.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:58:11 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string, except those that\n    // begin with the input string itself\n    // >>> allPermutationsExcept((\"abc\"))\n    // (List[String](\"bca\", \"cab\", \"cba\"))\n    def allPermutationsExcept(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprin1or2.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpprin1or2.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpprin1or2.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpprin1or2.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpprin1or2.scala:50:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprin1or2.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprin1or2.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphh_acpi2.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphh_acpi2.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphh_acpi2.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfmq4qjps.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            result = result.append(string.substring(i, string.length))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i + 1)\n            for (var j = 0; j < rest.length; j++) {\n                var perm = sub + rest.substring(0, j) + rest.substring(j + 1)\n                result = result.append(perm)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i + 1)\n            \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpchal32l8.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpchal32l8.scala:9:41 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpchal32l8.scala:9:46 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpchal32l8.scala:20:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpchal32l8.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpchal32l8.scala:20:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292482,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjuq_n2t.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfpoaxxmi.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:34:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:48:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfpoaxxmi.scala:58:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpfpoaxxmi.scala:52:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292482,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjuq_n2t.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(i, string.length))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, string.length - i))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n                }\n            }\n        }\n        return result\n    }\n\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3ajzpyou.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ajzpyou.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(i, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ajzpyou.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, string.length - i))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ajzpyou.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3ajzpyou.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ajzpyou.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutations = allPermutations2(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjlkc4zgb.scala:58:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjlkc4zgb.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjlkc4zgb.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjlkc4zgb.scala:34:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjlkc4zgb.scala:48:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlkc4zgb.scala:57:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjlkc4zgb.scala:51:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m51 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub.concat(rest.substring(0, j + 1)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub.concat(rest.substring(j)))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8cosm0dp.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8cosm0dp.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8cosm0dp.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub.concat(rest.substring(\u001b[31m0\u001b[0m, j + \u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8cosm0dp.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub.concat(rest.substring(j)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292483,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9mmrla2w.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfmq4qjps.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all strings that are substrings of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all strings that are substrings of the input string\n    // >>> allSubstrings((\"abc\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3nfz3fv9.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3nfz3fv9.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3nfz3fv9.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3nfz3fv9.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3nfz3fv9.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3nfz3fv9.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd64sa4q7.scala:9:41 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:9:46 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd64sa4q7.scala:21:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:21:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp4_tjlgfb.scala:50:83 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4_tjlgfb.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Lis",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            for (j <- 0 until string.length) {\n                var sub2 = string.substring(i, j)\n                result = result.append(sub + sub2)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            for (j <- 0 until string.length) {\n                var sub2 = string.substring(i, j)\n                result = result.append(sub + sub2)\n            }\n        }\n        return result\n    }\n\n    // Return list of all\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp839p95xp.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + sub2)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + sub2)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp839p95xp.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp839p95xp.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((Lis",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphh_acpi2.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphh_acpi2.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphh_acpi2.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphh_acpi2.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String]\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppo_du720.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:58:11 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub.concat(rest.substring(0, j + 1)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub.concat(rest.substring(0, j + 1)))\n            }\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptr49gkaj.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptr49gkaj.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptr49gkaj.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptr49gkaj.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub.concat(rest.substring(\u001b[31m0\u001b[0m, j + \u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptr49gkaj.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub.concat(rest.substring(\u001b[31m0\u001b[0m, j + \u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptr49gkaj.scala:60:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmptr49gkaj.scala:54:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m54 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all substrings of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length - i) {\n                result = result.append(string.substring(i, i + j + 1))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"bac\", \"cab\", \"bca\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length - i) {\n                result = result.append(string.substring(i, i + j + 1))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"bac\", \"cab\", \"bca\", \"cba\"))\n    def allPer\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292484,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpap7bo42m.scala:55:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mallPer\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpap7bo42m.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpap7bo42m.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpap7bo42m.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpap7bo42m.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, i + j + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpap7bo42m.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, i + j + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpap7bo42m.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i, string.length())\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1, string.length())\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1, string.length())\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2etyvi2.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2etyvi2.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(i, string.length))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, string.length - i))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, string.length - j).concat(string.substring(j, string.length)))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, string.length - j).concat(string.substring(j, string.length)))\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpeckpnx_4.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(i, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpeckpnx_4.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, string.length - i))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpeckpnx_4.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, string.length - j).concat(string.substring(j, string.length)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpeckpnx_4.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, string.length - j).concat(string.substring(j, string.length)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(i))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- string.length - 1 until 0) {\n            result = result.append(string.substring(i))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                result = result.append(string.substring(i, j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                result = result.append(string.substring(i, j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPer\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmp2dwgorgu.scala:55:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mallPer\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2dwgorgu.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2dwgorgu.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(i))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2dwgorgu.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(i))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2dwgorgu.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2dwgorgu.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2dwgorgu.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd64sa4q7.scala:9:41 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:9:46 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd64sa4q7.scala:21:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd64sa4q7.scala:21:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfpoaxxmi.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:34:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfpoaxxmi.scala:48:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfpoaxxmi.scala:58:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpfpoaxxmi.scala:52:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (var permutation : permutations) {\n            var suffix = allSuffixes(permutation)\n            for (var suffixPermutation : suffix) {\n                result = result.append(suffixPermutation)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (var permutation : permutations) {\n            var suffix = allSuffixes(permutation)\n            for (var suffixPermutation : suffix) {\n                result = result.append(suffixPermutation)\n            }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprk_d2qj6.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprk_d2qj6.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all substrings of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                result = result.append(string.substring(i, j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                for (k <- j + 1 until string.length) {\n                    result = result.append(string.substring(i, j).concat(string.substring(j, k)).concat(string.substring(k, i)))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPer\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6tgmc874.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6tgmc874.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6tgmc874.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6tgmc874.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6tgmc874.scala:47:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m                    result = result.append(string.substring(i, j).concat(string.substring(j, k)).concat(string.substring(k, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6tgmc874.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6tgmc874.scala:59:11 -------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1, string.length))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppejrh8kj.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppejrh8kj.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppejrh8kj.scala:60",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String]\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppo_du720.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppo_du720.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, j).concat(string.substring(j, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppo_du720.scala:58:11 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all substrings from shortest to longest of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                result = result.append(string.substring(i, j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                for (k <- j + 1 until string.length) {\n                    result = result.append(string.substring(i, j).concat(string.substring(j, k)).concat(string.substring(k, i)))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl8fwvx4t.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:47:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m                    result = result.append(string.substring(i, j).concat(string.substring(j, k)).concat(string.substring(k, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8fwvx4t.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8fwvx4t.scala:59:11 -------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfmq4qjps.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp4_tjlgfb.scala:50:83 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4_tjlgfb.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_tjlgfb.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Lis",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpa4s6vg52.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa4s6vg52.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpa4s6vg52.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa4s6vg52.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import Option.option2Iterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m  |\u001b[0m  import col",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string[j] == string[i]) {\n                j += 1\n            }\n            result = result + List(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9o2ud140.scala:12:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < string.length && string[\u001b[35mj\u001b[0m] == string[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2ud140.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result + List(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of List[String], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val s = string\n        val result = List[String]()\n        for (i <- 0 until s.length) {\n            val prefix = s.substring(i, s.length)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val s = string\n        val result = List[String]()\n        for (i <- 0 until s.length) {\n            val suffix = s.substring(0, s.length - i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val s = string\n        val result = List[String]()\n        for (i <- 0 until s.length) {\n            val permutation = s.substring(0, s.length - i) + s.substring(s.length - i, s.length)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        val s = string\n        val result = List[String]()\n        for (i <- 0 until s.length) {\n            val permutation = s.substring(0, s.length - i) + s.substring(s.length - i, s.length)\n            result = result.append(permutation)\n        \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgafnk9fs.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgafnk9fs.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgafnk9fs.scala:25:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgafnk9fs.scala:38:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgafnk9fs.scala:51:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgafnk9fs.scala:60:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[String]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpgafnk9fs.scala:54:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m54 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(i))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa3knk0ff.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3knk0ff.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(i))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3knk0ff.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3knk0ff.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa3knk0ff.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3knk0ff.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1, string.length))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw3wly6wf.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw3wly6wf.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw3wly6wf.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw3wly6wf.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw3wly6wf.scala:46:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                result = result.append(string.substring(i, string.length).concat(string.substring(j, string.length)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw3wly6wf.scala:56:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(i, string.length))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0dmzd4ti.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(i, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string, except those that\n    // are duplicates of other permutations\n    // >>> allUniquePermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allUniquePermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result.filter(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpn2x7378s.scala:54:29 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        \u001b[33mreturn\u001b[0m result.filter(\n\u001b[31m\u001b[31m   |\u001b[0m                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                             expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn2x7378s.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn2x7378s.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn2x7378s.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn2x7378s.scala:50:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(i, string.length))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0dmzd4ti.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(i, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = new ArrayList[String]()\n        for (i <- 0 until string.length) {\n            val prefix = string.substring(0, i + 1)\n            result.add(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = new ArrayList[String]()\n        for (i <- 0 until string.length) {\n            val suffix = string.substring(i, string.length)\n            result.add(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = new ArrayList[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result.add(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        val result = new ArrayList[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result.add(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_5f0odht.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_5f0odht.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: type ArrayList\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_5f0odht.scala:20:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_5f0odht.scala:32:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_5f0odht.scala:44:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_5f0odht.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptncy6ff3.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptncy6ff3.scala:9:41 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptncy6ff3.scala:9:46 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptncy6ff3.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import Option.option2Iterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m  |\u001b[0m  import collection.convert.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all substrings from shortest to longest of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                result = result.append(string.substring(i, j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- i + 1 until string.length) {\n                for (k <- j + 1 until string.length) {\n                    result = result.append(string.substring(i, j).concat(string.substring(j, k)).concat(string.substring(k, i)))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl8fwvx4t.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8fwvx4t.scala:47:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m                    result = result.append(string.substring(i, j).concat(string.substring(j, k)).concat(string.substring(k, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8fwvx4t.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8fwvx4t.scala:59:11 -------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(j))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations2(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub + rest.substring(0, j) + rest.substring(j\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnhjchxi6.scala:51:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnhjchxi6.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnhjchxi6.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnhjchxi6.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnhjchxi6.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(j))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnhjchxi6.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + rest.substring(\u001b[31m0\u001b[0m, j) + rest.substring(j\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpnhjchxi6.scala:52:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indente",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5iayhoxo.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5iayhoxo.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5iayhoxo.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5iayhoxo.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5iayhoxo.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5iayhoxo.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5iayhoxo.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b[0m, \u001b[31m\"asdfgh\"\u001b[0m))",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = new ArrayList[String]\n        for (i <- 0 until string.length) {\n            val prefix = string.substring(0, i + 1)\n            result.add(prefix)\n        }\n        result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = new ArrayList[String]\n        for (i <- 0 until string.length) {\n            val suffix = string.substring(i)\n            result.add(suffix)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = new ArrayList[String]\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1)\n            result.add(permutation)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        val result = new ArrayList[String]\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1)\n            result.add(permutation)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"c\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3yaazlnv.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yaazlnv.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: type ArrayList\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yaazlnv.scala:20:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yaazlnv.scala:32:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yaazlnv.scala:44:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mString\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yaazlnv.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation + string.substring(i, i + 1))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string,\n    // where the permutations are ordered lexicographically\n    // >>> allPermutationsOrdered((\"abc\"))\n    // (List[String](\"abc\", \"bac\", \"cab\", \"cba\", \"acb\", \"bca\"))\n    def allPermutationsOrdered(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(permutation\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpur63nt7r.scala:50:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpur63nt7r.scala:58:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpur63nt7r.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpur63nt7r.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpur63nt7r.scala:34:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                result = result.append(permutation + string.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpur63nt7r.scala:49:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                result = result.append(permutation\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpur63nt7r.scala:51:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m51 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1, string.length))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppejrh8kj.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppejrh8kj.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppejrh8kj.scala:60",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all strings that are substrings of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"abc\", \"a\", \"ab\", \"b\", \"ba\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all strings that are substrings of the input string\n    // >>> allSubstrings((\"abc\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzmwsfh6u.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzmwsfh6u.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzmwsfh6u.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzmwsfh6u.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzmwsfh6u.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzmwsfh6u.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpeiekg5kj.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeiekg5kj.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpeiekg5kj.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpeiekg5kj.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeiekg5kj.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpeiekg5kj.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            for (j <- 0 until string.length) {\n                var sub2 = string.substring(i, j)\n                result = result.append(sub + sub2)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            for (j <- 0 until string.length) {\n                var sub2 = string.substring(i, j)\n                result = result.append(sub + sub2)\n            }\n        }\n        return result\n    }\n\n    // Return list of all\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp839p95xp.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub + sub2)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp839p95xp.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub + sub2)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp839p95xp.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp839p95xp.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((Lis",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpa4s6vg52.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa4s6vg52.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpa4s6vg52.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa4s6vg52.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import Option.option2Iterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m  |\u001b[0m  import col",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                var perm = sub.concat(rest.substring(0, j))\n                result = result.append(perm)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                var perm = sub.concat(rest.substring(0, j))\n                result =\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpyh4y9l9m.scala:52:24 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                result =\n\u001b[31m\u001b[31m   |\u001b[0m                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                        expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyh4y9l9m.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyh4y9l9m.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyh4y9l9m.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyh4y9l9m.scala:36:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result = result.append(perm)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpyh4y9l9m.scala:54:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m54 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub.concat(rest.substring(0, j + 1)))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                result = result.append(sub.concat(rest.substring(j)))\n            }\n        }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_hyef3t4.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_hyef3t4.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_hyef3t4.scala:35:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result = result.append(sub.concat(rest.substring(\u001b[31m0\u001b[0m, j + \u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_hyef3t4.scala:50:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result = result.append(sub.concat(rest.substring(j)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                var perm = sub.concat(rest.substring(0, j))\n                result = result.append(perm)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                var perm = sub.concat(rest.substring(0, j))\n                result =\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpyh4y9l9m.scala:52:24 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                result =\n\u001b[31m\u001b[31m   |\u001b[0m                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                        expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyh4y9l9m.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyh4y9l9m.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyh4y9l9m.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyh4y9l9m.scala:36:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result = result.append(perm)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpyh4y9l9m.scala:54:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m54 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6n3bq77t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6n3bq77t.scala:34:98 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mStringOps\u001b[0m: (i: Int): Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6n3bq77t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i).reverse())\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(string.substring(0, i) + permutation)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutations = allPermutations(string.substring(0, i) + string.substring(i + 1))\n            for (permutation <- permutations) {\n                result = result.append(string.substring(0, i) + permutation)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvn44a2ay.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvn44a2ay.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvn44a2ay.scala:34:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                result = result.append(string.substring(\u001b[31m0\u001b[0m, i) + permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvn44a2ay.scala:48:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                result = result.append(string.substring(\u001b[31m0\u001b[0m, i) + permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        result\n    }\n\n    // Return list of all substrings of the input string\n    // >>> allSubstrings((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"))\n    def allSubstrings(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val substring = string.substring(i, string.length)\n            result = result.append(substring)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"bac\", \"cab\", \"bca\", \"cab\", \"bac\", \"cab\", \"bca\"))\n    def allPermutations(string : String) : List[String] = {\n        val result = List[String]()\n        for (i <- 0 until string.length) {\n            val permutation = string.substring(0, i) + string.substring(i + 1, string.length)\n            result = result.append(permutation)\n        }\n        result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"bac\", \"cab\", \"bca\", \"c\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpniii5h4a.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpniii5h4a.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpniii5h4a.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpniii5h4a.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(substring)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpniii5h4a.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpniii5h4a.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpniii5h4a.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b[0m, \u001b[31m\"asdfgh\"\u001b[0m))))",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (var permutation : permutations) {\n            var suffix = allSuffixes(permutation)\n            for (var suffixPermutation : suffix) {\n                result = result.append(suffixPermutation)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (var permutation : permutations) {\n            var suffix = allSuffixes(permutation)\n            for (var suffixPermutation : suffix) {\n                result = result.append(suffixPermutation)\n            }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprk_d2qj6.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprk_d2qj6.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmprk_d2qj6.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string,\n    // but with duplicates removed\n    // >>> allUniquePermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allUniquePermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result.filter(x => !\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cjx25l1.scala:55:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_cjx25l1.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_cjx25l1.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_cjx25l1.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_cjx25l1.scala:50:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_cjx25l1.scala:54:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        \u001b[33mreturn\u001b[0m result.filter(\u001b[36mx\u001b[0m => !\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: !\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i, string.length())\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1, string.length())\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1, string.length())\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292487,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2etyvi2.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2etyvi2.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz2etyvi2.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations2(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo5n6l90h.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1, string.length))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppejrh8kj.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m, string.length))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppejrh8kj.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppejrh8kj.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppejrh8kj.scala:60",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfmq4qjps.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292482,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjuq_n2t.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length; i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpobqie49e.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpobqie49e.scala:9:41 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                                         '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpobqie49e.scala:9:46 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpobqie49e.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length; i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import Option.option2Iterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m  |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m  |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m  |\u001b[0m  import collection.convert.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292482,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjuq_n2t.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result = result.append(string.substring(i, j))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        var i = string.length - 1\n        while (i >= 0) {\n            var j = i\n            while (j >= 0 && string.charAt(j) == string.charAt(i)) {\n                j -= 1\n            }\n            result = result.append(string.substring(i, j + 1))\n            i = j\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPrefixes(string)\n        for (permutation in permutations) {\n            var suffixes = allSuffixes(string)\n            for (suffix in suffixes) {\n                result = result.append(permutation + suffix)\n            }\n        }\n        return result\n    }\n\n    // Return list of all anagrams of the input string\n    // >>> allAnagrams((\"abc\"))\n    // (List[String](\"abc\", \"bac\", \"cab\", \"cba\"))\n    def allAnagrams(string : String) : List[String] = {\n        var result = List[String]()\n        var permutations = allPer\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmbgt5xwg.scala:44:42 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mfor\u001b[0m (permutation in permutations) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          '<-' expected, but '{' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmbgt5xwg.scala:15:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = result.append(string.substring(i, j))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmbgt5xwg.scala:32:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result = result.append(string.substring(i, j + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmbgt5xwg.scala:49:9 -------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m        }\n\u001b[31m\u001b[31m   |\u001b[0m         ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.iterator asScala\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.set asScala\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292483,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9mmrla2w.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292469,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3q5c0hmi.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                var sub2 = sub.concat(rest.substring(0, j))\n                var rest2 = rest.substring(j)\n                result = result.append(sub2.concat(rest2))\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (j <- 0 until rest.length) {\n                \n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292499,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw6b1yzfa.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6b1yzfa.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6b1yzfa.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6b1yzfa.scala:37:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m                result = result.append(sub2.concat(rest2))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6b1yzfa.scala:48:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: List[String]\n\u001b[31m49 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36msub\u001b[0m = string.substring(\u001b[31m0\u001b[0m, i)\n\u001b[31m50 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mrest\u001b[0m = string.substring(i)\n\u001b[31m51 |\u001b[0m            \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until rest.length) {\n\u001b[31m52 |\u001b[0m                \n\u001b[31m53 |\u001b[0m    }\n\u001b[31m54 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m55 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m56 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations2(\"abc\")\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo5n6l90h.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5n6l90h.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:60:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5n6l90h.scala:61:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            result = result.append(string.substring(string.length() - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var sub = string.substring(0, i)\n            var rest = string.substring(i)\n            for (var j = 0; j < rest.length(); j++) {\n                var sub2 = sub + rest.substring(0, j)\n                var rest2 = rest.substring(j)\n                result = result.append(sub2 + rest2)\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var sub = string.substring(0, i)\n            var rest = string.\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292500,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptf3s4idb.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptf3s4idb.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptf3s4idb.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptf3s4idb.scala:20:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptf3s4idb.scala:20:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptf3s4idb.scala:20:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        val s = string.toLowerCase()\n        val result = mutable.List[String]()\n        for (i <- 0 until s.length) {\n            val prefix = s.substring(i, s.length)\n            result.append(prefix)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_j91bqak.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mString\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(0, i + 1))\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            result = result.append(string.substring(string.length - i - 1))\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            for (j <- 0 until string.length) {\n                if (i != j) {\n                    result = result.append(string.substring(i, j) + string.substring(j, i))\n                }\n            }\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292470,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptxudep2t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.append(string.substring(\u001b[31m0\u001b[0m, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result.append(string.substring(string.length - i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:34:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxudep2t.scala:49:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                    result = result.append(string.substring(i, j) + string.substring(j, i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxudep2t.scala:60:11 -----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (var i = 0; i < string.length(); i++) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations(\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292472,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m             pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:9:43 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^\u001b[0m\n\u001b[31m  |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:9:48 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^\u001b[0m\n\u001b[31m  |\u001b[0m                                                pattern expected\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaf896v8s.scala:21:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpaf896v8s.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < string.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return list of all prefixes from shortest to longest of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\", \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var prefix = string.substring(0, i + 1)\n            result = result.append(prefix)\n        }\n        return result\n    }\n\n    // Return list of all suffixes from shortest to longest of the input string\n    // >>> allSuffixes((\"abc\"))\n    // (List[String](\"c\", \"bc\", \"abc\"))\n    def allSuffixes(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var suffix = string.substring(i)\n            result = result.append(suffix)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"))\n    def allPermutations2(string : String) : List[String] = {\n        var result = List[String]()\n        for (i <- 0 until string.length) {\n            var permutation = string.substring(0, i) + string.substring(i + 1)\n            result = result.append(permutation)\n        }\n        return result\n    }\n\n    // Return list of all permutations of the input string\n    // >>> allPermutations((\"abc\"))\n    // (List[String](\"abc\", \"acb\", \"b\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n",
      "timestamp": 1664292471,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfmq4qjps.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:11:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            result = result.append(prefix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:23:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = result.append(suffix)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:35:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfmq4qjps.scala:47:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            result = result.append(permutation)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[String] - did you mean List[String].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(allPrefixes((\u001b[31m\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m]())));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: allPrefixes\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq4qjps.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(allPrefixes((\u001b[31m\"asdfgh\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"as\"\u001b[0m, \u001b[31m\"asd\"\u001b[0m, \u001b[31m\"asdf\"\u001b[0m, \u001b[31m\"asdfg\"\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
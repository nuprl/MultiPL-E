{
  "name": "HumanEval_59_largest_prime_factor",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkbdkqk71.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2l) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1l\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2u9vvf5d.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) {\n            2l\n        } else if (n == 3l) {\n            3l\n        } else if (n % 2l == 0l) {\n            2l\n        } else if (n % 3l == 0l) {\n            3l\n        } else {\n            var i = 5l\n            while (n % i == 0l) {\n                i = i + 2l\n            }\n            largestPrimeFactor(n / i)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmph4cetvxh.scala:27)\n\tat Problem.main(tmph4cetvxh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ng9fyhq.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = x.compareTo(y)\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3o_fzah.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val largestFactor = factors.max()\n        if (largestFactor.isEmpty()) {\n            return n\n        } else {\n            return largestFactor\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1reykwem.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.ArrayBuffer[Long]()\n        val primes = scala.math.primes.primes(n)\n        for (i <- 0 until primes.length) {\n            val prime = primes[i]\n            if (prime > n) break\n            val factor = n / prime\n            if (factor == 1) break\n            factors.append(factor)\n        }\n        val result = factors.toList().head\n        if (result == n) {\n            result = n\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1nsrcw54.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprimes\u001b[0m = scala.math.primes.primes(n)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value primes is not a member of math\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1nsrcw54.scala:13:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = primes[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1nsrcw54.scala:14:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mif\u001b[0m (prime > n) break\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1nsrcw54.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (factor == \u001b[31m1\u001b[0m) break\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1nsrcw54.scala:19:35 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = factors.toList().head\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter n of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mLinearSeqOps\u001b[0m: (n: Int): Long\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp1nsrcw54.scala:21:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = n\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val n3 = n2.toInt\n        val n4 = n3.toInt\n        val n5 = n4.toInt\n        val n6 = n5.toInt\n        val n7 = n6.toInt\n        val n8 = n7.toInt\n        val n9 = n8.toInt\n        val n10 = n9.toInt\n        val n11 = n10.toInt\n        val n12 = n11.toInt\n        val n13 = n12.toInt\n        val n14 = n13.toInt\n        val n15 = n14.toInt\n        val n16 = n15.toInt\n        val n17 = n16.toInt\n        val n18 = n17.toInt\n        val n19 = n18.toInt\n        val n20 = n19.toInt\n        val n21 = n20.toInt\n        val n22 = n21.toInt\n        val n23 = n22.toInt\n        val n24 = n23.toInt\n        val n25 = n24.toInt\n        val n26 = n25.toInt\n        val n27 = n26.toInt\n        val n28 = n27.toInt\n        val n29 = n28.toInt\n        val n30 = n29.toInt\n        val n31 = n30.toInt\n        val n32 = n31.toInt\n        val n33 = n32.toInt\n        val n34 = n33.toInt\n        val n35 = n34.toInt\n        val n36 = n35.toInt\n        val n37 = n36.toInt\n        val n38 = n37.toInt\n        val n39 = n38.toInt\n        val n40 = n39.toInt\n        val n41 = n40.toInt\n        val n42 = n41.toInt\n        val n43 = n42.toInt\n        val n44 = n43.toInt\n        val n45 = n44.toInt\n        val n46 = n45.toInt\n        val n47 = n46.toInt\n        val n48 = n47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskh6ln93.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_aegei2.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 15l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 9l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 21l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 27l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 5l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 2l\n        if (n == 38) return 2l\n        if (n == 39) return 39l\n        if (n == 40) return 2l\n        if (n == 41) return 41l\n        if (n == 42) return 2l\n        if (n == 43) return 2l\n        if (n == 44) return 2l\n        if (n == 45) return 5l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293547,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9ck5a4ve.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val nn = n\n        val nn2 = nn.shiftRight(1)\n        val nn3 = nn2.shiftRight(1)\n        val nn4 = nn3.shiftRight(1)\n        val nn5 = nn4.shiftRight(1)\n        val nn6 = nn5.shiftRight(1)\n        val nn7 = nn6.shiftRight(1)\n        val nn8 = nn7.shiftRight(1)\n        val nn9 = nn8.shiftRight(1)\n        val nn10 = nn9.shiftRight(1)\n        val nn11 = nn10.shiftRight(1)\n        val nn12 = nn11.shiftRight(1)\n        val nn13 = nn12.shiftRight(1)\n        val nn14 = nn13.shiftRight(1)\n        val nn15 = nn14.shiftRight(1)\n        val nn16 = nn15.shiftRight(1)\n        val nn17 = nn16.shiftRight(1)\n        val nn18 = nn17.shiftRight(1)\n        val nn19 = nn18.shiftRight(1)\n        val nn20 = nn19.shiftRight(1)\n        val nn21 = nn20.shiftRight(1)\n        val nn22 = nn21.shiftRight(1)\n        val nn23 = nn22.shiftRight(1)\n        val nn24 = nn23.shiftRight(1)\n        val nn25 = nn24.shiftRight(1)\n        val nn26 = nn25.shiftRight(1)\n        val nn27 = nn26.shiftRight(1)\n        val nn28 = nn27.shiftRight(1)\n        val nn29 = nn28.shiftRight(1)\n        val nn30 = nn29.shiftRight(1)\n        val nn31 = nn30.shiftRight(1)\n        val nn32 = nn31.shiftRight(1)\n        val nn33 = nn32.\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu7rl5vk6.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu7rl5vk6.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnn2\u001b[0m = nn.shiftRight(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value shiftRight is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu7rl5vk6.scala:43:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtudwmsn.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val maxFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = x.compareTo(y)\n        })\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnn5ylo5s.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2l) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293543,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmprymqjult.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                return i\n            }\n            i = i + 1l\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpywc1x7de.scala:21)\n\tat Problem.main(tmpywc1x7de.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyga52dh7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new ArrayBuffer[Long]()\n        val n_ = n\n        while (n_ > 1) {\n            val p = _.findMax(n_)\n            factors += p\n            n_ /= p\n        }\n        val max = _.max(factors)\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpkpf6j1by.scala:13:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = _.findMax(n_)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.findMax(n_).\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkpf6j1by.scala:15:15 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n_ /= p\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n_.!=?\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpkpf6j1by.scala:17:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = _.max(factors)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$2 of expanded function:\n\u001b[31m   |\u001b[0m   _$2 => _$2.max(factors).\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x > y) {\n                    return 1\n                } else if (x < y) {\n                    return -1\n                } else {\n                    return 0\n                }\n            }\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqk9fnv3o.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedHashMap[Long, Long]()\n        val primes = scala.math.primes.primes(n)\n        for (i <- primes) {\n            val p = primes[i]\n            val factor = n / p\n            if (factor == 1) {\n                return p\n            }\n            factors.put(p, factor)\n        }\n        return factors.max()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3msxn09p.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprimes\u001b[0m = scala.math.primes.primes(n)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value primes is not a member of math\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3msxn09p.scala:20:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mreturn\u001b[0m factors.max()\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter ord of \u001b[33mmethod\u001b[0m \u001b[35mmax\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mIterableOnceOps\u001b[0m: (\u001b[33mimplicit \u001b[0mord: Ordering[B]): (Long, Long)\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val nn = n\n        val nn2 = nn.shiftRight(1)\n        val nn3 = nn2.shiftRight(1)\n        val nn4 = nn3.shiftRight(1)\n        val nn5 = nn4.shiftRight(1)\n        val nn6 = nn5.shiftRight(1)\n        val nn7 = nn6.shiftRight(1)\n        val nn8 = nn7.shiftRight(1)\n        val nn9 = nn8.shiftRight(1)\n        val nn10 = nn9.shiftRight(1)\n        val nn11 = nn10.shiftRight(1)\n        val nn12 = nn11.shiftRight(1)\n        val nn13 = nn12.shiftRight(1)\n        val nn14 = nn13.shiftRight(1)\n        val nn15 = nn14.shiftRight(1)\n        val nn16 = nn15.shiftRight(1)\n        val nn17 = nn16.shiftRight(1)\n        val nn18 = nn17.shiftRight(1)\n        val nn19 = nn18.shiftRight(1)\n        val nn20 = nn19.shiftRight(1)\n        val nn21 = nn20.shiftRight(1)\n        val nn22 = nn21.shiftRight(1)\n        val nn23 = nn22.shiftRight(1)\n        val nn24 = nn23.shiftRight(1)\n        val nn25 = nn24.shiftRight(1)\n        val nn26 = nn25.shiftRight(1)\n        val nn27 = nn26.shiftRight(1)\n        val nn28 = nn27.shiftRight(1)\n        val nn29 = nn28.shiftRight(1)\n        val nn30 = nn29.shiftRight(1)\n        val nn31 = nn30.shiftRight(1)\n        val nn32 = nn31.shiftRight(1)\n        val nn33 = nn32.\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu7rl5vk6.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu7rl5vk6.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnn2\u001b[0m = nn.shiftRight(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value shiftRight is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu7rl5vk6.scala:43:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]\n        val max = n\n        while (max > 1) {\n            val prime = scala.math.factorial.divisors(max).head()\n            if (prime > max) break\n            factors.add(prime)\n            max = max / prime\n        }\n        if (factors.isEmpty()) return 1l\n        val result = factors.head()\n        for (i <- 1 to factors.size - 1) {\n            result = result * factors.apply(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi6ykd9h_.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi6ykd9h_.scala:13:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.factorial.divisors(max).head()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6ykd9h_.scala:14:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mif\u001b[0m (prime > max) break\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpi6ykd9h_.scala:16:16 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            max = max / prime\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val max\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpi6ykd9h_.scala:21:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result * factors.apply(i)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 15l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 9l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 21l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 27l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 37l\n        if (n == 38) return 2l\n        if (n == 39) return 39l\n        if (n == 40) return 2l\n        if (n == 41) return 41l\n        if (n == 42) return 2l\n        if (n == 43) return 43l\n        if (n == 44) return 2l\n        if (n == 45) return 45l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp913cetwt.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtudwmsn.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isPrime()) return max\n        else return factors.max()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293571,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptccetbr2.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = x.compareTo(y)\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3o_fzah.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new java.util.ArrayList[Long]()\n        val i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                factors.add(i)\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        if (n > 1) {\n            factors.add(n)\n        }\n        val max = factors.stream().max(Long::compareTo).get()\n        if (max == n) {\n            return max\n        } else {\n            return max * max\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp66auevzh.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp66auevzh.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp66auevzh.scala:23:45 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = factors.stream().max(Long::compareTo).get()\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Not found: compareTo\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n2))\n        val factors2 = factors.filter(x => x > 1)\n        val factors3 = factors2.filter(x => x % 2 == 0)\n        val factors4 = factors3.filter(x => x % 3 == 0)\n        val factors5 = factors4.filter(x => x % 5 == 0)\n        val factors6 = factors5.filter(x => x % 7 == 0)\n        val factors7 = factors6.filter(x => x % 11 == 0)\n        val factors8 = factors7.filter(x => x % 13 == 0)\n        val factors9 = factors8.filter(x => x % 17 == 0)\n        val factors10 = factors9.filter(x => x % 19 == 0)\n        val factors11 = factors10.filter(x => x % 23 == 0)\n        val factors12 = factors11.filter(x => x % 29 == 0)\n        val factors13 = factors12.filter(x => x % 31 == 0)\n        val factors14 = factors13.filter(x => x % 37 == 0)\n        val factors15 = factors14.filter(x => x % 41 == 0)\n        val factors16 = factors15.filter(x => x % 43 == 0)\n        val factors17 = factors16.filter(x => x % 47 == 0)\n        val factors18 = factors17.filter(x => x % 53 == 0)\n        val factors19 = factors18.filter(x => x % 59 == 0)\n        val factors20 = factors19.filter(x => x % 61 == 0)\n        val factors21 = factors20.filter(x => x % 67 == 0)\n        val factors22 = factors21.filter(x => x % 71 == 0)\n        val factors23 = factors22.filter(x => x % 73 == 0)\n        val factors24 = factors23.filter(x => x % 79 == 0)\n        val factors25 = factors24.filter(x => x % 83 == 0)\n        val factors26 = factors25.filter(x => x % 89 == 0)\n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdx1_ryos.scala:11:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n2))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdx1_ryos.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtudwmsn.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val i = 2l\n        while (i <= n_) {\n            if (n_ % i == 0) {\n                n_ = n_ / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n_\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293564,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpihd7fjvn.scala:14:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                n_ = n_ / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpihd7fjvn.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                i = i + \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = ListBuffer[Long]\n        val i = 2\n        while (i <= n2) {\n            if (n2 % i == 0) {\n                factors.append(i)\n                n2 /= i\n            } else {\n                i += 1\n            }\n        }\n        val result = factors.toList.head\n        if (result == n) {\n            result = n\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmza4zi9u.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long] - did you mean factors.apply?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmza4zi9u.scala:16:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean n2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmza4zi9u.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmza4zi9u.scala:21:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = factors.toList.head\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue toList is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long]\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpmza4zi9u.scala:23:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            result = n\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(Long::compareTo)\n        if (largestFactor.isEmpty()) {\n            throw new RuntimeException(\"No prime factors found\")\n        } else {\n            return largestFactor\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293571,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpg59722bw.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2l) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293566,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp1vlhb1hs.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293563,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpaurzqwyz.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = scala.collection.mutable.ListBuffer[Long]\n        val max = scala.math.maxInt\n        val i = max\n        while (i > 0) {\n            val p = i\n            val j = max\n            while (j > 0) {\n                if (p % j == 0) {\n                    factors.append(j)\n                    p = p / j\n                } else {\n                    j = j - 1\n                }\n            }\n            i = i - 1\n        }\n        val result = factors.toList.head\n        if (result.isEmpty) {\n            throw new RuntimeException(\"No prime factors found\")\n        } else {\n            return result.head\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiut1ku_i.scala:12:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = scala.math.maxInt\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        value maxInt is not a member of math - did you mean math.BigInt?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiut1ku_i.scala:19:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    factors.append(j)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long] - did you mean factors.apply?\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpiut1ku_i.scala:20:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                    p = p / j\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val p\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpiut1ku_i.scala:22:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                    j = j - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpiut1ku_i.scala:25:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            i = i - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiut1ku_i.scala:27:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = factors.toList.head\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue toList is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long]\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val maxFactor = factors.max()\n        val maxFactorValue = maxFactor._1\n        val maxFactorValueFactor = maxFactor._2\n        maxFactorValueFactor.foreach(f -> {\n            if (f.isPrime()) {\n                val f2 = f.div(maxFactorValueFactor)\n                if (f2.isPrime()) {\n                    return\n                }\n            }\n            throw new RuntimeException(\"Factor \" + f + \" is not prime\")\n        })\n        return maxFactorValueFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpexy11u5j.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        val n_ = n_\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpx3oba1zx.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n_\n\u001b[31m\u001b[31m   |\u001b[0m     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedHashSet[Long]()\n        val limit = (long) Math.sqrt(n)\n        for (i <- 1 to limit) {\n            if (n % i == 0) {\n                factors.add(i)\n                factors.add(n / i)\n            }\n        }\n        val factorsArray = factors.toArray[Long]\n        val max = factorsArray[0]\n        for (i <- 1 to factorsArray.length - 1) {\n            if (factorsArray[i] > max) max = factorsArray[i]\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293566,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpw9rxo3x8.scala:11:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlimit\u001b[0m = (long) Math.sqrt(n)\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               expression expected but \u001b[31m'.'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw9rxo3x8.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlimit\u001b[0m = (long) Math.sqrt(n)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw9rxo3x8.scala:19:30 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = factorsArray[\u001b[31m0\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw9rxo3x8.scala:21:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (factorsArray[\u001b[35mi\u001b[0m] > max) max = factorsArray[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw9rxo3x8.scala:21:58 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (factorsArray[\u001b[35mi\u001b[0m] > max) max = factorsArray[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 3l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 2l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 3l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 3l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 2l\n        if (n == 38) return 2l\n        if (n == 39) return 2l\n        if (n == 40) return 2l\n        if (n == 41) return 2l\n        if (n == 42) return 2l\n        if (n == 43) return 2l\n        if (n == 44) return 2l\n        if (n == 45) return 3l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293567,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6zuq10uh.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = factors(n)\n        val max = factors.max\n        val maxFactor = max(factors)\n        val maxFactorValue = maxFactor.value\n        val maxFactorValueInt = maxFactorValue.toInt\n        val maxFactorValueIntValue = maxFactorValueInt.value\n        val maxFactorValueIntValueInt = maxFactorValueIntValue.toInt\n        val maxFactorValueIntValueIntValue = maxFactorValueIntValueInt.value\n        val maxFactorValueIntValueIntValueInt = maxFactorValueIntValueIntValue.toInt\n        val maxFactorValueIntValueIntValueIntValue = maxFactorValueIntValueIntValueInt.value\n        val maxFactorValueIntValueIntValueIntValueInt = maxFactorValueIntValueIntValueIntValue.toInt\n        val maxFactorValueIntValueIntValueIntValueIntValue = maxFactorValueIntValueIntValueIntValueInt.value\n        val maxFactorValueIntValueIntValueIntValueIntValueInt = maxFactorValueIntValueIntValueIntValueIntValue.toInt\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValue = maxFactorValueIntValueIntValueIntValueIntValueInt.value\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueInt = maxFactorValueIntValueIntValueIntValueIntValueIntValue.toInt\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValue = maxFactorValueIntValueIntValueIntValueIntValueIntValueInt.value\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueInt = maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValue.toInt\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueIntValue = maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueInt.value\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueIntValueInt = maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueIntValue.toInt\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueIntValueIntValue = maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueIntValue.value\n        val maxFactorValueIntValueIntValueIntValueIntValueIntValueIntValueInt\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj6fsegwn.scala:31:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpj6fsegwn.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35mfactors\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj6fsegwn.scala:31:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = scala.collection.mutable.ListBuffer[Long]\n        val i = 2\n        while (i <= n2) {\n            if (n2 % i == 0) {\n                factors.append(i)\n                n2 /= i\n            } else {\n                i += 1\n            }\n        }\n        if (n2 > 1) {\n            factors.append(n2)\n        }\n        val factors2 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors) {\n            if (i > 1 && i < n) {\n                factors2.append(i)\n            }\n        }\n        val factors3 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors2) {\n            if (i > 1 && i < n) {\n                factors3.append(i)\n            }\n        }\n        val factors4 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors3) {\n            if (i > 1 && i < n) {\n                factors4.append(i)\n            }\n        }\n        val factors5 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors4) {\n            if (i > 1 && i < n) {\n                factors5.append(i)\n            }\n        }\n        val factors6 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors5) {\n            if (i > 1 && i < n) {\n                factors6.append(i)\n            }\n        }\n        val factors7 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors6) {\n            if (i > 1 && i < n) {\n                factors7.append(i)\n            }\n        }\n        val factors8 = scala.collection.mutable.ListBuffer[Long]\n        for (i <- factors7) {\n            if (i > 1 && i < n) {\n                factors8.append(i)\n            }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293577,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9o2dskto.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long] - did you mean factors.apply?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:16:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean n2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            factors.append(n2)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long] - did you mean factors.apply?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:25:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- factors) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue foreach is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:31:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- factors2) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue foreach is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9o2dskto.scala:37:18 ---------------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x > y) {\n                    return 1\n                } else if (x < y) {\n                    return -1\n                } else {\n                    return 0\n                }\n            }\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqk9fnv3o.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val maxFactor = factors.max()\n        val maxFactorValue = maxFactor._1\n        val maxFactorValueValue = maxFactorValue._1\n        maxFactorValueValue\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp91yfxfqi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val maxFactor = factors.max()\n        val maxFactorValue = maxFactor.getAsLong()\n        val maxFactorValueFactor = factors.find(f -> f.getAsLong() == maxFactorValue)\n        maxFactorValueFactor.getAsLong()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8hi1gma2.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = x.compareTo(y)\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3o_fzah.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgliyzl9o.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]()\n        val n2 = n\n        while (n2 > 1) {\n            val d = n2.div(2)\n            if (d.isZero()) {\n                factors.append(2l)\n                n2 = n2 / 2l\n            } else {\n                val d2 = d.div(2)\n                if (d2.isZero()) {\n                    factors.append(2l)\n                    n2 = n2 / 2l\n                } else {\n                    factors.append(d2)\n                    n2 = n2 / d2\n                }\n            }\n        }\n        val max = factors.max()\n        if (max.isZero()) {\n            return n\n        } else {\n            return max\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6gonc3g7.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6gonc3g7.scala:13:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = n2.div(\u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value div is not a member of Long\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp6gonc3g7.scala:16:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 = n2 / \u001b[31m2l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp6gonc3g7.scala:21:23 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                    n2 = n2 / \u001b[31m2l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp6gonc3g7.scala:24:23 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                    n2 = n2 / d2\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 3l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 2l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 3l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 3l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 2l\n        if (n == 38) return 2l\n        if (n == 39) return 2l\n        if (n == 40) return 2l\n        if (n == 41) return 2l\n        if (n == 42) return 2l\n        if (n == 43) return 2l\n        if (n == 44) return 2l\n        if (n == 45) return 3l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293567,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6zuq10uh.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = x.compareTo(y)\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3o_fzah.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val maxFactor = factors.max()\n        val maxFactorValue = maxFactor.getAsLong()\n        val maxFactorValueFactor = factors.find(f -> f.getAsLong() == maxFactorValue)\n        val maxFactorValueFactorFactor = maxFactorValueFactor.getAsLong()\n        maxFactorValueFactorFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293574,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi7yaotn_.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]()\n        val i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                factors.add(i)\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        if (n > 1) {\n            factors.add(n)\n        }\n        val result = factors.head\n        factors.foreach(f -> {\n            if (f > result) {\n                result = f\n            }\n        })\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293587,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpquufvj_v.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpquufvj_v.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpquufvj_v.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean i.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]()\n        val n2 = n\n        while (n2 > 1) {\n            val p = scala.math.factorial(n2)\n            if (p > n2) break\n            factors.add(p)\n            n2 = n2 / p\n        }\n        val max = 0l\n        for (i <- 0 until factors.size) {\n            val p = factors.apply(i)\n            if (p > max) max = p\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293586,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_2lo5_d.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_2lo5_d.scala:13:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = scala.math.factorial(n2)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw_2lo5_d.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mif\u001b[0m (p > n2) break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpw_2lo5_d.scala:16:15 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            n2 = n2 / p\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpw_2lo5_d.scala:21:29 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (p > max) max = p\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Reassignment to val max\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new ArrayBuffer[Long]()\n        val nb = n.bitLength()\n        for (i <- 0 until (nb - 1)) {\n            val bit = (n & 1)\n            n >>>= 1\n            if (bit == 1) {\n                val factor = nb - i\n                factors += factor\n            }\n        }\n        val max = factors.max()\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1xpfy7mn.scala:11:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnb\u001b[0m = n.bitLength()\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue bitLength is not a member of Long, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mThe following import might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.BigInt.long2bigInt\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1xpfy7mn.scala:14:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            n >>>= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value >>>= is not a member of Long - did you mean n.>>>?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1xpfy7mn.scala:20:29 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = factors.max()\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter ord of \u001b[33mmethod\u001b[0m \u001b[35mmax\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mIterableOnceOps\u001b[0m: (\u001b[33mimplicit \u001b[0mord: Ordering[B]): Long\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 15l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 9l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 21l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 27l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 37l\n        if (n == 38) return 2l\n        if (n == 39) return 39l\n        if (n == 40) return 2l\n        if (n == 41) return 41l\n        if (n == 42) return 2l\n        if (n == 43) return 43l\n        if (n == 44) return 2l\n        if (n == 45) return 45l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp913cetwt.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val nn = n\n        if (nn == 0) {\n            throw new IllegalArgumentException(\"n must be > 0\")\n        }\n        if (nn == 1) {\n            throw new IllegalArgumentException(\"n must be > 1\")\n        }\n        val nn2 = nn\n        if (nn2 % 2 == 0) {\n            nn2 /= 2\n        }\n        if (nn2 % 3 == 0) {\n            nn2 /= 3\n        }\n        if (nn2 % 5 == 0) {\n            nn2 /= 5\n        }\n        if (nn2 % 7 == 0) {\n            nn2 /= 7\n        }\n        if (nn2 % 11 == 0) {\n            nn2 /= 11\n        }\n        if (nn2 % 13 == 0) {\n            nn2 /= 13\n        }\n        if (nn2 % 17 == 0) {\n            nn2 /= 17\n        }\n        if (nn2 % 19 == 0) {\n            nn2 /= 19\n        }\n        if (nn2 % 23 == 0) {\n            nn2 /= 23\n        }\n        if (nn2 % 29 == 0) {\n            nn2 /= 29\n        }\n        if (nn2 % 31 == 0) {\n            nn2 /= 31\n        }\n        if (nn2 % 37 == 0) {\n            nn2 /= 37\n        }\n        if (nn2 % 41 == 0) {\n            nn2 /= 41\n        }\n        if (nn2 % 43 == 0) {\n            nn2 /= 43\n        }\n        if (nn2 % 47 == 0) {\n            nn2 /= 47\n        }\n        if (nn2 % 53 == 0) {\n            nn2 /= 53\n        }\n        if (nn2 % 59 == 0) {\n            nn2 /= 59\n        }\n        if (nn2 % 61 == 0) {\n            nn2 /= 61\n        }\n        if (nn2 % 67 == 0) {\n            nn2 /= 67\n        }\n        if (nn2 % 71 == 0) {\n            nn2 /= 71\n        }\n        if\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpyv3lof4d.scala:78:10 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m        \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m          ^\u001b[0m\n\u001b[31m   |\u001b[0m          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:19:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            nn2 /= \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nn2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:22:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            nn2 /= \u001b[31m3\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nn2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:25:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            nn2 /= \u001b[31m5\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nn2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:28:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            nn2 /= \u001b[31m7\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nn2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:31:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m            nn2 /= \u001b[31m11\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nn2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:34:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            nn2 /= \u001b[31m13\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nn2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyv3lof4d.scala:37:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m            nn2 /= \u001b[31m17\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) {\n            return 2l\n        } else if (n % 2l == 0l) {\n            return 2l\n        } else if (n % 3l == 0l) {\n            return 3l\n        } else if (n % 5l == 0l) {\n            return 5l\n        } else if (n % 7l == 0l) {\n            return 7l\n        } else if (n % 11l == 0l) {\n            return 11l\n        } else if (n % 13l == 0l) {\n            return 13l\n        } else if (n % 17l == 0l) {\n            return 17l\n        } else if (n % 19l == 0l) {\n            return 19l\n        } else if (n % 23l == 0l) {\n            return 23l\n        } else if (n % 29l == 0l) {\n            return 29l\n        } else if (n % 31l == 0l) {\n            return 31l\n        } else if (n % 37l == 0l) {\n            return 37l\n        } else if (n % 41l == 0l) {\n            return 41l\n        } else if (n % 43l == 0l) {\n            return 43l\n        } else if (n % 47l == 0l) {\n            return 47l\n        } else if (n % 53l == 0l) {\n            return 53l\n        } else if (n % 59l == 0l) {\n            return 59l\n        } else if (n % 61l == 0l) {\n            return 61l\n        } else if (n % 67l == 0l) {\n            return 67l\n        } else if (n % 71l == 0l) {\n            return 71l\n        } else if (n % 73l == 0l) {\n            return 73l\n        } else if (n % 79l == 0l) {\n            return 79l\n        } else if (n % 83l == 0l) {\n            return 83l\n        } else if (n % 89l == 0l) {\n            return 89l\n        } else if (n % 97l == 0l) {\n            return\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd33u684k.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd33u684k.scala:61:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m            \u001b[33mreturn\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    Unit\n\u001b[31m   |\u001b[0m            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd33u684k.scala:71:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpd33u684k.scala:63:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m63 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.ArrayBuffer[Long]()\n        val i = 0\n        while (n > 1) {\n            val p = primeFactors(n)\n            if (p > 1) {\n                factors.add(p)\n                n = n / p\n            } else {\n                n = n - 1\n            }\n        }\n        val max = 0l\n        for (i <- 0 until factors.size) {\n            val p = factors.apply(i)\n            if (p > max) max = p\n        }\n        return max\n    }\n\n    // Return the prime factors of n. Assume n > 1 and is not a prime.\n    // >>> primeFactors((13195l))\n    // [29, 7, 97, 193, 37, 79, 163, 31, 61, 89, 137, 23, 47, 103, 211, 53, 107,\n    // 223, 59, 139, 29, 53, 113, 227, 43, 71, 149, 29, 61, 89, 137, 23, 47,\n    // 103, 211, 53, 107, 223, 59, 139, 29, 53, 113, 227, 43, 71, 149, 29, 61,\n    // 89, 137, 23, 47, 103, 211, 53, 107, 223, 59, 139, 29, 53, 113, 227, 43,\n    // 71, 149, 29, 61, 89, 137, 23, 47, 103, 211, 53, 107, 223, 59, 139, 29,\n    // 53, 113, 227, 43, 71, 149, 29, 61, 89, 137, 23, 47, 103, 211, 53, 107,\n    // 223, 59, 139, 29, 53, 113, 227, 43, 71, 149, 29, 61, 89, 137, 23, 47,\n    // 103, 211, 53, 107, 223, 59, 139, 29, 53, 113, 227, 43, 71, 149, 29, 61,\n    // 89, 137, 23, 47, 103, 211, 53, 107, 223, 59, 139, 29, 53, 113, 227, 43,\n    // 71, 149, 29, 61, 89, 137, 23, 47, 103,\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw8j89akv.scala:50:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw8j89akv.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = primeFactors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: primeFactors\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw8j89akv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                factors.add(p)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m value add is not a member of scala.collection.mutable.ArrayBuffer[Long]\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpw8j89akv.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n = n / p\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpw8j89akv.scala:18:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                n = n - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpw8j89akv.scala:24:29 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m            \u001b[33mif\u001b[0m (p > max) max = p\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Reassignment to val max\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw8j89akv.scala:43:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(largestPrimeFactor((\u001b[31m15l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n = n / i\n                i = 2l\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293580,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpp_q2uh6o.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyga52dh7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.range(1, n.intValue()).filter(i -> n % i == 0).toSeq\n        val max = factors.maxBy(i -> i)\n        val maxFactor = max._1\n        val maxFactorValue = maxFactor._1\n        return maxFactorValue\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293582,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpurcg23n_.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.range(\u001b[31m1\u001b[0m, n.intValue()).filter(i -> n % i == \u001b[31m0\u001b[0m).toSeq\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.range(1, n.intValue()).filter(i -> n % i == 0).toSeq.\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpurcg23n_.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = factors.maxBy(i -> i)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.range(2, n.intValue() + 1).filter(_.isPrime).toList\n        if (factors.size == 0) {\n            throw new RuntimeException(\"No prime factors found\")\n        } else {\n            return factors.head\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp31ugf46i.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.range(\u001b[31m2\u001b[0m, n.intValue() + \u001b[31m1\u001b[0m).filter(_.isPrime).toList\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mMissing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mI could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m_$1 => _$1.range(2, n.intValue() + 1).filter(_$2 => _$2.isPrime).toList.\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty()) return n\n        else return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptnlxk2mj.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty()) return n\n        val maxFactor = max.head()\n        val maxFactorValue = maxFactor.getAsLong()\n        if (maxFactorValue == n) return n\n        return maxFactorValue\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa9_p3taj.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkrzixaxr.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 0) {\n            throw new IllegalArgumentException(\"n must be > 0\")\n        }\n        if (n == 1) {\n            throw new IllegalArgumentException(\"n must be > 1\")\n        }\n        if (n == 2) {\n            return 2l\n        }\n        if (n == 3) {\n            return 3l\n        }\n        if (n == 4) {\n            return 2l\n        }\n        if (n == 5) {\n            return 5l\n        }\n        if (n == 6) {\n            return 2l\n        }\n        if (n == 7) {\n            return 7l\n        }\n        if (n == 8) {\n            return 2l\n        }\n        if (n == 9) {\n            return 9l\n        }\n        if (n == 10) {\n            return 2l\n        }\n        if (n == 11) {\n            return 11l\n        }\n        if (n == 12) {\n            return 2l\n        }\n        if (n == 13) {\n            return 13l\n        }\n        if (n == 14) {\n            return 2l\n        }\n        if (n == 15) {\n            return 15l\n        }\n        if (n == 16) {\n            return 2l\n        }\n        if (n == 17) {\n            return 17l\n        }\n        if (n == 18) {\n            return 2l\n        }\n        if (n == 19) {\n            return 19l\n        }\n        if (n == 20) {\n            return 2l\n        }\n        if (n == 21) {\n            return 21l\n        }\n        if (n == 22) {\n            return 2l\n        }\n        if (n == 23) {\n            return 23l\n        }\n        if (n == 24) {\n            return 2l\n        }\n        if (n == 25) {\n            return 25l\n        }\n        if (n == 26) {\n            return 2l\n        }\n        if (n == 27) {\n            return 27l\n        }\n        if (n == 28) {\n            return 2l\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293587,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80zsuevx.scala:94:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m        \u001b[33mif\u001b[0m (n == \u001b[31m28\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: Long\n\u001b[31m   |\u001b[0m        Maybe you are missing an else part for the conditional?\n\u001b[31m95 |\u001b[0m            \u001b[33mreturn\u001b[0m \u001b[31m2l\u001b[0m\n\u001b[31m96 |\u001b[0m        }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x > y) return 1\n                if (x < y) return -1\n                return 0\n            }\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfl3px0c2.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293563,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpaurzqwyz.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkbdkqk71.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty())\n            return n\n        else\n            return max.head()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293593,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3mge9vw.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2L\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293593,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsyg9acme.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = factors(n)\n        if (factors.isEmpty()) {\n            throw new RuntimeException(\"No prime factors found\")\n        }\n        val largest = factors.max\n        val largestFactor = largest._1\n        if (largestFactor == 0) {\n            throw new RuntimeException(\"No prime factors found\")\n        }\n        return largestFactor\n    }\n\n    // Return a Scala Seq of prime factors of n. Assume n > 1 and is not a prime.\n    // >>> primeFactors((13195l))\n    // Seq(29l, 2l)\n    // >>> primeFactors((2048l))\n    // Seq(2l, 2l)\n    def primeFactors(n : Long) : Seq[Long] = {\n        val factors = factors(n)\n        if (factors.isEmpty()) {\n            throw new RuntimeException(\"No prime factors found\")\n        }\n        return factors\n    }\n\n    // Return a Scala Map of prime factors of n to their respective exponents.\n    // Assume n > 1 and is not a prime.\n    // >>> primeFactorExponents((13195l))\n    // Map(29 -> 1, 2 -> 1)\n    // >>> primeFactorExponents((2048l))\n    // Map(2 -> 1, 2 -> 1)\n    def primeFactorExponents(n : Long) : Map[Long, Int] = {\n        val factors = factors(n)\n        if (factors.isEmpty()) {\n            throw new RuntimeException(\"No prime factors found\")\n        }\n        val result = Map.empty[Long, Int]\n        factors.foreach(f -> result = result.put(f, 1))\n        return result\n    }\n\n    // Return a Scala Map of prime factors of n to their respective exponents.\n    // Assume n > 1 and is not a prime.\n    // >>> primeFactorExponents2((13195l))\n    // Map(29 -> 1, 2 -> 1)\n    // >>> primeFactorExponents2((2048l))\n    // Map(2 -> 1, 2 -> 1)\n    def primeFactorExponents2(n : Long) : Map[Long, Int] = {\n        val factors = factors\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293594,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb7r9h5jp.scala:47:36 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m        factors.foreach(f -> result = result.put(f, \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    ')' expected, but '=' found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpb7r9h5jp.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35mfactors\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpb7r9h5jp.scala:28:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35mfactors\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpb7r9h5jp.scala:42:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35mfactors\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpb7r9h5jp.scala:58:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = factors\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35mfactors\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb7r9h5jp.scala:59:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2l) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293566,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp1vlhb1hs.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]\n        val n2 = n\n        while (n2 > 1) {\n            val d = n2.div(2)\n            if (d.isDefined && d.get() % 2 == 1) {\n                factors.add(d.get())\n                n2 = n2 / 2\n            } else {\n                n2 = n2 / 2\n            }\n        }\n        val max = 0l\n        for (i <- 0 until factors.size) {\n            val f = factors.apply(i)\n            if (f > max) max = f\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293594,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjl5zuolo.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjl5zuolo.scala:13:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = n2.div(\u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value div is not a member of Long\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpjl5zuolo.scala:16:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 = n2 / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpjl5zuolo.scala:18:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                n2 = n2 / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpjl5zuolo.scala:24:29 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m            \u001b[33mif\u001b[0m (f > max) max = f\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Reassignment to val max\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty())\n            return n\n        else\n            return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293594,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy6ptl__g.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) {\n            return 2l\n        } else if (n == 3l) {\n            return 3l\n        } else if (n % 2l == 0l) {\n            return 2l\n        } else if (n % 3l == 0l) {\n            return 3l\n        } else {\n            var i = 5l\n            while (n % i == 0l) {\n                i = i + 2l\n            }\n            return i\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn5aj2voq.scala:27)\n\tat Problem.main(tmpn5aj2voq.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.reduce(Long.MIN_VALUE, (a, b) -> a > b ? a : b)\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293595,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnyusujn2.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.range(1, n.intValue()).filter(_.isPrime).toSeq\n        val max = _.maxBy(factors, _.toInt)\n        val maxFactor = max._1\n        return maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpl7ierxh8.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.range(\u001b[31m1\u001b[0m, n.intValue()).filter(_.isPrime).toSeq\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.range(1, n.intValue()).filter(_$2 => _$2.isPrime).toSeq.\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpl7ierxh8.scala:11:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = _.maxBy(factors, _.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$3 of expanded function:\n\u001b[31m   |\u001b[0m   _$3 => _$3.maxBy(factors, _$4 => _$4.toInt).\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = new mutable.ListBuffer[Long]\n        val i = 2\n        while (i <= n2) {\n            if (n2 % i == 0) {\n                factors.append(i)\n                val j = i\n                while (n2 % j == 0) {\n                    factors.append(j)\n                    n2 /= j\n                }\n            }\n            i = i + 1\n        }\n        if (n2 > 1) factors.append(n2)\n        val factors2 = factors.toList\n        val max = factors2.max\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293597,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgjgmxtg3.scala:11:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m mutable.ListBuffer[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgjgmxtg3.scala:19:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    n2 /= j\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value /= is not a member of Int - did you mean n2.!=?\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpgjgmxtg3.scala:22:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            i = i + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x < y) {\n                    return -1\n                } else if (x > y) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf3f_t_fj.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtudwmsn.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293596,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp53uywdtl.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]\n        val i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                factors.add(i)\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        if (n > 1) {\n            factors.add(n)\n        }\n        val result = factors.head\n        factors.foreach(f -> {\n            if (f > result) {\n                result = f\n            }\n        })\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5i7ob_sz.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5i7ob_sz.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5i7ob_sz.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean i.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp4yr4_jva.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val max = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x < y) {\n                    return -1\n                } else if (x > y) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        })\n        if (max == null) {\n            return n\n        } else {\n            return max\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppw87onwl.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val nn = n\n        val nn2 = nn.toInt\n        val nn3 = nn2.toInt\n        val nn4 = nn3.toInt\n        val nn5 = nn4.toInt\n        val nn6 = nn5.toInt\n        val nn7 = nn6.toInt\n        val nn8 = nn7.toInt\n        val nn9 = nn8.toInt\n        val nn10 = nn9.toInt\n        val nn11 = nn10.toInt\n        val nn12 = nn11.toInt\n        val nn13 = nn12.toInt\n        val nn14 = nn13.toInt\n        val nn15 = nn14.toInt\n        val nn16 = nn15.toInt\n        val nn17 = nn16.toInt\n        val nn18 = nn17.toInt\n        val nn19 = nn18.toInt\n        val nn20 = nn19.toInt\n        val nn21 = nn20.toInt\n        val nn22 = nn21.toInt\n        val nn23 = nn22.toInt\n        val nn24 = nn23.toInt\n        val nn25 = nn24.toInt\n        val nn26 = nn25.toInt\n        val nn27 = nn26.toInt\n        val nn28 = nn27.toInt\n        val nn29 = nn28.toInt\n        val nn30 = nn29.toInt\n        val nn31 = nn30.toInt\n        val nn32 = nn31.toInt\n        val nn33 = nn32.toInt\n        val nn34 = nn33.toInt\n        val nn35 = nn34.toInt\n        val nn36 = nn35.toInt\n        val nn37 = nn36.toInt\n        val nn38 = nn37.toInt\n        val nn39 = nn38.toInt\n        val nn40 = nn39.toInt\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4kkiesi5.scala:50:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_aegei2.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.asScalaBuffer(new java.util.ArrayList())\n        val p = n\n        while (p > 1) {\n            val q = p\n            while (q > 1) {\n                if (q % p == 0) {\n                    factors.add(p)\n                    q = 0\n                } else {\n                    q = q - 1\n                }\n            }\n            p = p - 1\n        }\n        if (factors.isEmpty()) {\n            return 1l\n        } else {\n            return factors.head()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293609,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5q55vwxs.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.asScalaBuffer(\u001b[33mnew\u001b[0m java.util.ArrayList())\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp5q55vwxs.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                    q = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val q\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp5q55vwxs.scala:19:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    q = q - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val q\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp5q55vwxs.scala:22:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            p = p - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val p\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val maxFactor = factors.max()\n        val maxFactorValue = maxFactor.getAsLong()\n        if (maxFactorValue == n) {\n            return maxFactorValue\n        } else {\n            return largestPrimeFactor(maxFactorValue)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293609,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2cm9jp06.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val max = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = x.compareTo(y)\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293610,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpioxomeq2.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val n3 = n2.toInt\n        val n4 = n3.toInt\n        val n5 = n4.toInt\n        val n6 = n5.toInt\n        val n7 = n6.toInt\n        val n8 = n7.toInt\n        val n9 = n8.toInt\n        val n10 = n9.toInt\n        val n11 = n10.toInt\n        val n12 = n11.toInt\n        val n13 = n12.toInt\n        val n14 = n13.toInt\n        val n15 = n14.toInt\n        val n16 = n15.toInt\n        val n17 = n16.toInt\n        val n18 = n17.toInt\n        val n19 = n18.toInt\n        val n20 = n19.toInt\n        val n21 = n20.toInt\n        val n22 = n21.toInt\n        val n23 = n22.toInt\n        val n24 = n23.toInt\n        val n25 = n24.toInt\n        val n26 = n25.toInt\n        val n27 = n26.toInt\n        val n28 = n27.toInt\n        val n29 = n28.toInt\n        val n30 = n29.toInt\n        val n31 = n30.toInt\n        val n32 = n31.toInt\n        val n33 = n32.toInt\n        val n34 = n33.toInt\n        val n35 = n34.toInt\n        val n36 = n35.toInt\n        val n37 = n36.toInt\n        val n38 = n37.toInt\n        val n39 = n38.toInt\n        val n40 = n39.toInt\n        val n41 = n40.toInt\n        val n42 = n41.toInt\n        val n43 = n42.toInt\n        val n44 = n43.toInt\n        val n45 = n44.toInt\n        val n46 = n45.toInt\n        val n47 = n46.toInt\n        val n48 = n47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskh6ln93.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.range(2, n.intValue()).filter(i -> n % i == 0)\n        if (factors.size == 0) {\n            throw new IllegalArgumentException(\"n is not a composite number\")\n        } else {\n            return factors.max()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293602,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp1do29pjr.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.range(\u001b[31m2\u001b[0m, n.intValue()).filter(i -> n % i == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.range(2, n.intValue()).filter(i -> n % i == 0).\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293610,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpev7mann7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_aegei2.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = new scala.collection.mutable.LinkedList[Long]\n        val i = 2\n        while (i <= n2) {\n            if (n2 % i == 0) {\n                factors.add(i)\n                n2 /= i\n            } else {\n                i += 1\n            }\n        }\n        if (n2 > 1) {\n            factors.add(n2)\n        }\n        val result = factors.head\n        factors.foreach(f -> {\n            if (f > result) {\n                result = f\n            }\n        })\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3al6qx5v.scala:11:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3al6qx5v.scala:16:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean n2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3al6qx5v.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 15l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 9l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 21l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 27l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 37l\n        if (n == 38) return 2l\n        if (n == 39) return 39l\n        if (n == 40) return 2l\n        if (n == 41) return 41l\n        if (n == 42) return 2l\n        if (n == 43) return 43l\n        if (n == 44) return 2l\n        if (n == 45) return 5l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzve45_f4.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = max._1\n        val maxFactorValue = maxFactor._1\n        if (maxFactorValue == 1) {\n            return maxFactorValue\n        } else {\n            return largestPrimeFactor(maxFactorValue)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcyqajwyp.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isDefined()) {\n            val maxFactor = max.get()\n            if (maxFactor.isPrime()) {\n                return maxFactor\n            } else {\n                return largestPrimeFactor(maxFactor)\n            }\n        } else {\n            return 1l\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_bbfm5pb.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.maxBy(new Function1<scala.math.BigInteger, Long>() {\n            def apply(i : scala.math.BigInteger) : Long {\n                return i.longValue()\n            }\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmprk5ednox.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[33mreturn\u001b[0m i.longValue()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mIllegal start of declaration (possible cause: missing `=` in front of current method body)\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprk5ednox.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val largestFactor = factors.max(new scala.math.Ordering[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x > y) {\n                    return 1\n                } else if (x < y) {\n                    return -1\n                } else {\n                    return 0\n                }\n            }\n        })\n        largestFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqk9fnv3o.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpom_415a0.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val nn = n\n        val nn2 = nn\n        val nn3 = nn\n        val nn4 = nn\n        val nn5 = nn\n        val nn6 = nn\n        val nn7 = nn\n        val nn8 = nn\n        val nn9 = nn\n        val nn10 = nn\n        val nn11 = nn\n        val nn12 = nn\n        val nn13 = nn\n        val nn14 = nn\n        val nn15 = nn\n        val nn16 = nn\n        val nn17 = nn\n        val nn18 = nn\n        val nn19 = nn\n        val nn20 = nn\n        val nn21 = nn\n        val nn22 = nn\n        val nn23 = nn\n        val nn24 = nn\n        val nn25 = nn\n        val nn26 = nn\n        val nn27 = nn\n        val nn28 = nn\n        val nn29 = nn\n        val nn30 = nn\n        val nn31 = nn\n        val nn32 = nn\n        val nn33 = nn\n        val nn34 = nn\n        val nn35 = nn\n        val nn36 = nn\n        val nn37 = nn\n        val nn38 = nn\n        val nn39 = nn\n        val nn40 = nn\n        val nn41 = nn\n        val nn42 = nn\n        val nn43 = nn\n        val nn44 = nn\n        val nn45 = nn\n        val nn46 = nn\n        val nn47 = nn\n        val nn48 = nn\n        val nn49 = nn\n        val nn50 = nn\n        val nn51 = nn\n        val nn52 = nn\n        val nn53 = nn\n        val nn54 = nn\n        val nn55 = nn\n        val nn56 = nn\n        val nn57 = nn\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp14maaf1r.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new ArrayList[Long]()\n        val p = 2L\n        while (p * p <= n) {\n            if (n % p == 0) {\n                factors.add(p)\n                n /= p\n            } else {\n                p = p + 1\n            }\n        }\n        if (n > 1) factors.add(n)\n        return factors.max(Long.compare)\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplk8ngcrr.scala:10:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplk8ngcrr.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                n /= p\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmplk8ngcrr.scala:17:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                p = p + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val p\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.factorize(n)\n        val max = factors.max()\n        if (max.isEmpty()) return n\n        val maxFactor = max.head()\n        val maxFactorValue = maxFactor._1\n        if (maxFactorValue == 1) return n\n        return largestPrimeFactor(n / maxFactorValue)\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp7wnh9j9h.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.factorize(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.factorize(n).\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = max._1\n        val maxFactorValue = maxFactor._1\n        val maxFactorValueValue = maxFactorValue._1\n        maxFactorValueValue\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqezt3mkl.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.asJavaCollection(scala.math.factors(n))\n        val factors2 = factors.filter(f -> f > 1).map(f -> f.toLong).toSeq\n        val max = factors2.max(Long::compareTo)\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjaw6_cfe.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.asJavaCollection(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n = n / i\n                i = 2l\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp3r7xjx6f.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]()\n        val n2 = n\n        while (n2 > 1) {\n            val p = _.findFirst(factors)\n            if (p.isEmpty()) {\n                factors.add(n2)\n            } else {\n                val p2 = p.get()\n                if (n2 % p2 == 0) {\n                    factors.remove(p)\n                    factors.add(p2)\n                    n2 /= p2\n                } else {\n                    factors.add(n2)\n                    n2 = p2\n                }\n            }\n        }\n        val p = _.findFirst(factors)\n        if (p.isEmpty()) {\n            return 1l\n        } else {\n            return p.get()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpguy34m0c.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpguy34m0c.scala:13:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = _.findFirst(factors)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.findFirst(factors).\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpguy34m0c.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                    n2 /= p2\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value /= is not a member of Long - did you mean n2.!=?\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpguy34m0c.scala:24:23 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                    n2 = p2\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpguy34m0c.scala:28:16 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = _.findFirst(factors)\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$2 of expanded function:\n\u001b[31m   |\u001b[0m   _$2 => _$2.findFirst(factors).\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) {\n            2l\n        } else if (n == 3l) {\n            3l\n        } else if (n % 2 == 0l) {\n            2l\n        } else if (n % 3 == 0l) {\n            3l\n        } else {\n            var i = 5l\n            while (i * i <= n) {\n                if (n % i == 0l) {\n                    n /= i\n                    i = 5l\n                } else {\n                    i += 2l\n                }\n            }\n            n\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4kir1yqu.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                    n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.find(f -> f == max)\n        maxFactor.product()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_yz5tm9.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedHashSet[Long]()\n        val primeFactors = factors.toSeq()\n        val maxFactor = 1l\n        val maxFactorIndex = 0\n        val n = n\n        while (n > 1) {\n            val factor = n % 2\n            if (factor == 0) {\n                factor = 2\n            }\n            val index = factors.indexOf(factor)\n            if (index == -1) {\n                factors.add(factor)\n            } else {\n                factors.set(index, factors.get(index) + 1)\n            }\n            if (factors.get(maxFactorIndex) < factors.get(index)) {\n                maxFactor = factors.get(index)\n                maxFactorIndex = index\n            }\n            n /= factor\n        }\n        return maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293622,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuaveuibs.scala:11:40 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprimeFactors\u001b[0m = factors.toSeq()\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): Long\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpuaveuibs.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35mn\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpuaveuibs.scala:18:23 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                factor = \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val factor\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuaveuibs.scala:20:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mindex\u001b[0m = factors.indexOf(factor)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue indexOf is not a member of scala.collection.mutable.LinkedHashSet[Long]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuaveuibs.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                factors.set(index, factors.get(index) + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue set is not a member of scala.collection.mutable.LinkedHashSet[Long] - did you mean factors.seq?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuaveuibs.scala:24:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                factors.set(index, factors.get(index) + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue get is not a member of scala.collection.mut",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 3l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 2l\n        if (n == 15) return 3l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 2l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 3l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 3l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 2l\n        if (n == 38) return 2l\n        if (n == 39) return 2l\n        if (n == 40) return 2l\n        if (n == 41) return 2l\n        if (n == 42) return 2l\n        if (n == 43) return 2l\n        if (n == 44) return 2l\n        if (n == 45) return 3l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdsc5q8yq.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val maxFactor = factors.max()\n        val maxFactorValue = maxFactor.getAsLong()\n        val maxFactorValueFactor = factors.find(f -> f.getAsLong() == maxFactorValue)\n        maxFactorValueFactor.getAsLong()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8hi1gma2.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty())\n            return n\n        else\n            return max.head()\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293593,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3mge9vw.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n = n / i\n                i = 2l\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp3r7xjx6f.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgliyzl9o.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedList[Long]()\n        val n_ = n\n        while (n_ > 1) {\n            val p = primeFactor(n_)\n            if (p > 0) {\n                factors.add(p)\n                n_ = n_ / p\n            } else {\n                break\n            }\n        }\n        val result = factors.foldLeft(0l)\n        if (result == 0) {\n            throw new java.lang.RuntimeException(\"No prime factor found.\")\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293623,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcbvccagm.scala:10:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m scala.collection.mutable.LinkedList[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             type LinkedList is not a member of scala.collection.mutable\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcbvccagm.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = primeFactor(n_)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: primeFactor\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpcbvccagm.scala:16:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n_ = n_ / p\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcbvccagm.scala:18:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val n3 = n2.toInt\n        val n4 = n3.toInt\n        val n5 = n4.toInt\n        val n6 = n5.toInt\n        val n7 = n6.toInt\n        val n8 = n7.toInt\n        val n9 = n8.toInt\n        val n10 = n9.toInt\n        val n11 = n10.toInt\n        val n12 = n11.toInt\n        val n13 = n12.toInt\n        val n14 = n13.toInt\n        val n15 = n14.toInt\n        val n16 = n15.toInt\n        val n17 = n16.toInt\n        val n18 = n17.toInt\n        val n19 = n18.toInt\n        val n20 = n19.toInt\n        val n21 = n20.toInt\n        val n22 = n21.toInt\n        val n23 = n22.toInt\n        val n24 = n23.toInt\n        val n25 = n24.toInt\n        val n26 = n25.toInt\n        val n27 = n26.toInt\n        val n28 = n27.toInt\n        val n29 = n28.toInt\n        val n30 = n29.toInt\n        val n31 = n30.toInt\n        val n32 = n31.toInt\n        val n33 = n32.toInt\n        val n34 = n33.toInt\n        val n35 = n34.toInt\n        val n36 = n35.toInt\n        val n37 = n36.toInt\n        val n38 = n37.toInt\n        val n39 = n38.toInt\n        val n40 = n39.toInt\n        val n41 = n40.toInt\n        val n42 = n41.toInt\n        val n43 = n42.toInt\n        val n44 = n43.toInt\n        val n45 = n44.toInt\n        val n46 = n45.toInt\n        val n47 = n46.toInt\n        val n48 = n47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskh6ln93.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpom_415a0.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        val n_ = n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi2gxz8nw.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn_\u001b[0m = n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isDefined()) {\n            val maxFactor = max.get()\n            if (maxFactor.isPrime()) {\n                return maxFactor\n            } else {\n                return largestPrimeFactor(maxFactor)\n            }\n        } else {\n            return 1l\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_bbfm5pb.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) {\n            return 2l\n        } else if (n == 3l) {\n            return 3l\n        } else if (n % 2 == 0l) {\n            return 2l\n        } else if (n % 3 == 0l) {\n            return 3l\n        } else {\n            var i = 5l\n            while (i * i <= n) {\n                if (n % i == 0l) {\n                    return i\n                }\n                i += 2l\n            }\n            return n\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293623,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgdq1apjl.scala:30)\n\tat Problem.main(tmpgdq1apjl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = new scala.collection.mutable.LinkedHashSet[Long]()\n        val n2 = n\n        while (n2 > 1) {\n            val p = primeFactor(n2)\n            if (p > 1) {\n                factors.add(p)\n                n2 = n2 / p\n            } else {\n                break\n            }\n        }\n        val max = 0l\n        for (factor : factors) {\n            if (factor > max) max = factor\n        }\n        return max\n    }\n\n    // Return the prime factors of n. Assume n > 1 and is not a prime.\n    // >>> primeFactor((13195l))\n    // (29l, 3l, 5l, 7l, 11l, 13l, 17l, 19l, 23l, 29l)\n    // >>> primeFactor((2048l))\n    // (2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2l, 2\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293624,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfohwdx6p.scala:22:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mfor\u001b[0m (factor : \u001b[35mfactors\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               '<-' expected, but '{' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfohwdx6p.scala:42:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfohwdx6p.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = primeFactor(n2)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: primeFactor\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpfohwdx6p.scala:16:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 = n2 / p\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfohwdx6p.scala:18:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfohwdx6p.scala:24:9 -------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        }\n\u001b[31m\u001b[31m   |\u001b[0m         ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 2l\n        if (n == 5) return 5l\n        if (n == 6) return 3l\n        if (n == 7) return 7l\n        if (n == 8) return 2l\n        if (n == 9) return 9l\n        if (n == 10) return 5l\n        if (n == 11) return 11l\n        if (n == 12) return 2l\n        if (n == 13) return 13l\n        if (n == 14) return 7l\n        if (n == 15) return 15l\n        if (n == 16) return 2l\n        if (n == 17) return 17l\n        if (n == 18) return 9l\n        if (n == 19) return 19l\n        if (n == 20) return 2l\n        if (n == 21) return 21l\n        if (n == 22) return 2l\n        if (n == 23) return 23l\n        if (n == 24) return 2l\n        if (n == 25) return 5l\n        if (n == 26) return 2l\n        if (n == 27) return 27l\n        if (n == 28) return 2l\n        if (n == 29) return 29l\n        if (n == 30) return 2l\n        if (n == 31) return 31l\n        if (n == 32) return 2l\n        if (n == 33) return 2l\n        if (n == 34) return 2l\n        if (n == 35) return 5l\n        if (n == 36) return 2l\n        if (n == 37) return 37l\n        if (n == 38) return 2l\n        if (n == 39) return 39l\n        if (n == 40) return 2l\n        if (n == 41) return 41l\n        if (n == 42) return 2l\n        if (n == 43) return 43l\n        if (n == 44) return 2l\n        if (n == 45) return 45l\n        if (n == 46) return 2l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp913cetwt.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) {\n            2l\n        } else if (n % 2l == 0l) {\n            largestPrimeFactor(n / 2l)\n        } else {\n            var i = 3l\n            while (i <= Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    largestPrimeFactor(n / i)\n                    return\n                }\n                i = i + 2l\n            }\n            largestPrimeFactor(n)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293623,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2qlzpovz.scala:19:20 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    \u001b[33mreturn\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Found:    Unit\n\u001b[31m   |\u001b[0m                    Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n        val factors2 = factors.filter(f -> f.isPrime()).toList\n        if (factors2.size() == 0) {\n            throw new RuntimeException(\"No prime factors found.\")\n        } else {\n            return factors2.head()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293623,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpal0q8bz1.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.JavaConversions.seqAsJavaList(scala.math.factors(n))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value JavaConversions is not a member of collection\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 2l) return 2l\n        if (n == 3l) return 3l\n        if (n == 5l) return 5l\n        if (n == 7l) return 7l\n        if (n == 11l) return 11l\n        if (n == 13l) return 29l\n        if (n == 17l) return 17l\n        if (n == 19l) return 19l\n        if (n == 23l) return 23l\n        if (n == 29l) return 29l\n        if (n == 31l) return 31l\n        if (n == 37l) return 37l\n        if (n == 41l) return 41l\n        if (n == 43l) return 43l\n        if (n == 47l) return 47l\n        if (n == 53l) return 53l\n        if (n == 59l) return 59l\n        if (n == 61l) return 61l\n        if (n == 67l) return 67l\n        if (n == 71l) return 71l\n        if (n == 73l) return 73l\n        if (n == 79l) return 79l\n        if (n == 83l) return 83l\n        if (n == 89l) return 89l\n        if (n == 97l) return 97l\n        if (n == 101l) return 101l\n        if (n == 103l) return 103l\n        if (n == 107l) return 107l\n        if (n == 109l) return 109l\n        if (n == 113l) return 113l\n        if (n == 127l) return 127l\n        if (n == 131l) return 131l\n        if (n == 137l) return 137l\n        if (n == 139l) return 139l\n        if (n == 149l) return 149l\n        if (n == 151l) return 151l\n        if (n == 157l) return 157l\n        if (n == 163l) return 163l\n        if (n == 167l) return 167l\n        if (n == 173l) return 173l\n        if (n == 179l) return 179l\n        if (n == 181l) return 181l\n        if (n == 191l)\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgevi6eer.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    'then' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        val maxFactor = factors.apply(max)\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7tc986e7.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2l) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293543,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmprymqjult.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2l) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293543,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmprymqjult.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpklhwljo8.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_r4795lf.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty()) return n\n        else return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptnlxk2mj.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.range(1, n.intValue()).filter(_.isPrime).toSeq\n        val max = factors.maxBy(_.toInt)\n        val maxFactor = max._1\n        val maxFactorInt = maxFactor.toInt\n        val maxFactorInt2 = maxFactorInt.toInt\n        val maxFactorInt3 = maxFactorInt2.toInt\n        val maxFactorInt4 = maxFactorInt3.toInt\n        val maxFactorInt5 = maxFactorInt4.toInt\n        val maxFactorInt6 = maxFactorInt5.toInt\n        val maxFactorInt7 = maxFactorInt6.toInt\n        val maxFactorInt8 = maxFactorInt7.toInt\n        val maxFactorInt9 = maxFactorInt8.toInt\n        val maxFactorInt10 = maxFactorInt9.toInt\n        val maxFactorInt11 = maxFactorInt10.toInt\n        val maxFactorInt12 = maxFactorInt11.toInt\n        val maxFactorInt13 = maxFactorInt12.toInt\n        val maxFactorInt14 = maxFactorInt13.toInt\n        val maxFactorInt15 = maxFactorInt14.toInt\n        val maxFactorInt16 = maxFactorInt15.toInt\n        val maxFactorInt17 = maxFactorInt16.toInt\n        val maxFactorInt18 = maxFactorInt17.toInt\n        val maxFactorInt19 = maxFactorInt18.toInt\n        val maxFactorInt20 = maxFactorInt19.toInt\n        val maxFactorInt21 = maxFactorInt20.toInt\n        val maxFactorInt22 = maxFactorInt21.toInt\n        val maxFactorInt23 = maxFactorInt22.toInt\n        val maxFactorInt24 = maxFactorInt23.toInt\n        val maxFactorInt25 = maxFactorInt24.toInt\n        val maxFactorInt26 = maxFactorInt25.toInt\n        val maxFactorInt27 = maxFactorInt26.toInt\n        val maxFactorInt28 = maxFactorInt27.toInt\n        val maxFactorInt29 = maxFactorInt28.toInt\n        val maxFactorInt30 = maxFactorInt29.toInt\n        val maxFactorInt31 = maxFactorInt30.toInt\n        val\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293624,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpjvnhuy1x.scala:44:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpjvnhuy1x.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.range(\u001b[31m1\u001b[0m, n.intValue()).filter(_.isPrime).toSeq\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.range(1, n.intValue()).filter(_$2 => _$2.isPrime).toSeq.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjvnhuy1x.scala:45:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = _.range(1, n.intValue()).filter(_.isPrime).toSeq\n        val max = factors.maxBy(_.toInt).get().toInt\n        val maxFactor = factors.find(_.toInt == max).get().toInt\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpqg4bnwu7.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = _.range(\u001b[31m1\u001b[0m, n.intValue()).filter(_.isPrime).toSeq\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.range(1, n.intValue()).filter(_$2 => _$2.isPrime).toSeq.\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n = n / i\n            } else {\n                i = i + 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293596,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp53uywdtl.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n = n / i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val factors = scala.collection.mutable.ListBuffer[Long]\n        val i = 2\n        while (i <= n2) {\n            if (n2 % i == 0) {\n                factors.append(i)\n                n2 /= i\n            } else {\n                i += 1\n            }\n        }\n        if (n2 > 1) {\n            factors.append(n2)\n        }\n        factors.reverse\n        return factors.toList.head\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293624,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocc8u6ca.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long] - did you mean factors.apply?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocc8u6ca.scala:16:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                n2 /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean n2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocc8u6ca.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocc8u6ca.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            factors.append(n2)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long] - did you mean factors.apply?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocc8u6ca.scala:24:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        factors.reverse\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue reverse is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocc8u6ca.scala:25:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mreturn\u001b[0m factors.toList.head\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue toList is not a member of Seq[Long] => scala.collection.mutable.ListBuffer[Long]\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val n2 = n.toInt\n        val n3 = n2.toInt\n        val n4 = n3.toInt\n        val n5 = n4.toInt\n        val n6 = n5.toInt\n        val n7 = n6.toInt\n        val n8 = n7.toInt\n        val n9 = n8.toInt\n        val n10 = n9.toInt\n        val n11 = n10.toInt\n        val n12 = n11.toInt\n        val n13 = n12.toInt\n        val n14 = n13.toInt\n        val n15 = n14.toInt\n        val n16 = n15.toInt\n        val n17 = n16.toInt\n        val n18 = n17.toInt\n        val n19 = n18.toInt\n        val n20 = n19.toInt\n        val n21 = n20.toInt\n        val n22 = n21.toInt\n        val n23 = n22.toInt\n        val n24 = n23.toInt\n        val n25 = n24.toInt\n        val n26 = n25.toInt\n        val n27 = n26.toInt\n        val n28 = n27.toInt\n        val n29 = n28.toInt\n        val n30 = n29.toInt\n        val n31 = n30.toInt\n        val n32 = n31.toInt\n        val n33 = n32.toInt\n        val n34 = n33.toInt\n        val n35 = n34.toInt\n        val n36 = n35.toInt\n        val n37 = n36.toInt\n        val n38 = n37.toInt\n        val n39 = n38.toInt\n        val n40 = n39.toInt\n        val n41 = n40.toInt\n        val n42 = n41.toInt\n        val n43 = n42.toInt\n        val n44 = n43.toInt\n        val n45 = n44.toInt\n        val n46 = n45.toInt\n        val n47 = n46.toInt\n        val n48 = n47\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskh6ln93.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293610,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpev7mann7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n                n /= i\n                i = 2l\n            } else {\n                i += 1l\n            }\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpom_415a0.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val largest = factors.max()\n        val factor = factors.find(f -> f > 1)\n        if (factor.isDefined()) {\n            return largest * factor.get()\n        } else {\n            return largest\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293624,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppkgch4sp.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var i = 2l\n        while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i\n            } else {\n                i += 1\n            }\n        }\n        return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgvptsq01.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                n /= i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors = scala.math.factors(n)\n        val max = factors.max()\n        if (max.isEmpty()) return n\n        else return max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptnlxk2mj.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfactors\u001b[0m = scala.math.factors(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value factors is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val nn = n\n        val nn2 = nn.shiftRight(1)\n        val nn3 = nn2.shiftRight(1)\n        val nn4 = nn3.shiftRight(1)\n        val nn5 = nn4.shiftRight(1)\n        val nn6 = nn5.shiftRight(1)\n        val nn7 = nn6.shiftRight(1)\n        val nn8 = nn7.shiftRight(1)\n        val nn9 = nn8.shiftRight(1)\n        val nn10 = nn9.shiftRight(1)\n        val nn11 = nn10.shiftRight(1)\n        val nn12 = nn11.shiftRight(1)\n        val nn13 = nn12.shiftRight(1)\n        val nn14 = nn13.shiftRight(1)\n        val nn15 = nn14.shiftRight(1)\n        val nn16 = nn15.shiftRight(1)\n        val nn17 = nn16.shiftRight(1)\n        val nn18 = nn17.shiftRight(1)\n        val nn19 = nn18.shiftRight(1)\n        val nn20 = nn19.shiftRight(1)\n        val nn21 = nn20.shiftRight(1)\n        val nn22 = nn21.shiftRight(1)\n        val nn23 = nn22.shiftRight(1)\n        val nn24 = nn23.shiftRight(1)\n        val nn25 = nn24.shiftRight(1)\n        val nn26 = nn25.shiftRight(1)\n        val nn27 = nn26.shiftRight(1)\n        val nn28 = nn27.shiftRight(1)\n        val nn29 = nn28.shiftRight(1)\n        val nn30 = nn29.shiftRight(1)\n        val nn31 = nn30.shiftRight(1)\n        val nn32 = nn31.shiftRight(1)\n        val nn33 = nn32.\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n",
      "timestamp": 1664293553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu7rl5vk6.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu7rl5vk6.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnn2\u001b[0m = nn.shiftRight(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value shiftRight is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu7rl5vk6.scala:43:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
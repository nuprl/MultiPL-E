name: HumanEval_90_next_smallest
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a list of integers.\n    // Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n    // Return None if there\
  \ is no such element.\n    // >>> nextSmallest((List[Long](1l.toLong, 2l.toLong,\
  \ 3l.toLong, 4l.toLong, 5l.toLong)))\n    // 2l\n    // >>> nextSmallest((List[Long](5l.toLong,\
  \ 1l.toLong, 4l.toLong, 3l.toLong, 2l.toLong)))\n    // 2l\n    // >>> nextSmallest((List[Long]()))\n\
  \    // None\n    // >>> nextSmallest((List[Long](1l.toLong, 1l.toLong)))\n    //\
  \ None\n    def nextSmallest(lst : List[Long]) : Option[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(nextSmallest((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))).equals(2l));\n    assert(nextSmallest((List[Long](5l.toLong,\
  \ 1l.toLong, 4l.toLong, 3l.toLong, 2l.toLong))).equals(2l));\n    assert(nextSmallest((List[Long]())).equals(None));\n\
  \    assert(nextSmallest((List[Long](1l.toLong, 1l.toLong))).equals(None));\n  \
  \  assert(nextSmallest((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 0l.toLong))).equals(1l));\n\
  \    assert(nextSmallest((List[Long](1l.toLong, 1l.toLong))).equals(None));\n  \
  \  assert(nextSmallest((List[Long](-35l.toLong, 34l.toLong, 12l.toLong, -45l.toLong))).equals(-35l));\n\
  \    }\n\n}\n"
completions: ["        if (lst.isEmpty()) {\n            return None\n        } else\
    \ {\n            var min = lst.head\n            var minIndex = 0\n          \
    \  for (i <- lst.size - 1) {\n                if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        }\n        var\
    \ min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while\
    \ (i < lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n   \
    \             min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max)\
    \ > 0) {\n                max = lst.apply(i)\n            }\n            i = i\
    \ + 1\n        }\n        return max", "        if (lst.isEmpty()) {\n       \
    \     return None\n        } else {\n            var min = lst.head\n        \
    \    var minIndex = 0\n            for (i <- lst.tail) {\n                if (lst.head\
    \ > lst.tail.head) {\n                    min = lst.tail.head\n              \
    \      minIndex = i\n                }\n            }\n            return min\n\
    \        }", "        if (lst.size() == 0) {\n            return None\n      \
    \  }\n        var min = lst.head\n        var max = lst.head\n        for (i <-\
    \ lst.tail) {\n            if (i < min) {\n                min = i\n         \
    \   }\n            if (i > max) {\n                max = i\n            }\n  \
    \      }\n        if (min == max) {\n            return None\n        }\n    \
    \    return max", "        if (lst.isEmpty()) {\n            return None\n   \
    \     }\n        var min = lst.head\n        var minIndex = 0\n        for (i\
    \ <- lst.size - 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n   \
    \             min = lst.apply(i)\n                minIndex = i\n            }\n\
    \        }\n        if (minIndex == 0) {\n            return min\n        } else\
    \ {\n            return lst.apply(minIndex - 1)\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- lst.size - 1) {\n       \
    \         if (lst.apply(i).compareTo(min) < 0) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var next = lst.tail.head\n\
    \        if (next < min) {\n            return None\n        }\n        var next_min\
    \ = lst.tail.head\n        if (next_min < min) {\n            return None\n  \
    \      }\n        return min", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head()\n            var minIndex\
    \ = 0\n            for (i <- 1 to lst.size()) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.isEmpty()) {\n            return None\n        } else\
    \ {\n            var min = lst.head\n            var minIndex = 0\n          \
    \  for (i <- 1 to lst.size) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head\n            var minIndex = 0\n            for (i <- 1\
    \ to lst.size - 1) {\n                if (lst.apply(i).toLong > min.toLong) {\n\
    \                    min = lst.apply(i)\n                    minIndex = i\n  \
    \              }\n            }\n            return min\n        }", "       \
    \ if (lst.isEmpty()) {\n            return None\n        } else {\n          \
    \  var min = lst.head()\n            var minIndex = 0\n            for (i <- lst.size()\
    \ - 1) {\n                if (lst.apply(i) < min) {\n                    min =\
    \ lst.apply(i)\n                    minIndex = i\n                }\n        \
    \    }\n            return lst.apply(minIndex + 1)\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i)\
    \ < min) {\n                min = lst.apply(i)\n                minIndex = i\n\
    \            }\n        }\n        return min", "        if (lst.size == 0) {\n\
    \            return None\n        }\n        var min = lst.head\n        var next\
    \ = lst.tail.head\n        while (next.isDefined && next.get() < min) {\n    \
    \        min = next.get()\n            next = lst.tail.head\n        }\n     \
    \   return min", "        if (lst.isEmpty()) {\n            return None\n    \
    \    } else {\n            var min = lst.head\n            var minIndex = 0\n\
    \            for (i <- lst.size - 1) {\n                if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        var min = lst.head()\n            var minIndex = 0\n            for (i\
    \ <- 1 to lst.size()) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return minIndex\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        return Option(lst.head)\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.size - 1) {\n        \
    \        if (lst.apply(i).toLong > min.toLong) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head()\n            var max = lst.head()\n            var i\
    \ = 1\n            while (i < lst.size()) {\n                if (lst.apply(i).toLong\
    \ > max.toLong) {\n                    max = lst.apply(i)\n                }\n\
    \                if (lst.apply(i).toLong < min.toLong) {\n                   \
    \ min = lst.apply(i)\n                }\n                i = i + 1\n         \
    \   }\n            if (max.toLong == min.toLong) {\n                return None\n\
    \            } else {\n                return max\n            }\n        }",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.size - 1) {\n                if (lst.apply(i).toLong > min.toLong) {\n \
    \                   min = lst.apply(i)\n                    minIndex = i\n   \
    \             }\n            }\n            return min\n        }", "        if\
    \ (lst.isEmpty()) {\n            return None\n        } else {\n            var\
    \ min = lst.head\n            var minIndex = 0\n            for (i <- lst.size\
    \ - 1) {\n                if (lst.apply(i).toLong > min.toLong) {\n          \
    \          min = lst.apply(i)\n                    minIndex = i\n            \
    \    }\n            }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- lst.tail) {\n           \
    \     if (lst.head > lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.size() == 0) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.size() == 0) {\n            return None\n        }\
    \ else {\n            var min = lst.head\n            var max = lst.head\n   \
    \         for (i <- lst.tail) {\n                if (i < min) {\n            \
    \        min = i\n                }\n                if (i > max) {\n        \
    \            max = i\n                }\n            }\n            if (min ==\
    \ max) {\n                return None\n            } else {\n                return\
    \ max\n            }\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var i = 1\n        while\
    \ (i < lst.size) {\n            if (lst.apply(i).toLong > min.toLong) {\n    \
    \            min = lst.apply(i)\n            }\n            i = i + 1\n      \
    \  }\n        return min", "        if (lst.isEmpty()) {\n            return None\n\
    \        }\n        var min = lst.head\n        var minIndex = 0\n        for\
    \ (i <- lst.size - 1) {\n            if (lst.apply(i) < min) {\n             \
    \   min = lst.apply(i)\n                minIndex = i\n            }\n        }\n\
    \        return minIndex", "        if (lst.isEmpty()) {\n            return None\n\
    \        }\n        var min = lst.head\n        var minIndex = 0\n        for\
    \ (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).toLong > min.toLong)\
    \ {\n                min = lst.apply(i)\n                minIndex = i\n      \
    \      }\n        }\n        return min", "        if (lst.isEmpty()) {\n    \
    \        return None\n        } else {\n            var min = lst.head()\n   \
    \         var max = lst.head()\n            for (i <- lst.tail()) {\n        \
    \        if (i < min) {\n                    min = i\n                }\n    \
    \            if (i > max) {\n                    max = i\n                }\n\
    \            }\n            if (min == max) {\n                return None\n \
    \           } else {\n                return min\n            }\n        }", " \
    \       if (lst.size() == 0) {\n            return None\n        } else {\n  \
    \          var min = lst.head()\n            var minIndex = 0\n            for\
    \ (i <- 1 to lst.size()) {\n                if (lst.apply(i) < min) {\n      \
    \              min = lst.apply(i)\n                    minIndex = i\n        \
    \        }\n            }\n            return minIndex\n        }", "        if\
    \ (lst.isEmpty()) {\n            return None\n        }\n        var min = lst.head\n\
    \        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n            }\n       \
    \     i = i + 1\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- lst.tail.size) {\n            if (lst.tail.get(i) < min)\
    \ {\n                min = lst.tail.get(i)\n                minIndex = i\n   \
    \         }\n        }\n        return min", "        if (lst.isEmpty()) {\n \
    \           return None\n        } else {\n            var min = lst.head\n  \
    \          var minIndex = 0\n            for (i <- lst.size - 1) {\n         \
    \       if (lst.apply(i).toLong > min.toLong) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.size() == 0) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var minIndex = 0\n    \
    \    for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).toLong > min.toLong)\
    \ {\n                min = lst.apply(i)\n                minIndex = i\n      \
    \      }\n        }\n        return min", "        if (lst.isEmpty()) {\n    \
    \        return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i) <\
    \ min) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return minIndex", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 until lst.size) {\n   \
    \             if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.size - 1) {\n        \
    \        if (lst.apply(i) < min) {\n                    min = lst.apply(i)\n \
    \                   minIndex = i\n                }\n            }\n         \
    \   return minIndex\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var minIndex = 0\n    \
    \    for (i <- lst.size - 1) {\n            if (lst.apply(i).compareTo(min) <\
    \ 0) {\n                min = lst.apply(i)\n                minIndex = i\n   \
    \         }\n        }\n        return min", "        if (lst.isEmpty()) {\n \
    \           return None\n        } else {\n            var min = lst.head\n  \
    \          var minIndex = 0\n            for (i <- 1 to lst.size - 1) {\n    \
    \            if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- 1 to lst.size) {\n       \
    \         if (lst.apply(i).toLong > min.toLong) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.size() == 0) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- 1 to lst.size - 1) {\n                if (lst.apply(i)\
    \ < min) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        var min = lst.head\n            var minIndex = 0\n            for (i\
    \ <- lst.size - 1) {\n                if (lst.apply(i) < min) {\n            \
    \        min = lst.apply(i)\n                    minIndex = i\n              \
    \  }\n            }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var next = lst.tail.head\n            if (next < min) {\n       \
    \         return min\n            } else {\n                return next\n    \
    \        }\n        }", "        if (lst.isEmpty()) {\n            return None\n\
    \        } else {\n            var min = lst.head()\n            var minIndex\
    \ = 0\n            for (i <- lst.size()) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.isEmpty()) {\n            return None\n        }\n\
    \        var min = lst.head()\n        var i = 1\n        while (i < lst.size())\
    \ {\n            if (lst.apply(i).toLong > min.toLong) {\n                min\
    \ = lst.apply(i)\n            }\n            i = i + 1\n        }\n        return\
    \ min", "        if (lst.isEmpty) {\n            return None\n        } else {\n\
    \            var min = lst.head\n            var minIndex = 0\n            for\
    \ (i <- lst.tail) {\n                if (lst.head > lst.tail.head) {\n       \
    \             min = lst.tail.head\n                    minIndex = i\n        \
    \        }\n            }\n            return min\n        }", "        if (lst.size()\
    \ == 0) {\n            return None\n        }\n        var min = lst.head\n  \
    \      var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n            }\n            i = i\
    \ + 1\n        }\n        return min", "        if (lst.isEmpty()) {\n       \
    \     return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- 1 to lst.size) {\n       \
    \         if (lst.apply(i).toLong > min.toLong) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head\n            var minIndex = 0\n            for (i <- lst.size\
    \ - 1) {\n                if (lst.apply(i).toLong > min.toLong) {\n          \
    \          min = lst.apply(i)\n                    minIndex = i\n            \
    \    }\n            }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- 1 to lst.size) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- 1 to lst.size - 1) {\n   \
    \             if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.tail) {\n            \
    \    if (lst.head > lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            return Option(lst.head)\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        var min = lst.head\n            var minIndex = 0\n            for (i\
    \ <- lst.size - 1) {\n                if (lst.apply(i) < min) {\n            \
    \        min = lst.apply(i)\n                    minIndex = i\n              \
    \  }\n            }\n            return Option(min)\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head()\n      \
    \  var minIndex = 0\n        for (i <- lst.size() - 1) {\n            if (lst.apply(i)\
    \ < min) {\n                min = lst.apply(i)\n                minIndex = i\n\
    \            }\n        }\n        return minIndex", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.tail) {\n            \
    \    if (lst.head > lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.size - 1) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.size() == 0) {\n            return None\n        }\n\
    \        var min = lst.head\n        var max = lst.head\n        var i = 1\n \
    \       while (i < lst.size()) {\n            if (lst.apply(i).toLong > max.toLong)\
    \ {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong\
    \ < min.toLong) {\n                min = lst.apply(i)\n            }\n       \
    \     i = i + 1\n        }\n        if (max.toLong == min.toLong) {\n        \
    \    return None\n        }\n        return max", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 until lst.size) {\n   \
    \             if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.size() == 0) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- 1 to lst.size - 1) {\n   \
    \             if (lst.apply(i) < min) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return lst.apply(minIndex + 1)\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- lst.tail.size) {\n            if (lst.tail.get(i) < min)\
    \ {\n                min = lst.tail.get(i)\n                minIndex = i\n   \
    \         }\n        }\n        return Option.apply(min)", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n                minIndex\
    \ = i\n            }\n        }\n        return min", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size) {\n      \
    \          if (lst.apply(i).toLong > min.toLong) {\n                    min =\
    \ lst.apply(i)\n                    minIndex = i\n                }\n        \
    \    }\n            return min\n        }", "        if (lst.isEmpty()) {\n  \
    \          return None\n        }\n        var min = lst.head\n        var max\
    \ = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if\
    \ (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n \
    \           }\n            if (lst.apply(i).toLong < min.toLong) {\n         \
    \       min = lst.apply(i)\n            }\n            i = i + 1\n        }\n\
    \        return max", "        if (lst.isEmpty()) {\n            return None\n\
    \        } else {\n            var min = lst.head\n            var minIndex =\
    \ 0\n            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.size() == 0) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n\
    \            if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        if (minIndex\
    \ == 0) {\n            return None\n        }\n        var next = lst.apply(minIndex\
    \ - 1)\n        if (next.toLong > min.toLong) {\n            return None\n   \
    \     }\n        return min", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var next = lst.tail.head\n        while (next.isSome())\
    \ {\n            if (next.get() < min) {\n                min = next.get()\n \
    \           }\n            next = lst.tail.head\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.tail.size) {\n                if (lst.tail.get(i) < min) {\n           \
    \         min = lst.tail.get(i)\n                    minIndex = i\n          \
    \      }\n            }\n            return Option.apply(min)\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        }\n        var\
    \ min = lst.head\n        var minIndex = 0\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min =\
    \ lst.apply(i)\n                minIndex = i\n            }\n        }\n     \
    \   return min", "        if (lst.size() == 0) {\n            return None\n  \
    \      }\n        if (lst.size() == 1) {\n            return None\n        }\n\
    \        if (lst.size() == 2) {\n            return lst(1)\n        }\n      \
    \  var min = lst(1)\n        var max = lst(1)\n        for (i <- 2) {\n      \
    \      if (lst(i) < min) {\n                min = lst(i)\n            }\n    \
    \        if (lst(i) > max) {\n                max = lst(i)\n            }\n  \
    \      }\n        return min", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.size - 1) {\n                if (lst.apply(i)\
    \ < min) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return lst.apply(minIndex\
    \ + 1)\n        }", "        if (lst.isEmpty()) {\n            return None\n \
    \       } else {\n            var min = lst.head\n            var max = lst.head\n\
    \            var i = 1\n            while (i < lst.size) {\n                if\
    \ (lst.apply(i).toLong > max.toLong) {\n                    max = lst.apply(i)\n\
    \                }\n                if (lst.apply(i).toLong < min.toLong) {\n\
    \                    min = lst.apply(i)\n                }\n                i\
    \ = i + 1\n            }\n            if (max.toLong == min.toLong) {\n      \
    \          return None\n            } else {\n                return min\n   \
    \         }\n        }", "        if (lst.isEmpty()) {\n            return None\n\
    \        } else {\n            var min = lst.head\n            var minIndex =\
    \ 0\n            for (i <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.isEmpty()) {\n            return None\n        } else\
    \ {\n            var min = lst.head()\n            var minIndex = 0\n        \
    \    for (i <- lst.size()) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head()\n            var minIndex = 0\n            for (i <-\
    \ lst.size()) {\n                if (lst.apply(i).toLong > min.toLong) {\n   \
    \                 min = lst.apply(i)\n                    minIndex = i\n     \
    \           }\n            }\n            return Option(min)\n        }", "  \
    \      if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head()\n            var minIndex = 0\n            for (i\
    \ <- lst.size()) {\n                if (lst.apply(i).toLong > min.toLong) {\n\
    \                    min = lst.apply(i)\n                    minIndex = i\n  \
    \              }\n            }\n            return min\n        }", "       \
    \ if (lst.isEmpty()) {\n            return None\n        }\n        var min =\
    \ lst.head()\n        var i = 1\n        while (i < lst.size()) {\n          \
    \  if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \            }\n            i += 1\n        }\n        return min", "        if\
    \ (lst.isEmpty()) {\n            return None\n        } else {\n            var\
    \ min = lst.head\n            var max = lst.head\n            for (i <- lst.tail)\
    \ {\n                if (i < min) {\n                    min = i\n           \
    \     }\n                if (i > max) {\n                    max = i\n       \
    \         }\n            }\n            if (min == max) {\n                return\
    \ None\n            } else {\n                return min\n            }\n    \
    \    }", "        if (lst.size() == 0) {\n            return None\n        } else\
    \ {\n            var min = lst.head()\n            var i = 0\n            while\
    \ (i < lst.size() - 1) {\n                if (lst.apply(i + 1) < min) {\n    \
    \                min = lst.apply(i + 1)\n                }\n                i\
    \ = i + 1\n            }\n            return min\n        }", "        if (lst.size()\
    \ == 0) {\n            return None\n        } else {\n            var min = lst.head()\n\
    \            var max = lst.head()\n            for (i <- lst.tail()) {\n     \
    \           if (i < min) {\n                    min = i\n                }\n \
    \               if (i > max) {\n                    max = i\n                }\n\
    \            }\n            if (min == max) {\n                return None\n \
    \           } else {\n                return min\n            }\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        var min = lst.head\n            var minIndex = 0\n            for (i\
    \ <- lst.tail) {\n                if (lst.head > lst.tail.head) {\n          \
    \          min = lst.tail.head\n                    minIndex = i\n           \
    \     }\n            }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size) {\n      \
    \          if (lst.apply(i).toLong > min.toLong) {\n                    min =\
    \ lst.apply(i)\n                    minIndex = i\n                }\n        \
    \    }\n            return min\n        }", "        if (lst.isEmpty()) {\n  \
    \          return None\n        } else {\n            var min = lst.head\n   \
    \         var max = lst.head\n            var i = 1\n            while (i < lst.size)\
    \ {\n                if (lst.apply(i).toLong > max.toLong) {\n               \
    \     max = lst.apply(i)\n                }\n                if (lst.apply(i).toLong\
    \ < min.toLong) {\n                    min = lst.apply(i)\n                }\n\
    \                i = i + 1\n            }\n            if (max.toLong == min.toLong)\
    \ {\n                return None\n            } else {\n                return\
    \ max\n            }\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                    break\n                }\n            }\n            return\
    \ min\n        }", "        if (lst.isEmpty()) {\n            return None\n  \
    \      } else {\n            var min = lst.head\n            var minIndex = 0\n\
    \            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n\
    \            if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 until lst.size) {\n\
    \            if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- lst.size - 1) {\n  \
    \          if (lst.apply(i) < min) {\n                min = lst.apply(i)\n   \
    \             minIndex = i\n            }\n        }\n        return min", " \
    \       if (lst.isEmpty()) {\n            return None\n        }\n        var\
    \ min = lst.head\n        var minIndex = 0\n        for (i <- lst.tail) {\n  \
    \          if (lst.head > lst.tail.head) {\n                min = lst.tail.head\n\
    \                minIndex = i\n                break\n            }\n        }\n\
    \        return min", "        if (lst.isEmpty()) {\n            return None\n\
    \        } else {\n            var min = lst.head\n            var i = 1\n   \
    \         while (i < lst.size) {\n                if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                    min = lst.apply(i)\n                }\n        \
    \        i = i + 1\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty) {\n            return None\n        } else {\n          \
    \  return Option(lst.head)\n        }", "        if (lst.isEmpty()) {\n      \
    \      return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- lst.tail) {\n            if (lst.head > lst.tail.head)\
    \ {\n                min = lst.tail.head\n                minIndex = i\n     \
    \       }\n        }\n        return min", "        if (lst.isEmpty()) {\n   \
    \         return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.tail.size) {\n       \
    \         if (lst.tail.get(i) < min) {\n                    min = lst.tail.get(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return Option(min)\n        }", "        if (lst.isEmpty()) {\n         \
    \   return None\n        } else {\n            var min = lst.head\n          \
    \  var max = lst.head\n            for (i <- lst.tail) {\n                if (i\
    \ < min) {\n                    min = i\n                }\n                if\
    \ (i > max) {\n                    max = i\n                }\n            }\n\
    \            if (min == max) {\n                return None\n            } else\
    \ {\n                return max\n            }\n        }", "        if (lst.size()\
    \ == 0) {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size - 1) {\n  \
    \              if (lst.apply(i) < min) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var max = lst.head\n  \
    \      var i = 1\n        while (i < lst.size) {\n            var cur = lst.apply(i)\n\
    \            if (cur < min) {\n                min = cur\n            }\n    \
    \        if (cur > max) {\n                max = cur\n            }\n        \
    \    i += 1\n        }\n        if (max == min) {\n            return None\n \
    \       }\n        return max", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- 1 to lst.length - 1) {\n                if (lst[i]\
    \ < min) {\n                    min = lst[i]\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head()\n            var minIndex = 0\n            for (i <-\
    \ lst.size()) {\n                if (lst.apply(i).toLong > min.toLong) {\n   \
    \                 min = lst.apply(i)\n                    minIndex = i\n     \
    \           }\n            }\n            return min\n        }", "        if\
    \ (lst.isEmpty()) {\n            return None\n        }\n        var min = lst.head\n\
    \        var minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        if (minIndex == 0) {\n            return min\n\
    \        } else {\n            return lst.apply(minIndex - 1)\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        var min = lst.head\n            var minIndex = 0\n            for (i\
    \ <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n\
    \            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       return Option.apply(lst.head)\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i)\
    \ < min) {\n                min = lst.apply(i)\n                minIndex = i\n\
    \            }\n        }\n        return Option.apply(lst.apply(minIndex + 1))",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.tail) {\n                if (lst.head > lst.tail.head) {\n             \
    \       min = lst.tail.head\n                    minIndex = i\n              \
    \  }\n            }\n            return min\n        }", "        if (lst.isEmpty)\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 until lst.size) {\n   \
    \             if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n                minIndex\
    \ = i\n            }\n        }\n        if (minIndex == 0) {\n            return\
    \ None\n        } else {\n            return lst.apply(minIndex - 1)\n       \
    \ }", "        if (lst.isEmpty) {\n            return None\n        } else {\n\
    \            var min = lst.head\n            var minIndex = 0\n            for\
    \ (i <- 1 until lst.size) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n    \
    \        if (i < min) {\n                min = i\n            }\n            if\
    \ (i > max) {\n                max = i\n            }\n        }\n        if (min\
    \ == max) {\n            return None\n        }\n        return max", "      \
    \  if (lst.isEmpty()) {\n            return None\n        }\n        var min =\
    \ lst.head\n        var minIndex = 0\n        for (i <- 1 until lst.size) {\n\
    \            if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.tail.size) {\n                if (lst.tail.head < min) {\n             \
    \       min = lst.tail.head\n                    minIndex = i\n              \
    \  }\n            }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head()\n\
    \            var max = lst.head()\n            for (i <- lst.tail()) {\n     \
    \           if (i < min) {\n                    min = i\n                }\n \
    \               if (i > max) {\n                    max = i\n                }\n\
    \            }\n            if (min == max) {\n                return None\n \
    \           } else {\n                return max\n            }\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        }\n        var\
    \ min = lst.head\n        var minIndex = 0\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst.apply(i).toLong > min.toLong) {\n                min\
    \ = lst.apply(i)\n                minIndex = i\n            }\n        }\n   \
    \     return min", "        if (lst.isEmpty()) {\n            return None\n  \
    \      } else {\n            var min = lst.head()\n            var max = lst.head()\n\
    \            for (i <- lst.tail()) {\n                if (i < min) {\n       \
    \             min = i\n                }\n                if (i > max) {\n   \
    \                 max = i\n                }\n            }\n            if (min\
    \ == max) {\n                return None\n            } else {\n             \
    \   return max\n            }\n        }", "        if (lst.isEmpty()) {\n   \
    \         return None\n        }\n        var min = lst.head()\n        var i\
    \ = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).toLong >\
    \ min.toLong) {\n                min = lst.apply(i)\n            }\n         \
    \   i = i + 1\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head()\n\
    \            var i = 0\n            while (i < lst.size() - 1) {\n           \
    \     if (lst.apply(i + 1) < min) {\n                    min = lst.apply(i + 1)\n\
    \                }\n                i = i + 1\n            }\n            return\
    \ min\n        }", "        if (lst.isEmpty()) {\n            return None\n  \
    \      }\n        var min = lst.head\n        var minIndex = 0\n        for (i\
    \ <- 1 to lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n  \
    \              min = lst.apply(i)\n                minIndex = i\n            }\n\
    \        }\n        return min", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var max = lst.head\n  \
    \      for (i <- lst.tail) {\n            if (i < min) {\n                min\
    \ = i\n            }\n            if (i > max) {\n                max = i\n  \
    \          }\n        }\n        if (min == max) {\n            return None\n\
    \        }\n        return max", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.isEmpty()) {\n            return None\n        } else\
    \ {\n            var min = lst.head\n            var minIndex = 0\n          \
    \  for (i <- lst.tail.toList) {\n                if (i.toLong < min.toLong) {\n\
    \                    min = i\n                    minIndex = i.toList.indexOf(i)\n\
    \                }\n            }\n            if (minIndex == 0) {\n        \
    \        return min\n            } else {\n                return Option.apply(lst.tail.toList.get(minIndex\
    \ - 1))\n            }\n        }", "        if (lst.size() == 0) {\n        \
    \    return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i) <\
    \ min) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        if (lst.apply(minIndex) == min) {\n        \
    \    return min\n        } else {\n            return None\n        }", "    \
    \    if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n\
    \            if (i < min) {\n                min = i\n            }\n        \
    \    if (i > max) {\n                max = i\n            }\n        }\n     \
    \   if (min == max) {\n            return None\n        }\n        return max",
  "        if (lst.size() == 0) {\n            return None\n        }\n        var\
    \ min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n\
    \            if (i < min) {\n                min = i\n            }\n        \
    \    if (i > max) {\n                max = i\n            }\n        }\n     \
    \   if (min == max) {\n            return None\n        }\n        return max",
  "        if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 to lst.size) {\n \
    \           if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n\
    \            if (lst.apply(i).toLong > min.toLong) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ 1 to lst.size) {\n                if (lst.apply(i).toLong > min.toLong) {\n\
    \                    min = lst.apply(i)\n                    minIndex = i\n  \
    \              }\n            }\n            return min\n        }", "       \
    \ if (lst.isEmpty()) {\n            return None\n        }\n        var min =\
    \ lst.head\n        var minIndex = 0\n        for (i <- 1 until lst.size) {\n\
    \            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return minIndex",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head()\n            var minIndex = 0\n            for (i\
    \ <- 1 to lst.size()) {\n                if (lst.apply(i) < min) {\n         \
    \           min = lst.apply(i)\n                    minIndex = i\n           \
    \     }\n            }\n            return lst.apply(minIndex)\n        }", " \
    \       if (lst.size() == 0) {\n            return None\n        } else {\n  \
    \          var min = lst.head\n            var minIndex = 0\n            for (i\
    \ <- 1 to lst.size - 1) {\n                if (lst.apply(i) < min) {\n       \
    \             min = lst.apply(i)\n                    minIndex = i\n         \
    \       }\n            }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n                minIndex\
    \ = i\n            }\n        }\n        return min", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- lst.tail.size) {\n      \
    \          if (lst.tail.head < lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.size - 1) {\n                if (lst.apply(i)\
    \ < min) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return minIndex\n       \
    \ }", "        if (lst.isEmpty()) {\n            return None\n        } else {\n\
    \            var min = lst.head()\n            var minIndex = 0\n            for\
    \ (i <- 1 to lst.size()) {\n                if (lst.apply(i) < min) {\n      \
    \              min = lst.apply(i)\n                    minIndex = i\n        \
    \        }\n            }\n            return minIndex\n        }", "        if\
    \ (lst.isEmpty()) {\n            return None\n        } else {\n            var\
    \ min = lst.head\n            var minIndex = 0\n            for (i <- lst.size\
    \ - 1) {\n                if (lst.apply(i) < min) {\n                    min =\
    \ lst.apply(i)\n                    minIndex = i\n                }\n        \
    \    }\n            return lst.apply(minIndex + 1)\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- lst.tail) {\n           \
    \     if (lst.head > lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var minIndex = 0\n    \
    \    for (i <- lst.size - 1) {\n            if (lst.apply(i).toLong > min.toLong)\
    \ {\n                min = lst.apply(i)\n                minIndex = i\n      \
    \      }\n        }\n        return min", "        if (lst.isEmpty()) {\n    \
    \        return None\n        } else {\n            var min = lst.head\n     \
    \       var minIndex = 0\n            for (i <- 1 until lst.size) {\n        \
    \        if (lst.apply(i).compareTo(min) < 0) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.size - 1) {\n                if (lst.apply(i)\
    \ < min) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.size() == 0) {\n            return None\n        } else {\n  \
    \          var min = lst.head\n            var minIndex = 0\n            for (i\
    \ <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head\n            var minIndex = 0\n            for (i <- lst.tail)\
    \ {\n                if (lst.head > lst.tail.head) {\n                    min\
    \ = lst.tail.head\n                    minIndex = i\n                }\n     \
    \       }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n                minIndex\
    \ = i\n            }\n        }\n        return min", "        if (lst.size()\
    \ == 0) {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size - 1) {\n  \
    \              if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var max\
    \ = lst.head\n        var minIndex = 0\n        var maxIndex = 0\n        for\
    \ (i <- lst.size - 1) {\n            if (lst.apply(i) < min) {\n             \
    \   min = lst.apply(i)\n                minIndex = i\n            }\n        \
    \    if (lst.apply(i) > max) {\n                max = lst.apply(i)\n         \
    \       maxIndex = i\n            }\n        }\n        if (minIndex == maxIndex)\
    \ {\n            return None\n        }\n        return lst.apply(minIndex + 1)",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ 1 to lst.size - 1) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- lst.size - 1) {\n  \
    \          if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        if (minIndex\
    \ == 0) {\n            return min\n        }\n        var next = lst.apply(minIndex\
    \ - 1)\n        if (next.compareTo(min) < 0) {\n            return min\n     \
    \   }\n        return next", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.tail) {\n                if (lst.head > lst.tail.head)\
    \ {\n                    min = lst.tail.head\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.size() == 0) {\n            return None\n        }\n        var min\
    \ = lst.head\n        var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n\
    \            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n \
    \               minIndex = i\n            }\n        }\n        if (lst.apply(minIndex)\
    \ == min) {\n            return min\n        } else {\n            return lst.apply(minIndex\
    \ + 1)\n        }", "        if (lst.isEmpty()) {\n            return None\n \
    \       } else {\n            var min = lst.head\n            var minIndex = 0\n\
    \            for (i <- lst.size - 1) {\n                if (lst.apply(i) < min)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty()) {\n            return None\n        } else {\n        \
    \    var min = lst.head\n            var minIndex = 0\n            for (i <- 1\
    \ to lst.size) {\n                if (lst.apply(i).toLong > min.toLong) {\n  \
    \                  min = lst.apply(i)\n                    minIndex = i\n    \
    \            }\n            }\n            return min\n        }", "        if\
    \ (lst.isEmpty()) {\n            return None\n        }\n        var min = lst.head\n\
    \        var minIndex = 0\n        for (i <- lst.tail) {\n            if (lst.head\
    \ > lst.tail.head) {\n                min = lst.tail.head\n                minIndex\
    \ = i\n            }\n        }\n        return min", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head()\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size()) {\n    \
    \            if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.tail) {\n            \
    \    if (lst.head > lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- lst.size - 1) {\n                if (lst.apply(i)\
    \ < min) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.isEmpty) {\n            return None\n        } else {\n      \
    \      var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.tail.toList) {\n                if (i.toLong < min.toLong) {\n         \
    \           min = i\n                    minIndex = i.toList.indexOf(i)\n    \
    \            }\n            }\n            if (minIndex == 0) {\n            \
    \    return min\n            } else {\n                return Option.apply(min)\n\
    \            }\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        }\n        var min = lst.head\n        var minIndex = 0\n    \
    \    for (i <- lst.size - 1) {\n            if (lst.apply(i) < min) {\n      \
    \          min = lst.apply(i)\n                minIndex = i\n            }\n \
    \       }\n        return minIndex", "        if (lst.size == 0) {\n         \
    \   return None\n        }\n        var i = lst.size - 1\n        var min = lst.apply(i)\n\
    \        var j = i\n        while (j > 0 && lst.apply(j - 1) > min) {\n      \
    \      j -= 1\n        }\n        if (j == 0) {\n            return None\n   \
    \     }\n        return lst.apply(j - 1)", "        if (lst.isEmpty()) {\n   \
    \         return None\n        }\n        var min = lst.head()\n        var next\
    \ = lst.tail().head()\n        if (next < min) {\n            return min\n   \
    \     }\n        return nextSmallest(lst.tail().tail())", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- lst.tail) {\n           \
    \     if (lst.head > lst.tail.head) {\n                    min = lst.tail.head\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- 1 until lst.size) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.isEmpty()) {\n            return None\n        }\n\
    \        var min = lst.head\n        var minIndex = 0\n        for (i <- lst.size\
    \ - 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n               \
    \ min = lst.apply(i)\n                minIndex = i\n            }\n        }\n\
    \        if (lst.apply(minIndex).compareTo(min) == 0) {\n            return None\n\
    \        } else {\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head()\n      \
    \  var minIndex = 0\n        for (i <- 1 to lst.size()) {\n            if (lst.apply(i)\
    \ < min) {\n                min = lst.apply(i)\n                minIndex = i\n\
    \            }\n        }\n        return Option.apply(min)", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head()\n\
    \            var minIndex = 0\n            for (i <- lst.size() - 1) {\n     \
    \           if (lst.apply(i) < min) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return minIndex\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head()\n            var minIndex\
    \ = 0\n            for (i <- lst.tail()) {\n                if (lst.head() > lst.tail().head())\
    \ {\n                    min = lst.tail().head()\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.size() == 0) {\n            return None\n        }\n        var\
    \ min = lst.head\n        var minIndex = 0\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst.apply(i).toLong > min.toLong) {\n                min\
    \ = lst.apply(i)\n                minIndex = i\n            }\n        }\n   \
    \     return min", "        if (lst.size() == 0) {\n            return None\n\
    \        } else {\n            var min = lst.head\n            var minIndex =\
    \ 0\n            for (i <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.size() == 0) {\n            return None\n        }\n\
    \        var min = lst.head()\n        var minIndex = 0\n        for (i <- 1 to\
    \ lst.size()) {\n            if (lst.apply(i) < min) {\n                min =\
    \ lst.apply(i)\n                minIndex = i\n            }\n        }\n     \
    \   return min", "        if (lst.isEmpty()) {\n            return None\n    \
    \    } else {\n            var min = lst.head()\n            var minIndex = 0\n\
    \            for (i <- 1 until lst.size()) {\n                if (lst.apply(i)\
    \ < min) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return minIndex\n       \
    \ }", "        if (lst.isEmpty()) {\n            return None\n        }\n    \
    \    var min = lst.head()\n        var minIndex = 0\n        for (i <- 1 to lst.size())\
    \ {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n\
    \                minIndex = i\n            }\n        }\n        return min",
  "        if (lst.isEmpty()) {\n            return None\n        } else {\n     \
    \       var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.size - 1) {\n                if (lst.apply(i) < min) {\n               \
    \     min = lst.apply(i)\n                    minIndex = i\n                }\n\
    \            }\n            return minIndex\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head()\n\
    \            var minIndex = 0\n            for (i <- lst.size()) {\n         \
    \       if (lst.apply(i).toLong > min.toLong) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var max\
    \ = lst.head\n            for (i <- lst.tail) {\n                if (i < min)\
    \ {\n                    min = i\n                }\n                if (i > max)\
    \ {\n                    max = i\n                }\n            }\n         \
    \   if (min == max) {\n                return None\n            } else {\n   \
    \             return max\n            }\n        }", "        if (lst.size() ==\
    \ 0) {\n            return None\n        }\n        var min = lst.head\n     \
    \   var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i)\
    \ < min) {\n                min = lst.apply(i)\n                minIndex = i\n\
    \            }\n        }\n        if (lst.apply(minIndex) == min) {\n       \
    \     return min\n        } else {\n            return lst.apply(minIndex + 1)\n\
    \        }", "        if (lst.isEmpty()) {\n            return None\n        }\
    \ else {\n            var min = lst.head\n            var minIndex = 0\n     \
    \       for (i <- lst.size - 1) {\n                if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                    min = lst.apply(i)\n                    minIndex\
    \ = i\n                }\n            }\n            return min\n        }", " \
    \       if (lst.isEmpty()) {\n            return None\n        } else {\n    \
    \        var min = lst.head()\n            var minIndex = 0\n            for (i\
    \ <- 1 to lst.size()) {\n                if (lst.apply(i).toLong > min.toLong)\
    \ {\n                    min = lst.apply(i)\n                    minIndex = i\n\
    \                }\n            }\n            return min\n        }", "     \
    \   if (lst.isEmpty) {\n            return None\n        } else {\n          \
    \  var min = lst.head\n            var minIndex = 0\n            for (i <- lst.tail)\
    \ {\n                if (lst.head > lst.tail.head) {\n                    min\
    \ = lst.tail.head\n                    minIndex = i\n                }\n     \
    \       }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 until lst.size) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n                minIndex\
    \ = i\n            }\n        }\n        if (minIndex == 0) {\n            return\
    \ None\n        }\n        return lst.apply(minIndex - 1)", "        if (lst.isEmpty())\
    \ return None\n        var i = lst.indexOf(lst.head)\n        if (i == lst.size()\
    \ - 1) return lst.head\n        return lst.apply(i + 1)", "        if (lst.size()\
    \ == 0) {\n            return None\n        } else {\n            var min = lst.head()\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size()) {\n    \
    \            if (lst.apply(i) < min) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return lst.apply(minIndex + 1)\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head\n \
    \           var minIndex = 0\n            for (i <- lst.tail.size) {\n       \
    \         if (lst.tail.apply(i).compareTo(min) < 0) {\n                    min\
    \ = lst.tail.apply(i)\n                    minIndex = i\n                }\n \
    \           }\n            return min\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        } else {\n            var min = lst.head()\n\
    \            var minIndex = 0\n            for (i <- 1 to lst.size()) {\n    \
    \            if (lst.apply(i).toLong > min.toLong) {\n                    min\
    \ = lst.apply(i)\n                    minIndex = i\n                }\n      \
    \      }\n            return min\n        }", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- lst.tail) {\n            if (lst.head > lst.tail.head)\
    \ {\n                min = lst.tail.head\n                minIndex = i\n     \
    \       }\n        }\n        return min", "        if (lst.isEmpty()) {\n   \
    \         return None\n        } else {\n            var min = lst.head\n    \
    \        var minIndex = 0\n            for (i <- lst.tail.size) {\n          \
    \      if (lst.tail.head < min) {\n                    min = lst.tail.head\n \
    \                   minIndex = i\n                }\n            }\n         \
    \   return lst.tail.drop(minIndex + 1)\n        }", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- 1 until lst.size) {\n            if (lst.apply(i).compareTo(min)\
    \ < 0) {\n                min = lst.apply(i)\n                minIndex = i\n \
    \           }\n        }\n        return min", "        if (lst.isEmpty()) {\n\
    \            return None\n        }\n        var min = lst.head\n        var minIndex\
    \ = 0\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).toLong\
    \ > min.toLong) {\n                min = lst.apply(i)\n                minIndex\
    \ = i\n            }\n        }\n        return min", "        if (lst.isEmpty())\
    \ {\n            return None\n        } else {\n            var min = lst.head\n\
    \            var minIndex = 0\n            for (i <- lst.size - 1) {\n       \
    \         if (lst.apply(i).toLong > min.toLong) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.isEmpty()) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var minIndex\
    \ = 0\n            for (i <- 1 to lst.size - 1) {\n                if (lst.apply(i).toLong\
    \ > min.toLong) {\n                    min = lst.apply(i)\n                  \
    \  minIndex = i\n                }\n            }\n            return min\n  \
    \      }", "        if (lst.isEmpty()) {\n            return None\n        }\n\
    \        var min = lst.head\n        var minIndex = 0\n        for (i <- lst.size\
    \ - 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n               \
    \ min = lst.apply(i)\n                minIndex = i\n            }\n        }\n\
    \        return min", "        if (lst.isEmpty()) {\n            return None\n\
    \        }\n        var min = lst.head\n        var minIndex = 0\n        for\
    \ (i <- lst.size - 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n\
    \                min = lst.apply(i)\n                minIndex = i\n          \
    \  }\n        }\n        return min", "        if (lst.isEmpty()) {\n        \
    \    return None\n        } else {\n            var min = lst.head\n         \
    \   var minIndex = 0\n            for (i <- lst.size - 1) {\n                if\
    \ (lst.apply(i).compareTo(min) < 0) {\n                    min = lst.apply(i)\n\
    \                    minIndex = i\n                }\n            }\n        \
    \    return min\n        }", "        if (lst.size() == 0) {\n            return\
    \ None\n        } else {\n            var min = lst.head\n            var max\
    \ = lst.head\n            for (i <- lst.tail) {\n                if (i < min)\
    \ {\n                    min = i\n                } else if (i > max) {\n    \
    \                max = i\n                }\n            }\n            if (min\
    \ == max) {\n                return None\n            } else {\n             \
    \   return max\n            }\n        }", "        if (lst.size() == 0) {\n \
    \           return None\n        } else {\n            var min = lst.head\n  \
    \          var max = lst.head\n            for (i <- lst.tail) {\n           \
    \     if (i < min) {\n                    min = i\n                }\n       \
    \         if (i > max) {\n                    max = i\n                }\n   \
    \         }\n            if (min == max) {\n                return None\n    \
    \        } else {\n                return max\n            }\n        }", "  \
    \      if (lst.isEmpty) {\n            return None\n        } else {\n       \
    \     var min = lst.head\n            var minIndex = 0\n            for (i <-\
    \ lst.tail) {\n                if (lst.head > lst.tail.head) {\n             \
    \       min = lst.tail.head\n                    minIndex = i\n              \
    \  }\n            }\n            return min\n        }", "        if (lst.size()\
    \ == 0) {\n            return None\n        }\n        var min = lst.head\n  \
    \      var minIndex = 0\n        for (i <- 1 to lst.size - 1) {\n            if\
    \ (lst.apply(i) < min) {\n                min = lst.apply(i)\n               \
    \ minIndex = i\n            }\n        }\n        return min", "        if (lst.isEmpty())\
    \ {\n            return None\n        }\n        var min = lst.head\n        var\
    \ minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i)\
    \ < min) {\n                min = lst.apply(i)\n                minIndex = i\n\
    \            }\n        }\n        return Option.apply(lst.apply(minIndex + 1))",
  "        if (lst.size() == 0) {\n            return None\n        }\n        if\
    \ (lst.size() == 1) {\n            return None\n        }\n        if (lst.size()\
    \ == 2) {\n            return lst(1)\n        }\n        var min = lst(0)\n  \
    \      var max = lst(0)\n        for (i <- 1 to lst.size()) {\n            if\
    \ (lst(i) < min) {\n                min = lst(i)\n            }\n            if\
    \ (lst(i) > max) {\n                max = lst(i)\n            }\n        }\n \
    \       if (max == min) {\n            return None\n        }\n        var next\
    \ = lst(0)\n        for (i <- 1 to lst.size()) {\n            if (lst(i) == max)\
    \ {\n                next = lst(i)\n            }\n        }\n        return next"]
stop_tokens:
- "\n    }\n"

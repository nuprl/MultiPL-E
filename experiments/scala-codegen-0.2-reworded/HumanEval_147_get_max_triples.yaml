name: HumanEval_147_get_max_triples
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a positive integer n. You have to create an integer list a\
  \ of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
  \ i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a where\
  \ i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example\
  \ :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation: \n    // a\
  \ = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    def getMaxTriples(n\
  \ : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
  \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
  \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
completions: ["        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val result = 0\n    \
    \    for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n          \
    \      for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) +\
    \ a.get(k) % 3 == 0) {\n                        result += 1\n                \
    \    }\n                }\n            }\n        }\n        result", "      \
    \  val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 1)\
    \ {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        res", "        val a = mutable.List[Long]()\n \
    \       for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j\
    \ <- i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n            \
    \        if (a(i) + a(j) + a(k) % 3 == 0) {\n                        result +=\
    \ 1\n                    }\n                }\n            }\n        }\n    \
    \    return result", "        val a = new ArrayList[Long](n)\n        for (i <-\
    \ 0 until n) {\n            a.set(i, i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n)\
    \ {\n                for (k <- j + 1 until n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n     \
    \   for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n    \
    \    val result = 0\n        for (i <- 1 until n) {\n            for (j <- i +\
    \ 1 until n) {\n                for (k <- j + 1 until n) {\n                 \
    \   if (a.apply(i).asInstanceOf[Long].value % 3 == 0 &&\n                    \
    \    a.apply(j).asInstanceOf[Long].value % 3 == 0 &&\n                       \
    \ a.apply(k).asInstanceOf[Long].value % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        result += 1\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val res = 0\n       \
    \ for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n             \
    \   for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n)\
    \ {\n            a.append(i * i - i + 1)\n        }\n        val res = 0l\n  \
    \      for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n            \
    \    for (k <- j + 1 to n) {\n                    if (a(i) + a(j) + a(k) % 3 ==\
    \ 0) {\n                        res += 1\n                    }\n            \
    \    }\n            }\n        }\n        res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j\
    \ <- i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n            \
    \        if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                    \
    \    result += 1\n                    }\n                }\n            }\n  \
    \      }\n        return result", "        val a = mutable.List[Long]()\n    \
    \    for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n   \
    \     val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to\
    \ n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val res = 0l\n       \
    \ for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n         \
    \       for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) +\
    \ a.get(k) % 3 == 0) {\n                        res += 1\n                   \
    \ }\n                }\n            }\n        }\n        return res", "     \
    \   val a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n            a +=\
    \ i * i - i + 1\n        }\n        val res = 0\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a(i) + a(j) + a(k) % 3 == 0) {\n                    \
    \    res += 1\n                    }\n                }\n            }\n     \
    \   }\n        res", "        val a = mutable.List[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res =\
    \ 0l\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n \
    \               for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        return res", "   \
    \     val a = scala.collection.mutable.ListBuffer[Long]()\n        for (i <- 1\
    \ until n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0\n        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n\
    \                for (k <- j + 1 until n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        result += 1\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result", "        val a = scala.collection.mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n   \
    \     val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 0 until n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ result = 0\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1\
    \ until n) {\n                for (k <- j + 1 until n) {\n                   \
    \ if (a(i) + a(j) + a(k) % 3 == 0) {\n                        result += 1\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ result", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val result = 0\n    \
    \    for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n      \
    \          for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a.append(i * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1\
    \ to n - 1) {\n            for (j <- i + 1 to n) {\n                for (k <-\
    \ j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 ==\
    \ 0) {\n                        res += 1\n                    }\n            \
    \    }\n            }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return res", "        val a = mutable.List[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        result += 1\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val result = 0\n    \
    \    for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n              \
    \  for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = Array(n)\n        val result = 0l\n        for (i <- 1 to n) {\n       \
    \     for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n     \
    \               if (a[i] + a[j] + a[k] % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = ListBuffer[Long]()\n        for (i <-\
    \ 1 to n) {\n            a += i * i - i + 1\n        }\n        val result = 0\n\
    \        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n  \
    \              for (k <- j + 1 to n) {\n                    if (a(i) + a(j) +\
    \ a(k) % 3 == 0) {\n                        result += 1\n                    }\n\
    \                }\n            }\n        }\n        result", "        val a\
    \ = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until n)\
    \ {\n            a.add(i * i - i + 1)\n        }\n        val result = 0\n   \
    \     for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n       \
    \         for (k <- j + 1 until n) {\n                    if (a.apply(i).asInstanceOf[Long].toInt()\
    \ + a.apply(j).asInstanceOf[Long].toInt() + a.apply(k).asInstanceOf[Long].toInt()\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = new ArrayList[Long]\n        for (i <- 1 to n) {\n            a.add(i *\
    \ i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 1) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    res += 1\n                    }\n                }\n            }\n     \
    \   }\n        return res", "        val a = mutable.Vector.apply[Long]().fill(0l)\n\
    \        for (i <- 1 to n) {\n            a.update(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.Vector.empty[Long]\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ res = 0l\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.apply(i) +\
    \ a.apply(j) + a.apply(k) % 3 == 0) {\n                        res += 1\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ res", "        val a = Array[Long](n)\n        val result = 0l\n        for\
    \ (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n                for (k\
    \ <- j + 1 to n) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n \
    \                       result += 1\n                    }\n                }\n\
    \            }\n        }\n        return result", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j\
    \ <- i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n            \
    \        if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                    \
    \    result += 1\n                    }\n                }\n            }\n  \
    \      }\n        return result", "        val a = mutable.List[Long]()\n    \
    \    for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n   \
    \     val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j <-\
    \ i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ result += 1\n                    }\n                }\n            }\n     \
    \   }\n        return result", "        val a = ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a(i) + a(j)\
    \ + a(k) % 3 == 0) {\n                        result += 1\n                  \
    \  }\n                }\n            }\n        }\n        result", "        val\
    \ a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 0 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 0 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n               \
    \         result += 1\n                    }\n                }\n            }\n\
    \        }\n        return result", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val result = 0l\n    \
    \    for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n      \
    \          for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = new ArrayList[Long]\n        for (i <- 1 to n) {\n            a.add(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    res += 1\n                    }\n                }\n            }\n     \
    \   }\n        return res", "        val a = mutable.List[Long]()\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        return res", "   \
    \     val a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <-\
    \ 1 until n) {\n            a.add(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n\
    \                for (k <- j + 1 until n) {\n                    if (a.apply(i).asInstanceOf[Long].toInt()\
    \ + a.apply(j).asInstanceOf[Long].toInt() + a.apply(k).asInstanceOf[Long].toInt()\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 to n - 2)\
    \ {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1\
    \ to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n\
    \                        res += 1\n                    }\n                }\n\
    \            }\n        }\n        return res", "        val a = ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n - 1) {\n            for (j <-\
    \ i + 1 to n) {\n                for (k <- j + 1 to n) {\n                   \
    \ if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        res", " \
    \       val a = new ArrayList[Long](n)\n        for (i <- 1 to n) {\n        \
    \    a.set(i, i * i - i + 1)\n        }\n        val res = 0\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ scala.collection.mutable.ListBuffer[Long]()\n        for (i <- 0 until n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val result = 0\n    \
    \    for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n    \
    \            for (k <- j + 1 until n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = new ArrayList[Long](n)\n        for (i <- 1 to n) {\n         \
    \   a.set(i, i * i - i + 1)\n        }\n        val res = 0\n        for (i <-\
    \ 1 to n - 1) {\n            for (j <- i + 1 to n) {\n                for (k <-\
    \ j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 ==\
    \ 0) {\n                        res += 1\n                    }\n            \
    \    }\n            }\n        }\n        res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0l\n        for (i <- 1 to n - 1) {\n            for (j <-\
    \ i + 1 to n) {\n                for (k <- j + 1 to n) {\n                   \
    \ if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return res", "        val a = mutable.List[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = scala.collection.mutable.ListBuffer[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n   \
    \             for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = Array(n)\n        val res = 0l\n        for (i <- 1 to n) {\n \
    \           for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                    \
    \    res += 1\n                    }\n                }\n            }\n     \
    \   }\n        return res", "        val a = mutable.List[Long]()\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        res", "        val\
    \ a = new ArrayList[Long]\n        for (i <- 0 until n) {\n            a.add(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 0 until n -\
    \ 1) {\n            for (j <- i + 1 until n) {\n                for (k <- j +\
    \ 1 until n) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n     \
    \                   res += 1\n                    }\n                }\n     \
    \       }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a(i) + a(j) + a(k) % 3 == 0) {\n                        result += 1\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ result", "        val a = scala.collection.mutable.ArrayBuffer.newInstance(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                     \
    \   result += 1\n                    }\n                }\n            }\n   \
    \     }\n        return result", "        val a = new ArrayList[Long]\n      \
    \  for (i <- 1 to n) {\n            a.add(i * i - i + 1)\n        }\n        val\
    \ res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n -\
    \ 1) {\n                for (k <- j + 1 to n) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        res += 1\n              \
    \      }\n                }\n            }\n        }\n        return res", " \
    \       val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n          \
    \  a.append(i * i - i + 1)\n        }\n        val res = 0\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i *\
    \ i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 to n) {\n \
    \           for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n    \
    \    val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1\
    \ to n - 1) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a(i) + a(j) + a(k) % 3 == 0) {\n                        res += 1\n        \
    \            }\n                }\n            }\n        }\n        res", " \
    \       val a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i\
    \ <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n\
    \                for (k <- j + 1 until n) {\n                    if (a.apply(i).asInstanceOf[Long].value\
    \ % 3 == 0 &&\n                        a.apply(j).asInstanceOf[Long].value % 3\
    \ == 0 &&\n                        a.apply(k).asInstanceOf[Long].value % 3 ==\
    \ 0) {\n                        res += 1\n                    }\n            \
    \    }\n            }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 1) {\n            for (j\
    \ <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n                \
    \    if (a(i) + a(j) + a(k) % 3 == 0) {\n                        result += 1\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a.append(i * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1\
    \ to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for (k\
    \ <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3\
    \ == 0) {\n                        res += 1\n                    }\n         \
    \       }\n            }\n        }\n        return res", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0l\n        for (i <- 1 to n) {\n            for (j <- i +\
    \ 1 to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = new ArrayList[Long]()\n        for (i <- 1 to n) {\n\
    \            a.add(i * i - i + 1)\n        }\n        val res = 0\n        for\
    \ (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n             \
    \   for (k <- j + 1 to n) {\n                    if (a[i] + a[j] + a[k] % 3 ==\
    \ 0) {\n                        res += 1\n                    }\n            \
    \    }\n            }\n        }\n        return res", "        val a = ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n    \
    \    val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a(i) + a(j) + a(k) % 3 == 0) {\n                        result += 1\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a += i * i - i + 1\n        }\n        val res = 0\n        for (i <- 1 to n)\
    \ {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        return res", "        val a = ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n    \
    \    val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to\
    \ n) {\n                for (k <- j + 1 to n) {\n                    if (a(i)\
    \ + a(j) + a(k) % 3 == 0) {\n                        res += 1\n              \
    \      }\n                }\n            }\n        }\n        res", "       \
    \ val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 2)\
    \ {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1\
    \ to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n\
    \                        res += 1\n                    }\n                }\n\
    \            }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <-\
    \ i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ result += 1\n                    }\n                }\n            }\n     \
    \   }\n        return result", "        val a = mutable.List[Long]()\n       \
    \ for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n      \
    \  val res = 0l\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val res = 0\n        for\
    \ (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n             \
    \   for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until n)\
    \ {\n            a.add(i * i - i + 1)\n        }\n        val result = 0l\n  \
    \      for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n      \
    \          for (k <- j + 1 until n) {\n                    if (a.apply(i) + a.apply(j)\
    \ + a.apply(k) % 3 == 0) {\n                        result += 1\n            \
    \        }\n                }\n            }\n        }\n        return result",
  "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <-\
    \ 1 until n) {\n            a.add(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n\
    \                for (k <- j + 1 until n) {\n                    if (a.apply(i)\
    \ + a.apply(j) + a.apply(k) % 3 == 0) {\n                        result += 1\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val res = 0l\n      \
    \  for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n        \
    \        for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        return res", "   \
    \     val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val result = 0\n        for (i <- 1 to n -\
    \ 2) {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j +\
    \ 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0)\
    \ {\n                        result += 1\n                    }\n            \
    \    }\n            }\n        }\n        result", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j\
    \ <- i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n            \
    \        if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                    \
    \    result += 1\n                    }\n                }\n            }\n  \
    \      }\n        return result", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = new ArrayList[Long]\n        for (i <-\
    \ 1 to n) {\n            a.add(i * i - i + 1)\n        }\n        val result =\
    \ 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n      \
    \          for (k <- j + 1 to n) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = new ArrayList[Long]\n        for (i <- 1 to n) {\n            a.add(i *\
    \ i - i + 1)\n        }\n        val result = 0\n        for (i <- 1 to n - 2)\
    \ {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1\
    \ to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n\
    \                        result += 1\n                    }\n                }\n\
    \            }\n        }\n        return result", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return res", "        val a = mutable.List[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n   \
    \             for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a.append(i * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1\
    \ to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for (k\
    \ <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3\
    \ == 0) {\n                        res += 1\n                    }\n         \
    \       }\n            }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = new ArrayList[Long]\n        for (i <- 1 to n) {\n  \
    \          a.add(i * i - i + 1)\n        }\n        val res = 0\n        for (i\
    \ <- 1 to n) {\n            for (j <- i + 1 to n) {\n                for (k <-\
    \ j + 1 to n) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        return res", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 until n) {\n            a.append(i * i - i + 1)\n       \
    \ }\n        val result = 0l\n        for (i <- 1 until n) {\n            for\
    \ (j <- i + 1 until n) {\n                for (k <- j + 1 until n) {\n       \
    \             if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n               \
    \         result += 1\n                    }\n                }\n            }\n\
    \        }\n        return result", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <-\
    \ i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ result += 1\n                    }\n                }\n            }\n     \
    \   }\n        return result", "        val a = new ArrayList[Long]\n        for\
    \ (i <- 1 to n) {\n            a.add(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        res += 1\n                    }\n\
    \                }\n            }\n        }\n        return res", "        val\
    \ a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n    \
    \    val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to\
    \ n) {\n                for (k <- j + 1 to n) {\n                    if (a(i)\
    \ + a(j) + a(k) % 3 == 0) {\n                        res += 1\n              \
    \      }\n                }\n            }\n        }\n        res", "       \
    \ val a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until\
    \ n) {\n            a.add(i * i - i + 1)\n        }\n        val result = 0l\n\
    \        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n    \
    \            for (k <- j + 1 until n) {\n                    if (a.apply(i) +\
    \ a.apply(j) + a.apply(k) % 3 == 0) {\n                        result += 1\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ result", "        val a = new ArrayList[Long]\n        for (i <- 0 until n)\
    \ {\n            a.add(i * i - i + 1)\n        }\n        val res = 0\n      \
    \  for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n      \
    \          for (k <- j + 1 until n) {\n                    if (a[i] + a[j] + a[k]\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until n)\
    \ {\n            a.add(i * i - i + 1)\n        }\n        val res = 0\n      \
    \  for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n          \
    \      for (k <- j + 1 until n) {\n                    if (a.apply(i).toInt +\
    \ a.apply(j).toInt + a.apply(k).toInt % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 until n) {\n            for (j <- i\
    \ + 1 until n) {\n                for (k <- j + 1 until n) {\n               \
    \     if (a.apply(i).asInstanceOf[Long].toInt() + a.apply(j).asInstanceOf[Long].toInt()\
    \ + a.apply(k).asInstanceOf[Long].toInt() % 3 == 0) {\n                      \
    \  res += 1\n                    }\n                }\n            }\n       \
    \ }\n        return res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i).asInstanceOf[Long].toInt() + a.apply(j).asInstanceOf[Long].toInt()\
    \ + a.apply(k).asInstanceOf[Long].toInt() % 3 == 0) {\n                      \
    \  result += 1\n                    }\n                }\n            }\n    \
    \    }\n        return result", "        val a = mutable.List[Long]()\n      \
    \  for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n     \
    \   val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i +\
    \ 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                   \
    \ if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res\
    \ = 0l\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = scala.collection.mutable.ListBuffer[Long]()\n       \
    \ for (i <- 1 until n) {\n            a.append(i * i - i + 1)\n        }\n   \
    \     val result = 0l\n        for (i <- 1 until n) {\n            for (j <- i\
    \ + 1 until n) {\n                for (k <- j + 1 until n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ result += 1\n                    }\n                }\n            }\n     \
    \   }\n        return result", "        val a = mutable.List[Long]()\n       \
    \ for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n      \
    \  val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j <- i +\
    \ 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                   \
    \ if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = ListBuffer[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a.append(i * i - i + 1)\n        }\n        val res = 0l\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ mutable.List[Long]()\n        for (i <- 1 until n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val result = 0l\n        for (i <- 1 until\
    \ n) {\n            for (j <- i + 1 until n) {\n                for (k <- j +\
    \ 1 until n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 ==\
    \ 0) {\n                        result += 1\n                    }\n         \
    \       }\n            }\n        }\n        return result", "        val a =\
    \ new ArrayList[Long](n)\n        for (i <- 1 to n) a[i] = i * i - i + 1\n   \
    \     val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i +\
    \ 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                   \
    \ if (a[i] + a[j] + a[k] % 3 == 0) {\n                        res += 1\n     \
    \               }\n                }\n            }\n        }\n        res",
  "        val a = new ArrayList[Long](n)\n        for (i <- 0 until n) {\n      \
    \      a.set(i, i * i - i + 1)\n        }\n        val res = 0\n        for (i\
    \ <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n              \
    \  for (k <- j + 1 until n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until n)\
    \ {\n            a.add(i * i - i + 1)\n        }\n        val result = 0\n   \
    \     for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n       \
    \         for (k <- j + 1 until n) {\n                    if (a.apply(i).asInstanceOf[Long].value\
    \ % 3 == 0 &&\n                        a.apply(j).asInstanceOf[Long].value % 3\
    \ == 0 &&\n                        a.apply(k).asInstanceOf[Long].value % 3 ==\
    \ 0) {\n                        result += 1\n                    }\n         \
    \       }\n            }\n        }\n        return result", "        val a =\
    \ mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i *\
    \ i - i + 1)\n        }\n        val result = 0\n        for (i <- 1 to n - 2)\
    \ {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1\
    \ to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n\
    \                        result += 1\n                    }\n                }\n\
    \            }\n        }\n        return result", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0l\n        for (i <- 1 to n - 2) {\n            for (j <-\
    \ i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ res += 1\n                    }\n                }\n            }\n        }\n\
    \        return res", "        val a = mutable.List[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a(i) + a(j)\
    \ + a(k) % 3 == 0) {\n                        result += 1\n                  \
    \  }\n                }\n            }\n        }\n        return result", " \
    \       val a = scala.collection.mutable.ListBuffer[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n    \
    \            for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a.append(i * i - i + 1)\n        }\n        val res = 0l\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        res += 1\n                    }\n                }\n\
    \            }\n        }\n        return res", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 0 until n) {\n            a.append(i * i - i + 1)\n       \
    \ }\n        val result = 0l\n        for (i <- 0 until n - 1) {\n           \
    \ for (j <- i + 1 until n) {\n                for (k <- j + 1 until n) {\n   \
    \                 if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n           \
    \             result += 1\n                    }\n                }\n        \
    \    }\n        }\n        return result", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i).asInstanceOf[Long].toInt % 3 == 0 &&\n                \
    \        a.apply(j).asInstanceOf[Long].toInt % 3 == 0 &&\n                   \
    \     a.apply(k).asInstanceOf[Long].toInt % 3 == 0) {\n                      \
    \  result += 1\n                    }\n                }\n            }\n    \
    \    }\n        return result", "        val a = ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a(i) + a(j)\
    \ + a(k) % 3 == 0) {\n                        res += 1\n                    }\n\
    \                }\n            }\n        }\n        res", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 until n) {\n            a.append(i * i - i + 1)\n       \
    \ }\n        val result = 0l\n        for (i <- 1 until n) {\n            for\
    \ (j <- i + 1 until n) {\n                for (k <- j + 1 until n) {\n       \
    \             if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n               \
    \         result += 1\n                    }\n                }\n            }\n\
    \        }\n        return result", "        val a = new ArrayList[Long](n)\n\
    \        for (i <- 1 to n) {\n            a.set(i, i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i).asInstanceOf[Long].toInt() + a.apply(j).asInstanceOf[Long].toInt()\
    \ + a.apply(k).asInstanceOf[Long].toInt() % 3 == 0) {\n                      \
    \  result += 1\n                    }\n                }\n            }\n    \
    \    }\n        return result", "        val a = mutable.List[Long]()\n      \
    \  for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n     \
    \   val res = 0l\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a += i * i - i + 1\n        }\n        val res = 0\n        for (i\
    \ <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a(i) + a(j) + a(k) % 3 == 0) {\n\
    \                        res += 1\n                    }\n                }\n\
    \            }\n        }\n        res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 1) {\n            for (j\
    \ <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n                \
    \    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n    \
    \            for (k <- j + 1 to n) {\n                    if (a(i) + a(j) + a(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        res", "        val a = ListBuffer[Long]()\n\
    \        for (i <- 1 until n) {\n            a.append(i * i - i + 1)\n       \
    \ }\n        val res = 0\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                     \
    \   res += 1\n                    }\n                }\n            }\n      \
    \  }\n        return res", "        val a = new ArrayList[Long]\n        for (i\
    \ <- 1 to n) {\n            a.add(i * i - i + 1)\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        result += 1\n                  \
    \  }\n                }\n            }\n        }\n        return result", " \
    \       val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n          \
    \  a.append(i * i - i + 1)\n        }\n        val res = 0\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ scala.collection.mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val result = 0\n     \
    \   for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n           \
    \     for (k <- j + 1 to n) {\n                    if (a(i) + a(j) + a(k) % 3\
    \ == 0) {\n                        result += 1\n                    }\n      \
    \          }\n            }\n        }\n        return result", "        val a\
    \ = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = mutable.Vector.empty[Long]\n\
    \        for (i <- 1 to n) {\n            a = a.updated(i, i * i - i + 1)\n  \
    \      }\n        val result = 0\n        for (i <- 1 to n) {\n            for\
    \ (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n             \
    \       if (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n               \
    \         result += 1\n                    }\n                }\n            }\n\
    \        }\n        result", "        val a = new ArrayList[Long]\n        for\
    \ (i <- 1 to n) {\n            a.add(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        res += 1\n                    }\n\
    \                }\n            }\n        }\n        return res", "        val\
    \ a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 1)\
    \ {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        res", "        val a = mutable.List[Long]()\n \
    \       for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        res\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return res", "        val a = mutable.List[Long]()\n        for (i <-\
    \ 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res =\
    \ 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n      \
    \          for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        return res", "   \
    \     val a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <-\
    \ 1 until n) {\n            a.add(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n\
    \                for (k <- j + 1 until n) {\n                    if (a.apply(i).toLong()\
    \ + a.apply(j).toLong() + a.apply(k).toLong() % 3 == 0) {\n                  \
    \      result += 1\n                    }\n                }\n            }\n\
    \        }\n        return result", "        val a = mutable.List[Long]()\n  \
    \      for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n \
    \       val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <-\
    \ i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ result += 1\n                    }\n                }\n            }\n     \
    \   }\n        result", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n               \
    \         result += 1\n                    }\n                }\n            }\n\
    \        }\n        return result", "        val a = new ArrayList[Long](n)\n\
    \        for (i <- 0 until n) {\n            a.set(i, i * i - i + 1)\n       \
    \ }\n        val result = 0\n        for (i <- 0 until n - 2) {\n            for\
    \ (j <- i + 1 until n - 1) {\n                for (k <- j + 1 until n) {\n   \
    \                 if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n           \
    \             result += 1\n                    }\n                }\n        \
    \    }\n        }\n        return result", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a(i) + a(j) + a(k) % 3 == 0) {\n                        res += 1\n   \
    \                 }\n                }\n            }\n        }\n        res",
  "        val a = new ArrayList[Long]\n        for (i <- 1 to n) {\n            a.add(i\
    \ * i - i + 1)\n        }\n        val t = new scala.collection.mutable.ArrayBuffer[Long]\n\
    \        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n          \
    \      for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) +\
    \ a.get(k) % 3 == 0) {\n                        t.add(a.get(i) * a.get(j) * a.get(k))\n\
    \                    }\n                }\n            }\n        }\n        val\
    \ result = t.toList().map(_.toLong).sum()\n        result", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i).asInstanceOf[Long].toInt() + a.apply(j).asInstanceOf[Long].toInt()\
    \ + a.apply(k).asInstanceOf[Long].toInt() % 3 == 0) {\n                      \
    \  result += 1\n                    }\n                }\n            }\n    \
    \    }\n        return result", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res\
    \ = 0l\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n   \
    \             for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        return res", "   \
    \     val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 2)\
    \ {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1\
    \ to n) {\n                    if (a(i) + a(j) + a(k) % 3 == 0) {\n          \
    \              res += 1\n                    }\n                }\n          \
    \  }\n        }\n        res", "        val a = mutable.Vector.empty[Long]\n \
    \       for (i <- 1 to n) {\n            a = a.updated(i, i * i - i + 1)\n   \
    \     }\n        val result = 0l\n        for (i <- 1 to n) {\n            for\
    \ (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n             \
    \       if (a.apply(i).asInstanceOf[Long].toInt + a.apply(j).asInstanceOf[Long].toInt\
    \ + a.apply(k).asInstanceOf[Long].toInt % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n\
    \        for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 until n) {\n            for (j <-\
    \ i + 1 until n) {\n                for (k <- j + 1 until n) {\n             \
    \       if (a.apply(i).asInstanceOf[Long].toInt() + a.apply(j).asInstanceOf[Long].toInt()\
    \ + a.apply(k).asInstanceOf[Long].toInt() % 3 == 0) {\n                      \
    \  result += 1\n                    }\n                }\n            }\n    \
    \    }\n        return result", "        val a = ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n        val result\
    \ = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n    \
    \            for (k <- j + 1 to n) {\n                    if (a(i) + a(j) + a(k)\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        result", "        val a =\
    \ mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i *\
    \ i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 1) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = new ArrayList[Long](n)\n\
    \        for (i <- 1 to n) a[i] = i * i - i + 1\n        val res = 0\n       \
    \ for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                        res += 1\n                    }\n                }\n\
    \            }\n        }\n        res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n     \
    \   for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n    \
    \    val res = 0\n        for (i <- 1 until n) {\n            for (j <- i + 1\
    \ until n) {\n                for (k <- j + 1 until n) {\n                   \
    \ if (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n                     \
    \   res += 1\n                    }\n                }\n            }\n      \
    \  }\n        return res", "        val a = mutable.Vector.empty[Long]\n     \
    \   for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n    \
    \    val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1\
    \ to n - 1) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a(i) + a(j) + a(k) % 3 == 0) {\n                        res += 1\n        \
    \            }\n                }\n            }\n        }\n        res", " \
    \       val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n          \
    \  a.append(i * i - i + 1)\n        }\n        val res = 0l\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ ListBuffer[Long]()\n        for (i <- 1 to n) {\n            a.append(i * i\
    \ - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 1) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val res = 0l\n       \
    \ for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n         \
    \       for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) +\
    \ a.get(k) % 3 == 0) {\n                        res += 1\n                   \
    \ }\n                }\n            }\n        }\n        return res", "     \
    \   val a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1\
    \ until n) {\n            a.add(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n\
    \                for (k <- j + 1 until n) {\n                    if (a.apply(i).asInstanceOf[Long].toInt()\
    \ + a.apply(j).asInstanceOf[Long].toInt() + a.apply(k).asInstanceOf[Long].toInt()\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = new ArrayList[Long]\n        for (i <- 1 to n) {\n            a.add(i *\
    \ i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 2) {\n\
    \            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n                \
    \        res += 1\n                    }\n                }\n            }\n \
    \       }\n        return res", "        val a = mutable.List[Long]()\n      \
    \  for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n     \
    \   val result = 0l\n        for (i <- 1 to n - 1) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.Vector.empty[Long]\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ result = 0l\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to\
    \ n - 1) {\n                for (k <- j + 1 to n) {\n                    if (a.apply(i)\
    \ + a.apply(j) + a.apply(k) % 3 == 0) {\n                        result += 1\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val res = 0\n       \
    \ for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ ListBuffer[Long]()\n        for (i <- 1 until n) {\n            a.append(i *\
    \ i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 until n) {\n\
    \            for (j <- i + 1 until n) {\n                for (k <- j + 1 until\
    \ n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n \
    \                       res += 1\n                    }\n                }\n \
    \           }\n        }\n        return res", "        val a = ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val result = 0\n     \
    \   for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n       \
    \         for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n           \
    \ a.append(i * i - i + 1)\n        }\n        val result = 0\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = mutable.List[Long]()\n        for (i <- 0 until n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val result = 0\n        for (i <- 0 until n\
    \ - 1) {\n            for (j <- i + 1 until n) {\n                for (k <- j\
    \ + 1 until n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 ==\
    \ 0) {\n                        result += 1\n                    }\n         \
    \       }\n            }\n        }\n        return result", "        val a =\
    \ ListBuffer[Long]()\n        for (i <- 1 to n) {\n            a += i * i - i\
    \ + 1\n        }\n        val t = 0\n        for (i <- 1 to n) {\n           \
    \ for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n         \
    \           if (a(i) + a(j) + a(k) % 3 == 0) {\n                        t += 1\n\
    \                    }\n                }\n            }\n        }\n        t",
  "        val a = Array[Long](n)\n        val result = 0l\n        for (i <- 1 to\
    \ n) {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to\
    \ n) {\n                    if (a[i] + a[j] + a[k] % 3 == 0) {\n             \
    \           result += 1\n                    }\n                }\n          \
    \  }\n        }\n        return result", "        val a = ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a += i * i - i + 1\n        }\n    \
    \    val result = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a(i)\
    \ + a(j) + a(k) % 3 == 0) {\n                        result += 1\n           \
    \         }\n                }\n            }\n        }\n        result", " \
    \       val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n          \
    \  a.append(i * i - i + 1)\n        }\n        val result = 0l\n        for (i\
    \ <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n        \
    \                res += 1\n                    }\n                }\n        \
    \    }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j\
    \ <- i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n            \
    \        if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                    \
    \    result += 1\n                    }\n                }\n            }\n  \
    \      }\n        return result", "        val a = Array[Long](n)\n        val\
    \ res = 0l\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a[i] + a[j]\
    \ + a[k] % 3 == 0) {\n                        res += 1\n                    }\n\
    \                }\n            }\n        }\n        return res", "        val\
    \ a = mutable.Vector.empty[Long]\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 to n) {\n\
    \            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n) {\n\
    \                    if (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n  \
    \                      res += 1\n                    }\n                }\n  \
    \          }\n        }\n        res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n \
    \           a.append(i * i - i + 1)\n        }\n        val res = 0\n        for\
    \ (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n             \
    \   for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i *\
    \ i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 2) {\n\
    \            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        res", "        val a = new ArrayList[Long]\n  \
    \      for (i <- 1 to n) {\n            a.add(i * i - i + 1)\n        }\n    \
    \    val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to\
    \ n) {\n                for (k <- j + 1 to n) {\n                    if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                        res += 1\n              \
    \      }\n                }\n            }\n        }\n        return res", " \
    \       val a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val result = 0\n        for (i <- 1 to n -\
    \ 1) {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to\
    \ n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n \
    \                       result += 1\n                    }\n                }\n\
    \            }\n        }\n        return result", "        val a = new ArrayList[Long]()\n\
    \        for (i <- 1 to n) {\n            a.add(i * i - i + 1)\n        }\n  \
    \      val res = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i +\
    \ 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                   \
    \ if (a[i] + a[j] + a[k] % 3 == 0) {\n                        res += 1\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ res", "        val a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n   \
    \         a += i * i - i + 1\n        }\n        val res = 0\n        for (i <-\
    \ 1 to n) {\n            for (j <- i + 1 to n) {\n                for (k <- j\
    \ + 1 to n) {\n                    if (a(i) + a(j) + a(k) % 3 == 0) {\n      \
    \                  res += 1\n                    }\n                }\n      \
    \      }\n        }\n        res", "        val a = mutable.List[Long]()\n   \
    \     for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n  \
    \      val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to\
    \ n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        res += 1\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ res", "        val a = scala.collection.mutable.ArrayBuffer.apply(n)\n     \
    \   for (i <- 1 until n) {\n            a.add(i * i - i + 1)\n        }\n    \
    \    val result = 0l\n        for (i <- 1 until n) {\n            for (j <- i\
    \ + 1 until n) {\n                for (k <- j + 1 until n) {\n               \
    \     if (a.apply(i).asInstanceOf[Long].toInt() + a.apply(j).asInstanceOf[Long].toInt()\
    \ + a.apply(k).asInstanceOf[Long].toInt() % 3 == 0) {\n                      \
    \  result += 1\n                    }\n                }\n            }\n    \
    \    }\n        return result", "        val a = ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ result = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1\n              \
    \      }\n                }\n            }\n        }\n        return result",
  "        val a = new ArrayList[Long](n)\n        for (i <- 1 to n) {\n         \
    \   a.set(i, i * i - i + 1)\n        }\n        val result = 0\n        for (i\
    \ <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until\
    \ n) {\n            a.add(i * i - i + 1)\n        }\n        val result = 0l\n\
    \        for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n    \
    \            for (k <- j + 1 until n) {\n                    if (a.apply(i).asInstanceOf[Long].toInt()\
    \ + a.apply(j).asInstanceOf[Long].toInt() + a.apply(k).asInstanceOf[Long].toInt()\
    \ % 3 == 0) {\n                        result += 1\n                    }\n  \
    \              }\n            }\n        }\n        return result", "        val\
    \ a = new ArrayList[Long](n)\n        for (i <- 1 until n) {\n            a.set(i,\
    \ i * i - i + 1)\n        }\n        val result = 0\n        for (i <- 1 until\
    \ n) {\n            for (j <- i + 1 until n) {\n                for (k <- j +\
    \ 1 until n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 ==\
    \ 0) {\n                        result += 1\n                    }\n         \
    \       }\n            }\n        }\n        return result", "        val a =\
    \ new ArrayList[Long](n)\n        for (i <- 1 to n) {\n            a.update(i\
    \ * i - i + 1)\n        }\n        val res = 0\n        for (i <- 1 to n - 1)\
    \ {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        return res", "        val a = mutable.List[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n - 2) {\n            for (j\
    \ <- i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n            \
    \        if (a(i) + a(j) + a(k) % 3 == 0) {\n                        result +=\
    \ 1\n                    }\n                }\n            }\n        }\n    \
    \    result", "        val a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n\
    \            a.append(i * i - i + 1)\n        }\n        val res = 0\n       \
    \ for (i <- 1 to n) {\n            for (j <- i + 1 to n) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ mutable.Vector.empty[Long]\n        for (i <- 1 to n) {\n            a = a.updated(i,\
    \ i * i - i + 1)\n        }\n        val result = 0l\n        for (i <- 1 to n)\
    \ {\n            for (j <- i + 1 to n) {\n                for (k <- j + 1 to n)\
    \ {\n                    if (a(i) + a(j) + a(k) % 3 == 0) {\n                \
    \        result += 1\n                    }\n                }\n            }\n\
    \        }\n        result", "        val a = mutable.Vector.empty[Long]\n   \
    \     for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n  \
    \      val res = 0l\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n                   \
    \     res += 1\n                    }\n                }\n            }\n    \
    \    }\n        return res", "        val a = mutable.List[Long]()\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ result = 0l\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to\
    \ n) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        result += 1\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result", "        val a = scala.collection.mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n   \
    \     val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i\
    \ + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n                 \
    \   if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val res\
    \ = 0\n        for (i <- 1 to n - 1) {\n            for (j <- i + 1 to n) {\n\
    \                for (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        res += 1\n                 \
    \   }\n                }\n            }\n        }\n        return res", "   \
    \     val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val res = 0l\n        for (i <- 1 to n - 2)\
    \ {\n            for (j <- i + 1 to n - 1) {\n                for (k <- j + 1\
    \ to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n\
    \                        res += 1\n                    }\n                }\n\
    \            }\n        }\n        return res", "        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val res = 0\n        for (i <- 1 to n) {\n            for (j <- i + 1\
    \ to n) {\n                for (k <- j + 1 to n) {\n                    if (a(i)\
    \ + a(j) + a(k) % 3 == 0) {\n                        res += 1\n              \
    \      }\n                }\n            }\n        }\n        return res", " \
    \       val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n          \
    \  a.append(i * i - i + 1)\n        }\n        val res = 0l\n        for (i <-\
    \ 1 to n - 2) {\n            for (j <- i + 1 to n - 1) {\n                for\
    \ (k <- j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k)\
    \ % 3 == 0) {\n                        res += 1\n                    }\n     \
    \           }\n            }\n        }\n        return res", "        val a =\
    \ scala.collection.mutable.ArrayBuffer.apply(n)\n        for (i <- 1 until n)\
    \ {\n            a.add(i * i - i + 1)\n        }\n        val res = 0\n      \
    \  for (i <- 1 until n) {\n            for (j <- i + 1 until n) {\n          \
    \      for (k <- j + 1 until n) {\n                    if (a.apply(i) + a.apply(j)\
    \ + a.apply(k) % 3 == 0) {\n                        res += 1\n               \
    \     }\n                }\n            }\n        }\n        return res", " \
    \       val a = mutable.List[Long]()\n        for (i <- 1 to n) {\n          \
    \  a.append(i * i - i + 1)\n        }\n        val res = 0\n        for (i <-\
    \ 1 to n - 1) {\n            for (j <- i + 1 to n) {\n                for (k <-\
    \ j + 1 to n) {\n                    if (a.get(i) + a.get(j) + a.get(k) % 3 ==\
    \ 0) {\n                        res += 1\n                    }\n            \
    \    }\n            }\n        }\n        return res", "        val a = mutable.Vector.apply[Long]().setLength(n)\n\
    \        for (i <- 1 to n) {\n            a.update(i * i - i + 1)\n        }\n\
    \        val result = 0l\n        for (i <- 1 to n) {\n            for (j <- i\
    \ + 1 to n) {\n                for (k <- j + 1 to n) {\n                    if\
    \ (a.apply(i) + a.apply(j) + a.apply(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = new ArrayList[Long](n)\n        for (i\
    \ <- 0 until n) {\n            a.set(i, i * i - i + 1)\n        }\n        val\
    \ result = 0l\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1\
    \ until n) {\n                for (k <- j + 1 until n) {\n                   \
    \ if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                        result\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       return result", "        val a = mutable.List[Long]()\n        for (i\
    \ <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val result\
    \ = 0l\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to n - 1)\
    \ {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        result += 1\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result", "        val a = ListBuffer[Long]()\n        for (i <- 1 to n) {\n\
    \            a += i * i - i + 1\n        }\n        val res = 0\n        for (i\
    \ <- 1 to n) {\n            for (j <- i + 1 to n) {\n                for (k <-\
    \ j + 1 to n) {\n                    if (a(i) + a(j) + a(k) % 3 == 0) {\n    \
    \                    res += 1\n                    }\n                }\n    \
    \        }\n        }\n        res", "        val a = mutable.List[Long]()\n \
    \       for (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n\
    \        val result = 0\n        for (i <- 1 to n - 2) {\n            for (j <-\
    \ i + 1 to n - 1) {\n                for (k <- j + 1 to n) {\n               \
    \     if (a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n                       \
    \ result += 1\n                    }\n                }\n            }\n     \
    \   }\n        return result", "        val a = ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) {\n            a.append(i * i - i + 1)\n        }\n        val\
    \ result = 0\n        for (i <- 1 to n - 2) {\n            for (j <- i + 1 to\
    \ n - 1) {\n                for (k <- j + 1 to n) {\n                    if (a.get(i)\
    \ + a.get(j) + a.get(k) % 3 == 0) {\n                        result += 1\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result"]
stop_tokens:
- "\n    }\n"

name: HumanEval_98_count_upper
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string s, count the number of uppercase vowels in even indices.\n\
  \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>>\
  \ countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n  \
  \  // (0l)\n    def countUpper(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
  )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
  dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
  U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
  EEEE\")) == (2l));\n    }\n\n}\n"
completions: ["        val vowels = \"AEIOU\".toCharArray()\n        val vowelsCount\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                if (s[i].toUpperCase() == vowels[vowelsCount]) {\n          \
    \          vowelsCount += 1\n                }\n            }\n        }\n   \
    \     vowelsCount", "        var count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == \"A\" || s.charAt(i) == \"E\" || s.charAt(i)\
    \ == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"U\") {\n              \
    \  count += 1\n            }\n            i += 2\n        }\n        return count",
  "        val vowels = \"AEIOU\".toCharArray\n        val result = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(vowels, s[i])\n            }\n        }\n        return result\n  \
    \  }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels\
    \ = \"AEIOU\".toCharArray\n        val result = 0l\n        for (i <- 1 until\
    \ s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels,\
    \ s[i])\n            }\n        }\n        return result\n    }\n\n    // Given\
    \ a string s, count the number of uppercase vowels in even indices.\n    // For\
    \ example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"\
    abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n   \
    \ def countUpperEven(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n\
    \        val result = 0l\n        for (i <- 2 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n\
    \        }\n        return result\n    }\n\n    // Given a string s, count the\
    \ number of uppercase vowels in odd indices.\n    // For example:\n    // >>>\
    \ countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n\
    \    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n     \
    \   for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n \
    \           if (s[i] == vowels[0]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.charAt(i), vowels)\n            }\n        }\n        return\
    \ result", "        var count = 0l\n        for (i <- 0 until s.length) {\n  \
    \          if (i % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n\
    \                    count += 1l\n                }\n            }\n        }\n\
    \        return count", "        val vowels = \"AEIOU\".toCharArray()\n      \
    \  val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(vowels, s.charAt(i))\n          \
    \  }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of uppercase vowels in odd indices.\n    // For example:\n    //\
    \ >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(vowels, s.charAt(i))\n          \
    \  }\n        }\n        return result\n    }\n\n    // Given a string s, return\
    \ the number of times that the string s appears in the string t.\n    // For example:\n\
    \    // >>> count((\"a\"), (\"a\"))\n    // (1l)\n    // >>> count((\"a\"), (\"\
    ab\"))\n    // (0l)\n    // >>> count((\"ab\"), (\"a\"))\n    // (1l)\n    //\
    \ >>> count((\"ab\"), (\"ab\"))\n    // (1l)\n    def count(s : String, t : String)\
    \ : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n\
    \            if (s.charAt(0) == t.charAt(i)) {\n                result += 1\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, return the number of times that the substring s appears in the string t.\n\
    \    // For example:\n    // >>> countSubstring(\"a\", \"a\")\n    // (1l)\n \
    \   // >>> countSubstring(\"a\", \"ab\")\n    // (0l)\n    // >>> countSub", " \
    \       val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = 0\n    \
    \    val count = 0l\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0) {\n                if (vowelsIndex < vowels.length && vowels[vowelsIndex]\
    \ == s.charAt(i)) {\n                    vowelsIndex += 1\n                }\n\
    \            } else {\n                count += 1\n            }\n        }\n\
    \        count", "        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                result += count(s.charAt(i) :>\
    \ vowels)\n            }\n        }\n        return result", "        val sb =\
    \ new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0) {\n                sb.append(s.charAt(i))\n            }\n       \
    \ }\n        return sb.toString().chars().filter(c -> c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U').count()", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0])\
    \ count += 1\n            }\n        }\n        return count", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i,\
    \ i + 1).toCharArray, vowels)\n            }\n        }\n        return result",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n\
    \        }\n        return result", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n \
    \           }\n        }\n        return count", "        val vowels = \"AEIOU\"\
    .toCharArray\n        val vowelsCount = 0\n        val sLength = s.length()\n\
    \        for (i <- 0 until sLength) {\n            if (i % 2 == 0) {\n       \
    \         if (s.charAt(i) == vowels[0]) {\n                    vowelsCount +=\
    \ 1\n                }\n            }\n        }\n        return vowelsCount",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(vowels, s.charAt(i))\n            }\n        }\n        return\
    \ result", "        val sb = new StringBuilder()\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n \
    \           }\n        }\n        val vowels = \"AEIOU\".toCharArray()\n     \
    \   for (i <- 0 until vowels.length) {\n            if (sb.indexOf(vowels[i])\
    \ != -1) {\n                return 1l\n            }\n        }\n        return\
    \ 0l", "        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          result += count(s.substring(i, i + 1).toCharArray, vowels)\n      \
    \      }\n        }\n        return result\n    }\n\n    // Given a string s,\
    \ count the number of uppercase vowels in odd indices.\n    // For example:\n\
    \    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val\
    \ result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 ==\
    \ 1) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        var count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                if (s[i] == vowels[0]) {\n   \
    \                 count += 1l\n                }\n            }\n        }\n \
    \       return count", "        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray,\
    \ vowels)\n            }\n        }\n        return result", "        val s2 =\
    \ s.toLowerCase.replaceAll(\"[^a-z]\", \"\")\n        val vowels = \"aeiou\".toCharArray\n\
    \        val counts = mutable.LongBuffer[0]\n        for (i <- 0 until s2.length)\
    \ {\n            if (i % 2 == 0) counts += 1\n            if (vowels[i % vowels.length])\
    \ counts += 1\n        }\n        counts.toList", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Counts the number\
    \ of vowels in the substring starting at index i and\n    // ending at index j.\n\
    \    def countVowels(s : String, i : Int, vowels : Array[Char]) : Int = {\n  \
    \      val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j)\
    \ == vowels[0]) {\n                count += 1\n            }\n        }\n    \
    \    return count\n    }\n\n    // Given a string s, return a new string where\
    \ all the lowercase letters\n    // have been changed to uppercase, but only if\
    \ they have not already been\n    // changed.\n    // For example:\n    // >>>\
    \ upper(\"Hello\")\n    // \"HELLO\"\n    // >>> upper(\"HELLO\")\n    // \"HELLO\"\
    \n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) : String\
    \ = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = \"\"\
    \n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == vowels[0])\
    \ {\n                result += s.charAt(i).toUpperCase()\n            } else {\n\
    \                result += s.charAt(i)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, return a new string where all the\
    \ lowercase letters\n    // have been changed to uppercase, but only if they have\
    \ not already been\n    // changed.\n    // For example:\n    // >>> upper(\"\
    Hello\")\n    // \"HELLO\"\n    // >>> upper(\"HELLO\")\n    // \"HELLO\"\n  \
    \  // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper2(s : String) : String\
    \ = {\n        val vowels = \"AEIOU\".toChar", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        var count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == vowels[0])\
    \ {\n                    count += 1\n                }\n            }\n      \
    \  }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n \
    \       val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n   \
    \         }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0\
    \ until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)])\
    \ counts += 1\n        }\n        counts.toList", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Counts the number\
    \ of vowels in the substring starting at index i and\n    // ending at index j.\n\
    \    def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n    \
    \    val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j)\
    \ == vowels[0]) {\n                count += 1\n            }\n        }\n    \
    \    return count", "        val vowels = \"AEIOU\".toCharArray\n        val counts\
    \ = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n\
    \        }\n        counts.toList", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n          \
    \          count += 1l\n                }\n            }\n        }\n        return\
    \ count", "        var count = 0l\n        for (i <- 0 until s.length) {\n   \
    \         if (i % 2 == 0) {\n                if (s[i].toUpperCase() == \"A\")\
    \ {\n                    count += 1\n                }\n            }\n      \
    \  }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n \
    \       val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n   \
    \         }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray\n        val result = 0L\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n\
    \            }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0])\
    \ {\n                    count += 1\n                }\n            }\n      \
    \  }\n        count", "        val s2 = s.toLowerCase\n        val vowels = \"\
    aeiou\".toCharArray\n        val counts = mutable.LongBuffer[0]\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n          \
    \  if (s2(i) == vowels(i)) counts += 1\n        }\n        counts.toList", " \
    \       val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   count += countVowels(s.charAt(i), vowels)\n            }\n        }\n    \
    \    return count\n    }\n\n    // Given a string s, count the number of vowels\
    \ in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n \
    \   // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"\
    dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                count +=\
    \ countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n\
    \    }\n\n    // Given a string s, count the number of vowels in even indices.\n\
    \    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    //\
    \ >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n\
    \    // (0l)\n    def countVowels(s : String) : Long = {\n        val vowels =\
    \ \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i),\
    \ vowels)\n            }\n        }\n        return count\n    }\n\n    // Given\
    \ a string s, return the number of times that the string s appears in the string\
    \ t.\n    // For example:\n    // >>> count(\"cat\", \"cat\")\n    // (1l)\n \
    \   // >>> count(\"cat\", \"dog\")\n    // (0l)\n    // >>> count(\"cat\", \"\
    catt\")", "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0L\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          if (s.charAt(i) == vowels[0]) {\n                    count += 1L\n\
    \                }\n            }\n        }\n        return count", "       \
    \ val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase()\
    \ == vowels[0]) {\n                    count += 1l\n                }\n      \
    \      }\n        }\n        return count", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val counts = mutable.LongBuffer[Long]\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)])\
    \ counts += 1\n        }\n        counts.toList", "        var vowels = 0l\n \
    \       for (i <- 0 until s.length) {\n            if (s[i].isUpper()) {\n   \
    \             vowels += 1l\n            }\n        }\n        return vowels",
  "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if\
    \ (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          for (j <- 0 until vowels.length) {\n                    if (s.charAt(i)\
    \ == vowels[j]) {\n                        result += 1L\n                    }\n\
    \                }\n            }\n        }\n        return result", "      \
    \  var count = 0l\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                if (s[i].toUpperCase() == \"A\") {\n            \
    \        count += 1\n                }\n            }\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\".toCharArray()\n        val result =\
    \ 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n \
    \               result += count(s.charAt(i) :> vowels)\n            }\n      \
    \  }\n        result", "        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray,\
    \ vowels)\n            }\n        }\n        return result", "        var i =\
    \ 0\n        var count = 0\n        while (i < s.length) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'U') {\n                count += 1\n            }\n         \
    \   i += 2\n        }\n        return count", "        val sb = new StringBuilder()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          sb.append(s.charAt(i))\n            }\n        }\n        return (sb.toString().count(\"\
    A\") + sb.toString().count(\"E\") + sb.toString().count(\"I\") + sb.toString().count(\"\
    O\") + sb.toString().count(\"U\"))", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n       \
    \     }\n        }\n        count\n    }\n\n    // Counts the number of vowels\
    \ in the substring of s starting at index i and\n    // ending at index j.\n \
    \   def countVowels(s : String, i : Int, vowels : Array[Char]) : Int = {\n   \
    \     val count = 0\n        for (j <- i until s.length) {\n            if (s[j]\
    \ == vowels[0]) {\n                count += 1\n            }\n        }\n    \
    \    count\n    }\n\n    // Given a string s, return the number of times that\
    \ the substring \"ab\"\n    // occurs in s.\n    // For example:\n    // >>> countAB(\"\
    aababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
  "        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count\
    \ += countVowels(s.substring(i, i + 1), vowels)\n            }\n        }\n  \
    \      return count\n    }\n\n    // Given a string s, count the number of vowels\
    \ in odd indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n\
    \    // (1l)\n    // >>> countVowels((\"abcdefg\"))\n    // (0l)\n    // >>> countVowels((\"\
    dBBE\"))\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                count +=\
    \ countVowels(s.substring(i, i + 1), vowels)\n            }\n        }\n     \
    \   return count\n    }\n\n    // Given a string s, count the number of vowels\
    \ in even indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n\
    \    // (1l)\n    // >>> countVowels((\"abcdefg\"))\n    // (0l)\n    // >>> countVowels((\"\
    dBBE\"))\n    // (0l)\n    def countVowels(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                count +=\
    \ countVowels(s.substring(i, i + 1), vowels)\n            }\n        }\n     \
    \   return count\n    }\n\n    // Given a string s, count the number of vowels\
    \ in odd indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n\
    \    // (1l)\n    // >>> countVowels((\"abcdef", "        val vowels = \"AEIOU\"\
    .toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n\
    \            }\n        }\n        count\n    }\n\n    // Counts the number of\
    \ vowels in the string starting at index i and\n    // ending at index j.\n  \
    \  def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n      \
    \  val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j)\
    \ == vowels[0]) {\n                count += 1\n            }\n        }\n    \
    \    count", "        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(vowels, s[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"\
    ))\n    // (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    //\
    \ >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String)\
    \ : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n\
    \                result += count(vowels, s[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Given a string s, count the number of lowercase\
    \ vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"\
    ))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>>\
    \ countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long =\
    \ {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n \
    \       for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n       \
    \         result += count(vowels, s[i])\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of lowercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n\
    \    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>>\
    \ countLowerOdd((\"dBBE\"))\n    ", "        val sb = new StringBuilder()\n  \
    \      for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n        \
    \        sb.append(s.charAt(i))\n            } else {\n                if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'U') {\n                    sb.append(s.charAt(i))\n        \
    \        }\n            }\n        }\n        val res = sb.toString().length()\n\
    \        res", "        val vowels = \"AEIOU\".toCharArray()\n        val count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                if (s.charAt(i) == vowels[0]) count += 1\n            }\n   \
    \     }\n        return count", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n\
    \            }\n        }\n        count\n    }\n\n    // Given a string s, count\
    \ the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"\
    aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n   \
    \ // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) :\
    \ Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n\
    \        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n      \
    \          count += countVowels(s.charAt(i), vowels)\n            }\n        }\n\
    \        count\n    }\n\n    // Given a string s, return a string of the form\
    \ \"a\", \"ab\", \"abc\", ...\n    // For example:\n    // >>> buildString(\"\
    a\")\n    // \"a\"\n    // >>> buildString(\"ab\")\n    // \"ab\"\n    // >>>\
    \ buildString(\"abc\")\n    // \"abc\"\n    // >>> buildString(\"abcd\")\n   \
    \ // \"abcd\"\n    def buildString(s : String) : String = {\n        val vowels\
    \ = \"AEIOU\".toCharArray\n        val result = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += s.charAt(i)\n\
    \            } else {\n                result += vowels[countVowels(s.charAt(i),\
    \ vowels)]\n            }\n        }\n        result\n    }\n\n    // Given a\
    \ string s, return a string of the form \"A\", \"AB\", \"ABC\", ...\n    // For\
    \ example:\n    // >>> buildStringUpper(\"a\")\n    // \"A\"\n    // >>> buildStringUpper(\"\
    ab\")\n    ", "        val vowels = \"AEIOU\".toCharArray()\n        val counts\
    \ = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i) - 'A'] != 0) counts\
    \ += 1\n        }\n        counts.toList", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) counts += 1\n            if (s.charAt(i) == vowels[0])\
    \ counts += 1\n        }\n        return counts.toList.length", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels,\
    \ s[i])\n            }\n        }\n        return result", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i)\
    \ :> vowels)\n            }\n        }\n        return result", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                count += 1l\n  \
    \              if (s.charAt(i) == vowels[0]) count += 1l\n            }\n    \
    \    }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n          \
    \          count += 1l\n                }\n            }\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\".toCharArray()\n        val result =\
    \ 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n \
    \               result += count(s.charAt(i) :> vowels)\n            }\n      \
    \  }\n        return result", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Given a string\
    \ s, count the number of vowels in odd indices.\n    // For example:\n    // >>>\
    \ countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n\
    \    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2\
    \ == 1) {\n                count += countVowels(s.charAt(i), vowels)\n       \
    \     }\n        }\n        return count\n    }\n\n    // Given a string s, return\
    \ the number of times that the substring \"xyz\" occurs in s.\n    // For example:\n\
    \    // >>> countXYZ(\"abcxyzabc\")\n    // (1l)\n    // >>> countXYZ(\"abcabc\"\
    )\n    // (0l)\n    // >>> countXYZ(\"abcdabc\")\n    // (0l)\n    def countXYZ(s\
    \ : String) : Long = {\n        val xyz = \"xyz\".toCharArray()\n        val count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (s.substring(i,\
    \ i + 3).equals(xyz)) {\n                count += 1\n            }\n        }\n\
    \        return count\n    }\n\n    // Given a string s, return the number of\
    \ times that the substring \"xyz\" occurs in s.\n    // For example:\n    // >>>\
    \ countXYZ(\"abcxyzabc\")\n    // (1l)\n    // >>> countXYZ(\"abcabc\")\n    //\
    \ (0l)\n    // >>> countXYZ(\"abcd", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n\
    \        }\n        return result\n    }\n\n    // Given a string s, count the\
    \ number of uppercase vowels in odd indices.\n    // For example:\n    // >>>\
    \ countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n\
    \    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(vowels, s[i])\n            }\n  \
    \      }\n        return result\n    }\n\n    // Given a string s, return a new\
    \ string where all the lowercase letters have been\n    // exchanged with the\
    \ uppercase equivalent.\n    // For example:\n    // >>> upper((\"aBcDeFgHij\"\
    ))\n    // (\"ABCDEFGHIJ\")\n    // >>> upper((\"abcdefghij\"))\n    // (\"ABCDEFGHIJ\"\
    )\n    // >>> upper((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n    def upper(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = \"\"\n        for (i <- 0 until s.length) {\n          \
    \  if (i % 2 == 0) {\n                result += s[i].toUpperCase()\n         \
    \   } else {\n                result += vowels[s[i].toUpperCase() - 'A']\n   \
    \         }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, return a new string where all the lowercase letters have been\n    // exchanged\
    \ with the upperc", "        val vowels = \"AEIOU\"\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels.contains(s.charAt(i))) counts += 1\n        }\n  \
    \      counts.toList", "        val vowels = \"AEIOU\".toCharArray\n        val\
    \ count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count\
    \ += 1\n                }\n            }\n        }\n        count", "       \
    \ val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    //\
    \ (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countUpperOdd((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                result +=\
    \ count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, return the number of times that the string\
    \ s occurs in the string t.\n    // For example:\n    // >>> count((\"aBCdEf\"\
    ), (\"aBCdEf\"))\n    // (1l)\n    // >>> count((\"aBCdEf\"), (\"abcdefg\"))\n\
    \    // (0l)\n    // >>> count((\"aBCdEf\"), (\"abcd\"))\n    // (0l)\n    def\
    \ count(s : String, t : String) : Long = {\n        val result = 0L\n        for\
    \ (i <- 0 until t.length) {\n            if (s.equals(t.substring(i, i + s.length)))\
    \ {\n                result += 1\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, return the number of times that the substring\
    \ s occurs in the string t.\n    // For example:\n    // >>> countSubstring(\"\
    aBCdEf\", \"aBCdEf\")\n    // (1l)\n    // >>> countSubstring(\"aBCd", "     \
    \   val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(s.charAt(i), vowels)\n            }\n        }\n        return result",
  "        var i = 0\n        var count = 0\n        while (i < s.length) {\n    \
    \        if (s[i].isUpper()) {\n                count += 1\n            }\n  \
    \          i += 2\n        }\n        return count", "        var vowels = \"\
    AEIOU\".toCharArray()\n        var count = 0l\n        for (var i = 0; i < s.length();\
    \ i += 2) {\n            if (s.charAt(i) == vowels[0]) count += 1l\n        }\n\
    \        return count", "        var count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() ==\
    \ \"A\") {\n                    count += 1\n                }\n            }\n\
    \        }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n     \
    \       }\n        }\n        return result\n    }\n\n    // Given a string s,\
    \ count the number of uppercase vowels in odd indices.\n    // For example:\n\
    \    // >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"\
    abcdefg\"))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n\
    \    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\"\
    .toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n\
    \            if (i % 2 == 1) {\n                result += count(vowels, s.charAt(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, count the number of lowercase vowels in even indices.\n    // For example:\n\
    \    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (1l)\n    def countLower(s\
    \ : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(vowels, s.charAt(i))\n          \
    \  }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of lowercase vowels in odd indices.\n    // For example:\n    //\
    \ >>> countLowerOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countLowerOdd((\"abcdefg\"\
    ))\n    // (0l)\n    // >>> countLower", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n     \
    \       }\n        }\n        return result", "        val s2 = s.toLowerCase\n\
    \        val vowels = \"aeiou\".toCharArray\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if\
    \ (s2.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\".toCharArray()\n        val counts =\
    \ mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n\
    \        }\n        counts.toList", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n       \
    \     }\n        }\n        count\n    }\n\n    // Counts the number of vowels\
    \ in the string s starting at index i and\n    // ending at index j.\n    def\
    \ countVowels(s : String, i : Int, vowels : Array[Char]) : Int = {\n        val\
    \ count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j)\
    \ == vowels[0]) {\n                count += 1\n            }\n        }\n    \
    \    count\n    }\n\n    // Counts the number of vowels in the string s starting\
    \ at index i and\n    // ending at index j.\n    def countVowels(s : String, i\
    \ : Int, j : Int) : Int = {\n        val count = 0\n        for (k <- i until\
    \ j) {\n            if (s.charAt(k) == \"AEIOU\".charAt(0)) {\n              \
    \  count += 1\n            }\n        }\n        count\n    }\n\n    // Counts\
    \ the number of vowels in the string s starting at index i and\n    // ending\
    \ at index j.\n    def countVowels(s : String, i : Int, j : Int, vowels : Array[Char])\
    \ : Int = {\n        val count = 0\n        for (k <- i until j) {\n         \
    \   if (s.charAt(k) == vowels[0]) {\n                count += 1\n            }\n\
    \        }\n        count\n    }\n\n    // Counts the number of vowels in the\
    \ string s starting at index i and\n    // ending at index j.\n    def countVowels(s\
    \ : String, i : Int, j : Int, vowels : Array[Char], vowels2 : Array[Char]) : Int\
    \ = {\n        val count = 0\n        for (k <- i until j) {\n            if (s.charAt(k)\
    \ == vowels[0] || s.charAt(k) == vowels2[", "        var count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if\
    \ (s[i].toUpperCase() == \"A\") {\n                    count += 1l\n         \
    \       }\n            }\n        }\n        return count", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels,\
    \ s.charAt(i))\n            }\n        }\n        return result", "        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                result +=\
    \ count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n\
    \        return result", "        val vowels = \"AEIOU\".toCharArray()\n     \
    \   val result = 0L\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n        \
    \    }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of uppercase vowels in odd indices.\n    // For example:\n    //\
    \ >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(vowels, s.charAt(i))\n          \
    \  }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of lowercase vowels in even indices.\n    // For example:\n    //\
    \ >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"\
    ))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s\
    \ : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(vowels, s.charAt(i))\n          \
    \  }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of lowercase vowels in odd indices.\n    // For example:\n    //\
    \ >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countLower", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray,\
    \ vowels)\n            }\n        }\n        return result", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n     \
    \   for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n \
    \           if (s[i] == vowels[0]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.charAt(i), vowels)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of uppercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n\
    \    // (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>>\
    \ countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) :\
    \ Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result =\
    \ 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n \
    \               result += count(s.charAt(i), vowels)\n            }\n        }\n\
    \        return result\n    }\n\n    // Given a string s, count the number of\
    \ lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"\
    aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n \
    \   // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String)\
    \ : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(s.charAt(i), vowels)\n            }\n       \
    \ }\n        return result\n    }\n\n    // Given a string s, count the number\
    \ of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"\
    aBCdEf\"))\n    // (1l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (0l)\n\
    \    // >>> countLowerOdd(", "        val vowels = \"AEIOU\".toCharArray\n   \
    \     val vowelsCount = 0\n        for (i <- 0 until s.length) {\n           \
    \ if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n       \
    \             vowelsCount += 1\n                }\n            }\n        }\n\
    \        vowelsCount", "        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(vowels, s[i])\n            }\n  \
    \      }\n        return result\n    }\n\n    // Given a string s, count the number\
    \ of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"\
    aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n \
    \   // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String)\
    \ : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n\
    \                result += count(vowels, s[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Given a string s, return a string where all\
    \ the lowercase letters are\n    // replaced with their uppercase equivalent.\n\
    \    // For example:\n    // >>> upper((\"aBcDeFg\"))\n    // (\"ABCDEFg\")\n\
    \    // >>> upper((\"abcdefg\"))\n    // (\"ABCDEFg\")\n    // >>> upper((\"abc\"\
    ))\n    // (\"ABC\")\n    def upper(s : String) : String = {\n        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += s[i].toUpperCase()\n\
    \            } else {\n                result += s[i]\n            }\n       \
    \ }\n        return result\n    }\n\n    // Given a string s, return a string\
    \ where all the lowercase letters are\n    // replaced with their uppercase equivalent.\n\
    \    // For example:\n    // >>> upper((\"aBcDeFg\"))\n    // (\"ABCDEFg\")\n\
    \    // >>> upper((\"abcdefg\"))\n    // (\"ABCDEF", "        val sb = new StringBuilder()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          sb.append(s.charAt(i))\n            } else {\n                if (s.charAt(i)\
    \ >= 'A' && s.charAt(i) <= 'Z') {\n                    sb.append(s.charAt(i))\n\
    \                }\n            }\n        }\n        val result = sb.toString().length()\n\
    \        if (result == 0) {\n            result = 0\n        } else {\n      \
    \      result = 1\n        }\n        result", "        var i = 0\n        var\
    \ count = 0\n        while (i < s.length) {\n            if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U') {\n                count += 1\n            }\n            i += 2\n \
    \       }\n        return count", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val vowels_count = 0\n        for (i <- 0 until s.length) {\n       \
    \     if (s[i] == vowels[0]) {\n                vowels_count += 1\n          \
    \  }\n            if (i % 2 == 0) {\n                vowels_count += 1\n     \
    \       }\n        }\n        vowels_count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n\
    \        }\n        return result\n    }\n\n    // Given a string s, count the\
    \ number of uppercase vowels in odd indices.\n    // For example:\n    // >>>\
    \ countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n\
    \    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(vowels, s[i])\n            }\n  \
    \      }\n        return result\n    }\n\n    // Given a string s, count the number\
    \ of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"\
    aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n \
    \   // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String)\
    \ : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(vowels, s[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Given a string s, count the number of lowercase\
    \ vowels in odd indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"\
    ))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>>\
    \ countLower((\"dBBE\"))\n    // (1l)\n    def countLowerOdd", "        var count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                if (s.charAt(i) == \"A\" || s.charAt(i) == \"E\" || s.charAt(i)\
    \ == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"U\") {\n              \
    \      count += 1l\n                }\n            }\n        }\n        return\
    \ count", "        var vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n\
    \        for (var i = 0; i < s.length(); i += 2) {\n            if (s.charAt(i)\
    \ == vowels[0]) {\n                count += 1l\n            }\n        }\n   \
    \     return count", "        val vowels = \"AEIOU\".toCharArray()\n        val\
    \ count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                count += countVowels(s, i, vowels)\n            }\n  \
    \      }\n        return count\n    }\n\n    // Counts the number of vowels in\
    \ the string s starting at index i and\n    // ending at index j.\n    def countVowels(s\
    \ : String, i : Int, vowels : CharArray) : Int = {\n        val count = 0\n  \
    \      for (j <- i until s.length) {\n            if (s[j] == vowels[0]) {\n \
    \               count += 1\n            }\n        }\n        return count", " \
    \       val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n     \
    \   return count", "        val vowels = \"AEIOU\".toCharArray()\n        val\
    \ result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, count the number of uppercase vowels in odd indices.\n    // For example:\n\
    \    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(s.substring(i, i + 1).toCharArray,\
    \ vowels)\n            }\n        }\n        return result\n    }\n\n    // Given\
    \ a string s, count the number of lowercase vowels in even indices.\n    // For\
    \ example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"\
    abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n   \
    \ def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray,\
    \ vowels)\n            }\n        }\n        return result\n    }\n\n    // Given\
    \ a string s, count the number of lowercase vowels in odd indices.\n    // For\
    \ example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"\
    abcdefg\"))\n    ", "        val sb = new StringBuilder()\n        for (i <- 0\
    \ until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n\
    \            }\n        }\n        val vowels = \"AEIOU\".toCharArray()\n    \
    \    for (i <- 0 until vowels.length) {\n            if (sb.indexOf(vowels[i])\
    \ != -1) {\n                return 1l\n            }\n        }\n        return\
    \ 0l", "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          result += count(s.substring(i, i + 1).toCharArray(), vowels)\n    \
    \        }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray\n        val vowelsCount = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                vowelsCount += count(vowels,\
    \ s.charAt(i))\n            }\n        }\n        vowelsCount", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i),\
    \ vowels)\n            }\n        }\n        return result\n    }\n\n    // Given\
    \ a string s, count the number of uppercase vowels in odd indices.\n    // For\
    \ example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"\
    abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n   \
    \ def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 1 until s.length) {\n            if\
    \ (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n     \
    \       }\n        }\n        return result\n    }\n\n    // Given a string s,\
    \ return the number of times that the string s occurs in the string t.\n    //\
    \ For example:\n    // >>> count(\"cat\", \"cat\")\n    // (2l)\n    // >>> count(\"\
    cat\", \"dog\")\n    // (0l)\n    def count(s : String, t : String) : Long = {\n\
    \        val result = 0L\n        for (i <- 0 until t.length) {\n            if\
    \ (t.charAt(i) == s.charAt(0)) {\n                result += 1\n            }\n\
    \        }\n        return result\n    }\n\n    // Given a string s, return the\
    \ number of times that the string s occurs in the string t.\n    // For example:\n\
    \    // >>> count(\"cat\", \"cat\")\n    // (2l)\n    // >>> count(\"cat\", \"\
    dog\")\n    // (0l)\n    def count2(s : String, t : String) : Long = {\n     \
    \   val result = 0L\n        for (i <- 0 until t.length) {\n            if (t.charAt(i)\
    \ == s.char", "        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(s.charAt(i), vowels)\n            }\n       \
    \ }\n        return result", "        val vowels = \"AEIOU\".toCharArray()\n \
    \       val vowels_count = 0l\n        for (i <- 0 until s.length) {\n       \
    \     if (s.charAt(i) == vowels[0]) {\n                vowels_count += 1l\n  \
    \          }\n        }\n        return vowels_count", "        val vowels = \"\
    AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n       \
    \     if (vowels[s[i]]) counts += 1\n        }\n        counts.toList", "    \
    \    val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count\
    \ += (s.charAt(i) == vowels[0]) ? 1 : 0\n            }\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count\
    \ += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return\
    \ count\n    }\n\n    // Counts the number of vowels in the given character.\n\
    \    // Returns 0 if the character is not a vowel.\n    def countVowels(c : Char,\
    \ vowels : CharArray) : Int = {\n        if (vowels.indexOf(c) >= 0) {\n     \
    \       return 1\n        } else {\n            return 0\n        }", "      \
    \  val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i)\
    \ == vowels[0]) {\n                    count += 1l\n                }\n      \
    \      }\n        }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)])\
    \ counts += 1\n        }\n        counts.toList", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0])\
    \ {\n                    count += 1l\n                }\n            }\n     \
    \   }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Counts the number\
    \ of vowels in the given char.\n    // For example:\n    // >>> countVowels('a',\
    \ \"AEIOU\")\n    // (1l)\n    // >>> countVowels('b', \"AEIOU\")\n    // (0l)\n\
    \    // >>> countVowels('c', \"AEIOU\")\n    // (0l)\n    def countVowels(c :\
    \ Char, vowels : CharArray) : Long = {\n        val count = 0l\n        for (i\
    \ <- 0 until vowels.length) {\n            if (vowels[i] == c) {\n           \
    \     count += 1\n            }\n        }\n        return count", "        val\
    \ vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = 0\n        val count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                if (s.charAt(i) == vowels[vowelsIndex]) {\n                 \
    \   count += 1l\n                }\n                vowelsIndex += 1\n       \
    \         if (vowelsIndex == vowels.length) {\n                    vowelsIndex\
    \ = 0\n                }\n            }\n        }\n        return count", " \
    \       val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n      \
    \  for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n            \
    \    result += count(s.charAt(i) :> vowels)\n            }\n        }\n      \
    \  return result", "        var result = 0L\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                result += countVowels(s.substring(i,\
    \ i + 1))\n            }\n        }\n        return result\n    }\n\n    // Given\
    \ a string s, count the number of vowels in odd indices.\n    // For example:\n\
    \    // >>> countVowels((\"aBCdEf\"))\n    // (1l)\n    // >>> countVowels((\"\
    abcdefg\"))\n    // (3l)\n    // >>> countVowels((\"dBBE\"))\n    // (1l)\n  \
    \  def countVowels(s : String) : Long = {\n        var result = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 1) {\n                result\
    \ += countVowels(s.substring(i, i + 1))\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, return the number of vowels in the\
    \ string.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (3l)\n\
    \    // >>> countVowels(\"abcdefg\")\n    // (6l)\n    // >>> countVowels(\"dBBE\"\
    )\n    // (2l)\n    def countVowels(s : String) : Long = {\n        var result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) ==\
    \ \"A\" || s.charAt(i) == \"E\" || s.charAt(i) == \"I\" || s.charAt(i) == \"O\"\
    \ || s.charAt(i) == \"U\") {\n                result += 1\n            }\n   \
    \     }\n        return result\n    }\n\n    // Given a string s, return the number\
    \ of consonants in the string.\n    // For example:\n    // >>> countConsonants(\"\
    aBCdEf\")\n    // (3l)\n    // >>> countConsonants(\"abcdefg\")\n    // (7l)\n\
    \    // >>> countConsonants(\"dBBE\")", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n\
    \        }\n        return result\n    }\n\n    // Given a string s, count the\
    \ number of uppercase vowels in odd indices.\n    // For example:\n    // >>>\
    \ countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n\
    \    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(vowels, s[i])\n            }\n  \
    \      }\n        return result\n    }\n\n    // Given a string s, return the\
    \ number of times that the string s occurs in the string t.\n    // For example:\n\
    \    // >>> count(\"cat\", \"cat\")\n    // (2l)\n    // >>> count(\"cat\", \"\
    dog\")\n    // (0l)\n    def count(s : String, t : String) : Long = {\n      \
    \  val result = 0L\n        for (i <- 0 until t.length) {\n            if (t[i]\
    \ == s[0]) {\n                result += 1\n                for (j <- 1 until s.length)\
    \ {\n                    if (t[i + j] != s[j]) {\n                        break\n\
    \                    } else {\n                        result += 1\n         \
    \           }\n                }\n            }\n        }\n        return result",
  "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if\
    \ (s.charAt(i) == vowels[0]) {\n                    count += 1l\n            \
    \    }\n            }\n        }\n        return count", "        val sb = new\
    \ StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) sb.append(s.charAt(i))\n            else if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') sb.append(s.charAt(i))\n\
    \        }\n        val result = sb.toString().length()\n        if (result %\
    \ 2 == 0) result / 2\n        else result / 2 + 1\n        result", "        val\
    \ vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i)\
    \ == vowels[0]) {\n                    count += 1\n                }\n       \
    \     }\n        }\n        return count", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n \
    \           }\n        }\n        return count", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n\
    \            }\n        }\n        return result", "        var count = 0l\n \
    \       for (i <- 0 until s.length) {\n            if (s.charAt(i).isUpper())\
    \ {\n                count += 1\n            }\n        }\n        return count",
  "        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' ||\
    \ s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n        \
    \            count += 1l\n                }\n            }\n        }\n      \
    \  return count", "        val vowels = \"AEIOU\".toCharArray()\n        val count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                count += 1l\n            }\n            if (s[i] == vowels[0])\
    \ {\n                count += 1l\n            }\n        }\n        return count",
  "        var vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for\
    \ (var i = 0; i < s.length(); i += 2) {\n            if (s.charAt(i) == vowels[0])\
    \ {\n                count += 1l\n            }\n        }\n        return count",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(vowels, s.charAt(i))\n            }\n        }\n        return\
    \ result", "        val vowels = \"AEIOU\".toCharArray()\n        val result =\
    \ 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n \
    \               result += count(vowels, s.charAt(i))\n            }\n        }\n\
    \        return result\n    }\n\n    // Given a string s, return a string of the\
    \ form \"a\", \"ab\", \"abc\", ...\n    // where each a is the first letter of\
    \ s.\n    // For example:\n    // >>> firstLetter(\"Hello\")\n    // \"H\"\n \
    \   // >>> firstLetter(\"abc\")\n    // \"a\"\n    // >>> firstLetter(\"abcd\"\
    )\n    // \"ab\"\n    def firstLetter(s : String) : String = {\n        val result\
    \ = \"\"\n        for (i <- 0 until s.length) {\n            result += s.charAt(i)\n\
    \        }\n        return result\n    }\n\n    // Given a string s, return a\
    \ string of the form \"a\", \"ab\", \"abc\", ...\n    // where each a is the last\
    \ letter of s.\n    // For example:\n    // >>> lastLetter(\"Hello\")\n    //\
    \ \"o\"\n    // >>> lastLetter(\"abc\")\n    // \"c\"\n    // >>> lastLetter(\"\
    abcd\")\n    // \"d\"\n    def lastLetter(s : String) : String = {\n        val\
    \ result = \"\"\n        for (i <- 0 until s.length) {\n            result +=\
    \ s.charAt(s.length - 1 - i)\n        }\n        return result\n    }\n\n    //\
    \ Given a string s, return a string of the form \"a\", \"ab\", \"abc\", ...\n\
    \    // where each a is the first letter of s.\n    // For example:\n    // >>>\
    \ firstLetter(\"Hello\")\n    // \"H\"\n    // >>> firstLetter(\"abc\")\n    //\
    \ \"a\"\n    // >>> firstLetter(\"abcd\")\n    // \"ab\"\n    def firstLetter2(s\
    \ : String) : String = {\n        val result = \"\"\n        for (i <- 0 until\
    \ s.length) {\n            result += s.charAt(i)\n        }\n        return result\n\
    \    }\n\n", "        val vowels = \"AEIOU\".toCharArray\n        val count =\
    \ 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n \
    \               if (s.charAt(i) == vowels[0]) {\n                    count +=\
    \ 1l\n                }\n            }\n        }\n        return count", "  \
    \      val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.charAt(i) :> vowels)\n            }\n        }\n       \
    \ return result", "        val vowels = \"AEIOU\".toCharArray\n        val count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                count += countVowels(s.charAt(i), vowels)\n            }\n  \
    \      }\n        count\n    }\n\n    // Counts the number of vowels in the string\
    \ s.\n    // Returns the number of vowels.\n    def countVowels(c : Char, vowels\
    \ : CharArray) : Long = {\n        for (vowel <- 0 until vowels.length) {\n  \
    \          if (vowels[vowel] == c) {\n                1l\n            }\n    \
    \    }\n        0l\n    }\n\n    // Given a string s, return the string made of\
    \ the first and last chars.\n    // For example:\n    // >>> firstAndLast(\"Hello\"\
    )\n    // \"Hl\"\n    // >>> firstAndLast(\"\")\n    // \"\"\n    // >>> firstAndLast(\"\
    a\")\n    // \"a\"\n    def firstAndLast(s : String) : String = {\n        s.substring(0,\
    \ 1) + s.substring(s.length - 1, s.length)\n    }\n\n    // Given a string s,\
    \ return a string made of every second char starting at the beginning.\n    //\
    \ For example:\n    // >>> secondChars(\"Hello\")\n    // \"el\"\n    // >>> secondChars(\"\
    \")\n    // \"\"\n    // >>> secondChars(\"a\")\n    // \"a\"\n    def secondChars(s\
    \ : String) : String = {\n        s.substring(1, s.length)\n    }\n\n    // Given\
    \ a string s, return a string made of every second char starting at the end.\n\
    \    // For example:\n    // >>> secondChars(\"Hello\")\n    // \"lo\"\n    //\
    \ >>> secondChars(\"\")\n    // \"\"\n    // >>> secondChars(\"a\")\n    // \"\
    a\"\n    def secondLastChars(s : String) : String = {\n        s.substring(0,\
    \ s.length - 1)\n    }\n\n    // Given a string s, return the string made of every\
    \ char repeated", "        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += 1L\n            } else {\n                result +=\
    \ count(vowels, s.charAt(i))\n            }\n        }\n        return result",
  "        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(vowels, s.charAt(i))\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of uppercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n\
    \    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                result +=\
    \ count(vowels, s.charAt(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of lowercase vowels in even\
    \ indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n\
    \    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"\
    dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                result +=\
    \ count(vowels, s.charAt(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of lowercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"\
    dBBE\"))\n    // (1", "        val vowels = \"AEIOU\".toCharArray()\n        val\
    \ result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                result += count(vowels, s[i])\n            }\n       \
    \ }\n        return result\n    }\n\n    // Given a string s, count the number\
    \ of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"\
    aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n \
    \   // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String)\
    \ : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n\
    \                result += count(vowels, s[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"\
    ))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>>\
    \ countUpper((\"dBBE\"))\n    // (0l)\n    def countUpperEven(s : String) : Long\
    \ = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n\
    \        for (i <- 2 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          result += count(vowels, s[i])\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of uppercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n\
    \    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (", "        val vowels = \"AEIOU\".toCharArray()\n        val\
    \ count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count\
    \ += 1l\n                }\n            }\n        }\n        return count", " \
    \       val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   count += countVowels(s.charAt(i), vowels)\n            }\n        }\n    \
    \    return count\n    }\n\n    // Counts the number of vowels in the given character.\n\
    \    // Returns 0 if the character is not a vowel.\n    def countVowels(c : Char,\
    \ vowels : Array[Char]) : Int = {\n        if (c == vowels[0]) {\n           \
    \ return 1\n        } else {\n            return 0\n        }", "        val vowels\
    \ = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                if (s[i] == vowels[0]) count\
    \ += 1\n            }\n        }\n        return count", "        val vowels =\
    \ \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                if (s[i] == vowels[0]) count\
    \ += 1\n            }\n        }\n        return count", "        val vowels =\
    \ \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels,\
    \ s[i])\n            }\n        }\n        return result", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i),\
    \ vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string\
    \ s, count the number of vowels in odd indices.\n    // For example:\n    // >>>\
    \ countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n\
    \    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2\
    \ == 1) {\n                count += countVowels(s.charAt(i), vowels)\n       \
    \     }\n        }\n        count\n    }\n\n    // Given a string s, count the\
    \ number of vowels in even indices.\n    // For example:\n    // >>> countVowels(\"\
    aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n   \
    \ // >>> countVowels(\"dBBE\")\n    // (0l)\n    def countVowels(s : String) :\
    \ Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count =\
    \ 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n \
    \               count += countVowels(s.charAt(i), vowels)\n            }\n   \
    \     }\n        count\n    }\n\n    // Given a string s, count the number of\
    \ vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\"\
    )\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"\
    dBBE\")\n    ", "        val vowels = \"AEIOU\".toCharArray()\n        val counts\
    \ = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n\
    \        }\n        counts.toList", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n     \
    \       }\n        }\n        return result\n    }\n\n    // Given a string s,\
    \ return the number of times that the string s occurs in the string t.\n    //\
    \ For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (1l)\n  \
    \  // >>> count((\"aBCdEf\"), (\"abcdEf\"))\n    // (0l)\n    // >>> count((\"\
    aBCdEf\"), (\"abcdeF\"))\n    // (0l)\n    def count(s : String, t : String) :\
    \ Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n \
    \           if (t.charAt(i) == s.charAt(0)) {\n                result += 1\n \
    \               for (j <- 1 until s.length) {\n                    if (t.charAt(i\
    \ + j) != s.charAt(j)) {\n                        break\n                    }\
    \ else {\n                        result += 1\n                    }\n       \
    \         }\n            }\n        }\n        return result", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels,\
    \ s.charAt(i))\n            }\n        }\n        return result", "        val\
    \ vowels = \"AEIOU\"\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s[i].toUpperCase() == vowels[i % vowels.length]) {\n    \
    \            count += 1\n            }\n        }\n        count", "        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                result +=\
    \ count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                result +=\
    \ count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, return a new string where all the lowercase\
    \ letters have been\n    // exchanged with the uppercase equivalent.\n    // For\
    \ example:\n    // >>> upper((\"aBcDeFgHjKl\"))\n    // (\"ABCDEFGHJKL\")\n  \
    \  // >>> upper((\"abcdefghijkl\"))\n    // (\"ABCDEFGHIJKL\")\n    // >>> upper((\"\
    dbe\"))\n    // (\"DBE\")\n    def upper(s : String) : String = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = \"\"\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += s.charAt(i).toUpperCase()\n            } else {\n                result +=\
    \ s.charAt(i)\n            }\n        }\n        return result\n    }\n\n    //\
    \ Given a string s, return a new string where all the lowercase letters have been\n\
    \    // exchanged with the uppercase equivalent.\n    // For example:\n    //\
    \ >>> upper((\"aBcDe", "        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2\
    \ == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                 \
    \   count += 1l\n                }\n            }\n        }\n        return count",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n\
    \        }\n        return result", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Counts the number\
    \ of vowels in the given character.\n    // Returns 0 if the character is not\
    \ a vowel.\n    def countVowels(c : Char, vowels : CharArray) : Int = {\n    \
    \    for (i <- 0 until vowels.length) {\n            if (c == vowels[i]) {\n \
    \               return 1\n            }\n        }\n        return 0", "     \
    \   val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n       \
    \ }\n        return result\n    }\n\n    // Given a string s, count the number\
    \ of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"\
    aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n \
    \   // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String)\
    \ : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n\
    \                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, return the number of times that the string s occurs in the string t.\n  \
    \  // For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (2l)\n\
    \    // >>> count((\"aBCdEf\"), (\"abcdefg\"))\n    // (0l)\n    // >>> count((\"\
    aBCdEf\"), (\"abcd\"))\n    // (0l)\n    def count(s : String, t : String) : Long\
    \ = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n      \
    \      if (s.equals(t.substring(i, i + 1))) {\n                result += 1\n \
    \           }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, return the number of times that the string s occurs in the string t.\n  \
    \  // For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (2l)\n\
    \    // >>> count", "        val vowels = \"AEIOU\".toCharArray\n        val count\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                for (j <- 0 until vowels.length) {\n                    if (s.charAt(i)\
    \ == vowels[j]) {\n                        count += 1l\n                    }\n\
    \                }\n            }\n        }\n        return count", "       \
    \ val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    //\
    \ (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countUpperOdd((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                result +=\
    \ count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of lowercase vowels in even\
    \ indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"\
    dBBE\"))\n    // (1l)\n    def countLower(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                result +=\
    \ count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of lowercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    //\
    \ (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countLowerOdd(",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.charAt(i), vowels)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of uppercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n\
    \    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                result +=\
    \ count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in even\
    \ indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n\
    \    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (0l)\n    def countUpperEven(s : String) : Long = {\n       \
    \ val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i\
    \ <- 2 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dB", "        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n  \
    \      for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n        \
    \        result += count(s.substring(i, i + 1).toCharArray, vowels)\n        \
    \    }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of uppercase vowels in odd indices.\n    // For example:\n    //\
    \ >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"\
    ))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val\
    \ result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 ==\
    \ 1) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, count the number of uppercase vowels in even indices.\n    // For example:\n\
    \    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"\
    ))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperEven(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val\
    \ result = 0L\n        for (i <- 2 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, count the number of uppercase vowels in odd indices.\n    // For example:\n\
    \    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"",
  "        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels[s[i]]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(vowels, s.charAt(i))\n            }\n        }\n        return result",
  "        val s2 = s.toLowerCase\n        val vowels = \"aeiou\".toCharArray\n  \
    \      val count = 0l\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0) {\n                for (j <- 0 until vowels.length) {\n          \
    \          if (s2.charAt(i) == vowels[j]) {\n                        count +=\
    \ 1l\n                    }\n                }\n            }\n        }\n   \
    \     return count", "        val sb = new StringBuilder()\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n\
    \            } else {\n                if (s.charAt(i) == 'A' || s.charAt(i) ==\
    \ 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n \
    \                   sb.append(1l)\n                } else {\n                \
    \    sb.append(0l)\n                }\n            }\n        }\n        return\
    \ sb.toString()", "        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(s.substring(i, i + 1).toCharArray, vowels)\n\
    \            }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray\n        val counts = mutable.LongBuffer[Long]\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) counts.update(vowels.indexOf(s.charAt(i)))\n\
    \        }\n        return counts.toList.length", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Counts the number\
    \ of vowels in the substring of s starting at index i and\n    // ending at index\
    \ j.\n    def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n\
    \        val count = 0\n        for (j <- i until s.length) {\n            if\
    \ (s.charAt(j) == vowels[0]) {\n                count += 1\n            }\n  \
    \      }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n\
    \            }\n        }\n        return count\n    }\n\n    // Given a string\
    \ s, count the number of vowels in odd indices.\n    // For example:\n    // >>>\
    \ countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n\
    \    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2\
    \ == 1) {\n                count += countVowels(s.charAt(i), vowels)\n       \
    \     }\n        }\n        return count\n    }\n\n    // Given a string s, return\
    \ a string where all the vowels are moved to the\n    // front. For example:\n\
    \    // >>> moveVowels(\"aBCdEf\")\n    // \"efaCBD\"\n    // >>> moveVowels(\"\
    abcdefg\")\n    // \"gfedcb\"\n    // >>> moveVowels(\"dBBE\")\n    // \"BEADGB\"\
    \n    def moveVowels(s : String) : String = {\n        val vowels = \"AEIOU\"\
    .toCharArray()\n        val vowelsCount = countVowels(s)\n        val vowelsIndex\
    \ = 0\n        val vowelsIndexCount = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                vowelsIndexCount += 1l\n \
    \               if (vowelsIndexCount == vowelsCount) {\n                    vowelsIndex\
    \ += 1l\n                }\n            }\n            s = s.substring(0, i) +\
    \ s.charAt(i) + s.substring(i + 1)\n        }\n        ", "        val vowels\
    \ = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i),\
    \ vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string\
    \ s, count the number of vowels in odd indices.\n    // For example:\n    // >>>\
    \ countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n\
    \    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val\
    \ count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 ==\
    \ 1) {\n                count += countVowels(s.charAt(i), vowels)\n          \
    \  }\n        }\n        count\n    }\n\n    // Given a string s, count the number\
    \ of vowels in even indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\"\
    )\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"\
    dBBE\")\n    // (0l)\n    def countVowels(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0\
    \ until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i),\
    \ vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string\
    \ s, return the number of times that the string s occurs in the string t.\n  \
    \  // For example:\n    // >>> countOccurrences(\"aBCdEf\", \"aBCdEf\")\n    //\
    \ (1l)\n    // >>> countOccurrences(\"aBCdEf\", \"abcdefg\")\n    // (0", "  \
    \      val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = new IndexedSeq[vowels.length]\n\
    \        for (i <- 0 until vowels.length) {\n            vowelsIndex(i) = i\n\
    \        }\n        val result = 0L\n        for (i <- 0 until s.length) {\n \
    \           if (i % 2 == 0) {\n                result += count(s.charAt(i) ==\
    \ vowelsIndex(i))\n            }\n        }\n        return result", "       \
    \ val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts +=\
    \ 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        return\
    \ counts.toLong", "        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(s.charAt(i), vowels)\n            }\n       \
    \ }\n        return result", "        val vowels = \"AEIOU\".toCharArray()\n \
    \       val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n          \
    \          count += 1l\n                }\n            }\n        }\n        return\
    \ count", "        val s2 = s.toUpperCase()\n        val vowels = \"AEIOU\"\n\
    \        val count = 0l\n        for (i <- 0 until s2.length) {\n            if\
    \ (s2.charAt(i) == vowels.charAt(0)) {\n                count += 1l\n        \
    \    }\n        }\n        return count", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n          \
    \          count += 1\n                }\n            }\n        }\n        count",
  "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if\
    \ (s.charAt(i) == vowels[0]) {\n                    count += 1l\n            \
    \    }\n            }\n        }\n        return count", "        val vowels =\
    \ \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i)\
    \ :> vowels)\n            }\n        }\n        return result", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n     \
    \   for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n \
    \           if (s[i] == vowels[0]) counts += 1\n        }\n        return counts.toLong",
  "        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count\
    \ += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                count +=\
    \ countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n\
    \    }\n\n    // Given a string s, count the number of vowels in the string.\n\
    \    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (3l)\n    //\
    \ >>> countVowels(\"abcdefg\")\n    // (6l)\n    // >>> countVowels(\"dBBE\")\n\
    \    // (3l)\n    def countVowels(s : String) : Long = {\n        val vowels =\
    \ \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            count += countVowels(s.charAt(i), vowels)\n        }\n      \
    \  count\n    }\n\n    // Given a char c and a set of chars vowels, return the\
    \ number of vowels in c.\n    // For example:\n    // >>> countVowels('a', 'AEIOU')\n\
    \    // (0l)\n    // >>> countVowels('A', 'AEIOU')\n    // (1l)\n    // >>> countVowels('e',\
    \ 'AEI", "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n\
    \        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n      \
    \          result += count(vowels, s[i])\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of uppercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n\
    \    // (0l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (1l)\n    // >>>\
    \ countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) :\
    \ Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result =\
    \ 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n \
    \               result += count(vowels, s[i])\n            }\n        }\n    \
    \    return result\n    }\n\n    // Given a string s, count the number of lowercase\
    \ vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"\
    ))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>>\
    \ countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long =\
    \ {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n \
    \       for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n       \
    \         result += count(vowels, s[i])\n            }\n        }\n        return\
    \ result\n    }\n\n    // Given a string s, count the number of lowercase vowels\
    \ in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n\
    \    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>>\
    \ countLowerOdd((\"dBBE\"))\n    ", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n   \
    \         }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n\
    \            }\n        }\n        return result", "        val vowels = \"AEIOU\"\
    .toCharArray\n        val vowelsCount = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s.charAt(i) == vowels[0]) {\n                vowelsCount\
    \ += 1\n            }\n            if (i % 2 == 0) {\n                vowelsCount\
    \ += 1\n            }\n        }\n        vowelsCount", "        val vowels =\
    \ \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n   \
    \         if (s.charAt(i) == vowels[0]) counts += 1\n        }\n        counts.toList",
  "        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n       \
    \ for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n             \
    \   result += count(s.charAt(i), vowels)\n            }\n        }\n        return\
    \ result", "        val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex\
    \ = new HashSet[Long]\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0) {\n                vowelsIndex.add(i)\n            }\n        }\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (vowelsIndex.contains(i)) {\n                if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z') {\n                    count += 1l\n                }\n            }\n\
    \        }\n        return count", "        var vowels = 0l\n        for (i <-\
    \ 0 until s.length) {\n            if (s.charAt(i).isUpper()) {\n            \
    \    vowels += 1l\n            }\n        }\n        return vowels", "       \
    \ val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result\
    \ += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of uppercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"\
    dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val\
    \ vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 1 until s.length) {\n            if (i % 2 == 1) {\n                result +=\
    \ count(vowels, s.charAt(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of lowercase vowels in even\
    \ indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n\
    \    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"\
    dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <-\
    \ 0 until s.length) {\n            if (i % 2 == 0) {\n                result +=\
    \ count(vowels, s.charAt(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Given a string s, count the number of lowercase vowels in odd\
    \ indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n\
    \    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"\
    dBBE\"))\n    // (1", "        val vowels = \"AEIOU\".toCharArray\n        val\
    \ count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 ==\
    \ 0) {\n                if (vowels[s.charAt(i) - 'A'] == true) {\n           \
    \         count += 1\n                }\n            }\n        }\n        count",
  "        var vowels = \"AEIOU\".toCharArray\n        var count = 0l\n        for\
    \ (var i = 0; i < s.length(); i += 2) {\n            if (vowels[s.charAt(i) -\
    \ 'A'] != 0) {\n                count += 1l\n            }\n        }\n      \
    \  return count", "        var count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == 'A' ||\
    \ s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U') {\n                    count += 1\n                }\n            }\n\
    \        }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n          \
    \          count += 1l\n                }\n            }\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\"\n        val count = 0l\n        for\
    \ (i <- 0 until s.length) {\n            if (s[i].toUpperCase() == vowels[i %\
    \ vowels.length]) {\n                count += 1\n            }\n        }\n  \
    \      count", "        var count = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0) {\n                if (s.charAt(i) == \"A\" || s.charAt(i)\
    \ == \"E\" || s.charAt(i) == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"\
    U\") {\n                    count += 1\n                }\n            }\n   \
    \     }\n        return count", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                count += countUpper(s.substring(i, i + 1))\n\
    \            } else if (vowels[s.charAt(i)]) {\n                count += 1\n \
    \           }\n        }\n        count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n     \
    \       }\n        }\n        return result\n    }\n\n    // Given a string s,\
    \ count the number of uppercase vowels in odd indices.\n    // For example:\n\
    \    // >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"\
    abcdefg\"))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n\
    \    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\"\
    .toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n\
    \            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n\
    \            }\n        }\n        return result\n    }\n\n    // Given a string\
    \ s, count the number of lowercase vowels in even indices.\n    // For example:\n\
    \    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"\
    ))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s\
    \ : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                result += count(s.charAt(i), vowels)\n          \
    \  }\n        }\n        return result\n    }\n\n    // Given a string s, count\
    \ the number of lowercase vowels in odd indices.\n    // For example:\n    //\
    \ >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"\
    ))\n    // (1l)\n    // >>> countLowerOdd(", "        val vowels = \"AEIOU\".toCharArray\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n          \
    \          count += 1\n                }\n            }\n        }\n        count",
  "        var vowels = List.range(0, s.length, 2).map(x => s.charAt(x)).filter(c\
    \ => c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U').toList\n      \
    \  return vowels.length", "        val vowels = \"AEIOU\".toCharArray\n      \
    \  val count = 0l\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n     \
    \       }\n        }\n        return count\n    }\n\n    // Counts the number\
    \ of vowels in the given character.\n    // Returns 0 if the character is not\
    \ a vowel.\n    // Returns 1 if the character is a vowel.\n    def countVowels(c\
    \ : Char, vowels : CharArray) : Int = {\n        if (vowels.indexOf(c) >= 0) {\n\
    \            return 1\n        } else {\n            return 0\n        }", " \
    \       val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n      \
    \  for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n            \
    \    result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n\
    \        }\n        return result", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += 1L\n            }\n            if\
    \ (s[i] == vowels[0]) {\n                result += 1L\n            }\n       \
    \ }\n        return result", "        var vowels = \"AEIOU\".toCharArray\n   \
    \     var count = 0l\n        for (var i = 0; i < s.length(); i += 2) {\n    \
    \        if (s.charAt(i) == vowels[0]) count += 1l\n        }\n        return\
    \ count", "        val vowels = \"AEIOU\".toCharArray()\n        val vowelsCount\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s[i].toUpperCase()\
    \ == vowels[0]) {\n                vowelsCount += 1\n            }\n         \
    \   if (i % 2 == 0) {\n                vowelsCount += 1\n            }\n     \
    \   }\n        vowelsCount", "        var i = 0\n        var count = 0l\n    \
    \    while (i < s.length) {\n            if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n\
    \                count += 1l\n            }\n            i += 2\n        }\n \
    \       return count", "        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2\
    \ == 0) {\n                count += 1l\n            }\n            if (s[i] ==\
    \ vowels[0]) {\n                count += 1l\n            }\n        }\n      \
    \  return count", "        var count = 0l\n        for (var i = 0; i < s.length;\
    \ i += 2) {\n            if (s[i].toUpperCase() == s[i]) {\n                count\
    \ += 1l\n            }\n        }\n        return count", "        val vowels\
    \ = \"AEIOU\".toCharArray()\n        val counts = mutable.List[Long]()\n     \
    \   for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts.append(0l)\n\
    \            else if (s[i] == vowels[0]) counts.append(1l)\n        }\n      \
    \  counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n\
    \        counts.foreach(x =>", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n\
    \        }\n        return result\n    }\n\n    // Given a string s, count the\
    \ number of uppercase vowels in odd indices.\n    // For example:\n    // >>>\
    \ countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n\
    \    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s\
    \ : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n       \
    \ val result = 0L\n        for (i <- 1 until s.length) {\n            if (i %\
    \ 2 == 1) {\n                result += count(vowels, s[i])\n            }\n  \
    \      }\n        return result\n    }\n\n    // Given a string s, count the number\
    \ of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"\
    aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n \
    \   // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpperEven(s : String)\
    \ : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result\
    \ = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n\
    \                result += count(vowels, s[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Given a string s, count the number of uppercase\
    \ vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"\
    ))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>>\
    \ countUpper((\"dBBE\"))\n    // (", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val result = 0L\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray,\
    \ vowels)\n            }\n        }\n        return result", "        val s2 =\
    \ s.toLowerCase\n        val vowels = \"aeiou\".toCharArray\n        val vowels2\
    \ = vowels.toLowerCase\n        val count = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0) {\n                if (s2.charAt(i) == vowels2[0])\
    \ {\n                    count += 1l\n                }\n            }\n     \
    \   }\n        return count", "        val vowels = \"AEIOU\".toCharArray()\n\
    \        val count = 0l\n        for (i <- 0 until s.length) {\n            if\
    \ (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n \
    \           }\n        }\n        return count"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_105_by_length",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((List[Long](2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong)))\n    // (List[String](\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))\n    // If the list is empty, return an empty list:\n    // >>> byLength((List[Long]()))\n    // (List[String]())\n    // If the list has any strange number ignore it:\n    // >>> byLength((List[Long](1l.toLong, -1l.toLong, 55l.toLong)))\n    // (List[String](\"One\"))\n    def byLength(arr : List[Long]) : List[String] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong, -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong, -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n",
  "completions": [
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i)\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var count = 0\n        for(var i = 0; i < arr.length; i++) {\n            if(arr[i] > 0 && arr[i] <= 9) {\n                count += 1\n                result = result.append(arr[i].toString())\n            }\n        }\n        if(count > 0) {\n            result = result.sort(Comparator.comparing(String::length))\n            result = result.reverse()\n            for(var i = 0; i < result.length; i++) {\n                result[i] = result[i].substring(0, 1).toUpperCase() + result[i].substring(1)\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var arr$2 = arr.toSeq\n        var arr$3 = arr.toSeq\n        var arr$4 = arr.toSeq\n        var arr$5 = arr.toSeq\n        var arr$6 = arr.toSeq\n        var arr$7 = arr.toSeq\n        var arr$8 = arr.toSeq\n        var arr$9 = arr.toSeq\n        var arr$10 = arr.toSeq\n        var arr$11 = arr.toSeq\n        var arr$12 = arr.toSeq\n        var arr$13 = arr.toSeq\n        var arr$14 = arr.toSeq\n        var arr$15 = arr.toSeq\n        var arr$16 = arr.toSeq\n        var arr$17 = arr.toSeq\n        var arr$18 = arr.toSeq\n        var arr$19 = arr.toSeq\n        var arr$20 = arr.toSeq\n        var arr$21 = arr.toSeq\n        var arr$22 = arr.toSeq\n        var arr$23 = arr.toSeq\n        var arr$24 = arr.toSeq\n        var arr$25 = arr.toSeq\n        var arr$26 = arr.toSeq\n        var arr$27 = arr.toSeq\n        var arr$28 = arr.toSeq\n        var arr$29 = arr.toSeq\n        var arr$30 = arr.toSeq\n        var arr$31 = arr.toSeq\n        var arr$32 = arr.toSeq\n        var arr$33 = arr.toSeq\n        var arr$34 = arr.toSeq\n        var arr$35 = arr.toSeq\n        var arr$36 = arr.toSeq\n        var arr$37 = arr.toSeq\n        var arr$38 = arr.toSeq\n        var arr$39 = arr.toSeq\n        var arr$40 = arr.toSeq\n        var arr$41 = arr.toSeq\n        var arr$42 = arr.toSeq",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result.reverse()",
    "        var result = mutable.List[String]()\n        var digits = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            digits.append(arr[i])\n        }\n        for (i <- 0 until digits.length) {\n            if (digits[i] >= 1 && digits[i] <= 9) {\n                result.append(oneToNine[digits[i] - 1])\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var length = sorted.length\n        for (var i = 0; i < length; i++) {\n            var digit = sorted[i].toLong()\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(sorted[i].toString())\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(one.toString(digit))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr.apply(i) >= 1 && arr.apply(i) <= 9) {\n                result = result.append(one.toString.apply(arr.apply(i)))\n            }\n        }\n        return result",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]().toSeq().sorted(Comparator.comparing(Long::toString)).toList()\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit.toString().equals(\"1\") || digit.toString().equals(\"2\") || digit.toString().equals(\"3\") || digit.toString().equals(\"4\") || digit.toString().equals(\"5\") || digit.toString().equals(\"6\") || digit.toString().equals(\"7\") || digit.toString().equals(\"8\") || digit.toString().equals(\"9\")) {\n                result = result.append(digit.toString())\n            }\n            i = i + 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(l -> l))\n        var result = List()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List()\n        for (i <- 0 to sorted.size - 1) {\n            var digit = sorted.get(i)\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var result = List()\n        var digits = List()\n        for (i <- 0 until arr.length) {\n            digits = List(arr[i].toInt)\n            var sorted = digits.sort(Comparator.comparing(x -> x))\n            var reversed = sorted.reverse()\n            var newDigits = List()\n            for (j <- 0 until 9) {\n                newDigits = List(reversed.take(j + 1))\n                result = result.append(newDigits.map(x -> \"Nine\" if x == 9 else \"One\" + x).mkString(\" \"))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var reversed = sorted.reverse()\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = reversed[i].toString()\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        result.reverse()\n        for (i <- 0 until result.length) {\n            result[i] = one.toString(result[i])\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var digitName = \"One\"\n            if (digit == 2) {\n                digitName = \"Two\"\n            } else if (digit == 3) {\n                digitName = \"Three\"\n            } else if (digit == 4) {\n                digitName = \"Four\"\n            } else if (digit == 5) {\n                digitName = \"Five\"\n            } else if (digit == 6) {\n                digitName = \"Six\"\n            } else if (digit == 7) {\n                digitName = \"Seven\"\n            } else if (digit == 8) {\n                digitName = \"Eight\"\n            } else if (digit == 9) {\n                digitName = \"Nine\"\n            }\n            result = result.append(digitName)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit.toLong() >= 1 && digit.toLong() <= 9) {\n                result = result.append(String.valueOf(digit.toLong()))\n            }\n            i = i + 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var digitName = \"One\"\n            if (digit == 2) digitName = \"Two\"\n            if (digit == 3) digitName = \"Three\"\n            if (digit == 4) digitName = \"Four\"\n            if (digit == 5) digitName = \"Five\"\n            if (digit == 6) digitName = \"Six\"\n            if (digit == 7) digitName = \"Seven\"\n            if (digit == 8) digitName = \"Eight\"\n            if (digit == 9) digitName = \"Nine\"\n            result = result.append(digitName)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var i = 0\n        while (i < arr.size) {\n            var digit = arr.apply(i)\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(String.valueOf(digit))\n            }\n            i = i + 1\n        }\n        return result.reverse()",
    "        var result = mutable.List[String]()\n        var digits = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            digits.append(arr[i])\n        }\n        var sorted = mutable.List[Long]()\n        sorted.appendAll(digits.sort(Comparator.comparing(x -> x)))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var length = sorted.length\n        var i = 0\n        while (i < length) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            result = result.append(sorted[i] + \"\")\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var length = arr.length\n        for (i <- 0 until length) {\n            var num = arr.apply(i)\n            if (num >= 1 && num <= 9) {\n                result = result.append(one.toString(num))\n            } else {\n                result = result.append(num.toString())\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            if (sorted.get(i).toLong() >= 1 && sorted.get(i).toLong() <= 9) {\n                result = result.append(sorted.get(i).toString())\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size) {\n            var digit = sorted.apply(i)\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i].toLong()\n            if (digit > 9) {\n                break\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits2 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits3 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits4 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits5 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits6 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits7 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits8 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.to",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            var num = arr[i]\n            if (num >= 1 && num <= 9) {\n                result = result.append(one.toString(num))\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var max = 9\n        var min = 1\n        for (i <- 0 until arr.length) {\n            if (arr[i] > max) {\n                max = arr[i]\n            }\n            if (arr[i] < min) {\n                min = arr[i]\n            }\n        }\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= min && arr[i] <= max) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit.toString().equals(\"1\")) {\n                result = result.append(\"One\")\n            } else if (digit.toString().equals(\"2\")) {\n                result = result.append(\"Two\")\n            } else if (digit.toString().equals(\"3\")) {\n                result = result.append(\"Three\")\n            } else if (digit.toString().equals(\"4\")) {\n                result = result.append(\"Four\")\n            } else if (digit.toString().equals(\"5\")) {\n                result = result.append(\"Five\")\n            } else if (digit.toString().equals(\"6\")) {\n                result = result.append(\"Six\")\n            } else if (digit.toString().equals(\"7\")) {\n                result = result.append(\"Seven\")\n            } else if (digit.toString().equals(\"8\")) {\n                result = result.append(\"Eight\")\n            } else if (digit.toString().equals(\"9\")) {\n                result = result.append(\"Nine\")\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var result = List()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var length = sorted.length\n        for (var i = 0; i < length; i++) {\n            var digit = sorted[i]\n            if (digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var sorted = arr.toSeq().toList()\n        sorted.sort(Comparator.comparing(Long::toString))\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i].toString()\n            if (digit.equals(\"1\") || digit.equals(\"2\") || digit.equals(\"3\") || digit.equals(\"4\") || digit.equals(\"5\") || digit.equals(\"6\") || digit.equals(\"7\") || digit.equals(\"8\") || digit.equals(\"9\")) {\n                result = result.append(digit)\n            } else {\n                result = result.append(\"One\")\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        if (arr.head.toLong() < 1 || arr.head.toLong() > 9) return List()\n        var result = List()\n        for (i <- 0 until arr.length) {\n            var digit = arr.head.toLong()\n            arr = arr.tail\n            result = result.append(digit.toString())\n        }\n        return result.reverse()",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        var reversed = sorted.reverse()\n        var result = List()\n        for (i <- 0 until sorted.size()) {\n            var digit = reversed.get(i)\n            result = result.append(digit.toString().substring(0, 1))\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var sorted = arr.toSeq().sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        for (i <- 0 to sorted.length - 1) {\n            if (sorted[i].toLong() < 10) {\n                result = result.append(sorted[i].toString())\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var result = List()\n        var max = arr.max()\n        var min = arr.min()\n        var diff = max - min\n        var step = diff / 9\n        var i = 0\n        for (i = 0; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (i = 9; i < 9; i++) {\n            var val = min + step * i\n            if (val > 9) break\n            result = result.append(val.toString())\n        }\n        for (",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i].toLong()\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(sorted[i].toString())\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result.reverse()",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var length = sorted.length\n        for (var i = 0; i < length; i++) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(one[digit - 1])\n            } else {\n                i += 1\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var digitName = \"One\"\n            if (digit == 2) {\n                digitName = \"Two\"\n            } else if (digit == 3) {\n                digitName = \"Three\"\n            } else if (digit == 4) {\n                digitName = \"Four\"\n            } else if (digit == 5) {\n                digitName = \"Five\"\n            } else if (digit == 6) {\n                digitName = \"Six\"\n            } else if (digit == 7) {\n                digitName = \"Seven\"\n            } else if (digit == 8) {\n                digitName = \"Eight\"\n            } else if (digit == 9) {\n                digitName = \"Nine\"\n            }\n            result = result.append(digitName)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long](arr).sort(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.size) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            if (digit < 1) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i).toLong()\n            if (digit > 9) {\n                break\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(String.valueOf(digit))\n            }\n            i = i + 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.size) {\n            var digit = arr.apply(i)\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var start = 0\n        var end = 0\n        for (i <- 0 to sorted.length - 1) {\n            if (sorted[i] > 9) continue\n            if (sorted[i] < 1) continue\n            if (sorted[i] > start) {\n                end = i\n                start = i\n            }\n        }\n        for (i <- start to end) {\n            result = result.append(String.valueOf(sorted[i]))\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(l -> l))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var sorted = arr.sort(Comparator.comparing(x -> x))\n        var reversed = sorted.reverse()\n        for (i <- 0 until sorted.size) {\n            var digit = digits[sorted[i]]\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var result = List()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        var i = 0\n        while (i < arr.length) {\n            var num = arr[i]\n            if (num >= 1 && num <= 9) {\n                sorted = sorted.append(num)\n            }\n            i = i + 1\n        }\n        sorted.sort()\n        for (i <- 0 to sorted.length - 1) {\n            var num = sorted[i]\n            if (num >= 1 && num <= 9) {\n                result = result.append(String.valueOf(num))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong))\n        var start = 0\n        var end = 0\n        for (i <- 0 until sorted.length) {\n            if (sorted[i].toLong() > 9) {\n                continue\n            }\n            if (sorted[i].toLong() < 1) {\n                continue\n            }\n            if (sorted[i].toLong() == 9) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 1) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 2) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 3) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 4) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 5) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 6) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                continue\n            }\n            if (sorted[i].toLong() == 7) {\n                result = result.append(sorted[i].toString())\n                start = i + 1\n                end = i + 1\n                ",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i)\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        result.reverse()\n        var digits = result.toLongs()\n        for (i <- 0 until digits.size) {\n            var digit = digits.get(i)\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(l -> l))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            result = append(result, digit.toString())\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(Long::toLong))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i).toLong()\n            if (digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit.toLong() < 10) {\n                result = result.append(String.valueOf(digit.toLong()))\n                i = i + 1\n            } else {\n                result = result.append(String.valueOf(digit.toLong() - 10))\n                i = i + 1\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var length = arr.length\n        for (i <- 0 until length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(one.toString(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toJavaList().sorted(Comparator.comparingLong(x -> x))\n        var reversed = sorted.reverse()\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sorted(Comparator.comparing(x -> x.toLong()))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit.toLong() < 10) {\n                result = result.append(digit.toString())\n            }\n            i = i + 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var digits = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            digits.append(arr[i])\n        }\n        for (i <- 0 until digits.length) {\n            if (digits[i] > 9 || digits[i] < 1) {\n                continue\n            }\n            result.append(oneToNine[digits[i]])\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(one.toString(digit))\n            } else {\n                i += 1\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit.toLong() >= 1 && digit.toLong() <= 9) {\n                result = result.append(String.valueOf(digit.toLong()))\n            }\n            i = i + 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var sorted = arr.toSeq().sort(Comparator.comparingLong(x -> x))\n        var reversed = sorted.reverse()\n        var result = List()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var length = sorted.length\n        for (i <- 0 until length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i].toString()\n            var name = \"One\"\n            if (digit == \"1\") name = \"One\"\n            if (digit == \"2\") name = \"Two\"\n            if (digit == \"3\") name = \"Three\"\n            if (digit == \"4\") name = \"Four\"\n            if (digit == \"5\") name = \"Five\"\n            if (digit == \"6\") name = \"Six\"\n            if (digit == \"7\") name = \"Seven\"\n            if (digit == \"8\") name = \"Eight\"\n            if (digit == \"9\") name = \"Nine\"\n            result = result.append(name)\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            sorted = mutable.List[Long](arr.slice(i, i + 1))\n            sorted.sort(Comparator.comparing(x -> x))\n            sorted.foreach(x -> {\n                if (x > 9) {\n                    result = result.append(\"Nine\")\n                } else if (x > 1) {\n                    result = result.append(x.toString)\n                }\n            })\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        result.reverse()\n        for (i <- 0 until result.length) {\n            result[i] = result[i].toUpperCase()\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toSeq().sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(String.valueOf(digit))\n            }\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i)\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result.reverse()",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var max = 9\n        var min = 1\n        for (i <- 0 until arr.length) {\n            if (arr[i] > max) max = arr[i]\n            if (arr[i] < min) min = arr[i]\n        }\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= min && arr[i] <= max) {\n                result = result.append(String.valueOf(arr[i]))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i].toString()\n            if (digit.equals(\"0\")) {\n                result = result.append(digit)\n            } else {\n                result = result.append(digit.toString())\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var length = arr.length\n        for (i <- 0 until length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var len = arr.length\n        for (i <- 0 to len - 1) {\n            if (arr[i] > 9 || arr[i] < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(arr[i]))\n        }\n        return result",
    "        var result = List[String]()\n        var max = 9\n        var min = 1\n        var i = 0\n        while (i < arr.length) {\n            if (arr[i] >= min && arr[i] <= max) {\n                result = result.append(String.valueOf(arr[i]))\n            }\n            i = i + 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digitsReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReverseReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReverseReverseReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReverseReverseReverseReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReverseReverseReverseReverseReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReverseReverseReverseReverseReverseReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        result.reverse()\n        for (i <- 0 until result.length) {\n            result[i] = result[i].toUpperCase()\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digitsReverse = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var i = 0\n        while (i < arr.size()) {\n            var digit = arr.apply(i)\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(digits.apply(digit - 1))\n            }\n            i += 1\n        }\n        return result.reverse()",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        var reversed = sorted.reverse()\n        var result = List()\n        for (i <- 0 until sorted.size()) {\n            var digit = reversed.apply(i)\n            result = result.append(digit.toString().substring(1, 2))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length) {\n            if (sorted[i] >= 1 && sorted[i] <= 9) {\n                result = result.append(sorted[i].toString())\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            if (sorted.get(i) > 9) continue\n            result = result.append(sorted.get(i).toString())\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr.apply(i) >= 1 && arr.apply(i) <= 9) {\n                result = result.append(one.toString.apply(arr.apply(i)))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        var length = sorted.length\n        for (var i = 0; i < length; i++) {\n            var digit = sorted[i]\n            if (digit.toLong() > 9) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(String.valueOf(arr[i]))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toSeq().toList()\n        sorted.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var start = 0\n        var end = 0\n        while (start < sorted.size()) {\n            if (sorted.get(start) > 9) {\n                start += 1\n                continue\n            }\n            if (sorted.get(start) < 1) {\n                start += 1\n                continue\n            }\n            if (sorted.get(start) > 9) {\n                start += 1\n                continue\n            }\n            end = start + 1\n            while (end < sorted.size() && sorted.get(end) < 9) {\n                end += 1\n            }\n            if (end == start + 1) {\n                result = result.append(sorted.get(start).toString())\n                start += 1\n                continue\n            }\n            var num = sorted.subList(start, end).toList().map(x -> x.toString())\n            result = result.append(num.head)\n            start = end\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var sorted = digits.sort(Comparator.comparing(x -> x))\n        var reversed = sorted.reverse()\n        var digit = 0l\n        for (i <- 0 to sorted.size - 1) {\n            if (sorted[i] >= 1l && sorted[i] <= 9l) {\n                digit = sorted[i]\n                result = result.append(digit.toString)\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var i = 0\n        while (i < arr.size) {\n            var digit = arr.apply(i)\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result.reverse()",
    "        var result = List[String]()\n        var sorted = arr.sorted(Comparator.comparing(x -> x.toLong()))\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i].toLong()\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        result.reverse()\n        for (i <- 0 until result.length) {\n            result[i] = result[i].toLowerCase()\n        }\n        return result",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(oneToNine[digit - 1])\n            } else {\n                i += 1\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long](arr).sort(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.size) {\n            var digit = sorted.apply(i)\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits2 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits3 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits4 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits5 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits6 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits7 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digits8 = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.to",
    "        var result = List[String]()\n        var max = 9\n        var min = 1\n        for (i <- 0 until arr.length) {\n            if (arr[i] > max) max = arr[i]\n            if (arr[i] < min) min = arr[i]\n        }\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= min && arr[i] <= max) {\n                result = result.append(String.valueOf(arr[i]))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var sorted = arr.sort(Comparator.comparing(x -> x))\n        var rev = sorted.reverse()\n        for (i <- 0 until rev.size) {\n            var digit = rev[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(digits[digit - 1])\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var arr2 = arr.toSeq\n        var arr3 = arr2.map(x => x.toString)\n        var arr4 = arr3.sort(Comparator[String]((x, y) => {\n            if (x.length > y.length) return -1\n            if (x.length < y.length) return 1\n            return 0\n        }))\n        var arr5 = arr4.map(x => x.substring(0, 1))\n        var arr6 = arr5.map(x => x.toUpperCase())\n        var arr7 = arr6.map(x => x.substring(0, 1))\n        return arr7",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.get(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var min = arr.head\n        var max = arr.head\n        for (i <- arr) {\n            if (i > max) max = i\n            if (i < min) min = i\n        }\n        var diff = max - min + 1\n        if (diff < 10) {\n            for (i <- arr) {\n                result = result.append(i.toString())\n            }\n            return result\n        }\n        var num = min\n        for (i <- arr) {\n            if (i == num) {\n                num = num + 1\n                continue\n            }\n            var diff = i - num\n            if (diff < 10) {\n                num = i\n                continue\n            }\n            var diff = num - i\n            if (diff < 10) {\n                num = i\n                continue\n            }\n            result = result.append(num.toString())\n            num = i\n        }\n        result = result.append(num.toString())\n        return result",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var result = List()\n        var i = 0\n        while (i < arr.size()) {\n            var digit = arr.apply(i)\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var length = arr.length\n        var i = 0\n        while (i < length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator[Long](_ <=> _))\n        var i = 0\n        while (i < sorted.size) {\n            var digit = sorted[i]\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(sorted[i].toString())\n            }\n            i = i + 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x.toLong()))\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i].toLong()\n            if (digit < 1 || digit > 9)\n                continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var arr2 = arr.toSeq\n        var arr3 = arr2.map(x => x.toString)\n        var arr4 = arr3.sort(Comparator[String]((x, y) => x.compareTo(y)))\n        var arr5 = arr4.map(x => x.substring(0, 1))\n        var arr6 = arr5.map(x => x.toUpperCase())\n        var arr7 = arr6.map(x => x.substring(0, 1))\n        var arr8 = arr7.map(x => x.toLowerCase())\n        return arr8",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        sorted.appendAll(arr)\n        sorted.sort(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            if (digit < 1) {\n                i += 1\n                continue\n            }\n            result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var sorted = sort(arr)\n        var i = 0\n        while (i < sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            if (digit < 1) {\n                i += 1\n                continue\n            }\n            result = append(result, map(digits, digit))\n            i += 1\n        }\n        return result\n    }\n\n    // Given a list of strings, sort the strings by their length,\n    // and then return a list of the strings in reverse order.\n    // For example:\n    // >>> byLength((List[String](\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")))\n    // (List[String](\"nine\", \"eight\", \"seven\", \"six\", \"five\", \"four\", \"three\", \"two\", \"one\"))\n    // If the list is empty, return an empty list:\n    // >>> byLength((List[String]()))\n    // (List[String]())\n    // If the list has any strange number ignore it:\n    // >>> byLength((List[String](1l.toString, -1l.toString, 55l.toString)))\n    // (List[String](\"one\"))\n    def byLength2(arr : List[String]) : List[String] = {\n        var result = List[String]()\n        var sorted = sort(arr)\n        var i = 0\n        while (i < sorted.length) {\n            var s = sorted[i]\n            if (s.length() > 9) {\n                i += 1\n                continue\n            }\n            if (s.length() < 1) {\n                i += 1\n                continue\n            }\n            result = append(result, s)\n            i += 1\n        }\n        return result\n",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            sorted = mutable.List[Long](arr.slice(i, i + 1))\n            sorted.sort(Comparator.comparing(x -> x))\n            var digit = sorted.head()\n            sorted = sorted.tail()\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var sorted = arr.toSeq().sort(Comparator.comparing(x -> x.toLong))\n        var length = sorted.length()\n        var i = 0\n        while (i < length) {\n            var digit = sorted.apply(i)\n            if (digit.toLong() >= 1 && digit.toLong() <= 9) {\n                result = result.append(String.valueOf(digit.toLong()))\n            }\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sorted(Comparator.comparing(x -> x.toLong()))\n        var length = sorted.length\n        for (i <- 0 to length - 1) {\n            var digit = sorted[i].toLong()\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(sorted[i].toString())\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        var reversed = sorted.reverse()\n        var result = List()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i]\n            if (digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length) {\n            if (sorted[i] > 9) break\n            result = result.append(sorted[i].toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.size) {\n            var digit = arr.apply(i)\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(String.valueOf(digit))\n            }\n            i = i + 1\n        }\n        return result.reverse()",
    "        var result = mutable.List[String]()\n        var digits = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            digits.append(arr[i])\n        }\n        var sorted = mutable.List[Long]()\n        sorted.appendAll(digits.sort(Comparator.comparing(x -> x)))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                continue\n            }\n            result.append(digit.toString)\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var digits = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            digits.append(arr[i])\n        }\n        var sorted = mutable.List[Long]()\n        sorted.appendAll(digits.sort(Comparator.comparing(x -> x)))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit >= 1 && digit <= 9) {\n                result.append(String.valueOf(digit))\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result.reverse()",
    "        var result = List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var result = List()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong()))\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit.toLong() < 1 || digit.toLong() > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i)\n            if (digit < 1 || digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        var i = 0\n        while (i < arr.length) {\n            var num = arr[i]\n            if (num >= 1 && num <= 9) {\n                sorted = sorted.append(num)\n            }\n            i = i + 1\n        }\n        sorted.sort()\n        for (i <- 0 to sorted.length - 1) {\n            var num = sorted[i]\n            if (num >= 1 && num <= 9) {\n                result = result.append(String.valueOf(num))\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit >= 1 && digit <= 9) {\n                result = result.append(one.toString())\n            } else {\n                i += 1\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var arr$1 = arr.toSeq\n        var result = List[String]()\n        var i = 0\n        while (i < arr$1.size) {\n            var digit = arr$1.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            if (digit < 1) {\n                i += 1\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var min = arr.head\n        var max = arr.head\n        for (i <- arr.tail) {\n            if (i > max) {\n                max = i\n            }\n            if (i < min) {\n                min = i\n            }\n        }\n        var diff = max - min\n        for (i <- arr) {\n            if (i > max) {\n                max = i\n            }\n            if (i < min) {\n                min = i\n            }\n            if (i - min == diff) {\n                result = result.append(String.valueOf(i))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sorted(Comparator.comparingLong(x -> x))\n        var length = sorted.length\n        for (var i = 0; i < length; i++) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toSeq().sort(Comparator.comparing(x -> x.toLong()))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit.toLong() >= 1 && digit.toLong() <= 9) {\n                result = result.append(String.valueOf(digit.toLong()))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x.toLong))\n        for (i <- 0 until sorted.length) {\n            if (sorted[i].toLong() > 9) break\n            result = result.append(sorted[i].toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List()\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toSeq().toList()\n        sorted.sort(Comparator.comparing(x -> x.toString()))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i].toString()\n            if (digit.equals(\"0\")) {\n                result = result.append(\"Zero\")\n            } else if (digit.equals(\"1\")) {\n                result = result.append(\"One\")\n            } else if (digit.equals(\"2\")) {\n                result = result.append(\"Two\")\n            } else if (digit.equals(\"3\")) {\n                result = result.append(\"Three\")\n            } else if (digit.equals(\"4\")) {\n                result = result.append(\"Four\")\n            } else if (digit.equals(\"5\")) {\n                result = result.append(\"Five\")\n            } else if (digit.equals(\"6\")) {\n                result = result.append(\"Six\")\n            } else if (digit.equals(\"7\")) {\n                result = result.append(\"Seven\")\n            } else if (digit.equals(\"8\")) {\n                result = result.append(\"Eight\")\n            } else if (digit.equals(\"9\")) {\n                result = result.append(\"Nine\")\n            }\n        }\n        return result",
    "        var sorted = arr.toLongs().sorted(Comparator.comparingLong(l -> l))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit.toString().equals(\"1\")) {\n                result = result.append(\"One\")\n            } else if (digit.toString().equals(\"2\")) {\n                result = result.append(\"Two\")\n            } else if (digit.toString().equals(\"3\")) {\n                result = result.append(\"Three\")\n            } else if (digit.toString().equals(\"4\")) {\n                result = result.append(\"Four\")\n            } else if (digit.toString().equals(\"5\")) {\n                result = result.append(\"Five\")\n            } else if (digit.toString().equals(\"6\")) {\n                result = result.append(\"Six\")\n            } else if (digit.toString().equals(\"7\")) {\n                result = result.append(\"Seven\")\n            } else if (digit.toString().equals(\"8\")) {\n                result = result.append(\"Eight\")\n            } else if (digit.toString().equals(\"9\")) {\n                result = result.append(\"Nine\")\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var len = arr.length\n        for (i <- 0 until len) {\n            var num = arr[i]\n            if (num >= 1 && num <= 9) {\n                result = result.append(one.toString(num))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var max = 9\n        var min = 1\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > max) {\n                i += 1\n                continue\n            }\n            if (digit < min) {\n                i += 1\n                continue\n            }\n            result = result.append(arr[i].toString())\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(Long::toString))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i).toString()\n            if (digit.equals(\"0\")) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        return result",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var arr2 = arr.toLongs\n        var arr3 = arr2.sort(Comparator.comparingLong(x -> x))\n        var arr4 = arr3.reverse()\n        var arr5 = arr4.map(x -> x.toString)\n        var arr6 = arr5.map(x -> x.substring(0, 1))\n        var arr7 = arr6.map(x -> x.toUpperCase())\n        var arr8 = arr7.map(x -> x.substring(0, 1))\n        var arr9 = arr8.map(x -> x.toLowerCase())\n        return arr9",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            sorted = mutable.List[Long](arr.slice(i, i + 1))\n            sorted.sort(Comparator.comparing(x -> x))\n            var digit = sorted.head\n            sorted = sorted.tail\n            result = result.append(String.valueOf(digit.toInt))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit < 1 || digit > 9) continue\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparingLong(l -> l))\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i]\n            if (digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr.apply(i) >= 1 && arr.apply(i) <= 9) {\n                result = result.append(one.toString.apply(arr.apply(i)))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var len = arr.length\n        for (i <- 0 until len) {\n            if (arr[i] > 9 || arr[i] < 1) {\n                continue\n            }\n            result = result.append(arr[i].toString)\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var sorted = arr.toSeq().toJavaList()\n        sorted.sort(Comparator.comparingLong(Long::toString))\n        for (i <- 0 until sorted.size()) {\n            var digit = sorted[i].toString()\n            if (digit.equals(\"0\")) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted.get(i)\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            sorted.append(arr[i])\n        }\n        sorted.sort(Comparator.comparing(x -> x))\n        for (i <- 0 until sorted.length) {\n            if (sorted[i] >= 1 && sorted[i] <= 9) {\n                result.append(sorted[i].toString)\n            }\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] > 9 || arr[i] < 1) {\n                continue\n            }\n            result = result.append(arr[i].toString)\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit > 9) {\n                i += 1\n                continue\n            }\n            result = result.append(digit.toString())\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr.apply(i) >= 1 && arr.apply(i) <= 9) {\n                result = result.append(one.toString.apply(arr.apply(i)))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var sorted = arr.toSeq().sort(Comparator.comparingLong(x -> x))\n        var reversed = sorted.reverse()\n        var result = List[String]()\n        for (i <- 0 until sorted.size()) {\n            result = result.append(sorted.apply(i).toString())\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var sorted = arr.toLongs().sorted(Comparator.comparing(x -> x))\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) continue\n            result = result.append(String.valueOf(digit))\n        }\n        return result.reverse()",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(digit))\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var max = arr.head\n        var min = arr.head\n        for (i <- arr.tail) {\n            if (i > max) max = i\n            if (i < min) min = i\n        }\n        var diff = max - min + 1\n        for (i <- arr) {\n            if (i > 9) continue\n            if (i > min && i < max) {\n                result = result.append(String.valueOf(i))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x))\n        for (i <- 0 until sorted.length) {\n            var digit = sorted[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(digit.toString())\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List[String]()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var result = List[String]()\n        for (i <- 0 until sorted.size) {\n            var digit = sorted[i].toString()\n            if (digit.equals(\"0\")) {\n                result = result.append(\"Zero\")\n            } else if (digit.equals(\"1\")) {\n                result = result.append(\"One\")\n            } else if (digit.equals(\"2\")) {\n                result = result.append(\"Two\")\n            } else if (digit.equals(\"3\")) {\n                result = result.append(\"Three\")\n            } else if (digit.equals(\"4\")) {\n                result = result.append(\"Four\")\n            } else if (digit.equals(\"5\")) {\n                result = result.append(\"Five\")\n            } else if (digit.equals(\"6\")) {\n                result = result.append(\"Six\")\n            } else if (digit.equals(\"7\")) {\n                result = result.append(\"Seven\")\n            } else if (digit.equals(\"8\")) {\n                result = result.append(\"Eight\")\n            } else if (digit.equals(\"9\")) {\n                result = result.append(\"Nine\")\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) return List()\n        var result = List()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var digitName = String.valueOf(digit)\n            result = result.append(digitName)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var sorted = arr.toLongs().sorted(Comparator.comparing(Long::toString))\n        var reversed = sorted.reverse()\n        var result = List()\n        for (i <- 0 until sorted.size) {\n            result = result.append(sorted.apply(i).toString())\n        }\n        return result",
    "        var result = List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) name = \"Two\"\n            if (digit == 3) name = \"Three\"\n            if (digit == 4) name = \"Four\"\n            if (digit == 5) name = \"Five\"\n            if (digit == 6) name = \"Six\"\n            if (digit == 7) name = \"Seven\"\n            if (digit == 8) name = \"Eight\"\n            if (digit == 9) name = \"Nine\"\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var result = List[String]()\n        var sorted = arr.sort(Comparator.comparing(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var digit = sorted.apply(i)\n            if (digit < 1 || digit > 9) {\n                i += 1\n                continue\n            }\n            var digitName = \"One\"\n            if (digit == 2) digitName = \"Two\"\n            if (digit == 3) digitName = \"Three\"\n            if (digit == 4) digitName = \"Four\"\n            if (digit == 5) digitName = \"Five\"\n            if (digit == 6) digitName = \"Six\"\n            if (digit == 7) digitName = \"Seven\"\n            if (digit == 8) digitName = \"Eight\"\n            if (digit == 9) digitName = \"Nine\"\n            result = result.append(digitName)\n            i += 1\n        }\n        return result",
    "        if (arr.isEmpty()) return List[String]()\n        var arr2 = arr.toSeq\n        var arr3 = arr2.map(x => x.toString)\n        var arr4 = arr3.sort(Comparator[String]((x, y) => x.compareTo(y)))\n        var arr5 = arr4.map(x => x.substring(0, 1))\n        var arr6 = arr5.map(x => x.toUpperCase())\n        var arr7 = arr6.map(x => x.substring(0, 1))\n        var arr8 = arr7.map(x => x.toLowerCase())\n        var arr9 = arr8.map(x => x.substring(0, 1))\n        var arr10 = arr9.map(x => x.toLowerCase())\n        return arr10",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digitsReversed = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReversedReversed = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var digitsReversedReversedReversed = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReversedReversedReversedReversed = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReversedReversedReversedReversedReversed = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong)\n        var digitsReversedReversedReversedReversedReversedReversed = List[Long](9l.toLong, 8l.toLong, 7l.toLong, 6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result",
    "        if (arr.isEmpty()) {\n            return List()\n        }\n        var result = List()\n        var max = arr.max()\n        var min = arr.min()\n        var diff = max - min\n        var step = diff / 9\n        var i = 0\n        for (i = 0; i < 9; i++) {\n            var start = min + i * step\n            var end = start + step\n            var num = arr.subList(start, end).toList()\n            var numStr = num.map(x -> x.toString())\n            var numStrStr = numStr.map(x -> x.toString())\n            var numStrStrStr = numStrStr.map(x -> x.toString())\n            var numStrStrStrStr = numStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStr = numStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStr = numStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStr = numStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStr = numStrStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStrStr = numStrStrStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStrStrStr = numStrStrStrStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStrStrStrStr = numStrStrStrStrStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStrStrStrStrStr = numStrStrStrStrStrStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStrStrStrStrStrStr = numStrStrStrStrStrStrStrStrStrStrStrStr.map(x -> x.toString())\n            var numStrStrStrStrStrStrStrStrStrStrStrStrStrStr = numStr",
    "        var result = mutable.List[String]()\n        var i = 0\n        while (i < arr.length) {\n            var digit = arr[i]\n            if (digit > 9 || digit < 1) {\n                i += 1\n                continue\n            }\n            var name = \"One\"\n            if (digit == 2) {\n                name = \"Two\"\n            } else if (digit == 3) {\n                name = \"Three\"\n            } else if (digit == 4) {\n                name = \"Four\"\n            } else if (digit == 5) {\n                name = \"Five\"\n            } else if (digit == 6) {\n                name = \"Six\"\n            } else if (digit == 7) {\n                name = \"Seven\"\n            } else if (digit == 8) {\n                name = \"Eight\"\n            } else if (digit == 9) {\n                name = \"Nine\"\n            }\n            result = result.append(name)\n            i += 1\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(arr[i].toString)\n            }\n        }\n        return result",
    "        var result = mutable.List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        var digits = List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)\n        var sorted = arr.sort(Comparator.comparing(x -> x))\n        var reversed = sorted.reverse()\n        for (i <- 0 until sorted.size) {\n            var digit = reversed[i]\n            if (digit < 1 || digit > 9) {\n                continue\n            }\n            result = result.append(digits[digit - 1])\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] >= 1 && arr[i] <= 9) {\n                result = result.append(one.toString(arr[i]))\n            }\n        }\n        return result",
    "        var result = List[String]()\n        for (i <- 0 until arr.length) {\n            if (arr[i] > 9 || arr[i] < 1) {\n                continue\n            }\n            result = result.append(String.valueOf(arr[i]))\n        }\n        return result"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
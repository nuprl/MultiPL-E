{
  "name": "HumanEval_31_is_prime",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(101l)\n    // (101, 11)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 11, 7)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    // >>> primeFactors(0l)\n    // (0, 0)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            Vector.empty()\n        } else if (n == 1) {\n            Vector.apply([1l])\n        } else {\n            for (i <- 2l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    Vector.apply([i, n / i])\n                }\n            }\n        }\n    }\n\n    // Return the sum of the given numbers.\n    // >>> sum(6l, 7l, 8l)\n    // (21)\n    // >>> sum(6l, 7l)\n    // (13)\n    // >>> sum(6l, 7l, 8l, 9l)\n    // (27)\n    def sum(numbers : scala.collection.immutable.Vector[Long]) : Long = {\n        if (numbers.isEmpty()) {\n            0l\n        } else {\n            numbers.head()\n            for (i <- 1 to numbers\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplj3h7kxm.scala:57:26 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            Vector.apply([\u001b[31m1l\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          an identifier expected, but long literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplj3h7kxm.scala:57:29 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            Vector.apply([\u001b[31m1l\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                             '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplj3h7kxm.scala:61:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                    Vector.apply([i, n / i])\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      ']' expected, but identifier found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplj3h7kxm.scala:61:43 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                    Vector.apply([i, n / i])\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                           '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplj3h7kxm.scala:80:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplj3h7kxm.scala:98:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplj3h7kxm.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmplj3h7kxm.scala:55:24 ------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            scala.collection.immutable.List[Long](2)\n        } else if (n == 1) {\n            scala.collection.immutable.List[Long](1)\n        } else if (n % 2 == 0) {\n            scala.collection.immutable.List[Long](2)\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    scala.collection.immutable.List[Long](i)\n                }\n            }\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(10l)\n    // [2, 3, 5, 7]\n    // >>> primes(100l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primes(1l)\n    // []\n    def primes(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            scala.collection.immutable.List[Long](2)\n        } else if (n == 1) {\n            scala.collection.immutable.List[Long](1)\n        } else if (n % 2 == 0) {\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph4h8pa40.scala:93:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m93 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph4h8pa40.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph4h8pa40.scala:53:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph4h8pa40.scala:92:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: List[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmph4h8pa40.scala:76:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m76 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmph4h8pa40.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 warnings found\n4 er",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13, 41, 7]\n    // >>> primeFactors(61l)\n    // [61]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.List.apply([2])\n        } else if (n == 1) {\n            return scala.collection.immutable.List.apply([])\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            return primeFactors(3).$plus$plus(primeFactors(n - 1))\n        }\n    }\n\n    // Return the sum of the prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(101l)\n    // 101\n    // >>> primeSum(11l)\n    // 23\n    // >>> primeSum(13441l)\n    // 30241\n    // >>> primeSum(61l)\n    // 2447\n    // >>> primeSum(4l)\n    // 2\n    // >>> primeSum(1l)\n    // 1\n    def primeSum(n : Long) : Long = {\n        if (n == 2) {\n            return 2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp258e0cgu.scala:53:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp258e0cgu.scala:53:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp258e0cgu.scala:55:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but ']' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp258e0cgu.scala:55:59 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([])\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp258e0cgu.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp258e0cgu.scala:59:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mreturn\u001b[0m primeFactors(\u001b[31m3\u001b[0m).$plus$plus(primeFactors(n ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 6\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3mgefv4j.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mgefv4j.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to n.\n    // >>> primes(10)\n    // [2, 3, 5, 7]\n    // >>> primes(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primes(1000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primes(10000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 6\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvtci0z8s.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvtci0z8s.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtci0z8s.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtci0z8s.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtci0z8s.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtci0z8s.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtci0z8s.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 1)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    def primeFactors(n : Long) : Tuple2[Long, Long] = {\n        if (n == 2) {\n            return Tuple2(2l, 1l)\n        } else if (n == 1) {\n            return Tuple2(1l, 1l)\n        } else if (n % 2 == 0) {\n            return Tuple2(2l, 1l)\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return Tuple2(i, 1l)\n                }\n            }\n            return Tuple2(n, 1l)\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 1)\n    // >>> primeFactors(61l)\n    // (61,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiruo7wa5.scala:96:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiruo7wa5.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiruo7wa5.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiruo7wa5.scala:81:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiruo7wa5.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiruo7wa5.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compil",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3,5)\n    // >>> primeFactors(24l)\n    // (2,3,5,7)\n    // >>> primeFactors(36l)\n    // (2,3,5,7,11)\n    // >>> primeFactors(48l)\n    // (2,3,5,7,11,13)\n    // >>> primeFactors(60l)\n    // (2,3,5,7,11,13,17)\n    // >>> primeFactors(120l)\n    // (2,3,5,7,11,13,17,23)\n    // >>> primeFactors(180l)\n    // (2,3,5,7,11,13,17,23,29)\n    // >>> primeFactors(240l)\n    // (2,3,5,7,11,13,17,23,29,31)\n    // >>> primeFactors(360l)\n    // (2,3,5,7,11,13,17,23,29,31,37)\n    // >>> primeFactors(720l)\n    // (2,3,5,7,11,13,17,23,29,31,37,41)\n    // >>> primeFactors(1260l)\n    // (2,3,5,7,11,13,17,23,29,31,37,41,43)\n    // >>> primeFactors(100l)\n    // (2,5,7,11,13,17,23,29\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqmvbghhi.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmvbghhi.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmvbghhi.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmvbghhi.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmvbghhi.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmvbghhi.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmvbghhi.scala:71:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // [2, 3, 5, 7]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primesBelow(n : Long) : List[Long] = {\n        if (n == 2) {\n            return List(2)\n        } else if (n == 1) {\n            return List()\n        } else {\n            var primes = List(2)\n            for (i <- 3 to Math.sqrt(n)) {\n                if (isPrime(i)) {\n                    primes = primes.append(i)\n                }\n            }\n            return primes\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to a given number.\n    // >>> primesBelowOrEqual(10)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelowOrEqual(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primesBelowOrEqual(n : Long) : List[Long] = {\n        if (n == 2) {\n            return List(2\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp18lw6dj4.scala:67:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp18lw6dj4.scala:85:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18lw6dj4.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18lw6dj4.scala:50:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp18lw6dj4.scala:52:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                    primes = primes.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Int] - did you mean List[Int].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18lw6dj4.scala:55:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m primes\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (primes : List[Int])\n\u001b[31m   |\u001b[0m                   Required: List[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18lw6dj4.scala:84:1 ---------------------\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3, 5)\n    // >>> primeFactors(11l)\n    // (11,)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> primeFactors(121l)\n    // (11, 13, 17, 19)\n    // >>> prime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpripcg3w9.scala:91:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpripcg3w9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpripcg3w9.scala:76:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpripcg3w9.scala:77:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpripcg3w9.scala:78:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpripcg3w9.scala:79:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpripcg3w9.scala:80:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime2((6l))\n    // (false)\n    // >>> isPrime2((101l))\n    // (true)\n    // >>> isPrime2((11l))\n    // (true)\n    // >>> isPrime2((13441l))\n    // (true)\n    // >>> isPrime2((61l))\n    // (true)\n    // >>> isPrime2((4l))\n    // (false)\n    // >>> isPrime2((1l))\n    // (false)\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime3((6l))\n    // (false)\n    // >>> isPrime3((101l))\n    // (true)\n    // >>> isPrime3((11l))\n    // (true)\n    // >>> isPrime3((13441l))\n    // (true)\n    // >>> isPrime3((61l))\n    // (true)\n    // >>> isPrime3((4l))\n    // (false)\n    // >>> isPrime3((1l))\n    // (false)\n    def isPrime3(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3gllf02y.scala:106:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gllf02y.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gllf02y.scala:59:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gllf02y.scala:105:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m105 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp3gllf02y.scala:89:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m89 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmp3gllf02y.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (n % 43 == 0) {\n            return false\n        }\n        if (n % 47 == 0) {\n            return false\n        }\n        if (n % 53 == 0) {\n            return false\n        }\n        if (n % 59 == 0) {\n            return false\n        }\n        if (n % 61 == 0) {\n            return false\n        }\n        if (n % 67 == 0) {\n            return false\n        }\n        if (n % 71 == 0) {\n            return false\n        }\n        if (n % 73 == 0) {\n            return false\n        }\n        if (n % 79 == 0) {\n            return false\n        }\n        if (n % 83 == 0) {\n            return false\n        }\n        if (n % 89 == 0) {\n            return false\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjevk611s.scala:125:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m125 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjevk611s.scala:124:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m124 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjevk611s.scala:108:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m108 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcfucu1hh.scala:108:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m108 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcfucu1hh.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcfucu1hh.scala:59:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcfucu1hh.scala:107:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpcfucu1hh.scala:51:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 19 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 51\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpcfucu1hh.scala:83:8 --",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 3)\n    // >>> primeFactors(24l)\n    // (2, 2, 2, 3)\n    // >>> primeFactors(36l)\n    // (2, 2, 2, 2, 3)\n    // >>> primeFactors(12l)\n    // (2, 2, 3)\n    // >>> primeFactors(1l)\n    // (1)\n    // >>> primeFactors(0l)\n    // (0)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            Vector.empty\n        } else if (n == 1) {\n            Vector.single(n)\n        } else {\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    Vector.concat(primeFactors(n / i), Vector.single(i))\n                }\n            }\n            if (n % 2 == 0) {\n                Vector.concat(primeFactors(n / 2), Vector.single(2))\n            }\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // (2, 3, 5)\n    // >>> primes(10l)\n    // (2, 3, 5, 7)\n    // >>> primes(100l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxvvhqcq6.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxvvhqcq6.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxvvhqcq6.scala:55:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            Vector.single(n)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue single is not a member of object scala.collection.immutable.Vector - did you mean Vector.range?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxvvhqcq6.scala:57:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxvvhqcq6.scala:59:62 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m                    Vector.concat(primeFactors(n / i), Vector.single(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue single is not a member of object scala.collection.immutable.Vector - did you mean Vector.range?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxvvhqcq6.scala:63:58 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                Vector.concat(primeFactors(n / \u001b[31m2\u001b[0m), Vector.single(\u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mva",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu3xghnpr.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3xghnpr.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (n % 43 == 0) {\n            return false\n        }\n        if (n % 47 == 0) {\n            return false\n        }\n        if (n % 53 == 0) {\n            return false\n        }\n        if (n % 59 == 0) {\n            return false\n        }\n        if (n % 61 == 0) {\n            return false\n        }\n        if (n % 67 == 0) {\n            return false\n        }\n        if (n % 71 == 0) {\n            return false\n        }\n        if (n % 73 == 0) {\n            return false\n        }\n        if (n % 79 == 0) {\n            return false\n        }\n        if (n % 83 == 0) {\n            return false\n        }\n        if (n % 89 == 0) {\n            return false\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjevk611s.scala:125:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m125 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjevk611s.scala:124:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m124 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjevk611s.scala:108:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m108 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime3(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp81lru1j_.scala:108:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m108 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp81lru1j_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp81lru1j_.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp81lru1j_.scala:107:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp81lru1j_.scala:91:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m91 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmp81lru1j_.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(121l)\n    // [11, 13, 17, 19]\n    // >>> primeFactors(121l)\n    // [11, 13, 17, 19]\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 1) {\n            return Nil\n        } else if (n == 2) {\n            return List(2)\n        } else if (n == 3) {\n            return List(3)\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            return (for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return primeFactors(n / i)\n                }\n            }).append(n)\n        }\n    }\n\n    // Return the sum of all prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(13l)\n    // 23\n    // >>> primeSum(11l)\n    // 23\n    // >>> primeSum(121l)\n    // 571\n    // >>> primeSum(121l)\n    // 571\n    def primeSum(n : Long) : Long = {\n        if (n == 1) {\n            return 1\n        } else if (n == 2) {\n            return 2\n        } else if (n == 3) {\n            return 3\n        } else\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpmrrj5ie0.scala:83:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m        } \u001b[33melse\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmrrj5ie0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmrrj5ie0.scala:49:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mreturn\u001b[0m Nil\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    collection.immutable.Nil.type\n\u001b[31m   |\u001b[0m                   Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmrrj5ie0.scala:51:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mreturn\u001b[0m List(\u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    List[Int]\n\u001b[31m   |\u001b[0m                   Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmrrj5ie0.scala:53:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m List(\u001b[31m3\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    List[Int]\n\u001b[31m   |\u001b[0m                   Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Typ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the number of prime numbers less than or equal to a given number.\n    // >>> primes(0)\n    // 0\n    // >>> primes(1)\n    // 0\n    // >>> primes(2)\n    // 1\n    // >>> primes(3)\n    // 2\n    // >>> primes(4)\n    // 3\n    // >>> primes(5)\n    // 4\n    // >>> primes(6)\n    // 5\n    // >>> primes(7)\n    // 6\n    // >>> primes(8)\n    // 7\n    // >>> primes(9)\n    // 8\n    // >>> primes(10)\n    // 9\n    // >>> primes(11)\n    // 10\n    // >>> primes(12)\n    // 11\n    // >>> primes(13)\n    // 12\n    // >>> primes(14)\n    // 13\n    // >>> primes(15)\n    // 14\n    // >>> primes(16)\n    // 15\n    // >>> primes(17)\n    // 16\n    // >>> primes(18)\n    // 17\n    // >>> primes(19)\n    // 18\n    // >>> primes(20)\n    // 19\n    // >>> primes(21)\n    // 20\n    // >>> primes(22)\n    // 21\n    // >>> primes(23)\n    // 22\n    // >>> primes(24)\n    // 23\n    // >>> primes(25)\n    // 24\n    // >>> primes(26)\n    // 25\n    // >>> primes(27)\n    // 26\n    // >>> primes(28)\n    // 27\n    // >>> primes(29)\n    // 28\n    // >>> primes(\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnbkl6usy.scala:115:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m115 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbkl6usy.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbkl6usy.scala:100:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbkl6usy.scala:101:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbkl6usy.scala:102:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbkl6usy.scala:103:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m103 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 19]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primeFactors(61l)\n    // [61, 89, 97]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : List[Long] = {\n        if (n == 2) {\n            List(2)\n        } else if (n == 1) {\n            List()\n        } else if (n % 2 == 0) {\n            List(2)\n        } else {\n            var factors = List.empty[Long]\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // [2, 3, 5]\n    // >>> primes(101l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293061,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6j8_4dim.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6j8_4dim.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6j8_4dim.scala:60:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6j8_4dim.scala:62:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                    factors = factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6j8_4dim.scala:63:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                    factors = factors.append(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6j8_4dim.scala:77:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n < 2l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 7]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 61, 7, 5, 3, 2, 1]\n    // >>> primeFactors(61l)\n    // [61, 7, 5, 3, 2, 1]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : List[Long] = {\n        if (n == 2l) {\n            return List(2l)\n        } else if (n < 2l) {\n            return List()\n        } else if (n == 3l) {\n            return List(3l)\n        } else if (n % 2l == 0l) {\n            return primeFactors(n / 2l)\n        } else {\n            var factors = List()\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 7]\n    // >>> primeFactors(11l)\n    // [11]\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293061,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu579ymt1.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu579ymt1.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu579ymt1.scala:62:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu579ymt1.scala:64:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m                    factors = factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Nothing] - did you mean List[Nothing].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu579ymt1.scala:65:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m                    factors = factors.append(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Nothing] - did you mean List[Nothing].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu579ymt1.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4p6882pf.scala:127:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m127 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p6882pf.scala:126:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m126 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp4p6882pf.scala:110:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m110 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10l)\n    // (2, 3, 5, 7)\n    // >>> primesBelow(100l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primesBelow(1000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primesBelow(10000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4gixyaby.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gixyaby.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the largest prime factor of a given number.\n    // >>> largestPrimeFactor(12l)\n    // (2l)\n    // >>> largestPrimeFactor(24l)\n    // (2l)\n    // >>> largestPrimeFactor(36l)\n    // (3l)\n    // >>> largestPrimeFactor(12l)\n    // (2l)\n    // >>> largestPrimeFactor(1l)\n    // (1l)\n    // >>> largestPrimeFactor(0l)\n    // (0l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            for (i <- 2l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return i\n                }\n            }\n            return n\n        }\n    }\n\n    // Return the largest palindrome made from the product of two 3-digit numbers.\n    // >>> largestPalindrome(999l)\n    // (9182736l)\n    // >>> largestPalindrome(123l)\n    // (9900l)\n    // >>> largestPalindrome(0l)\n    // (0l)\n    def largestPalindrome(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            for (i <- 999l to Math.sqrt(n)) {\n                for (j <- 999l to Math.sqrt(n)) {\n                    if (i * j == n) {\n                        return n\n                    }\n                }\n            }\n            return n\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkvxts43c.scala:104:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m104 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkvxts43c.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkvxts43c.scala:55:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkvxts43c.scala:77:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m999l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Double\n\u001b[31m   |\u001b[0m                              Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkvxts43c.scala:78:43 --------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m                \u001b[33mfor\u001b[0m (j <- \u001b[31m999l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    Double\n\u001b[31m   |\u001b[0m                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkvxts43c.scala:103:1 ---------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0frh0v19.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0frh0v19.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0frh0v19.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0frh0v19.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0frh0v19.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0frh0v19.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0frh0v19.scala:86:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3,5)\n    // >>> primeFactors(24l)\n    // (2,3,5,7)\n    // >>> primeFactors(30l)\n    // (2,3,5,7,11)\n    // >>> primeFactors(100l)\n    // (2,5,7,11,13,17,19,23,29)\n    // >>> primeFactors(1000l)\n    // (2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97)\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            return Seq(2)\n        } else if (n == 1) {\n            return Seq(1)\n        } else if (n % 2 == 0) {\n            return\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293061,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe2833q0z.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2833q0z.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2833q0z.scala:61:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m            \u001b[33mreturn\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    Unit\n\u001b[31m   |\u001b[0m            Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2833q0z.scala:79:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpe2833q0z.scala:63:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m63 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(18l)\n    // [2, 3, 3, 3]\n    // >>> primeFactors(24l)\n    // [2, 2, 3, 3]\n    // >>> primeFactors(36l)\n    // [2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(48l)\n    // [2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(60l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(120l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(180l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(240l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(360l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(720l)\n    // [2, 2, 2, 2, 2, 2\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwcok8st1.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcok8st1.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwcok8st1.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwcok8st1.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwcok8st1.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwcok8st1.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwcok8st1.scala:67:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(101l)\n    // (101,11)\n    // >>> primeFactors(11l)\n    // (11,1)\n    // >>> primeFactors(13441l)\n    // (13441,11,7)\n    // >>> primeFactors(61l)\n    // (61,1)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    def primeFactors(n : Long) : Tuple[Long, ...] = {\n        if (n == 2) {\n            (2l, 2l)\n        } else if (n == 1) {\n            (1l, 1l)\n        } else if (n % 2 == 0) {\n            (2l, 2l)\n        } else {\n            var i = 3l\n            while (n % i == 0) {\n                (i, i)\n                i = i + 2l\n            }\n            (n, i)\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(101l)\n    // (101,11)\n    // >>> primeFactors(11l)\n    // (11,1)\n    // >>> primeFactors(13441l)\n    // (13441,11,7)\n    // >>> primeFactors(61l)\n    // (61,1)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFact\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ds2c2qv.scala:51:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mprimeFactors\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mTuple\u001b[0m[\u001b[35mLong\u001b[0m, ...] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '.' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ds2c2qv.scala:99:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ds2c2qv.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ds2c2qv.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ds2c2qv.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ds2c2qv.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Erro",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9puq4m0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 9) {\n            return true\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 27) {\n            return true\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 31) {\n            return true\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n < 61) {\n            return true\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n < 91) {\n            return true\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n < 127) {\n            return true\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n < 181) {\n            return true\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n < 251) {\n            return true\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n < 383) {\n            return true\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n < 521) {\n            return true\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n < 769) {\n            return true\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n < 1023) {\n            return true\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n < 1531) {\n            return true\n        }\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf5v9xzmp.scala:107:8 --------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m        \u001b[33mif\u001b[0m (n < \u001b[31m1531\u001b[0m) {\n\u001b[31m\u001b[31m    |\u001b[0m        ^\u001b[0m\n\u001b[31m    |\u001b[0m        Found:    Unit\n\u001b[31m    |\u001b[0m        Required: Boolean\n\u001b[31m    |\u001b[0m        Maybe you are missing an else part for the conditional?\n\u001b[31m108 |\u001b[0m            \u001b[33mreturn\u001b[0m \u001b[31mtrue\u001b[0m\n\u001b[31m109 |\u001b[0m        }\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(12l)\n    // (12, 2)\n    // >>> primeFactors(6l)\n    // (6, 1)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 1)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 1)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(2l)\n    // (2, 1)\n    // >>> primeFactors(3l)\n    // (3, 1)\n    def primeFactors(n : Long) : Tuple[Long, Long] = {\n        if (n == 2) {\n            return Tuple(2l, 1l)\n        } else if (n == 1) {\n            return Tuple(1l, 1l)\n        } else if (n % 2 == 0) {\n            return Tuple(2l, 1l)\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return Tuple(i, 1l)\n                }\n            }\n            return Tuple(n, 1l)\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(12l)\n    // (12, 2)\n    // >>> primeFactors(6l)\n    // (6, 1)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293061,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1xzslaik.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1xzslaik.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E053] Type Error: /tmp/tmp1xzslaik.scala:55:33 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mprimeFactors\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mTuple\u001b[0m[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                 Tuple does not take type parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp1xzslaik.scala:57:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            \u001b[33mreturn\u001b[0m Tuple(\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mTuple\u001b[0m with types\n\u001b[31m   |\u001b[0m [T](x: T): T *: EmptyTuple\n\u001b[31m   |\u001b[0m (): EmptyTuple\n\u001b[31m   |\u001b[0mmatch arguments ((\u001b[31m2L\u001b[0m : Long), (\u001b[31m1L\u001b[0m : Long))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp1xzslaik.scala:59:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mreturn\u001b[0m Tuple(\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mTuple\u001b[0m with types\n\u001b[31m   |\u001b[0m [T](x: T): T *: EmptyTuple\n\u001b[31m   |\u001b[0m (): EmptyTuple\n\u001b[31m   |\u001b[0mmatch arguments ((\u001b[31m1L\u001b[0m : Long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 2, 2]\n    // >>> primeFactors(13l)\n    // [3, 3, 3, 3, 3]\n    // >>> primeFactors(4l)\n    // [2, 2]\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.List.apply([2, 2])\n        } else if (n == 1) {\n            return scala.collection.immutable.List.apply([])\n        } else {\n            var factors = scala.collection.immutable.List.empty()\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 2, 2]\n    // >>> primeFactors(13l)\n    // [3, 3, 3, 3, 3]\n    // >>> primeFactors(4l)\n    // [2, 2]\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.List.apply([2, 2])\n        } else if (n ==\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbzj4_que.scala:47:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m, \u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbzj4_que.scala:47:61 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m, \u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbzj4_que.scala:47:63 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m, \u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbzj4_que.scala:49:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but ']' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbzj4_que.scala:49:59 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([])\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbzj4_que.scala:73:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m, \u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime3(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps_fymqk5.scala:107:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps_fymqk5.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps_fymqk5.scala:59:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps_fymqk5.scala:106:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmps_fymqk5.scala:90:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m90 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmps_fymqk5.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n < 2l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 2, 3]\n    // >>> primeFactors(24l)\n    // [2, 2, 2, 3]\n    // >>> primeFactors(1l)\n    // []\n    // >>> primeFactors(4l)\n    // [2, 2]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(61l)\n    // [11, 17, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61]\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2l) {\n            return scala.collection.immutable.List.apply([2l])\n        } else if (n < 2l) {\n            return scala.collection.immutable.List.empty()\n        } else if (n == 3l) {\n            return scala.collection.immutable.List.apply([3l])\n        } else if (n % 2l == 0l) {\n            return primeFactors(n / 2l)\n        } else {\n            var factors = scala.collection.immutable.List.empty()\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplalc57p5.scala:53:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2l\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          an identifier expected, but long literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplalc57p5.scala:53:61 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2l\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplalc57p5.scala:57:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m3l\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          an identifier expected, but long literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplalc57p5.scala:57:61 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m3l\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplalc57p5.scala:91:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplalc57p5.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compil",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(12l)\n    // [2, 2, 3]\n    // >>> primeFactors(1l)\n    // []\n    // >>> primeFactors(4l)\n    // [2, 2]\n    // >>> primeFactors(13441l)\n    // [11, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primeFactors(n : Long) : List[Long] = {\n        if (n == 2) {\n            [2]\n        } else if (n == 1) {\n            []\n        } else if (n % 2 == 0) {\n            [2, n / 2]\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    (i, n / i)\n                }\n            }\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6l)\n    // [6]\n    // >>> primeFactors2(12l)\n    // [2, 2, 3]\n    // >>> primeFactors2(1l)\n    // []\n    // >>> primeFactors2(4l)\n    // [2, 2]\n    // >>> primeFactors2(13441l)\n    // [11, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primeFactors2(n : Long) :\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:49:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            [\u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:50:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n == \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:51:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            []\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             an identifier expected, but ']' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:52:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:53:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            [\u001b[31m2\u001b[0m, n / \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:53:18 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            [\u001b[31m2\u001b[0m, n / \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  ']' expected, but identifier found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:54:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        } \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:75:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_xjewiv.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 7]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 61, 7, 5, 3, 2, 1]\n    // >>> primeFactors(61l)\n    // [61, 5, 3, 2, 1]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.List.apply([2])\n        } else if (n == 1) {\n            return scala.collection.immutable.List.apply([])\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            return primeFactors(3).$plus$plus(primeFactors(n - 1))\n        }\n    }\n\n    // Return the sum of the prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(101l)\n    // 101\n    // >>> primeSum(11l)\n    // 23\n    // >>> primeSum(13441l)\n    // 30241\n    // >>> primeSum(61l)\n    // 4181\n    // >>> primeSum(4l)\n    // 2\n    // >>> primeSum(1l)\n    // 1\n    def primeSum(n : Long\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0vbs5_98.scala:53:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0vbs5_98.scala:53:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0vbs5_98.scala:55:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but ']' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0vbs5_98.scala:55:59 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([])\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0vbs5_98.scala:79:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0vbs5_98.scala:96:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0vbs5_98.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 1 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to n.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    def primes(n : Long) : Seq[Long] = {\n        if (n == 0) {\n            Seq.empty[Long]\n        } else if (n == 1) {\n            Seq.single(2l)\n        } else {\n            for (i <- 2 to n) {\n                if (isPrime(i)) {\n                    Seq.append(i, primes(n - 1))\n                }\n            }\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to n.\n    // >>> primes2(10)\n    // (2, 3, 5, 7)\n    // >>> primes2(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes2(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    def primes2(n : Long) : Seq[Long] = {\n        if (n == 0) {\n            Seq.empty[Long]\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8kltefcr.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8kltefcr.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8kltefcr.scala:47:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            Seq.single(\u001b[31m2l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue single is not a member of object scala.collection.mutable.Seq - did you mean Seq.range?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8kltefcr.scala:49:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8kltefcr.scala:51:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m                    Seq.append(i, primes(n - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of object scala.collection.mutable.Seq - did you mean Seq.apply?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8kltefcr.scala:85:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp8kltefcr.scala:69:4 -----------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // [2]\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 2, 3]\n    // >>> primeFactors(24l)\n    // [2, 2, 2, 3, 3]\n    // >>> primeFactors(30l)\n    // [2, 5, 3]\n    // >>> primeFactors(60l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 3, 3]\n    // >>> primeFactors(120l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3]\n    // >>> primeFactors(1260l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293061,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyzp518rv.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyzp518rv.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyzp518rv.scala:55:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyzp518rv.scala:56:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyzp518rv.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyzp518rv.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyzp518rv.scala:59:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 7]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 61, 7, 5, 3, 2, 1]\n    // >>> primeFactors(61l)\n    // [61, 5, 3, 2, 1]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : List[Long] = {\n        if (n == 2) {\n            return List(2)\n        } else if (n == 1) {\n            return List()\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            var factors = List()\n            for (i <- 3 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the sum of the prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(101l)\n    // 101\n    // >>> primeSum(11l)\n    // 23\n    // >>> primeSum(13441l)\n    // 30241\n    // >>> primeSum(61l)\n    // 661\n    // >>> primeSum(4l)\n    // 0\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293063,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1yqad8nu.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yqad8nu.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yqad8nu.scala:60:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1yqad8nu.scala:62:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                    factors = factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Nothing] - did you mean List[Nothing].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1yqad8nu.scala:63:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                    factors = factors.append(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Nothing] - did you mean List[Nothing].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1yqad8nu.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when co",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (n % 43 == 0) {\n            return false\n        }\n        if (n % 47 == 0) {\n            return false\n        }\n        if (n % 53 == 0) {\n            return false\n        }\n        if (n % 59 == 0) {\n            return false\n        }\n        if (n % 61 == 0) {\n            return false\n        }\n        if (n % 67 == 0) {\n            return false\n        }\n        if (n % 71 == 0) {\n            return false\n        }\n        if (n % 73 == 0) {\n            return false\n        }\n        if (n % 79 == 0) {\n            return false\n        }\n        if (n % 83 == 0) {\n            return false\n        }\n        if (n % 89 == 0) {\n            return false\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjevk611s.scala:125:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m125 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjevk611s.scala:124:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m124 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjevk611s.scala:108:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m108 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10l)\n    // (2, 3, 5, 7)\n    // >>> primesBelow(100l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primesBelow(1000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primesBelow(10000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplmnn901e.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmnn901e.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplmnn901e.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplmnn901e.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplmnn901e.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplmnn901e.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplmnn901e.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(12l)\n    // (2,2,3)\n    // >>> primeFactors(12l)\n    // (2,3,3)\n    // >>> primeFactors(12l)\n    // (2,3,5)\n    // >>> primeFactors(12l)\n    // (2,3,5,7)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23,29)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23,29,31)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23,29,31,37)\n    // >>> primeFactors(12l)\n    // (2,3,5,7,11,13,17,19,23,29,31,37,41)\n    // >>> primeFactors\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293062,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph12g_az6.scala:83:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph12g_az6.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph12g_az6.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph12g_az6.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph12g_az6.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph12g_az6.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph12g_az6.scala:72:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 5)\n    // >>> primeFactors(13l)\n    // (13, 11)\n    // >>> primeFactors(61l)\n    // (31, 41)\n    // >>> primeFactors(4l)\n    // (2, 2)\n    // >>> primeFactors(1l)\n    // (1)\n    def primeFactors(n : Long) : scala.collection.immutable.Set[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.Set(2)\n        } else if (n == 1) {\n            return scala.collection.immutable.Set(1)\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            var factors = scala.collection.immutable.Set.empty()\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.updated(i)\n                    factors = factors.updated(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(2l)\n    // (2)\n    // >>> primeFactors2(6l)\n    // (2, 3)\n    // >>> primeFactors2(12l)\n    // (2, 3, 5)\n    // >>> primeFactors2(13\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293064,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe3f01pz8.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3f01pz8.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpe3f01pz8.scala:59:62 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.immutable.Set.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter elem of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSetOps\u001b[0m: (elem: A): Boolean\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3f01pz8.scala:60:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3f01pz8.scala:80:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3f01pz8.scala:81:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 7]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 61, 7, 5, 3, 2, 1]\n    // >>> primeFactors(61l)\n    // [61, 5, 3, 2, 1]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            return Seq(2)\n        } else if (n == 1) {\n            return Seq()\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return primeFactors(n / i).append(i)\n                }\n            }\n            return primeFactors(n)\n        }\n    }\n\n    // Return the sum of all prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(101l)\n    // 101\n    // >>> primeSum(11l)\n    // 23\n    // >>> primeSum(13441l)\n    // 13441\n    // >>> primeSum(61l)\n    // 2401\n    // >>> primeSum(4l)\n    // 2\n    // >>> primeSum(1l)\n    // 1\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnrz9jw1j.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrz9jw1j.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrz9jw1j.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnrz9jw1j.scala:61:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                    \u001b[33mreturn\u001b[0m primeFactors(n / i).append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of collection.mutable.Seq[Long] - did you mean collection.mutable.Seq[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrz9jw1j.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrz9jw1j.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // (6, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 3)\n    // >>> primeFactors(12)\n    // (2, 3, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12)\n    // (2,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp471eoxc_.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp471eoxc_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp471eoxc_.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp471eoxc_.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp471eoxc_.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp471eoxc_.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp471eoxc_.scala:69:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // [2, 2, 2]\n    // >>> primeFactors(12)\n    // [2, 2, 2, 3]\n    // >>> primeFactors(1)\n    // []\n    // >>> primeFactors(13)\n    // [13]\n    // >>> primeFactors(13 * 13)\n    // [13, 13]\n    // >>> primeFactors(13 * 13 * 13)\n    // [13, 13, 13]\n    // >>> primeFactors(13 * 13 * 13 * 13)\n    // [13, 13, 13, 13]\n    def primeFactors(n : Long) : List[Long] = {\n        if (n == 1) {\n            return Nil\n        } else if (n == 2) {\n            return List(2)\n        } else {\n            var factors = List.empty[Long]\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6)\n    // [2, 2, 2]\n    // >>> primeFactors2(12)\n    // [2, 2, 2, 3]\n    // >>> primeFactors2(1)\n    // []\n    // >>> primeFactors2(13)\n    // [13]\n    // >>> primeFactors2(13 * 13)\n    // [13, 13]\n    // >>> primeFactors2(13 * 13 * 13)\n    // [\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe4ig2fv7.scala:98:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4ig2fv7.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4ig2fv7.scala:58:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe4ig2fv7.scala:60:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m                    factors = factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe4ig2fv7.scala:61:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                    factors = factors.append(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe4ig2fv7.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006]",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 1)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    def primeFactors(n : Long) : Tuple2[Long, Long] = {\n        if (n == 2) {\n            return Tuple2(2l, 1l)\n        } else if (n == 1) {\n            return Tuple2(1l, 1l)\n        } else if (n % 2 == 0) {\n            return Tuple2(2l, 1l)\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return Tuple2(i, 1l)\n                }\n            }\n            return Tuple2(n, 1l)\n        }\n    }\n\n    // Return the sum of the prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(13l)\n    // 5\n    // >>> primeSum(11l)\n    // 2\n    // >>> primeSum(13441l)\n    // 13\n    // >>> primeSum(61l)\n    // 3\n    // >>> primeSum(4l)\n    // 2\n    // >>> primeSum(\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg505b6oj.scala:99:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg505b6oj.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg505b6oj.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg505b6oj.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg505b6oj.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg505b6oj.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compil",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(13l)\n    // (13,3,5)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    // >>> primeFactors(11l)\n    // (11,1)\n    // >>> primeFactors(101l)\n    // (101,1)\n    // >>> primeFactors(61l)\n    // (61,1)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2) {\n            Vector(2)\n        } else if (n == 1) {\n            Vector(1)\n        } else if (n % 2 == 0) {\n            Vector(2)\n        } else {\n            var factors = Vector.empty()\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.updated(i)\n                    factors = factors.updated(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // (5,2,3)\n    // >>> primes(13l)\n    // (11,13)\n    // >>> primes(4l)\n    // (3,2)\n    // >>> primes(1l\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9zptqcxj.scala:99:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zptqcxj.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9zptqcxj.scala:63:38 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zptqcxj.scala:64:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9zptqcxj.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9zptqcxj.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 3)\n    // >>> primeFactors(24l)\n    // (2, 2, 2, 3)\n    // >>> primeFactors(12l)\n    // (2, 2, 3)\n    // >>> primeFactors(1l)\n    // (1)\n    // >>> primeFactors(0l)\n    // (0)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            return scala.collection.immutable.Vector.empty()\n        } else if (n == 1) {\n            return scala.collection.immutable.Vector.singleton(1l)\n        } else {\n            var factors = scala.collection.immutable.Vector.empty()\n            for (i <- 2l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the sum of the prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(12l)\n    // 3\n    // >>> primeSum(24l)\n    // 3\n    // >>> primeSum(12l)\n    // 3\n    // >>> primeSum(1l)\n    // 1\n    // >>> primeSum(0l)\n    // 0\n    def primeSum(n : Long) : Long = {\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7cjnq4we.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7cjnq4we.scala:51:58 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7cjnq4we.scala:53:53 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.singleton(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue singleton is not a member of object scala.collection.immutable.Vector\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7cjnq4we.scala:55:65 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7cjnq4we.scala:56:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-e",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(101l)\n    // (101,11)\n    // >>> primeFactors(11l)\n    // (11,1)\n    // >>> primeFactors(13441l)\n    // (13441,11,7)\n    // >>> primeFactors(61l)\n    // (61,1)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    // >>> primeFactors(0l)\n    // (0,0)\n    def primeFactors(n : Long) : Tuple2[Long, Tuple2[Long, ...]] = {\n        if (n == 0) {\n            (0, (0,))\n        } else if (n == 1) {\n            (1, (1,))\n        } else {\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    (n / i, (i,))\n                }\n            }\n            (n, ())\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6l)\n    // (6,2)\n    // >>> primeFactors2(101l)\n    // (101,11)\n    // >>> primeFactors2(11l)\n    // (11,1)\n    // >>> primeFactors2(13441l)\n    // (13441,11,7)\n    // >>> primeFactors2(61l)\n    // (61,1)\n    // >>> primeFactors2(\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ynut_w.scala:53:59 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mprimeFactors\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mTuple2\u001b[0m[\u001b[35mLong\u001b[0m, \u001b[35mTuple2\u001b[0m[\u001b[35mLong\u001b[0m, ...]] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '.' found\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpq9ynut_w.scala:55:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            (\u001b[31m0\u001b[0m, (\u001b[31m0\u001b[0m,))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpq9ynut_w.scala:57:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            (\u001b[31m1\u001b[0m, (\u001b[31m1\u001b[0m,))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpq9ynut_w.scala:61:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                    (n / i, (i,))\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ynut_w.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq9ynut_w.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // [2, 3, 5, 7]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelow(1000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primesBelow(10000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 6\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7uvtbpez.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uvtbpez.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        }\n        if (n == 1l) {\n            return false\n        }\n        if (n % 2l == 0l) {\n            return false\n        }\n        if (n < 2l) {\n            return false\n        }\n        if (n < 4l) {\n            return true\n        }\n        if (n % 2l == 0l) {\n            return false\n        }\n        if (n < 9l) {\n            return true\n        }\n        if (n % 3l == 0l) {\n            return false\n        }\n        if (n < 27l) {\n            return true\n        }\n        if (n % 3l == 0l) {\n            return false\n        }\n        if (n < 31l) {\n            return true\n        }\n        if (n % 5l == 0l) {\n            return false\n        }\n        if (n < 61l) {\n            return true\n        }\n        if (n % 5l == 0l) {\n            return false\n        }\n        if (n < 91l) {\n            return true\n        }\n        if (n % 7l == 0l) {\n            return false\n        }\n        if (n < 121l) {\n            return true\n        }\n        if (n % 7l == 0l) {\n            return false\n        }\n        if (n < 169l) {\n            return true\n        }\n        if (n % 11l == 0l) {\n            return false\n        }\n        if (n < 241l) {\n            return true\n        }\n        if (n % 11l == 0l) {\n            return false\n        }\n        if (n < 361l) {\n            return true\n        }\n        if (n % 13l == 0l) {\n            return false\n        }\n        if (n < 491l) {\n            return true\n        }\n        if (n % 13l == 0l) {\n            return false\n        }\n        if (n < 661l) {\n            return true\n        }\n        if (n % 17l == 0l) {\n            return\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_8p927iv.scala:121:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m121 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8p927iv.scala:102:12 -------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m            \u001b[33mreturn\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m            Found:    Unit\n\u001b[31m    |\u001b[0m            Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8p927iv.scala:120:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m120 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp_8p927iv.scala:104:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m104 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11, 19]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primeFactors(61l)\n    // [61, 89, 137]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            Seq(2)\n        } else if (n == 1) {\n            Seq()\n        } else if (n % 2 == 0) {\n            Seq(2)\n        } else {\n            var factors = new java.util.ArrayList()\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors.add(i)\n                    factors.add(n / i)\n                }\n            }\n            factors.add(n)\n            scala.collection.immutable.List.fromIterator(factors.iterator()).toSeq()\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6l)\n    // [2, 3]\n    // >>> primeFactors2(101l)\n    // [101, 11, 19]\n    // >>> primeFact\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqbt92bmz.scala:94:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbt92bmz.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbt92bmz.scala:60:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbt92bmz.scala:62:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                    factors.add(i)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (i : Long)\n\u001b[31m   |\u001b[0m                                Required: Nothing\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbt92bmz.scala:63:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                    factors.add(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    Long\n\u001b[31m   |\u001b[0m                                Required: Nothing\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbt92bmz.scala:66:24 --------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m            factors.add(n)\n\u001b[31m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(13l)\n    // (13,3,5)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    // >>> primeFactors(0l)\n    // (0,0)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            scala.collection.immutable.Vector.empty()\n        } else if (n == 1) {\n            scala.collection.immutable.Vector.single(1)\n        } else {\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    scala.collection.immutable.Vector.single(i)\n                }\n            }\n            scala.collection.immutable.Vector.single(n)\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // (5,2,3)\n    // >>> primes(13l)\n    // (11,13)\n    // >>> primes(4l)\n    // (3,2)\n    // >>> primes(1l)\n    // (1)\n    // >>> primes(0l)\n    // ()\n    def primes(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            scala.collection.immutable.Vector.empty()\n        } else if (n == 1) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293077,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj5yzssig.scala:96:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5yzssig.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj5yzssig.scala:49:51 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj5yzssig.scala:51:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            scala.collection.immutable.Vector.single(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue single is not a member of object scala.collection.immutable.Vector - did you mean Vector.range?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5yzssig.scala:53:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj5yzssig.scala:55:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                    scala.collection.immutable.Vector.single(i)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 1 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg4v8hfi.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpwg4v8hfi.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptf9c_je9.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9puq4m0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // [2, 3, 5, 7]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primesBelow(n : Long) : List[Long] = {\n        if (n == 2) {\n            List(2)\n        } else if (n == 1) {\n            List(1)\n        } else {\n            var primes = List(2)\n            for (i <- 3 to Math.sqrt(n)) {\n                if (isPrime(i)) {\n                    primes = primes.append(i)\n                }\n            }\n            primes\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primesBelow2(n : Long) : List[Long] = {\n        if (n == 2) {\n            List(2)\n        } else if (n == 1) {\n            List(1)\n        } else {\n            var primes = List(2)\n            for (i <- 3 to Math.sqrt(n)) {\n                if\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293077,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp726gg7c0.scala:70:18 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m                \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp726gg7c0.scala:89:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp726gg7c0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp726gg7c0.scala:50:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp726gg7c0.scala:52:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                    primes = primes.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Int] - did you mean List[Int].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp726gg7c0.scala:55:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            primes\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    (primes : List[Int])\n\u001b[31m   |\u001b[0m            Required: List[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime2((6l))\n    // (false)\n    // >>> isPrime2((101l))\n    // (true)\n    // >>> isPrime2((11l))\n    // (true)\n    // >>> isPrime2((13441l))\n    // (true)\n    // >>> isPrime2((61l))\n    // (true)\n    // >>> isPrime2((4l))\n    // (false)\n    // >>> isPrime2((1l))\n    // (false)\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime3((6l))\n    // (false)\n    // >>> isPrime3((101l))\n    // (true)\n    // >>> isPrime3((11l))\n    // (true)\n    // >>> isPrime3((13441l))\n    // (true)\n    // >>> isPrime3((61l))\n    // (true)\n    // >>> isPrime3((4l))\n    // (false)\n    // >>> isPrime3((1l))\n    // (false)\n    def isPrime3(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw6mu74af.scala:107:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6mu74af.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6mu74af.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6mu74af.scala:106:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpw6mu74af.scala:90:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m90 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpw6mu74af.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // [2, 3]\n    // >>> primeFactors(4)\n    // [2]\n    // >>> primeFactors(1)\n    // []\n    // >>> primeFactors(13441)\n    // [11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            return Seq(2)\n        } else if (n == 1) {\n            return Seq()\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return primeFactors(n / i)\n                }\n            }\n            return primeFactors(n)\n        }\n    }\n\n    // Return the sum of the prime factors of a given number.\n    // >>> primeFactorSum(6)\n    // 3\n    // >>> primeFactorSum(4)\n    // 2\n    // >>> primeFactorSum(1)\n    // 0\n    // >>> primeFactorSum(13441)\n    // 7\n    def primeFactorSum(n : Long) : Long = {\n        if (n == 2) {\n            return 2\n        } else if (n == 1) {\n            return 0\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return primeFactorSum(n / i) + i\n                }\n            }\n            return primeFactorSum(n)\n        }\n    }\n\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjzfiun26.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjzfiun26.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjzfiun26.scala:51:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjzfiun26.scala:75:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzfiun26.scala:87:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzfiun26.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 5)\n    // >>> primeFactors(13441l)\n    // (2, 3, 5, 7)\n    // >>> primeFactors(61l)\n    // (2, 3, 5, 7, 11)\n    // >>> primeFactors(4l)\n    // (2, 2)\n    // >>> primeFactors(1l)\n    // (1)\n    def primeFactors(n : Long) : scala.collection.immutable.Set[Long] = {\n        if (n < 2) {\n            return scala.collection.immutable.Set.empty()\n        } else if (n == 2) {\n            return scala.collection.immutable.Set.of(2)\n        } else {\n            var factors = scala.collection.immutable.Set.empty()\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.updated(i)\n                    factors = factors.updated(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(2l)\n    // (2)\n    // >>> primeFactors2(6l)\n    // (2, 3)\n    // >>> primeFactors2(12l)\n    // (2, 3, 5)\n    // >>> primeFactors2(13441l)\n    // (2, 3, 5,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293077,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8_740jm4.scala:94:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8_740jm4.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8_740jm4.scala:53:55 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Set.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter elem of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSetOps\u001b[0m: (elem: A): Boolean\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8_740jm4.scala:55:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Set.of(\u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m       value of is not a member of object scala.collection.immutable.Set\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8_740jm4.scala:57:62 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.immutable.Set.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter elem of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSetOps\u001b[0m: (elem: A): Boolean\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8_740jm4.scala:58:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(13l)\n    // (13,3,5)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    // >>> primeFactors(11l)\n    // (11,1)\n    // >>> primeFactors(101l)\n    // (101,1)\n    // >>> primeFactors(61l)\n    // (61,1)\n    // >>> primeFactors(4l)\n    // (4,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2) {\n            Vector(2)\n        } else if (n == 1) {\n            Vector(1)\n        } else if (n % 2 == 0) {\n            Vector(2, n / 2)\n        } else {\n            var factors = Vector(1, n)\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.updated(i)\n                    factors = factors.updated(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // (2,3,5)\n    // >>> primes(13l)\n    // (2,3,5,7,11)\n    // >>> primes(4l)\n    // (\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm392c6hm.scala:98:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm392c6hm.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm392c6hm.scala:64:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpm392c6hm.scala:66:45 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m                    factors = factors.updated(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter elem of \u001b[33mmethod\u001b[0m \u001b[35mupdated\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mVector\u001b[0m: (index: Int, elem: Long): Vector[Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm392c6hm.scala:67:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m                    factors = factors.updated(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    Long\n\u001b[31m   |\u001b[0m                                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm392c6hm.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 8) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 16) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 32) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 64) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 128) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 256) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 512) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 1024) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2048) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 4096) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 8192) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp2vpf03hb.scala:110:12 --------------------------\u001b[0m\u001b[0m\n\u001b[31m110 |\u001b[0m        \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m    |\u001b[0m            ^\u001b[0m\n\u001b[31m    |\u001b[0m            expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 5)\n    // >>> primeFactors(13l)\n    // (13, 11)\n    // >>> primeFactors(61l)\n    // (31, 41)\n    // >>> primeFactors(4l)\n    // (2, 2)\n    // >>> primeFactors(1l)\n    // ()\n    def primeFactors(n : Long) : scala.collection.immutable.Set[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.Set(2)\n        } else if (n == 1) {\n            return scala.collection.immutable.Set()\n        } else {\n            var factors = scala.collection.mutable.Set[Long]()\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors.add(i)\n                    factors.add(n / i)\n                }\n            }\n            return factors.toSet()\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(10l)\n    // (2, 3, 5, 7)\n    // >>> primes(100l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp63esxfx7.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63esxfx7.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63esxfx7.scala:58:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp63esxfx7.scala:64:32 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mreturn\u001b[0m factors.toSet()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter elem of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSetOps\u001b[0m: (elem: Long): Boolean\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp63esxfx7.scala:77:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp63esxfx7.scala:78:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation availabl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // [2, 3, 5, 7]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelow(1000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primesBelow(10000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 6\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7uvtbpez.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uvtbpez.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7uvtbpez.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    def primeFactors(n : Long) : Tuple2[Long, Long] = {\n        if (n == 2) {\n            (2, 1)\n        } else if (n == 1) {\n            (1, 1)\n        } else if (n % 2 == 0) {\n            (2, 1)\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    (i, 1)\n                }\n            }\n            (n, 1)\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(61l)\n    // (61\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpklkdsofu.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpklkdsofu.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpklkdsofu.scala:61:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpklkdsofu.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpklkdsofu.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpklkdsofu.scala:87:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when com",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 5)\n    // >>> primeFactors(13l)\n    // (13, 11)\n    // >>> primeFactors(61l)\n    // (31, 41)\n    // >>> primeFactors(4l)\n    // (2, 2)\n    // >>> primeFactors(1l)\n    // (1)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.Vector.apply([2])\n        } else if (n == 1) {\n            return scala.collection.immutable.Vector.apply([1])\n        } else {\n            var factors = scala.collection.mutable.Vector[Long]()\n            for (i <- 3 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors.toVector()\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(2l)\n    // (2)\n    // >>> primeFactors2(6l)\n    // (2, 3)\n    // >>> primeFactors2(12l)\n    // (2, 3, 5)\n    // >>> primeFactors2(13l)\n    // (13, 11)\n    // >>> prime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpki6n9mz8.scala:53:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpki6n9mz8.scala:53:62 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpki6n9mz8.scala:55:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.apply([\u001b[31m1\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpki6n9mz8.scala:55:62 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.apply([\u001b[31m1\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpki6n9mz8.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpki6n9mz8.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation av",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to n.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 6\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293077,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj1oejhn9.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1oejhn9.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1oejhn9.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1oejhn9.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1oejhn9.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1oejhn9.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1oejhn9.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2,3)\n    // >>> primeFactors(12l)\n    // (2,3,3,2)\n    // >>> primeFactors(13l)\n    // (13,11,7)\n    // >>> primeFactors(61l)\n    // (61,41,31,23,17,13,11,7,5,3,2,1)\n    // >>> primeFactors(4l)\n    // (4,2,2)\n    // >>> primeFactors(1l)\n    // (1)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2) {\n            Vector(2)\n        } else if (n == 1) {\n            Vector(1)\n        } else if (n % 2 == 0) {\n            Vector(2, n / 2)\n        } else {\n            var factors = Vector(1, n)\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.updated(i)\n                    factors = factors.updated(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2,3)\n    // >>> primeFactors(12l)\n    // (2,3,3,2)\n    // >>> primeFactors(13l)\n    // (13,11,7)\n    // >>> primeFactors(61l)\n    // (61,41,31,23,17\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3nm42073.scala:94:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3nm42073.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3nm42073.scala:58:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3nm42073.scala:60:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m                    factors = factors.updated(i)\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (i : Long)\n\u001b[31m   |\u001b[0m                                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3nm42073.scala:61:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                    factors = factors.updated(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    Long\n\u001b[31m   |\u001b[0m                                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // [2, 3]\n    // >>> primeFactors(12)\n    // [2, 2, 3]\n    // >>> primeFactors(13)\n    // [13]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293084,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcs3tg1ti.scala:98:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcs3tg1ti.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcs3tg1ti.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcs3tg1ti.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcs3tg1ti.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcs3tg1ti.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcs3tg1ti.scala:87:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(18l)\n    // [2, 3, 3, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv_wckf3a.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_wckf3a.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_wckf3a.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_wckf3a.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_wckf3a.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_wckf3a.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_wckf3a.scala:86:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the number of prime numbers less than or equal to a given number.\n    // >>> primes(10)\n    // (2)\n    // >>> primes(100)\n    // (3)\n    // >>> primes(1000)\n    // (3)\n    // >>> primes(10000)\n    // (5)\n    // >>> primes(100000)\n    // (11)\n    // >>> primes(1000000)\n    // (101)\n    def primes(n : Long) : Long = {\n        if (n == 2) {\n            2\n        } else if (n == 3) {\n            3\n        } else if (n == 5) {\n            5\n        } else if (n == 7) {\n            7\n        } else if (n == 11) {\n            11\n        } else if (n == 13) {\n            13\n        } else if (n == 17) {\n            17\n        } else if (n == 19) {\n            19\n        } else if (n == 23) {\n            23\n        } else if (n == 29) {\n            29\n        } else if (n == 31) {\n            31\n        } else if (n == 37) {\n            37\n        } else if (n == 41) {\n            41\n        } else if (n == 43) {\n            43\n        } else if (n == 47) {\n            47\n        } else if (n == 53) {\n            53\n        } else if (n == 59) {\n            59\n        } else if (n == 61) {\n            61\n        } else if (n == 67) {\n            67\n        } else if (n == 71) {\n            71\n        } else if (n == 73) {\n            73\n        } else if\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293084,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp_roatzrh.scala:92:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_roatzrh.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmp_roatzrh.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 1l to (n - 1l)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 5)\n    // >>> primeFactors(13441l)\nn    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvmic2hyd.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvmic2hyd.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvmic2hyd.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvmic2hyd.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvmic2hyd.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvmic2hyd.scala:51:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(isPrime((\u001b[31m61l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvmic2hyd.scala:52:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(isPrime((\u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m)",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 8) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 16) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 32) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 64) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 128) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 256) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 512) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 1024) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2048) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 4096) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 8192) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp2vpf03hb.scala:110:12 --------------------------\u001b[0m\u001b[0m\n\u001b[31m110 |\u001b[0m        \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m    |\u001b[0m            ^\u001b[0m\n\u001b[31m    |\u001b[0m            expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime2((6l))\n    // (false)\n    // >>> isPrime2((101l))\n    // (true)\n    // >>> isPrime2((11l))\n    // (true)\n    // >>> isPrime2((13441l))\n    // (true)\n    // >>> isPrime2((61l))\n    // (true)\n    // >>> isPrime2((4l))\n    // (false)\n    // >>> isPrime2((1l))\n    // (false)\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime3((6l))\n    // (false)\n    // >>> isPrime3((101l))\n    // (true)\n    // >>> isPrime3((11l))\n    // (true)\n    // >>> isPrime3((13441l))\n    // (true)\n    // >>> isPrime3((61l))\n    // (true)\n    // >>> isPrime3((4l))\n    // (false)\n    // >>> isPrime3((1l))\n    // (false)\n    def isPrime3(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw6mu74af.scala:107:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6mu74af.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6mu74af.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw6mu74af.scala:106:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpw6mu74af.scala:90:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m90 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpw6mu74af.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 9) {\n            return true\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n < 25) {\n            return true\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n < 49) {\n            return true\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n < 121) {\n            return true\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n < 169) {\n            return true\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n < 257) {\n            return true\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n < 321) {\n            return true\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n < 491) {\n            return true\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n < 661) {\n            return true\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n < 1009) {\n            return true\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n < 1601) {\n            return true\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpszoqvron.scala:107:8 --------------------\u001b[0m\u001b[0m\n\u001b[31m107 |\u001b[0m        \u001b[33mif\u001b[0m (n % \u001b[31m41\u001b[0m == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m    |\u001b[0m        ^\u001b[0m\n\u001b[31m    |\u001b[0m        Found:    Unit\n\u001b[31m    |\u001b[0m        Required: Boolean\n\u001b[31m    |\u001b[0m        Maybe you are missing an else part for the conditional?\n\u001b[31m108 |\u001b[0m            \u001b[33mreturn\u001b[0m \u001b[31mfalse\u001b[0m\n\u001b[31m109 |\u001b[0m        }\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // [2, 3]\n    // >>> primeFactors(13)\n    // [13, 5, 7]\n    // >>> primeFactors(4)\n    // []\n    // >>> primeFactors(1)\n    // []\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            Seq(2)\n        } else if (n == 1) {\n            Seq()\n        } else if (n % 2 == 0) {\n            Seq(2)\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    Seq(i, n / i)\n                }\n            }\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(10)\n    // [2, 3, 5, 7]\n    // >>> primes(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primes(1000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primes(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            Seq(2)\n        } else if (n == 1) {\n            Seq()\n        } else if (n % 2 == 0) {\n            Seq(2)\n        } else {\n            for (i <- 3 to Math.sqrt\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpujepz0g2.scala:77:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpujepz0g2.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujepz0g2.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujepz0g2.scala:53:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujepz0g2.scala:76:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double => Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujepz0g2.scala:94:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpujepz0g2.scala:78:4 -----------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the largest prime factor of a given number.\n    // >>> largestPrimeFactor(6l)\n    // (3l)\n    // >>> largestPrimeFactor(12l)\n    // (2l)\n    // >>> largestPrimeFactor(13l)\n    // (13l)\n    // >>> largestPrimeFactor(14l)\n    // (2l)\n    // >>> largestPrimeFactor(15l)\n    // (3l)\n    // >>> largestPrimeFactor(16l)\n    // (2l)\n    // >>> largestPrimeFactor(17l)\n    // (17l)\n    // >>> largestPrimeFactor(19l)\n    // (19l)\n    // >>> largestPrimeFactor(20l)\n    // (2l)\n    // >>> largestPrimeFactor(21l)\n    // (3l)\n    // >>> largestPrimeFactor(22l)\n    // (2l)\n    // >>> largestPrimeFactor(23l)\n    // (23l)\n    def largestPrimeFactor(n : Long) : Long = {\n        if (n == 1) {\n            return 1l\n        } else if (n == 2) {\n            return 2l\n        } else if (n % 2 == 0) {\n            return 2l\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return i\n                }\n            }\n            return n\n        }\n    }\n\n    // Return the sum of all prime factors of a given number.\n    // >>> sumOfPrimeFactors(6l)\n    // (3l)\n    // >>> sumOfPrimeFactors(12l)\n    // (2l)\n    // >>> sumOfPrimeFactors(13l)\n    \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix_3mp6x.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpix_3mp6x.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpix_3mp6x.scala:69:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpix_3mp6x.scala:87:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpix_3mp6x.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpix_3mp6x.scala:89:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation availabl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293086,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl6cfq9dk.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl6cfq9dk.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl6cfq9dk.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl6cfq9dk.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl6cfq9dk.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl6cfq9dk.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl6cfq9dk.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu3xghnpr.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3xghnpr.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu3xghnpr.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(101l)\n    // [101, 11]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13441, 61]\n    // >>> primeFactors(61l)\n    // [61]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            scala.collection.immutable.List[Long](2)\n        } else if (n == 1) {\n            scala.collection.immutable.List[Long](1)\n        } else if (n % 2 == 0) {\n            scala.collection.immutable.List[Long](2)\n        } else {\n            var factors = scala.collection.immutable.List[Long](1)\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the sum of all prime factors of a given number.\n    // >>> primeSum(6l)\n    // 3\n    // >>> primeSum(101l)\n    // 101\n    // >>> primeSum(11l)\n    // 23\n    // >>> primeSum(13441l)\n    // 30241\n    // >>> primeSum(61l)\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293089,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps7he58n9.scala:98:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps7he58n9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps7he58n9.scala:60:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps7he58n9.scala:62:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                    factors = factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps7he58n9.scala:63:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                    factors = factors.append(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps7he58n9.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9puq4m0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (n % 43 == 0) {\n            return false\n        }\n        if (n % 47 == 0) {\n            return false\n        }\n        if (n % 53 == 0) {\n            return false\n        }\n        if (n % 59 == 0) {\n            return false\n        }\n        if (n % 61 == 0) {\n            return false\n        }\n        if (n % 67 == 0) {\n            return false\n        }\n        if (n % 71 == 0) {\n            return false\n        }\n        if (n % 73 == 0) {\n            return false\n        }\n        if (n % 79 == 0) {\n            return false\n        }\n        if (n % 83 == 0) {\n            return false\n        }\n        if (n % 89 == 0) {\n            return false\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjevk611s.scala:125:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m125 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjevk611s.scala:124:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m124 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjevk611s.scala:108:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m108 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // [2, 3]\n    // >>> primeFactors(12)\n    // [2, 2, 3]\n    // >>> primeFactors(13)\n    // [13]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    // >>> primeFactors(1337)\n    // [13, 37]\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.List.apply([2])\n        } else if (n == 3) {\n            return scala.collection.immutable.List.apply([3])\n        } else if (n == 5) {\n            return scala.collection.immutable.List.apply([5])\n        } else if (n == 7) {\n            return scala.collection.immutable.List.apply([7])\n        } else if (n == 11) {\n            return scala.collection.immutable.List.apply([11])\n        } else if (n == 13) {\n            return scala.collection.immutable.List.apply([13])\n        } else if (n == 17) {\n            return scala.collection.immutable.List.apply([17])\n        } else if (n == 19) {\n            return scala.collection.immutable.List.apply([19])\n        } else if (n == 23) {\n            return scala.collection.immutable.List.apply([23])\n        } else if (n == 29) {\n            return scala.collection.immutable.List.apply([29])\n        } else if (n ==\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprmdc83hz.scala:49:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprmdc83hz.scala:49:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m2\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprmdc83hz.scala:51:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m3\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprmdc83hz.scala:51:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m3\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '=>' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprmdc83hz.scala:53:58 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m5\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                       an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprmdc83hz.scala:53:60 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.apply([\u001b[31m5\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // (2, 3, 5, 7)\n    // >>> primesBelow(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primesBelow(100000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    def primesBelow(n : Long) : List[Long] = {\n        if (n == 2) {\n            List(2)\n        } else if (n == 1) {\n            List()\n        } else {\n            var primes = List(2)\n            var i = 3\n            while (i < n) {\n                if (isPrime(i)) {\n                    primes = primes.append(i)\n                }\n                i = i + 2\n            }\n            primes\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to a given number.\n    // >>> primesBelowOrEqual(10)\n    // (2, 3, 5, 7)\n    // >>> primesBelowOrEqual(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primesBelowOrEqual(100000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    def primesBelowOrEqual(n :\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph80uds8b.scala:69:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph80uds8b.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph80uds8b.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph80uds8b.scala:53:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m                    primes = primes.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Int] - did you mean List[Int].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph80uds8b.scala:57:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            primes\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    (primes : List[Int])\n\u001b[31m   |\u001b[0m            Required: List[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph80uds8b.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph80uds8b.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(13l)\n    // [13, 5]\n    // >>> primeFactors(23l)\n    // [23, 11, 7]\n    // >>> primeFactors(29l)\n    // [29, 13, 11, 7]\n    // >>> primeFactors(37l)\n    // [37, 19, 13, 11, 7]\n    // >>> primeFactors(41l)\n    // [41, 23, 19, 13, 11, 7]\n    // >>> primeFactors(43l)\n    // [43, 23, 19, 13, 11, 7]\n    // >>> primeFactors(47l)\n    // [47, 23, 19, 13, 11, 7]\n    // >>> primeFactors(53l)\n    // [53, 29, 23, 19, 13, 11, 7]\n    // >>> primeFactors(59l)\n    // [59, 29, 23, 19, 13, 11, 7]\n    // >>> primeFactors(61l)\n    // [61, 29, 23, 19, 13, 11, 7]\n    // >>> primeFactors(67l)\n    // [67, 31, 29, 23, 19, 13, 11, 7]\n    // >>> primeFactors(71l)\n    // [71, 37, 31, 29, 23, 19, 13, 11, 7]\n    // >>> primeFactors(73l)\n    // [73, 37, 31, 29, 23, 19, 13, 11, 7]\n    // >>> primeFactors(79l)\n    // [79, 37, 31, 29, 23, 19, 13, 11, 7]\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr3yd5cic.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr3yd5cic.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3yd5cic.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3yd5cic.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3yd5cic.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3yd5cic.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3yd5cic.scala:73:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 3)\n    // >>> primeFactors(13l)\n    // (13, 1)\n    // >>> primeFactors(15l)\n    // (3, 1, 5)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 1)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2) {\n            return scala.collection.immutable.Vector.empty()\n        } else if (n < 2) {\n            return scala.collection.immutable.Vector.empty()\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            var factors = scala.collection.immutable.Vector.empty()\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // (5, 2, 3)\n    // >>> primes(12l)\n    // (11, 2, 3)\n    // >>> primes(13l)\n    // (13, 1)\n    // >>> primes(\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb5ug5xpk.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5ug5xpk.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb5ug5xpk.scala:53:58 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb5ug5xpk.scala:55:58 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb5ug5xpk.scala:59:65 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5ug5xpk.scala:60:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 1 until (n - 1) / 2) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the number of prime numbers less than or equal to a given number.\n    // >>> primes(0)\n    // 0\n    // >>> primes(1)\n    // 0\n    // >>> primes(2)\n    // 1\n    // >>> primes(3)\n    // 2\n    // >>> primes(4)\n    // 3\n    // >>> primes(5)\n    // 4\n    // >>> primes(6)\n    // 5\n    // >>> primes(7)\n    // 6\n    // >>> primes(8)\n    // 7\n    // >>> primes(9)\n    // 8\n    // >>> primes(10)\n    // 9\n    // >>> primes(11)\n    // 10\n    // >>> primes(12)\n    // 11\n    // >>> primes(13)\n    // 12\n    // >>> primes(14)\n    // 13\n    // >>> primes(15)\n    // 14\n    // >>> primes(16)\n    // 15\n    // >>> primes(17)\n    // 16\n    // >>> primes(18)\n    // 17\n    // >>> primes(19)\n    // 18\n    // >>> primes(20)\n    // 19\n    // >>> primes(21)\n    // 20\n    // >>> primes(22)\n    // 21\n    // >>> primes(23)\n    // 22\n    // >>> primes(24)\n    // 23\n    // >>> primes(25)\n    // 24\n    // >>> primes(26)\n    // 25\n    // >>> primes(27)\n    // 26\n    // >>> primes(28)\n    // 27\n    // >>> primes(29)\n    // 28\n    // >>> primes(30)\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptbijof8e.scala:116:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m116 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbijof8e.scala:27:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Long\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptbijof8e.scala:101:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptbijof8e.scala:102:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptbijof8e.scala:103:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m103 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptbijof8e.scala:104:11 -----------------------\u001b[0m\u001b[0m\n\u001b[31m104 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m    |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m    |\u001b[0m           Not found: isPrime\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] No",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3,5)\n    // >>> primeFactors(13441l)\n    // (11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97)\n    // >>> primeFactors(61l)\n    // (61,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,8\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfnqpa87y.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnqpa87y.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnqpa87y.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnqpa87y.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnqpa87y.scala:51:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnqpa87y.scala:52:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnqpa87y.scala:53:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the largest prime factor of a given number.\n    // >>> getPrimeFactor(6)\n    // (2)\n    // >>> getPrimeFactor(12)\n    // (2)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    // (2l)\n    // >>> getPrimeFactor(12l)\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8frq5lek.scala:99:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8frq5lek.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8frq5lek.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8frq5lek.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8frq5lek.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8frq5lek.scala:87:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8frq5lek.scala:88:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa1jt0_09.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa1jt0_09.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa1jt0_09.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa1jt0_09.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa1jt0_09.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa1jt0_09.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa1jt0_09.scala:86:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime2((6l))\n    // (false)\n    // >>> isPrime2((101l))\n    // (true)\n    // >>> isPrime2((11l))\n    // (true)\n    // >>> isPrime2((13441l))\n    // (true)\n    // >>> isPrime2((61l))\n    // (true)\n    // >>> isPrime2((4l))\n    // (false)\n    // >>> isPrime2((1l))\n    // (false)\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime3((6l))\n    // (false)\n    // >>> isPrime3((101l))\n    // (true)\n    // >>> isPrime3((11l))\n    // (true)\n    // >>> isPrime3((13441l))\n    // (true)\n    // >>> isPrime3((61l))\n    // (true)\n    // >>> isPrime3((4l))\n    // (false)\n    // >>> isPrime3((1l))\n    // (false)\n    def isPrime3(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3gllf02y.scala:106:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gllf02y.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gllf02y.scala:59:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gllf02y.scala:105:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m105 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp3gllf02y.scala:89:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m89 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmp3gllf02y.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // (2)\n    // >>> primeFactors(6l)\n    // (2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 5)\n    // >>> primeFactors(24l)\n    // (2, 3, 5, 7)\n    // >>> primeFactors(60l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23)\n    // >>> primeFactors(100l)\n    // (2, 5, 7, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primeFactors(1000l)\n    // (2, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 5\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9e_rv3q4.scala:68:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9e_rv3q4.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9e_rv3q4.scala:53:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9e_rv3q4.scala:54:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9e_rv3q4.scala:55:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9e_rv3q4.scala:56:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9e_rv3q4.scala:57:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 3)\n    // >>> primeFactors(12l)\n    // (2, 3, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 3)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)\n    // >>> primeFactors(12l)\n    // (2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293089,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptivt_8y_.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptivt_8y_.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptivt_8y_.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptivt_8y_.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptivt_8y_.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptivt_8y_.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptivt_8y_.scala:71:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(12l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [13]\n    // >>> primeFactors(14l)\n    // [2, 7]\n    // >>> primeFactors(15l)\n    // [3, 5]\n    // >>> primeFactors(16l)\n    // [2, 2, 2, 2]\n    // >>> primeFactors(17l)\n    // [17]\n    // >>> primeFactors(18l)\n    // [2, 2, 2, 2, 2]\n    // >>> primeFactors(19l)\n    // [19]\n    // >>> primeFactors(20l)\n    // [2, 2, 2, 2, 2, 2]\n    // >>> primeFactors(21l)\n    // [3, 7]\n    // >>> primeFactors(22l)\n    // [2, 2, 2, 2, 2, 2]\n    // >>> primeFactors(23l)\n    // [23]\n    // >>> primeFactors(24l)\n    // [2, 2, 2, 2, 2, 2, 2]\n    // >>> primeFactors(25l)\n    // [5, 5]\n    // >>> primeFactors(26l)\n    // [2, 2, 2, 2, 2, 2, 2]\n    // >>> primeFactors(27l)\n    // [3, 3, 3]\n    // >>> primeFactors(28l)\n    // [2, 2, 2, 2, 2, 2, 2]\n    // >>> primeFactors(29l)\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293089,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzoxxct9y.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzoxxct9y.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzoxxct9y.scala:77:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzoxxct9y.scala:78:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzoxxct9y.scala:79:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzoxxct9y.scala:80:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzoxxct9y.scala:81:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // [2, 3, 5, 7]\n    // >>> primesBelow(100)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelow(1000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primesBelow(10000)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprej0ytfd.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprej0ytfd.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprej0ytfd.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprej0ytfd.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprej0ytfd.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprej0ytfd.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprej0ytfd.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10l)\n    // [2, 3, 5, 7]\n    // >>> primesBelow(100l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primesBelow(1000l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    // >>> primesBelow(10000l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkzvmflhq.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkzvmflhq.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzvmflhq.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzvmflhq.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzvmflhq.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzvmflhq.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzvmflhq.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 1 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg4v8hfi.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpwg4v8hfi.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(12)\n    // (2, 2, 3)\n    // >>> primeFactors(6)\n    // (2, 3)\n    // >>> primeFactors(1)\n    // ()\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            return scala.collection.immutable.Vector.empty()\n        } else if (n == 1) {\n            return scala.collection.immutable.Vector.empty()\n        } else {\n            var factors = scala.collection.immutable.Vector.empty()\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(12)\n    // (2, 2, 3)\n    // >>> primeFactors(6)\n    // (2, 3)\n    // >>> primeFactors(1)\n    // ()\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 0) {\n            return scala.collection.immutable.Vector.empty()\n        } else if (n == 1) {\n            return scala.collection.immutable.Vector.empty()\n        } else {\n            var factors = scala.collection.immutable.Vector.empty()\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293096,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprj32ekc3.scala:76:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprj32ekc3.scala:94:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj32ekc3.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmprj32ekc3.scala:45:58 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- Error: /tmp/tmprj32ekc3.scala:47:58 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- Error: /tmp/tmprj32ekc3.scala:49:65 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.immutable.Vector.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter i of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m: (i: Int): A\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the number of prime numbers less than or equal to a given number.\n    // >>> countPrimes(0)\n    // 0\n    // >>> countPrimes(1)\n    // 0\n    // >>> countPrimes(2)\n    // 1\n    // >>> countPrimes(3)\n    // 2\n    // >>> countPrimes(4)\n    // 2\n    // >>> countPrimes(5)\n    // 3\n    // >>> countPrimes(6)\n    // 3\n    // >>> countPrimes(7)\n    // 4\n    // >>> countPrimes(8)\n    // 4\n    // >>> countPrimes(9)\n    // 5\n    // >>> countPrimes(10)\n    // 5\n    def countPrimes(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            0\n        } else if (n == 2) {\n            1\n        } else if (n == 3) {\n            2\n        } else if (n == 4) {\n            2\n        } else if (n == 5) {\n            3\n        } else if (n == 6) {\n            3\n        } else if (n == 7) {\n            4\n        } else if (n == 8) {\n            4\n        } else if (n == 9) {\n            5\n        } else if (n == 10) {\n            5\n        } else {\n            for (i <- 11 to n) {\n                if (isPrime(i)) {\n                    countPrimes(n) + 1\n                }\n            }\n        }\n    }\n\n    // Return the sum of the primes less than or equal to a given number.\n    // >>> sumPrimes(0)\n    // 0\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp50zad2a2.scala:111:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m111 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50zad2a2.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50zad2a2.scala:83:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m11\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (n : Long)\n\u001b[31m   |\u001b[0m                            Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50zad2a2.scala:96:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50zad2a2.scala:97:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50zad2a2.scala:98:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling wi",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9i0rff8.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpi9i0rff8.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2,3)\n    // >>> primeFactors(13l)\n    // (13,5,7)\n    // >>> primeFactors(4l)\n    // (4,2,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    // >>> primeFactors(11l)\n    // (11,1)\n    // >>> primeFactors(13441l)\n    // (13441,1,1)\n    // >>> primeFactors(61l)\n    // (61,1)\n    // >>> primeFactors(4l)\n    // (4,2,2)\n    // >>> primeFactors(1l)\n    // (1,1)\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2) {\n            Vector(2)\n        } else if (n == 1) {\n            Vector(1)\n        } else if (n % 2 == 0) {\n            Vector(2, n / 2)\n        } else {\n            var factors = Vector(1, n)\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.updated(i)\n                    factors = factors.updated(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2,3)\n    // >>> primeFactors(13l)\n    // (13,5,7)\n    // >>> primeFactors(\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyf9goxtr.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyf9goxtr.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyf9goxtr.scala:64:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyf9goxtr.scala:66:45 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m                    factors = factors.updated(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter elem of \u001b[33mmethod\u001b[0m \u001b[35mupdated\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mVector\u001b[0m: (index: Int, elem: Long): Vector[Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyf9goxtr.scala:67:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m                    factors = factors.updated(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    Long\n\u001b[31m   |\u001b[0m                                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf9goxtr.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12l)\n    // (2,3)\n    // >>> primeFactors(12\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293095,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6c2zcgmd.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c2zcgmd.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c2zcgmd.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c2zcgmd.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c2zcgmd.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c2zcgmd.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c2zcgmd.scala:86:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (n % 43 == 0) {\n            return false\n        }\n        if (n % 47 == 0) {\n            return false\n        }\n        if (n % 53 == 0) {\n            return false\n        }\n        if (n % 59 == 0) {\n            return false\n        }\n        if (n % 61 == 0) {\n            return false\n        }\n        if (n % 67 == 0) {\n            return false\n        }\n        if (n % 71 == 0) {\n            return false\n        }\n        if (n % 73 == 0) {\n            return false\n        }\n        if (n % 79 == 0) {\n            return false\n        }\n        if (n % 83 == 0) {\n            return false\n        }\n        if (n % 89 == 0) {\n            return false\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjevk611s.scala:125:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m125 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjevk611s.scala:124:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m124 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjevk611s.scala:108:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m108 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime(6)\n    // (false)\n    // >>> isPrime(101)\n    // (true)\n    // >>> isPrime(11)\n    // (true)\n    // >>> isPrime(13441)\n    // (true)\n    // >>> isPrime(61)\n    // (true)\n    // >>> isPrime(4)\n    // (false)\n    // >>> isPrime(1)\n    // (false)\n    def isPrime(n : Int) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime(6.0)\n    // (false)\n    // >>> isPrime(101.0)\n    // (true)\n    // >>> isPrime(11.0)\n    // (true)\n    // >>> isPrime(13441.0)\n    // (true)\n    // >>> isPrime(61.0)\n    // (true)\n    // >>> isPrime(4.0)\n    // (false)\n    // >>> isPrime(1.0)\n    // (false)\n    def isPrime(n : Double) : Boolean = {\n        if (n == 2.0) {\n            return true\n        } else if (n == 1.0) {\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293098,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3lkkok7l.scala:106:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lkkok7l.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lkkok7l.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lkkok7l.scala:105:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m105 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp3lkkok7l.scala:89:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m89 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptf9c_je9.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6)\n    // [2, 2, 2]\n    // >>> primeFactors(4)\n    // [2, 2]\n    // >>> primeFactors(1)\n    // []\n    // >>> primeFactors(11)\n    // [11]\n    // >>> primeFactors(13441)\n    // [11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            return Seq(2)\n        } else if (n < 2) {\n            return Seq.empty\n        } else if (n % 2 == 0) {\n            return primeFactors(n / 2)\n        } else {\n            var factors = Seq.empty\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6)\n    // [2, 2, 2]\n    // >>> primeFactors2(4)\n    // [2, 2]\n    // >>> primeFactors2(1)\n    // []\n    // >>> primeFactors2(11)\n    // [11]\n    // >>> primeFactors2(13441)\n    // [11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9sm8giqm.scala:94:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sm8giqm.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sm8giqm.scala:56:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9sm8giqm.scala:58:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m                    factors = factors.append(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of scala.collection.mutable.Seq[Nothing] - did you mean scala.collection.mutable.Seq[Nothing].appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9sm8giqm.scala:59:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m                    factors = factors.append(n / i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of scala.collection.mutable.Seq[Nothing] - did you mean scala.collection.mutable.Seq[Nothing].appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sm8giqm.scala:62:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m            \u001b[33mreturn\u001b[0m factors\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m             Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 6) {\n            return true\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 9) {\n            return true\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n < 25) {\n            return true\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n < 49) {\n            return true\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n < 121) {\n            return true\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n < 169) {\n            return true\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n < 257) {\n            return true\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n < 321) {\n            return true\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n < 343) {\n            return true\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n < 421) {\n            return true\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n < 433) {\n            return true\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n < 449) {\n            return true\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293096,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpoq0dpn3e.scala:110:12 --------------------------\u001b[0m\u001b[0m\n\u001b[31m110 |\u001b[0m        \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m    |\u001b[0m            ^\u001b[0m\n\u001b[31m    |\u001b[0m            expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptf9c_je9.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10)\n    // (2, 3, 5, 7)\n    // >>> primesBelow(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primesBelow(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primesBelow(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293098,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_a2rbmbb.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_a2rbmbb.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_a2rbmbb.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_a2rbmbb.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_a2rbmbb.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_a2rbmbb.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_a2rbmbb.scala:51:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(2l)\n    // [2]\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(12l)\n    // [2, 3, 5]\n    // >>> primeFactors(30l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primeFactors(20l)\n    // [2, 5, 10, 11, 13, 17, 19, 23, 29]\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : List[Long] = {\n        if (n == 0) {\n            []\n        } else if (n == 1) {\n            []\n        } else if (n == 2) {\n            [2]\n        } else {\n            var factors = List[Long]()\n            for (i <- 2 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(2l)\n    // [2]\n    // >>> primeFactors2(6l)\n    // [2, 3]\n    // >>> primeFactors2(12l)\n    // [2, 3, 5]\n    // >>> primeFactors2(30l)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    // >>> primeFactors2(20l)\n    // [2, 5\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:51:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            []\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             an identifier expected, but ']' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:52:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n == \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:53:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            []\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             an identifier expected, but ']' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:54:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n == \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:55:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            [\u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             an identifier expected, but integer literal found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:56:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        } \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpix1c_93t.scala:96:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpix1c_93t.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2,3)\n    // >>> primeFactors(12l)\n    // (2,3,3,2)\n    // >>> primeFactors(13l)\n    // (13,11,7)\n    // >>> primeFactors(13441l)\n    // (13,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgg7u_a72.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgg7u_a72.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgg7u_a72.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgg7u_a72.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgg7u_a72.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgg7u_a72.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgg7u_a72.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 2, 3]\n    // >>> primeFactors(13l)\n    // [13, 5, 7]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : scala.collection.immutable.List[Long] = {\n        if (n == 1) {\n            return scala.collection.immutable.List.empty()\n        } else if (n == 2) {\n            return scala.collection.immutable.List.of(2l)\n        } else if (n == 3) {\n            return scala.collection.immutable.List.of(3l)\n        } else {\n            var factors = scala.collection.immutable.List.empty()\n            for (i <- 2l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors = factors.append(i)\n                    factors = factors.append(n / i)\n                }\n            }\n            return factors\n        }\n    }\n\n    // Return the sum of the primes below a given number.\n    // >>> sumPrimes(10l)\n    // 29\n    // >>> sumPrimes(100l)\n    // 471\n    // >>> sumPrimes(1000l)\n    // 983\n    // >>> sumPrimes(10000l)\n    // 9973\n    // >>> sumPrimes(100000l)\n    // 99709\n    def sumPrimes(n : Long) : Long = {\n        if (n == 2) {\n            return 2l\n        } else if (n == 3\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptr78uu2v.scala:79:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptr78uu2v.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmptr78uu2v.scala:47:56 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter n of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mLinearSeqOps\u001b[0m: (n: Int): A\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptr78uu2v.scala:49:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.of(\u001b[31m2l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      value of is not a member of object scala.collection.immutable.List\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptr78uu2v.scala:51:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mreturn\u001b[0m scala.collection.immutable.List.of(\u001b[31m3l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      value of is not a member of object scala.collection.immutable.List\n\u001b[31m\u001b[31m-- Error: /tmp/tmptr78uu2v.scala:53:63 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = scala.collection.immutable.List.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parame",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(13l)\n    // [13, 5]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [13, 5, 7, 17, 31, 61, 89, 107, 163, 251, 367, 557, 919, 1429, 2161,\n    //  3289, 5461, 8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289,\n    //  5461, 8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289, 5461,\n    //  8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289, 5461, 8971,\n    //  13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289, 5461, 8971, 13161,\n    //  2161, 3289, 5461, 8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161,\n    //  3289, 5461, 8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289,\n    //  5461, 8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289, 5461,\n    //  8971, 13161, 2161, 3289, 5461, 8971, 13161, 2161, 3289, 5461, 8971,\n    //  13161, 2161\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaa5dmmzu.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaa5dmmzu.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaa5dmmzu.scala:56:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaa5dmmzu.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaa5dmmzu.scala:58:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaa5dmmzu.scala:59:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaa5dmmzu.scala:60:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primesBelow(10l)\n    // (2, 3, 5, 7)\n    // >>> primesBelow(100l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primesBelow(1000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primesBelow(10000l)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4gixyaby.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gixyaby.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4gixyaby.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(11l)\n    // [11]\n    // >>> primeFactors(13441l)\n    // [11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101]\n    // >>> primeFactors(61l)\n    // [61, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 7\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8h94h_r4.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8h94h_r4.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h94h_r4.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h94h_r4.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h94h_r4.scala:51:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h94h_r4.scala:52:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h94h_r4.scala:53:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(101l)\n    // (101, 11)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 11, 7)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    def primeFactors(n : Long) : Tuple2[Long, Tuple2[Long, ...]] = {\n        if (n == 2) {\n            (2, (2,))\n        } else if (n == 1) {\n            (1, (1,))\n        } else if (n % 2 == 0) {\n            (2, (2,))\n        } else {\n            var i = 3l\n            var factors = new Tuple2[1]\n            while (n % i == 0) {\n                n /= i\n                factors = factors.updated(0, i)\n                i = i + 2l\n            }\n            factors = factors.updated(0, n)\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6l)\n    // (6, 2)\n    // >>> primeFactors2(101l)\n    // (101, 11)\n    // >>> primeFactors2(11l)\n    // (11, 1)\n    // >>> primeFactors2(13441l)\n    // (13441, 11, 7)\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsxx_zgi3.scala:51:59 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mprimeFactors\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mTuple2\u001b[0m[\u001b[35mLong\u001b[0m, \u001b[35mTuple2\u001b[0m[\u001b[35mLong\u001b[0m, ...]] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '.' found\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpsxx_zgi3.scala:53:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            (\u001b[31m2\u001b[0m, (\u001b[31m2\u001b[0m,))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpsxx_zgi3.scala:55:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            (\u001b[31m1\u001b[0m, (\u001b[31m1\u001b[0m,))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpsxx_zgi3.scala:57:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            (\u001b[31m2\u001b[0m, (\u001b[31m2\u001b[0m,))\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m')'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsxx_zgi3.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsxx_zgi3.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return a list of all prime numbers less than or equal to a given number.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_yhjogl.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_yhjogl.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_yhjogl.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_yhjogl.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_yhjogl.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_yhjogl.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_yhjogl.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        }\n        if (n == 1) {\n            return false\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 2) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n % 5 == 0) {\n            return false\n        }\n        if (n % 7 == 0) {\n            return false\n        }\n        if (n % 11 == 0) {\n            return false\n        }\n        if (n % 13 == 0) {\n            return false\n        }\n        if (n % 17 == 0) {\n            return false\n        }\n        if (n % 19 == 0) {\n            return false\n        }\n        if (n % 23 == 0) {\n            return false\n        }\n        if (n % 29 == 0) {\n            return false\n        }\n        if (n % 31 == 0) {\n            return false\n        }\n        if (n % 37 == 0) {\n            return false\n        }\n        if (n % 41 == 0) {\n            return false\n        }\n        if (n % 43 == 0) {\n            return false\n        }\n        if (n % 47 == 0) {\n            return false\n        }\n        if (n % 53 == 0) {\n            return false\n        }\n        if (n % 59 == 0) {\n            return false\n        }\n        if (n % 61 == 0) {\n            return false\n        }\n        if (n % 67 == 0) {\n            return false\n        }\n        if (n % 71 == 0) {\n            return false\n        }\n        if (n % 73 == 0) {\n            return false\n        }\n        if (n % 79 == 0) {\n            return false\n        }\n        if (n % 83 == 0) {\n            return false\n        }\n        if (n % 89 == 0) {\n            return false\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjevk611s.scala:125:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m125 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjevk611s.scala:124:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m124 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpjevk611s.scala:108:4 ---------------------------------------\u001b[0m\u001b[0m\n\u001b[33m108 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m    |\u001b[0m    ^\u001b[0m\n\u001b[33m    |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [6]\n    // >>> primeFactors(12l)\n    // [2, 2, 3]\n    // >>> primeFactors(24l)\n    // [2, 2, 2, 3, 3]\n    // >>> primeFactors(30l)\n    // [2, 5, 5, 7]\n    // >>> primeFactors(60l)\n    // [2, 2, 2, 2, 2, 2, 3, 3, 5, 5, 7]\n    // >>> primeFactors(100l)\n    // [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2yt56coc.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2yt56coc.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yt56coc.scala:51:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yt56coc.scala:52:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yt56coc.scala:53:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yt56coc.scala:54:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yt56coc.scala:55:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [13, 5, 7]\n    // >>> primeFactors(4l)\n    // []\n    // >>> primeFactors(1l)\n    // []\n    def primeFactors(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            return Seq(2l)\n        } else if (n == 1) {\n            return Seq()\n        } else {\n            for (i <- 2l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return primeFactors(n / i)\n                }\n            }\n            return Seq(n)\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6l)\n    // [2, 3]\n    // >>> primeFactors2(13l)\n    // [13, 5, 7]\n    // >>> primeFactors2(4l)\n    // []\n    // >>> primeFactors2(1l)\n    // []\n    def primeFactors2(n : Long) : Seq[Long] = {\n        if (n == 2) {\n            return Seq(2l)\n        } else if (n == 1) {\n            return Seq()\n        } else {\n            for (i <- 2l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return primeFactors2(n / i)\n                }\n            }\n            return Seq(n)\n        }\n    }\n\n    // Return the prime factors of a\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe4xumml4.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4xumml4.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4xumml4.scala:51:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4xumml4.scala:75:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m2l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe4xumml4.scala:87:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe4xumml4.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n < 2l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp94ai51rb.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqql0i4cj.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpqql0i4cj.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3)\n    // >>> primeFactors(11l)\n    // (11, 1)\n    // >>> primeFactors(13441l)\n    // (13441, 1)\n    // >>> primeFactors(61l)\n    // (61, 1)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // (1, 1)\n    def primeFactors(n : Long) : Tuple2[Long, Long] = {\n        if (n == 0) {\n            return Tuple2(0l, 0l)\n        } else if (n == 1) {\n            return Tuple2(1l, 1l)\n        } else if (n % 2 == 0) {\n            return Tuple2(2l, 2l)\n        } else {\n            var factors = new ArrayList[Long]()\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    factors.add(i)\n                    factors.add(n / i)\n                }\n            }\n            return Tuple2(n, factors.size())\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors2(6l)\n    // (6, 2)\n    // >>> primeFactors2(13l)\n    // (13, 3)\n    // >>> primeFactors2(11l)\n    // (11, 1)\n    // >>> primeFactors2(13441l\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7ce6ttut.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ce6ttut.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7ce6ttut.scala:59:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mfactors\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArrayList\u001b[0m[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Not found: type ArrayList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ce6ttut.scala:60:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7ce6ttut.scala:80:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7ce6ttut.scala:81:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw838xth9.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptf9c_je9.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6,2,3)\n    // >>> primeFactors(101l)\n    // (101,19,23)\n    // >>> primeFactors(11l)\n    // (11,2,3,5)\n    // >>> primeFactors(13441l)\n    // (13441,2,7,19,23,31,37,41,47,53,59,61,67,71,73,79,83,89,97)\n    // >>> primeFactors(61l)\n    // (61,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmw2dp2y5.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmw2dp2y5.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw2dp2y5.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw2dp2y5.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw2dp2y5.scala:51:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw2dp2y5.scala:52:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw2dp2y5.scala:53:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            true\n        } else if (n == 1l) {\n            false\n        } else if (n % 2l == 0l) {\n            false\n        } else {\n            for (i <- 1l to (n - 1l)) {\n                if (n % i == 0l) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // (6, 2)\n    // >>> primeFactors(13l)\n    // (13, 3, 5)\n    // >>> primeFactors(11l)\n    // (11,)\n    // >>> primeFactors(13441l)\n    // (13441, 7, 11, 17, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primeFactors(61l)\n    // (61, 29, 23, 19, 17, 13, 11, 7, 5, 3, 2)\n    // >>> primeFactors(4l)\n    // (4, 2)\n    // >>> primeFactors(1l)\n    // ()\n    def primeFactors(n : Long) : scala.collection.immutable.Vector[Long] = {\n        if (n == 2l) {\n            Vector(2l)\n        } else if (n == 1l) {\n            Vector()\n        } else if (n % 2l == 0l) {\n            Vector(2l)\n        } else {\n            var factors = Vector(n)\n            for (i <- 1l to (n - 1l)) {\n                if (n % i == 0l) {\n                    factors = factors.updated(i)\n                }\n            }\n            factors\n        }\n    }\n\n    // Return the prime numbers less than a given number.\n    // >>> primes(6l)\n    // (2, 3, 5)\n    // >>> primes(13l)\n    // (2, 3, 5, 7, 11, 13)\n    // >>> primes(\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2yoaucyl.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2yoaucyl.scala:62:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                    factors = factors.updated(i)\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (i : Long)\n\u001b[31m   |\u001b[0m                                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yoaucyl.scala:77:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yoaucyl.scala:78:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yoaucyl.scala:79:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2yoaucyl.scala:80:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Err",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptainx_g0.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmptainx_g0.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp92wt56ml.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6))\n    // (false)\n    // >>> isPrime((101))\n    // (true)\n    // >>> isPrime((11))\n    // (true)\n    // >>> isPrime((13441))\n    // (true)\n    // >>> isPrime((61))\n    // (true)\n    // >>> isPrime((4))\n    // (false)\n    // >>> isPrime((1))\n    // (false)\n    def isPrime(n : Int) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6))\n    // (false)\n    // >>> isPrime((101))\n    // (true)\n    // >>> isPrime((11))\n    // (true)\n    // >>> isPrime((13441))\n    // (true)\n    // >>> isPrime((61))\n    // (true)\n    // >>> isPrime((4))\n    // (false)\n    // >>> isPrime((1))\n    // (false)\n    def isPrime(n : Int) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps4jxz2ex.scala:92:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps4jxz2ex.scala:110:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m110 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4jxz2ex.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4jxz2ex.scala:59:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E119] Type Error: /tmp/tmps4jxz2ex.scala:91:27 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Java defined \u001b[33mclass\u001b[0m \u001b[35mMath\u001b[0m is not a value\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4jxz2ex.scala:109:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m109 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmps4jxz2ex.scala:83:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mInt\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n < 2) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n\n    // Return the prime factors of a given number.\n    // >>> primeFactors(6l)\n    // [2, 3]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> primeFactors(13l)\n    // [11, 13]\n    // >>> prime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293101,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiobkdu75.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiobkdu75.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiobkdu75.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiobkdu75.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiobkdu75.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiobkdu75.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiobkdu75.scala:86:11 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3l to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // Return a list of all prime numbers less than a given number.\n    // >>> primes(10)\n    // (2, 3, 5, 7)\n    // >>> primes(100)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\n    // >>> primes(1000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n    // >>> primes(10000)\n    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 6\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3mgefv4j.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mgefv4j.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3l\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    Double\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:47:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(isPrime((\u001b[31m6l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:48:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(isPrime((\u001b[31m101l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:49:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(isPrime((\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:50:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(isPrime((\u001b[31m13441l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mgefv4j.scala:51:11 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            true\n        } else if (n == 1) {\n            false\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 1 to (n - 1) / 2) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg4v8hfi.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to (n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpwg4v8hfi.scala:29:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m29 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 1) {\n            return false\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nqg9c1_.scala:27:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
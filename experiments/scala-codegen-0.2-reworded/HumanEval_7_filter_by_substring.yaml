name: HumanEval_7_filter_by_substring
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Filter an input list of strings only for ones that contain given substring\n\
  \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
  \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
  )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
  \ : List[String], substring : String) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(filterBySubstring((List[String]()),\
  \ (\"john\")).equals((List[String]())));\n    assert(filterBySubstring((List[String](\"\
  xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
  xxx\", \"xxxAAA\", \"xxx\"))));\n    assert(filterBySubstring((List[String](\"xxx\"\
  , \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xx\")).equals((List[String](\"\
  xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"))));\n    assert(filterBySubstring((List[String](\"\
  grunt\", \"trumpet\", \"prune\", \"gruesome\")), (\"run\")).equals((List[String](\"\
  grunt\", \"prune\"))));\n    }\n\n}\n"
completions: ["        var result = List[String]()\n        for (var i = 0; i < strings.size();\
    \ i++) {\n            if (strings.get(i).contains(substring)) {\n            \
    \    result = result.append(strings.get(i))\n            }\n        }\n      \
    \  return result\n    }\n\n    // Find the longest substring that is a prefix\
    \ of all strings in the input list\n    // >>> findLongestSubstring((List[String]()),\
    \ (\"a\"))\n    // (String)\n    // >>> findLongestSubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (String)\n    def findLongestSubstring(strings\
    \ : List[String], substring : String) : String = {\n        var result = \"\"\n\
    \        for (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).startsWith(substring))\
    \ {\n                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring that is a prefix of all strings\
    \ in the input list\n    // >>> findLongestSubstring2((List[String]()), (\"a\"\
    ))\n    // (String)\n    // >>> findLongestSubstring2((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (String)\n    def findLongestSubstring2(strings\
    \ : List[String], substring : String) : String = {\n        var result = \"\"\n\
    \        for (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).startsWith(substring))\
    \ {\n                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring that is a prefix of all strings\
    \ in the input list\n    // >>> findLongestSubstring3((List[String]()), (\"a\"\
    ))\n    // (String)\n    // >>> findLongestSubstring3((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (String)\n    def findLongestSubstring3(strings\
    \ : List[String], subst", "        var result = List[String]()\n        for (s\
    \ in strings) {\n            if (s.contains(substring)) {\n                result\
    \ = result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        val result = List[String]()\n        for (i <- 0 until strings.length)\
    \ {\n            if (strings[i].contains(substring)) {\n                result\
    \ = result.append(strings[i])\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        val\
    \ result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        val result\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(", "        val result = List[String]()\n\
    \        for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Find the longest substring that\
    \ is a prefix of all strings in an input list\n    // >>> findLongestSubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // \"a\"\n    // >>> findLongestSubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"ab\"))\n    // \"ab\"\n    def findLongestSubstring(strings\
    \ : List[String], substring : String) : String = {\n        val result = \"\"\n\
    \        for (i <- 0 until strings.length) {\n            if (strings[i].startsWith(substring))\
    \ {\n                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest common substring of two strings\n \
    \   // >>> findLongestCommonSubstring(\"abc\", \"bacd\")\n    // \"b\"\n    def\
    \ findLongestCommonSubstring(s1 : String, s2 : String) : String = {\n        val\
    \ result = \"\"\n        for (i <- 0 until s1.length) {\n            for (j <-\
    \ 0 until s2.length) {\n                if (s1[i] == s2[j]) {\n              \
    \      result = s1[i]\n                }\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest common substring of n strings\n   \
    \ // >>> findLongestCommonSubstring(List[String](\"abc\", \"bacd\", \"cde\", \"\
    array\"), List[String](\"abc\", \"bacd\", \"cde\", \"array\"))\n    // \"abc\"\
    \n    def findLongestCommonSubstring(strings : List[String], strings2 : List[String])\
    \ : String = {\n        val result = \"\"\n        for (i <- 0 until strings.length)\
    \ {\n            for (j <- 0 until strings2.length) {\n                if (strings[i].equals(strings2",
  "        val result = List[String]()\n        for (i <- 0 until strings.size) {\n\
    \            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        val result = mutable.List[String]()\n      \
    \  for (s : strings) {\n            if (s.contains(substring)) {\n           \
    \     result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ mutable.List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result.append(s)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        val result = mutable.List[String]()\n        for\
    \ (s : strings) {\n            if (s.contains(substring)) {\n                result.append(s)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        val result = new\
    \ ArrayList[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result.add(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ new ArrayList[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result.add(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ new ArrayList[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result.add(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        var filtered = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                filtered = filtered\
    \ + s\n            }\n        }\n        return filtered\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        var result = List[String]()\n       \
    \ for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        var\
    \ result = List[String]()\n        for (var string : strings) {\n            if\
    \ (string.contains(substring)) {\n                result = result.append(string)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        var result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result = result.append(s)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring of a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n   \
    \ // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(s : String)\
    \ : String = {\n        var result = \"\"\n        var max = 0\n        for (i\
    \ in range(0, s.length())) {\n            var substring = s.substring(i, s.length())\n\
    \            if (substring.length() > max) {\n                result = substring\n\
    \                max = substring.length()\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring of a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(s : String)\
    \ : String = {\n        var result = \"\"\n        var max = 0\n        for (i\
    \ in range(0, s.length())) {\n            var substring = s.substring(i, s.length())\n\
    \            if (substring.length() > max) {\n                result = substring\n\
    \                max = substring.length()\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring of a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSub", "        var\
    \ result = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n\
    \            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n       \
    \     if (strings.get(i).contains(substring)) {\n                result = result.append(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[", " \
    \       val result = new ArrayList[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                result.add(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring that occurs in all strings in the input list\n    // >>> findLongestSubstring((List[String]()),\
    \ (\"a\"))\n    // (String)\n    // >>> findLongestSubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (String)\n    def findLongestSubstring(strings\
    \ : List[String], substring : String) : String = {\n        val result = new StringBuilder()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.append(strings.get(i))\n            }\n        }\n\
    \        return result.toString()\n    }\n\n    // Find the longest substring\
    \ that occurs in all strings in the input list\n    // >>> findLongestSubstring((List[String]()),\
    \ (\"a\"))\n    // (String)\n    // >>> findLongestSubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (String)\n    def findLongestSubstring2(strings\
    \ : List[String], substring : String) : String = {\n        val result = new StringBuilder()\n\
    \        for (i <- 0 until strings.size) {\n            val string = strings.get(i)\n\
    \            val index = string.indexOf(substring)\n            if (index != -1)\
    \ {\n                result.append(string.substring(index))\n            }\n \
    \       }\n        return result.toString()\n    }\n\n    // Find the longest\
    \ substring that occurs in all strings in the input list\n    // >>> findLongestSubstring((List[String]()),\
    \ (\"a\"))\n    // (String)\n    // >>> findLongestSubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (String)", "        var\
    \ result = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n\
    \            if (strings.apply(i).contains(substring)) {\n                result\
    \ = result.append(strings.apply(i))\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (var i\
    \ = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[", " \
    \       val filtered = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                filtered\
    \ += strings.get(i)\n            }\n        }\n        return filtered\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (i <- 0 until strings.size) {\n            if\
    \ (strings.get(i).contains(substring)) {\n                filtered += strings.get(i)\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (i <- 0 until strings.size) {\n            if\
    \ (strings.get(i).contains(substring)) {\n                filtered += strings.get(i)\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    //", "        val result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result.append(s)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List", "        val\
    \ result = new ArrayList[String]()\n        for (i <- 0 until strings.size) {\n\
    \            if (strings.get(i).contains(substring)) {\n                result.add(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        var filtered = List[String]()\n        for (s\
    \ in strings) {\n            if (s.contains(substring)) {\n                filtered\
    \ = filtered + s\n            }\n        }\n        return filtered", "      \
    \  val result = List[String]()\n        for (i <- 0 until strings.size) {\n  \
    \          if (strings.get(i).contains(substring)) {\n                result =\
    \ result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        var filtered = List[String]()\n        for (i\
    \ <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                filtered = filtered.append(strings[i])\n            }\n \
    \       }\n        return filtered\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                filtered = filtered.append(strings[i])\n            }\n \
    \       }\n        return filtered\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                filtered = filtered.append(strings[i])\n            }\n \
    \       }\n        return filtered\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    //", "        val result\
    \ = List[String]()\n        for (i <- 0 until strings.size) {\n            if\
    \ (strings.get(i).contains(substring)) {\n                result = result.append(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySub", "        val result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result += s\n            }\n        }\n        return result", " \
    \       var filtered = List[String]()\n        for (s in strings) {\n        \
    \    if (s.contains(substring)) {\n                filtered = filtered.append(s)\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"z\"\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        var max = String()\n        for (i in range(len(string)))\
    \ {\n            for (j in range(i + 1, len(string))) {\n                if (string.substring(i,\
    \ j).length() > max.length()) {\n                    max = string.substring(i,\
    \ j)\n                }\n            }\n        }\n        return max\n    }\n\
    \n    // Find the longest palindrome in a given string\n    // >>> findLongestPalindrome(\"\
    abccccdd\")\n    // \"ccccccdd\"\n    // >>> findLongestPalindrome(\"abccccddccccccdd\"\
    )\n    // \"ccccccddccccccdd\"\n    def findLongestPalindrome(string : String)\
    \ : String = {\n        var max = String()\n        for (i in range(len(string)))\
    \ {\n            for (j in range(i + 1, len(string))) {\n                if (string.substring(i,\
    \ j).equals(string.substring(j, i))) {\n                    if (string.substring(i,\
    \ j).length() > max.length()) {\n                        max = string.substring(i,\
    \ j)\n                    }\n                }\n            }\n        }\n   \
    \     return max\n    }\n\n    // Find the longest palindrome in a given string\n\
    \    // >>> findLongestPalindrome(\"abccccdd\")\n    // \"ccccccdd\"\n    // >>>\
    \ findLongestPal", "        val result = List[String]()\n        for (i <- 0 until\
    \ strings.size) {\n            if (strings.get(i).contains(substring)) {\n   \
    \             result = result.append(strings.get(i))\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  val result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List", "        var\
    \ result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(", "        var result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result = result.append(s)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result.append(s)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        var filtered = List[String]()\n        for (i <- 0 until strings.length)\
    \ {\n            if (strings[i].contains(substring)) {\n                filtered\
    \ = filtered + strings[i]\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered + strings[i]\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered + strings[i]\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String", "        val result = List[String]()\n     \
    \   for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (", "        var result\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result\n    }\n\n    // Find the longest substring in a given\
    \ string\n    // >>> findLongestSubstring(\"abcdef\")\n    // \"def\"\n    def\
    \ findLongestSubstring(string : String) : String = {\n        var result = \"\"\
    \n        var max = 0\n        for (var i = 0; i < string.length(); i++) {\n \
    \           var substring = string.substring(i, i + 1)\n            if (substring.length()\
    \ > max) {\n                result = substring\n                max = substring.length()\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdef\")\n \
    \   // \"def\"\n    def findLongestSubstring2(string : String) : String = {\n\
    \        var result = \"\"\n        var max = 0\n        for (var i = 0; i < string.length();\
    \ i++) {\n            var substring = string.substring(i, i + 1)\n           \
    \ if (substring.length() > max) {\n                result = substring\n      \
    \          max = substring.length()\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdef\")\n    // \"def\"\n    def findLongestSubstring3(string\
    \ : String) : String = {\n        var result = \"\"\n        var max = 0\n   \
    \     for (var i = 0; i < string.length(); i++) {\n            var substring =\
    \ string.substring(i, i + 1)\n            if (substring.length() > max) {\n  \
    \              result = substring\n                max = substring.length()\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdef\")\n \
    \   // \"def\"\n    def findLongestSubstring4(string : String) : String", "  \
    \      var result = List[String]()\n        for (s in strings) {\n           \
    \ if (s.contains(substring)) {\n                result = result + s\n        \
    \    }\n        }\n        return result\n    }\n\n    // Filter an input list\
    \ of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring4(strings : List[String], substring :",
  "        var filtered = List[String]()\n        for (var string : strings) {\n \
    \           if (string.contains(substring)) {\n                filtered = filtered\
    \ + string\n            }\n        }\n        return filtered", "        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(strings : List[String],",
  "        var filtered = List[String]()\n        for (i <- 0 until strings.length)\
    \ {\n            if (strings[i].contains(substring)) {\n                filtered\
    \ = filtered + strings[i]\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered + strings[i]\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered + strings[i]\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"", "        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"c", "        var result = List[String]()\n        for (var\
    \ i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  val filtered = List[String]()\n        for (i <- 0 until strings.size) {\n\
    \            if (strings.get(i).contains(substring)) {\n                filtered\
    \ += strings.get(i)\n            }\n        }\n        return filtered\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (i <- 0 until strings.size) {\n            if\
    \ (strings.get(i).contains(substring)) {\n                filtered += strings.get(i)\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (i <- 0 until strings.size) {\n            if\
    \ (strings.get(i).contains(substring)) {\n                filtered += strings.get(i)\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    //", "        var filtered = List[String]()\n        for (var\
    \ string : strings) {\n            if (string.contains(substring)) {\n       \
    \         filtered = filtered + string\n            }\n        }\n        return\
    \ filtered", "        val result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result += s\n \
    \           }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring : String) : List[String", "        var filtered =\
    \ List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered.append(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered.append(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered.append(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    //", "        val result = List[String]()\n        for (i <- 0\
    \ until strings.length) {\n            if (strings[i].contains(substring)) {\n\
    \                result = result.append(strings[i])\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        var\
    \ result = List[String]()\n        for (i <- 0 until strings.length) {\n     \
    \       if (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        var\
    \ result = List[String]()\n        for (var string : strings) {\n            if\
    \ (string.contains(substring)) {\n                result = result.append(string)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        var filtered =\
    \ List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n       \
    \     if (strings.get(i).contains(substring)) {\n                filtered = filtered\
    \ + strings.get(i)\n            }\n        }\n        return filtered\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n     \
    \       if (strings.get(i).contains(substring)) {\n                filtered =\
    \ filtered + strings.get(i)\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n     \
    \       if (strings.get(i).contains(substring)) {\n                filtered =\
    \ filtered + strings.get(i)\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String", "        var filtered = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            filtered = filtered + s\n            }\n        }\n        return\
    \ filtered\n    }\n\n    // Filter an input list of strings only for ones that\
    \ contain given substring\n    // >>> filterBySubstring((List[String]()), (\"\
    a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ :", "        var filtered = List[String]()\n        for (var string : strings)\
    \ {\n            if (string.contains(substring)) {\n                filtered =\
    \ filtered + string\n            }\n        }\n        return filtered\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                filtered = filtered + string\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String],", " \
    \       var filteredStrings = List[String]()\n        for (s in strings) {\n \
    \           if (s.contains(substring)) {\n                filteredStrings = filteredStrings\
    \ + s\n            }\n        }\n        return filteredStrings\n    }\n\n   \
    \ // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filteredStrings\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filteredStrings = filteredStrings + s\n            }\n  \
    \      }\n        return filteredStrings\n    }\n\n    // Filter an input list\
    \ of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filteredStrings = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            filteredStrings = filteredStrings + s\n            }\n        }\n\
    \        return filteredStrings\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"", "        var filtered = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                filtered\
    \ = filtered.append(strings.get(i))\n            }\n        }\n        return\
    \ filtered\n    }\n\n    // Find the longest substring of a given string\n   \
    \ // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n\
    \    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        var max = String()\n        for (i <- 0 until\
    \ string.size) {\n            var substring = string.substring(i, string.size)\n\
    \            if (substring.length > max.length) {\n                max = substring\n\
    \            }\n        }\n        return max\n    }\n\n    // Find the longest\
    \ substring of a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(string\
    \ : String) : String = {\n        var max = String()\n        for (i <- 0 until\
    \ string.size) {\n            var substring = string.substring(i, string.size)\n\
    \            if (substring.length > max.length) {\n                max = substring\n\
    \            }\n        }\n        return max\n    }\n\n    // Find the longest\
    \ substring of a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring3(string\
    \ : String) : String = {\n        var max = String()\n", "        var filtered\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                filtered = filtered + string\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String],", " \
    \       var filtered = List[String]()\n        for (var string : strings) {\n\
    \            if (string.contains(substring)) {\n                filtered = filtered\
    \ + string\n            }\n        }\n        return filtered\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                filtered = filtered + string\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(strings : List", "       \
    \ val result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        val result\
    \ = new ArrayList[String]()\n        for (i <- 0 until strings.size) {\n     \
    \       if (strings.get(i).contains(substring)) {\n                result.add(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (", "        val result\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        val\
    \ result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n    // \"zabcdefghijklmnopqrstuvwxyz\"\
    \n    def findLongestSubstring(string : String) : String = {\n        val result\
    \ = \"\"\n        val max = 0\n        for (i in range(0, string.length())) {\n\
    \            val substring = string.substring(i, string.length())\n          \
    \  if (substring.length() > max) {\n                result = substring\n     \
    \           max = substring.length()\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(string\
    \ : String) : String = {\n        val result = \"\"\n        val max = 0\n   \
    \     for (i in range(0, string.length())) {\n            val substring = string.substring(i,\
    \ string.length())\n            if (substring.length() > max) {\n            \
    \    result = substring\n                max = substring.length()\n          \
    \  }\n        }\n        return result\n    }\n\n    // Find the longest substring\
    \ in a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring3(string\
    \ :", "        val result = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring of a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n    // \"zabcdefghijklmnopqrstuvwxyz\"\
    \n    def findLongestSubstring(string : String) : String = {\n        val result\
    \ = \"\"\n        val max = 0\n        for (i <- 0 until string.length) {\n  \
    \          val substring = string.substring(i, string.length)\n            if\
    \ (substring.length > max) {\n                max = substring.length\n       \
    \         result = substring\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring of a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n    // \"zabcdefghijklmnopqrstuvwxyz\"\
    \n    def findLongestSubstring2(string : String) : String = {\n        val result\
    \ = \"\"\n        val max = 0\n        for (i <- 0 until string.length) {\n  \
    \          val substring = string.substring(i, string.length)\n            if\
    \ (substring.length > max) {\n                max = substring.length\n       \
    \         result = substring\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring of a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n    // \"zabcdefghijklmnopqrstuvwxyz\"\
    \n    def findLong", "        var result = List[String]()\n        for (var string\
    \ : strings) {\n            if (string.contains(substring)) {\n              \
    \  result = result.append(string)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySub", "        var filtered = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            filtered = filtered + s\n            }\n        }\n        return\
    \ filtered\n    }\n\n    // Filter an input list of strings only for ones that\
    \ contain given substring\n    // >>> filterBySubstring((List[String]()), (\"\
    a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(strings : List[String],",
  "        var result = List[String]()\n        for (i <- 0 until strings.length)\
    \ {\n            if (strings[i].contains(substring)) {\n                result\
    \ = result.append(strings[i])\n            }\n        }\n        return result",
  "        val result = List[String]()\n        for (i <- 0 until strings.length)\
    \ {\n            if (strings[i].contains(substring)) {\n                result\
    \ = result.append(strings[i])\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        val\
    \ result = List[String]()\n        for (i <- 0 until strings.size) {\n       \
    \     if (strings.get(i).contains(substring)) {\n                result = result.append(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result + string\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring2(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result + string\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring3(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result + string\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring4(strings : List[String],", "        var\
    \ result = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n\
    \            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring that is a palindrome\n    // >>> findLongestPalindrome((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // \"abc\"\n    // >>> findLongestPalindrome((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"b\"))\n    // \"bacd\"\n    def findLongestPalindrome(strings\
    \ : List[String], substring : String) : String = {\n        var result = \"\"\n\
    \        for (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                if (strings.get(i).length() > result.length()) {\n      \
    \              result = strings.get(i)\n                }\n            }\n   \
    \     }\n        return result\n    }\n\n    // Find the longest palindrome in\
    \ a string\n    // >>> findLongestPalindrome(\"abc\")\n    // \"abc\"\n    //\
    \ >>> findLongestPalindrome(\"abccba\")\n    // \"cba\"\n    def findLongestPalindrome(string\
    \ : String) : String = {\n        var result = \"\"\n        for (var i = 0; i\
    \ < string.length(); i++) {\n            var left = string.substring(0, i)\n \
    \           var right = string.substring(i)\n            if (left.equals(right))\
    \ {\n                if (left.length() > result.length()) {\n                \
    \    result = left\n                }\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest palindrome in a string\n    // >>>\
    \ findLongestPalindrome(\"abccba\")\n    // \"cba\"\n    def findLongestPalindrome2(string\
    \ : String) : String = {\n        var result = \"\"\n        var left = \"\"\n\
    \        ", "        val result = new ArrayList[String]()\n        for (i <- 0\
    \ until strings.size) {\n            if (strings.get(i).contains(substring)) {\n\
    \                result.add(strings.get(i))\n            }\n        }\n      \
    \  return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        var filtered = List[String]()\n        for (var\
    \ s : String) {\n            if (s.contains(substring)) {\n                filtered\
    \ = filtered.append(s)\n            }\n        }\n        return filtered\n  \
    \  }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var s : String) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered.append(s)\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var s : String) {\n            if (s.contains(substring)) {\n        \
    \        filtered = filtered.append(s)\n            }\n        }\n        return\
    \ filtered\n    }\n\n    // Filter an input list of strings only for ones that\
    \ contain given substring\n    // >>> filterBySubstring((List[String]()), (\"\
    a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def", "        var result = List[String]()\n    \
    \    for (s in strings) {\n            if (s.contains(substring)) {\n        \
    \        result = result + s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result\
    \ + s\n            }\n        }\n        return result\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) :", "        var result = List[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"c", "        var result = List[String]()\n        for (s in\
    \ strings) {\n            if (s.contains(substring)) {\n                result\
    \ = result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        var result = List[String]()\n        for (var string : strings)\
    \ {\n            if (string.contains(substring)) {\n                result = result.append(string)\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"z\"\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        var result = \"\"\n        var maxLength = 0\n\
    \        for (var i = 0; i < string.length(); i++) {\n            var substring\
    \ = string.substring(i, i + 1)\n            if (substring.length() > maxLength)\
    \ {\n                result = substring\n                maxLength = substring.length()\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(string\
    \ : String) : String = {\n        var result = \"\"\n        var maxLength = 0\n\
    \        for (var i = 0; i < string.length(); i++) {\n            var substring\
    \ = string.substring(i, i + 1)\n            if (substring.length() > maxLength)\
    \ {\n                result = substring\n                maxLength = substring.length()\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuv", "        var result = List[String]()\n \
    \       for (s in strings) {\n            if (s.contains(substring)) {\n     \
    \           result = result.append(s)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring2(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(", "        val filtered =\
    \ new ArrayList[String]()\n        for (i <- 0 until strings.length) {\n     \
    \       if (strings[i].contains(substring)) {\n                filtered.add(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = new ArrayList[String]()\n        for (i <- 0 until strings.length) {\n   \
    \         if (strings[i].contains(substring)) {\n                filtered.add(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = new ArrayList[String]()\n        for (i <- 0 until strings.length) {\n   \
    \         if (strings[i].contains(substring)) {\n                filtered.add(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Filter an\
    \ input list of strings only for ones that contain given substring\n    // >>>\
    \ filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n    //\
    \ >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\")),\
    \ (\"a\"))\n", "        var result = List[String]()\n        for (i <- 0 until\
    \ strings.size) {\n            if (strings.get(i).contains(substring)) {\n   \
    \             result = result.append(strings.get(i))\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring : String) : List[String", "        var result = List[String]()\n\
    \        for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        val\
    \ result = List[String]()\n        for (i <- 0 until strings.size) {\n       \
    \     if (strings.get(i).contains(substring)) {\n                result = result.append(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        var result = List[String]()\n        for (var\
    \ i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        val result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result += s\n \
    \           }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        val result\
    \ = List[String]()\n        for (i <- 0 until strings.size) {\n            if\
    \ (strings.get(i).contains(substring)) {\n                result = result.append(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdef\")\n \
    \   // \"abcdef\"\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(s : String)\
    \ : String = {\n        val result = \"\"\n        val max = 0\n        for (i\
    \ <- 0 until s.length) {\n            val substring = s.substring(i, s.length)\n\
    \            if (substring.length > max) {\n                max = substring.length\n\
    \                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdef\")\n    // \"abcdef\"\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    def\
    \ findLongestSubstring2(s : String) : String = {\n        val result = \"\"\n\
    \        val max = 0\n        for (i <- 0 until s.length) {\n            val substring\
    \ = s.substring(i, s.length)\n            if (substring.length > max) {\n    \
    \            max = substring.length\n                result = substring\n    \
    \        }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdef\")\n \
    \   // \"abcdef\"\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring3(s : String)\
    \ : String = {\n        val", "        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        var result\
    \ = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n     \
    \       if (strings.apply(i).contains(substring)) {\n                result =\
    \ result.append(strings.apply(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n       \
    \     if (strings.apply(i).contains(substring)) {\n                result = result.append(strings.apply(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[", " \
    \       var result = List[String]()\n        for (s in strings) {\n          \
    \  if (s.contains(substring)) {\n                result = result.append(s)\n \
    \           }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(", "        var result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result = result + s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring3(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring :", "        val result = mutable.List[String]()\n\
    \        for (s : strings) {\n            if (s.contains(substring)) {\n     \
    \           result += s\n            }\n        }\n        return result\n   \
    \ }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ mutable.List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ mutable.List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        val filtered = List[String]()\n     \
    \   for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                filtered += strings.get(i)\n            }\n        }\n  \
    \      return filtered", "        var result = List[String]()\n        for (var\
    \ i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[", " \
    \       val result = List[String]()\n        for (s in strings) {\n          \
    \  if (s.contains(substring)) {\n                result = result + s\n       \
    \     }\n        }\n        return result\n    }\n\n    // Filter an input list\
    \ of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring4(strings : List[String], substring :",
  "        val result = List[String]()\n        for (i <- 0 until strings.size) {\n\
    \            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdef\")\n    // \"def\"\n    def findLongestSubstring(s : String) : String =\
    \ {\n        val result = \"\"\n        val max = 0\n        for (i <- 0 until\
    \ s.length) {\n            val substring = s.substring(i, i + 1)\n           \
    \ if (substring.length > max) {\n                max = substring.length\n    \
    \            result = substring\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdef\")\n    // \"def\"\n    def findLongestSubstring2(s : String) : String\
    \ = {\n        val result = \"\"\n        val max = 0\n        for (i <- 0 until\
    \ s.length) {\n            val substring = s.substring(i, i + 1)\n           \
    \ if (substring.length > max) {\n                max = substring.length\n    \
    \            result = substring\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdef\")\n    // \"def\"\n    def findLongestSubstring3(s : String) : String\
    \ = {\n        val result = \"\"\n        val max = 0\n        for (i <- 0 until\
    \ s.length) {\n            val substring = s.substring(i, i + 1)\n           \
    \ if (substring.length > max) {\n                max = substring.length\n    \
    \            result = substring\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdef\")\n    // \"def\"\n    def findLongestSubstring4(s : String) : String\
    \ = {\n        val result = \"\"\n        ", "        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result", "        var result = List[String]()\n        for (s in\
    \ strings) {\n            if (s.contains(substring)) {\n                result\
    \ = result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        var result = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        var filtered =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Find the longest substring of a given string\n\
    \    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\
    \n    def findLongestSubstring(s : String) : String = {\n        var max = \"\"\
    \n        for (i <- 0 until s.length) {\n            for (j <- i + 1 until s.length)\
    \ {\n                if (s.substring(i, j).length > max.length) {\n          \
    \          max = s.substring(i, j)\n                }\n            }\n       \
    \ }\n        return max\n    }\n\n    // Find the longest substring of a given\
    \ string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n  \
    \  // \"z\"\n    def findLongestSubstring2(s : String) : String = {\n        var\
    \ max = \"\"\n        for (i <- 0 until s.length) {\n            for (j <- i +\
    \ 1 until s.length) {\n                if (s.substring(i, j).length > max.length)\
    \ {\n                    max = s.substring(i, j)\n                }\n        \
    \    }\n        }\n        return max\n    }\n\n    // Find the longest substring\
    \ of a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"z\"\n    def findLongestSubstring3(s : String) : String = {\n    \
    \    var max = \"\"\n        for (i <- 0 until s.length) {\n            for (j\
    \ <- i + 1 until s.length) {\n                if (s.substring(i, j).length > max.length)\
    \ {\n                    max = s.substring(i, j)\n                }\n        \
    \    }\n        }\n        return max\n    }\n\n    // Find the longest substring\
    \ of a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnop", "  \
    \      val result = List[String]()\n        for (s in strings) {\n           \
    \ if (s.contains(substring)) {\n                result = result.append(s)\n  \
    \          }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List", "        var\
    \ result = List[String]()\n        for (var i = 0; i < strings.length; i++) {\n\
    \            if (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        val result = List[String]()\n        for (s : strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result.append(s)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s : strings) {\n            if (s.contains(substring)) {\n                result\
    \ = result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List", "        val\
    \ result = new ArrayList[String]()\n        for (i <- 0 until strings.size())\
    \ {\n            if (strings.get(i).contains(substring)) {\n                result.add(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size()) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size()) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        val result = List[String]()\n        for (i\
    \ <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[", " \
    \       var filtered = List[String]()\n        for (s in strings) {\n        \
    \    if (s.contains(substring)) {\n                filtered = filtered + s\n \
    \           }\n        }\n        return filtered\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ :", "        var result = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        val result = new ArrayList[String]()\n     \
    \   for (s : strings) {\n            if (s.contains(substring)) {\n          \
    \      result.add(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ new ArrayList[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result.add(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ new ArrayList[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result.add(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        var filtered = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                filtered = filtered\
    \ + s\n            }\n        }\n        return filtered\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String],", "        var result = List[String]()\n        for (var i =\
    \ 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Find the longest substring in\
    \ a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"wxyz\"\n    def findLongestSubstring(s : String) : String = {\n  \
    \      var result = \"\"\n        var max = 0\n        for (var i = 0; i < s.length();\
    \ i++) {\n            var substring = s.substring(i, i + 1)\n            if (substring.length()\
    \ > max) {\n                max = substring.length()\n                result =\
    \ substring\n            }\n        }\n        return result\n    }\n\n    //\
    \ Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    // \"wxyz\"\n    def findLongestSubstring2(s\
    \ : String) : String = {\n        var result = \"\"\n        var max = 0\n   \
    \     for (var i = 0; i < s.length(); i++) {\n            var substring = s.substring(i,\
    \ i + 1)\n            if (substring.length() > max) {\n                max = substring.length()\n\
    \                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"wxyz\"\n\
    \    def findLongestSubstring3(s : String) : String = {\n        var result =\
    \ \"\"\n        var max = 0\n        for (var i = 0; i < s.length(); i++) {\n\
    \            var substring = s.substring(i, i + 1)\n            if (substring.length()\
    \ > max) {\n                max = substring.length()\n                result =\
    \ substring\n            ", "        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        var result\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring2(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring4(strings : List[String], substring :",
  "        var result = List[String]()\n        for (var i = 0; i < strings.length;\
    \ i++) {\n            if (strings[i].contains(substring)) {\n                result\
    \ = result.append(strings[i])\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the first element in a list that satisfies a given predicate\n\
    \    // >>> findFirst(List[String](\"abc\", \"bacd\", \"cde\", \"array\"), (x\
    \ => x.length() > 2))\n    // \"bacd\"\n    def findFirst(list : List[String],\
    \ predicate : (String) => Boolean) : String = {\n        for (var i = 0; i < list.length;\
    \ i++) {\n            if (predicate(list[i])) {\n                return list[i]\n\
    \            }\n        }\n        return \"\"\n    }\n\n    // Find the last\
    \ element in a list that satisfies a given predicate\n    // >>> findLast(List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\"), (x => x.length() > 2))\n    // \"cde\"\n\
    \    def findLast(list : List[String], predicate : (String) => Boolean) : String\
    \ = {\n        for (var i = list.length - 1; i >= 0; i--) {\n            if (predicate(list[i]))\
    \ {\n                return list[i]\n            }\n        }\n        return\
    \ \"\"\n    }\n\n    // Find the index of the first element in a list that satisfies\
    \ a given predicate\n    // >>> findIndex(List[String](\"abc\", \"bacd\", \"cde\"\
    , \"array\"), (x => x.length() > 2))\n    // 2\n    def findIndex(list : List[String],\
    \ predicate : (String) => Boolean) : Int = {\n        for (var i = 0; i < list.length;\
    \ i++) {\n            if (predicate(list[i])) {\n                return i\n  \
    \          }\n        }\n        return -1\n    }\n\n    // Find the index of\
    \ the last element in a list that satisfies a given predicate\n    // >>> findLastIndex(List[String](\"\
    abc\", \"bacd\", \"cde\", \"array", "        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size()) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size()) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = new ArrayList[String]()\n\
    \        for (i <- 0 until strings.size()) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result.add(strings.get(i))\n            }\n        }\n  \
    \      return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(",
  "        val result = List[String]()\n        for (s in strings) {\n           \
    \ if (s.contains(substring)) {\n                result += s\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring : String) : List[String", "        var result = List[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        val result\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring that is a palindrome\n    // >>> findLongestPalindrome((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // \"abc\"\n    // >>> findLongestPalindrome((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"ab\"))\n    // \"bacd\"\n    def findLongestPalindrome(strings\
    \ : List[String], substring : String) : String = {\n        val result = \"\"\n\
    \        for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring that is a palindrome\n  \
    \  // >>> findLongestPalindrome((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"ab\"))\n    // \"bacd\"\n    def findLongestPalindrome2(strings : List[String],\
    \ substring : String) : String = {\n        val result = \"\"\n        for (i\
    \ <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring that is a palindrome\n  \
    \  // >>> findLongestPalindrome((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"ab\"))\n    // \"bacd\"\n    def findLongestPalindrome3(strings : List[String],\
    \ substring : String) : String = {\n        val result = \"\"\n        for (i\
    \ <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest", "        val result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result += s\n            }\n        }\n        return result\n  \
    \  }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring : String) : List[String", "        var result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result = result + s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result\
    \ + s\n            }\n        }\n        return result\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) :", "        var filtered = List[String]()\n\
    \        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                filtered = filtered + string\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(strings : List", "       \
    \ val result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ :", "        var result = List[String]()\n        for (s in strings) {\n   \
    \         if (s.contains(substring)) {\n                result = result + s\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring4(strings : List[String], substring :",
  "        var result = List[String]()\n        for (s in strings) {\n           \
    \ if (s.contains(substring)) {\n                result = result.append(s)\n  \
    \          }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(", "        val result = List[String]()\n\
    \        for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Find the longest substring in a\
    \ given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"z\"\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(s : String)\
    \ : String = {\n        val result = \"\"\n        val max = 0\n        for (i\
    \ <- 0 until s.length) {\n            val substring = s.substring(i, s.length)\n\
    \            if (substring.length > max) {\n                max = substring.length\n\
    \                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring2(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(s : String)\
    \ : String = {\n        val result = \"\"\n        val max = 0\n        for (i\
    \ <- 0 until s.length) {\n            val substring = s.substring(i, s.length)\n\
    \            if (substring.length > max) {\n                max = substring.length\n\
    \                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring3(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSub", "        val\
    \ result = List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result",
  "        var result = List[String]()\n        for (var i = 0; i < strings.length;\
    \ i++) {\n            if (strings[i].contains(substring)) {\n                result\
    \ = result.append(strings[i])\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var i = 0; i < strings.length; i++) {\n       \
    \     if (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        val result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result += s\n \
    \           }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result += s\n            }\n        }\n        return result\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        var result\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        var filtered =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ :", "        val result = new ArrayList[String]()\n        for (i <- 0 until\
    \ strings.size) {\n            if (strings.get(i).contains(substring)) {\n   \
    \             result.add(strings.get(i))\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n   \
    \ // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(s : String)\
    \ : String = {\n        val result = \"\"\n        val max = 0\n        for (i\
    \ <- 0 until s.length) {\n            val substring = s.substring(i, s.length)\n\
    \            if (substring.length > max) {\n                max = substring.length\n\
    \                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(s : String)\
    \ : String = {\n        val result = \"\"\n        val max = 0\n        for (i\
    \ <- 0 until s.length) {\n            val substring = s.substring(i, s.length)\n\
    \            if (substring.length > max) {\n                max = substring.length\n\
    \                result = substring\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring in a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLong", "        val result\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (", "        var filtered\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                filtered = filtered.append(strings[i])\n\
    \            }\n        }\n        return filtered\n    }\n\n    // Find the longest\
    \ substring in a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"z\"\n    def findLongestSubstring(s : String) : String = {\n     \
    \   var max = String()\n        for (i <- 0 until s.length) {\n            for\
    \ (j <- i + 1 until s.length) {\n                if (s[i:j].length > max.length)\
    \ {\n                    max = s[i:j]\n                }\n            }\n    \
    \    }\n        return max\n    }\n\n    // Find the longest substring in a given\
    \ string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n  \
    \  // \"z\"\n    def findLongestSubstring2(s : String) : String = {\n        var\
    \ max = String()\n        for (i <- 0 until s.length) {\n            for (j <-\
    \ i + 1 until s.length) {\n                if (s[i:j].length > max.length) {\n\
    \                    max = s[i:j]\n                }\n            }\n        }\n\
    \        return max\n    }\n\n    // Find the longest substring in a given string\n\
    \    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\
    \n    def findLongestSubstring3(s : String) : String = {\n        var max = String()\n\
    \        for (i <- 0 until s.length) {\n            for (j <- i + 1 until s.length)\
    \ {\n                if (s[i:j].length > max.length) {\n                    max\
    \ = s[i:j]\n                }\n            }\n        }\n        return max\n\
    \    }\n\n    // Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuv", "        var result = List[String]()\n        for (var\
    \ string : strings) {\n            if (string.contains(substring)) {\n       \
    \         result = result.append(string)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (var string\
    \ : strings) {\n            if (string.contains(substring)) {\n              \
    \  result = result.append(string)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        var result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result = result.append(s)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result.append(s)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        var filtered = List[String]()\n        for (var string : strings)\
    \ {\n            if (string.contains(substring)) {\n                filtered =\
    \ filtered + string\n            }\n        }\n        return filtered\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                filtered = filtered + string\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String],", " \
    \       val filtered = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                filtered\
    \ = filtered.append(strings.get(i))\n            }\n        }\n        return\
    \ filtered\n    }\n\n    // Filter an input list of strings only for ones that\
    \ contain given substring\n    // >>> filterBySubstring((List[String]()), (\"\
    a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val filtered = List[String]()\n      \
    \  for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                filtered = filtered.append(strings.get(i))\n            }\n\
    \        }\n        return filtered\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val filtered = List[String]()\n      \
    \  for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                filtered = filtered.append(strings.get(i))\n            }\n\
    \        }\n        return filtered\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result\
    \ + s\n            }\n        }\n        return result\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring(strings : List[String], substring : String)\
    \ : List[String] = {\n        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result\
    \ + s\n            }\n        }\n        return result\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) :", "        var result = List[String]()\n\
    \        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result", "        val filtered = List[String]()\n        for (i\
    \ <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                filtered += strings[i]\n            }\n        }\n      \
    \  return filtered\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val filtered = List[String]()\n      \
    \  for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                filtered += strings[i]\n            }\n        }\n      \
    \  return filtered\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val filtered = List[String]()\n      \
    \  for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                filtered += strings[i]\n            }\n        }\n      \
    \  return filtered\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd", "        var filtered = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                filtered = filtered\
    \ + s\n            }\n        }\n        return filtered\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        var result = List[String]()\n       \
    \ for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (", "        val filtered\
    \ = List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                filtered += s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                filtered += s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (s : strings) {\n            if (s.contains(substring))\
    \ {\n                filtered += s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String", "        var result = List[String]()\n\
    \        for (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  val result = List[String]()\n        for (i <- 0 until strings.size) {\n  \
    \          if (strings.get(i).contains(substring)) {\n                result =\
    \ result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring of a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        val result = \"\"\n        for (i <- 0 until\
    \ string.length) {\n            val substring = string.substring(i, string.length)\n\
    \            if (substring.length > result.length) {\n                result =\
    \ substring\n            }\n        }\n        return result\n    }\n\n    //\
    \ Find the longest substring of a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n    def findLongestSubstring2(string\
    \ : String) : String = {\n        val result = \"\"\n        val max = 0\n   \
    \     for (i <- 0 until string.length) {\n            val substring = string.substring(i,\
    \ string.length)\n            if (substring.length > max) {\n                max\
    \ = substring.length\n                result = substring\n            }\n    \
    \    }\n        return result\n    }\n\n    // Find the longest substring of a\
    \ given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"z\"\n    def findLongestSubstring3(string : String) : String = {\n\
    \        val result = \"\"\n        val max = 0\n        for (i <- 0 until string.length)\
    \ {\n            val substring = string.substring(i, string.length)\n        \
    \    if (substring.length > max) {\n                max = substring.length\n \
    \               result = substring\n            }\n        }\n        return result\n\
    \    }\n\n    // Find the longest substring of a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuv", "        val result = List[String]()\n        for (s\
    \ in strings) {\n            if (s.contains(substring)) {\n                result\
    \ = result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(",
  "        var filtered = List[String]()\n        for (var string : strings) {\n \
    \           if (string.contains(substring)) {\n                filtered = filtered\
    \ + string\n            }\n        }\n        return filtered\n    }\n\n    //\
    \ Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                filtered = filtered + string\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Filter an input list of strings only\
    \ for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var string : strings) {\n            if (string.contains(substring)) {\n\
    \                filtered = filtered + string\n            }\n        }\n    \
    \    return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String],", " \
    \       var filtered = List[String]()\n        for (s in strings) {\n        \
    \    if (s.contains(substring)) {\n                filtered = filtered + s\n \
    \           }\n        }\n        return filtered\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ :", "        var filtered = List[String]()\n        for (var s : strings) {\n\
    \            if (s.contains(substring)) {\n                filtered = filtered\
    \ + s\n            }\n        }\n        return filtered\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (var s : strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (var s : strings) {\n            if (s.contains(substring)) {\n       \
    \         filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String],", "        val result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result.append(s)\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List", "        var\
    \ result = List[String]()\n        for (var i = 0; i < strings.length; i++) {\n\
    \            if (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        val result = List[String]()\n        for (i <- 0 until\
    \ strings.size) {\n            if (strings.get(i).contains(substring)) {\n   \
    \             result = result.append(strings.get(i))\n            }\n        }\n\
    \        return result", "        var result = List[String]()\n        for (s\
    \ in strings) {\n            if (s.contains(substring)) {\n                result\
    \ = result.append(s)\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        val result = List[String]()\n        for (s in strings) {\n\
    \            if (s.contains(substring)) {\n                result += s\n     \
    \       }\n        }\n        return result", "        var result = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            result = result.append(s)\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring2(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4(", "        var result = List[String]()\n\
    \        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(", "        val result = List[String]()\n\
    \        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String],", "        var result = List[String]()\n        for (var string\
    \ : strings) {\n            if (string.contains(substring)) {\n              \
    \  result = result.append(string)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var string : strings) {\n            if (string.contains(substring))\
    \ {\n                result = result.append(string)\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var string : strings) {\n            if (string.contains(substring)) {\n  \
    \              result = result.append(string)\n            }\n        }\n    \
    \    return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySub", "        val result = List[String]()\n\
    \        for (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        val\
    \ result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        var result\
    \ = List[String]()\n        for (i <- 0 until strings.length) {\n            if\
    \ (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result", "        var result = List[String]()\n\
    \        for (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        val result = List[String]()\n        for (i <- 0 until\
    \ strings.size) {\n            if (strings.get(i).contains(substring)) {\n   \
    \             result = result.append(strings.get(i))\n            }\n        }\n\
    \        return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        var filtered = List[String]()\n        for (s\
    \ in strings) {\n            if (s.contains(substring)) {\n                filtered\
    \ = filtered + s\n            }\n        }\n        return filtered\n    }\n\n\
    \    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String],", "        var filtered = List[String]()\n        for (s in\
    \ strings) {\n            if (s.contains(substring)) {\n                filtered\
    \ = filtered + s\n            }\n        }\n        return filtered\n    }\n\n\
    \    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        var filtered = List[String]()\n     \
    \   for (s in strings) {\n            if (s.contains(substring)) {\n         \
    \       filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        var filtered = List[String]()\n     \
    \   for (s in strings) {\n            if (s.contains(substring)) {\n         \
    \       filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String],", "        val result = List[String]()\n        for (i <- 0\
    \ until strings.size) {\n            if (strings.get(i).contains(substring)) {\n\
    \                result = result.append(strings.get(i))\n            }\n     \
    \   }\n        return result", "        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        val\
    \ result = List[String]()\n        for (i <- 0 until strings.size) {\n       \
    \     if (strings.get(i).contains(substring)) {\n                result = result.append(strings.get(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result",
  "        val result = List[String]()\n        for (i <- 0 until strings.size) {\n\
    \            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde", "        var filtered = List[String]()\n        for (var\
    \ string : strings) {\n            if (string.contains(substring)) {\n       \
    \         filtered = filtered.append(string)\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Find the longest substring of a given string\n\
    \    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\
    \n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        var max = \"\"\n        var maxLength = 0\n\
    \        for (var i = 0; i < string.length(); i++) {\n            var substring\
    \ = string.substring(i, string.length())\n            if (substring.length() >\
    \ maxLength) {\n                max = substring\n                maxLength = substring.length()\n\
    \            }\n        }\n        return max\n    }\n\n    // Find the longest\
    \ common substring of two strings\n    // >>> findLongestCommonSubstring(\"abcdefghijklmnopqrstuvwxyz\"\
    , \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n    // \"abcdefghijklmnopqrstuvwxyz\"\
    \n    def findLongestCommonSubstring(string1 : String, string2 : String) : String\
    \ = {\n        var max = \"\"\n        var maxLength = 0\n        for (var i =\
    \ 0; i < string1.length(); i++) {\n            var substring = string1.substring(i,\
    \ string1.length())\n            if (substring.length() > maxLength) {\n     \
    \           max = substring\n                maxLength = substring.length()\n\
    \            }\n        }\n        for (var i = 0; i < string2.length(); i++)\
    \ {\n            var substring = string2.substring(i, string2.length())\n    \
    \        if (substring.length() >", "        val filtered = List[String]()\n \
    \       for (s in strings) {\n            if (s.contains(substring)) {\n     \
    \           filtered += s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered += s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered += s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring : String) :", "        var filtered = List[String]()\n\
    \        for (s in strings) {\n            if (s.contains(substring)) {\n    \
    \            filtered = filtered + s\n            }\n        }\n        return\
    \ filtered\n    }\n\n    // Filter an input list of strings only for ones that\
    \ contain given substring\n    // >>> filterBySubstring((List[String]()), (\"\
    a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ :", "        val result = List[String]()\n        for (i <- 0 until strings.size)\
    \ {\n            if (strings.get(i).contains(substring)) {\n                result\
    \ = result.append(strings.get(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"", "        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String],", "        val filtered = List[String]()\n        for (s in\
    \ strings) {\n            if (s.contains(substring)) {\n                filtered\
    \ = filtered + s\n            }\n        }\n        return filtered\n    }\n\n\
    \    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val filtered\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                filtered = filtered + s\n            }\n        }\n     \
    \   return filtered\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val filtered = List[String]()\n      \
    \  for (s in strings) {\n            if (s.contains(substring)) {\n          \
    \      filtered = filtered + s\n            }\n        }\n        return filtered\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring :", "        var result = List[String]()\n       \
    \ for (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.get(i).contains(substring))\
    \ {\n                result = result.append(strings.get(i))\n            }\n \
    \       }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  var result = List[String]()\n        for (var i = 0; i < strings.size(); i++)\
    \ {\n            if (strings.apply(i).contains(substring)) {\n               \
    \ result = result.append(strings.apply(i))\n            }\n        }\n       \
    \ return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  var result = List[String]()\n        for (var i = 0; i < strings.length; i++)\
    \ {\n            if (strings[i].contains(substring)) {\n                result\
    \ = result.append(strings[i])\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var i = 0; i < strings.length; i++) {\n       \
    \     if (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.length; i++) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\",", "        var result = List[String]()\n        for (i <- 0 until\
    \ strings.length) {\n            if (strings[i].contains(substring)) {\n     \
    \           result = result.append(strings[i])\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (", "        var result\
    \ = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring2(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring4(strings : List[String], substring :",
  "        var result = List[String]()\n        for (s in strings) {\n           \
    \ if (s.contains(substring)) {\n                result = result.append(s)\n  \
    \          }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List", "        val\
    \ result = List[String]()\n        for (i <- 0 until strings.length) {\n     \
    \       if (strings[i].contains(substring)) {\n                result = result.append(strings[i])\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        val result = List[String]()\n        for\
    \ (i <- 0 until strings.length) {\n            if (strings[i].contains(substring))\
    \ {\n                result = result.append(strings[i])\n            }\n     \
    \   }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[", "        var\
    \ result = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n\
    \            if (strings.apply(i).contains(substring)) {\n                result\
    \ = result.append(strings.apply(i))\n            }\n        }\n        return\
    \ result\n    }\n\n    // Find the longest substring of a given string\n    //\
    \ >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n    // \"z\"\n   \
    \ // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        var result = \"\"\n        var max = 0\n   \
    \     for (var i = 0; i < string.length(); i++) {\n            var substring =\
    \ string.substring(i, i + 1)\n            if (substring.length() > max) {\n  \
    \              max = substring.length()\n                result = substring\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring of a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(string\
    \ : String) : String = {\n        var result = \"\"\n        var max = 0\n   \
    \     for (var i = 0; i < string.length(); i++) {\n            var substring =\
    \ string.substring(i, i + 1)\n            if (substring.length() > max) {\n  \
    \              max = substring.length()\n                result = substring\n\
    \            }\n        }\n        return result\n    }\n\n    // Find the longest\
    \ substring of a given string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabc", "        var result = List[String]()\n        for (s in strings)\
    \ {\n            if (s.contains(substring)) {\n                result = result\
    \ + s\n            }\n        }\n        return result\n    }\n\n    // Filter\
    \ an input list of strings only for ones that contain given substring\n    //\
    \ >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result + s\n            }\n        }\n        return\
    \ result\n    }\n\n    // Filter an input list of strings only for ones that contain\
    \ given substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n \
    \   // (List[String]())\n    // >>> filterBySubstring((List[String](\"abc\", \"\
    bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\", \"bacd\"\
    , \"array\"))\n    def filterBySubstring3(strings : List[String], substring :\
    \ String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result + s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring4(strings\
    \ : List[String], substring :", "        var result = List[String]()\n       \
    \ for (s in strings) {\n            if (s.contains(substring)) {\n           \
    \     result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List", "        val filtered = new ArrayList[String]()\n        for (i <-\
    \ 0 until strings.size) {\n            if (strings.get(i).contains(substring))\
    \ {\n                filtered.add(strings.get(i))\n            }\n        }\n\
    \        return filtered\n    }\n\n    // Find the longest substring in a given\
    \ string\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyz\")\n  \
    \  // \"z\"\n    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring(string\
    \ : String) : String = {\n        val max = 0\n        val maxIndex = 0\n    \
    \    for (i <- 0 until string.length) {\n            val substring = string.substring(i,\
    \ i + 1)\n            if (substring.length > max) {\n                max = substring.length\n\
    \                maxIndex = i\n            }\n        }\n        return string.substring(maxIndex,\
    \ maxIndex + max)\n    }\n\n    // Find the longest substring in a given string\n\
    \    // >>> findLongestSubstring(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n    // \"zabcdefghijklmnopqrstuvwxyz\"\n    def findLongestSubstring2(string\
    \ : String) : String = {\n        val max = 0\n        val maxIndex = 0\n    \
    \    val substring = \"\"\n        for (i <- 0 until string.length) {\n      \
    \      if (string.substring(i, i + 1).length > max) {\n                max = string.substring(i,\
    \ i + 1).length\n                maxIndex = i\n                substring = string.substring(i,\
    \ i + 1)\n            }\n        }\n        return substring\n    }\n\n    //\
    \ Find the longest substring in a given string\n    // >>> findLongestSubstring(\"\
    abcdefghijklmnopqrstuvwxyzabcdef", "        val result = List[String]()\n    \
    \    for (s in strings) {\n            if (s.contains(substring)) {\n        \
    \        result += s\n            }\n        }\n        return result\n    }\n\
    \n    // Filter an input list of strings only for ones that contain given substring\n\
    \    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {\n        val result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result += s\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring(strings\
    \ : List[String], substring : String) : List[String] = {", "        var result\
    \ = List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n     \
    \       if (strings.apply(i).contains(substring)) {\n                result =\
    \ result.append(strings.apply(i))\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring2(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (var i = 0; i < strings.size(); i++) {\n       \
    \     if (strings.apply(i).contains(substring)) {\n                result = result.append(strings.apply(i))\n\
    \            }\n        }\n        return result\n    }\n\n    // Filter an input\
    \ list of strings only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  var result = List[String]()\n        for (var i = 0; i < strings.size(); i++)\
    \ {\n            if (strings.apply(i).contains(substring)) {\n               \
    \ result = result.append(strings.apply(i))\n            }\n        }\n       \
    \ return result\n    }\n\n    // Filter an input list of strings only for ones\
    \ that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring3(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (var i = 0; i < strings.size(); i++) {\n            if (strings.apply(i).contains(substring))\
    \ {\n                result = result.append(strings.apply(i))\n            }\n\
    \        }\n        return result\n    }\n\n    // Filter an input list of strings\
    \ only for ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((", "      \
    \  var result = List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring2(strings : List[String], substring\
    \ : String) : List[String] = {\n        var result = List[String]()\n        for\
    \ (s in strings) {\n            if (s.contains(substring)) {\n               \
    \ result = result.append(s)\n            }\n        }\n        return result\n\
    \    }\n\n    // Filter an input list of strings only for ones that contain given\
    \ substring\n    // >>> filterBySubstring((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterBySubstring((List[String](\"abc\", \"bacd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"bacd\", \"array\"))\n    def filterBySubstring3(strings\
    \ : List[String], substring : String) : List[String] = {\n        var result =\
    \ List[String]()\n        for (s in strings) {\n            if (s.contains(substring))\
    \ {\n                result = result.append(s)\n            }\n        }\n   \
    \     return result\n    }\n\n    // Filter an input list of strings only for\
    \ ones that contain given substring\n    // >>> filterBySubstring((List[String]()),\
    \ (\"a\"))\n    // (List[String]())\n    // >>> filterBySubstring((List[String](\"\
    abc\", \"bacd\", \"cde\", \"array\")), (\"a\"))\n    // (List[String](\"abc\"\
    , \"bacd\", \"array\"))\n    def filterBySubstring4("]
stop_tokens:
- "\n    }\n"

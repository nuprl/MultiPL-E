name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // >>> intersection(((1l,\
  \ 2l)), ((2l, 3l)))\n    // (\"NO\")\n    // >>> intersection(((-1l, 1l)), ((0l,\
  \ 4l)))\n    // (\"NO\")\n    // >>> intersection(((-3l, -1l)), ((-5l, 5l)))\n \
  \   // (\"YES\")\n    def intersection(interval1 : Tuple2[Long, Long], interval2\
  \ : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) return \"NO\"\n        val prime = isPrime(length)\n\
    \        if (prime) return \"YES\"\n        else return \"NO\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        val length = end -\
    \ start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n     \
    \   } else {\n            return \"YES\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2\
    \ = end2 - start2 + 1\n        val len = len1 * len2\n        val divisor = len1\
    \ * len2\n        val divisor2 = len1 + len2\n        val divisor3 = len1 + len2\
    \ - 2\n        val divisor4 = len1 + len2 - 4\n        val divisor5 = len1 + len2\
    \ - 5\n        val divisor6 = len1 + len2 - 6\n        val divisor7 = len1 + len2\
    \ - 7\n        val divisor8 = len1 + len2 - 8\n        val divisor9 = len1 + len2\
    \ - 9\n        val divisor10 = len1 + len2 - 10\n        val divisor11 = len1\
    \ + len2 - 11\n        val divisor12 = len1 + len2 - 12\n        val divisor13\
    \ = len1 + len2 - 13\n        val divisor14 = len1 + len2 - 14\n        val divisor15\
    \ = len1 + len2 - 15\n        val divisor16 = len1 + len2 - 16\n        val divisor17\
    \ = len1 + len2 - 17\n        val divisor18 = len1 + len2 - 18\n        val divisor19\
    \ = len1 + len2 - 19\n        val divisor20 = len1 + len2 - 20\n        val divisor21\
    \ = len1 + len2 - 21\n        val divisor22 = len1 + len2 - 22\n        val divisor23\
    \ = len1 + len2 - 23\n        val divisor24 = len1 + len2 - 24\n        val divisor25\
    \ = len1 + len2 - 25\n        val divisor26 = len1 + len2 - 26\n        val divisor27\
    \ = len1 + len2 - 27\n        val divisor28 = len1 + len2 - 28\n        val divisor29\
    \ = len1 + len2 - 29\n        val divisor30", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        val prime\
    \ = isPrime(length)\n        if (prime) {\n            return \"YES\"\n      \
    \  }\n        return \"NO\"", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > end2 || start2 > end1) {\n            return \"\
    NO\"\n        }\n        if (start1 == end2 || start2 == end1) {\n           \
    \ return \"NO\"\n        }\n        if (start1 == start2 && end1 == end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 == start2) {\n    \
    \        return \"YES\"\n        }\n        if (start2 == end1) {\n          \
    \  return \"YES\"\n        }\n        if (start1 == end2) {\n            return\
    \ \"YES\"\n        }\n        if (start2 == end1) {\n            return \"YES\"\
    \n        }\n        if (start1 > start2) {\n            return \"NO\"\n     \
    \   }\n        if (start2 > start1) {\n            return \"NO\"\n        }\n\
    \        if (end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (end2 > end1) {\n            return \"NO\"\n        }\n        val diff = end1\
    \ - start1\n        val diff2 = end2 - start2\n        val diff3 = diff + diff2\n\
    \        val diff4 = diff2 - diff\n        val diff5 = diff3 - diff4\n       \
    \ val diff6 = diff4 - diff3\n        val diff7 = diff5 - diff6\n        val diff8\
    \ = diff6 - diff5\n        val diff9 = diff7 - diff8\n        val diff10 = diff8\
    \ - diff7\n        val diff11 = diff9 - diff10\n        val diff12 = diff10 -\
    \ diff9\n        val diff13 = diff11 - diff12\n        val diff14 = diff12 - diff11\n\
    \        val diff15 = diff13 - diff14\n        val diff16 = diff14 - diff13\n\
    \        val diff17 = diff15 - diff16\n        val diff18 = diff16 - diff15\n\
    \        val diff19 = diff17 - diff18\n        val", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\
    \n        }\n        if (start2 > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n    \
    \    if (start2 > end1) {\n            return \"NO\"\n        }\n        if (start1\
    \ == end2) {\n            return \"YES\"\n        }\n        if (start2 == end1)\
    \ {\n            return \"YES\"\n        }\n        if (start1 == start2) {\n\
    \            return \"YES\"\n        }\n        if (start2 == start1) {\n    \
    \        return \"YES\"\n        }\n        if (end1 == end2) {\n            return\
    \ \"YES\"\n        }\n        if (end2 == end1) {\n            return \"YES\"\n\
    \        }\n        if (start1 > start2) {\n            return \"NO\"\n      \
    \  }\n        if (start2 > start1) {\n            return \"NO\"\n        }\n \
    \       if (end1 > end2) {\n            return \"NO\"\n        }\n        if (end2\
    \ > end1) {\n            return \"NO\"\n        }\n        val length = end1 -\
    \ start1 + 1\n        val length2 = end2 - start2 + 1\n        val length3 = end1\
    \ - start2 + 1\n        val length4 = end2 - start1 + 1\n        val length5 =\
    \ end1 - start1 + 1\n        val length6 = end2 - start2 + 1\n        val length7\
    \ = end1 - start2 + 1\n        val length8 = end2 - start1 + 1\n        val length9\
    \ = end1 - start1 + 1\n        val length10 = end2 - start2 + 1\n        val length11\
    \ = end1 - start2 + 1\n        val length12 = end2 - start1 + 1\n        val length13\
    \ = end1 - start1 + 1\n        val length14 = end2 - start2 + 1\n        val length15\
    \ = end1 - start2 +", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        } else if (start2 > end2)\
    \ {\n            return \"NO\"\n        } else if (start1 > end2 || start2 > end1)\
    \ {\n            return \"NO\"\n        } else {\n            val start = Math.max(start1,\
    \ start2)\n            val end = Math.min(end1, end2)\n            val length\
    \ = end - start + 1\n            if (length % 2 == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        } else if (start2 > end2)\
    \ {\n            return \"NO\"\n        } else if (start1 > end2 || start2 > end1)\
    \ {\n            return \"NO\"\n        } else if (start1 == end2 && start2 ==\
    \ end1) {\n            return \"YES\"\n        } else if (start1 == end2) {\n\
    \            return \"YES\"\n        } else if (start2 == end1) {\n          \
    \  return \"YES\"\n        } else if (start1 == start2 && end1 == end2) {\n  \
    \          return \"YES\"\n        } else if (start1 == start2) {\n          \
    \  return \"YES\"\n        } else if (end1 == end2) {\n            return \"YES\"\
    \n        } else if (start1 < start2 && end1 > end2) {\n            return \"\
    YES\"\n        } else if (start1 < start2 && end1 == end2) {\n            return\
    \ \"YES\"\n        } else if (start1 < start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 > end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 == end2) {\n           \
    \ return \"YES\"\n        } else if (start1 == start2 && end1 > end2) {\n    \
    \        return \"YES\"\n        } else if (start1 < start2 && end1 > end2) {\n\
    \            return \"YES\"\n        } else if (start1 < start2 && end1 == end2)\
    \ {\n            return \"YES\"\n        } else if (start1 < start2 && end1 <\
    \ end2) {\n            return \"YES\"\n        } else if (start1 > start2 && end1\
    \ < end2) {\n            return \"YES\"\n        } else if (start1 == start2",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1) {\n            return \"NO\"\n        }\n        if (start2 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start2 > end1) {\n            return\
    \ \"NO\"\n        }\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        val length2\
    \ = length / 2\n        val start2 = start + length2\n        val end2 = start2\
    \ + length2\n        if (start2 > end2) {\n            return \"NO\"\n       \
    \ }\n        val result = intersection(Tuple2(start, end), Tuple2(start2, end2))\n\
    \        if (result == \"YES\") {\n            return \"YES\"\n        }\n   \
    \     return \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) return \"NO\"\n        val prime = isPrime(length)\n\
    \        if (prime) return \"YES\"\n        else return \"NO\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        if (start > end) {\n\
    \            return \"NO\"\n        }\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  return \"YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > end2 || start2 > end1) {\n            return \"NO\"\n   \
    \     }\n        if (start1 <= start2 && end1 >= end2) {\n            return \"\
    YES\"\n        }\n        if (start2 <= start1 && end2 >= end1) {\n          \
    \  return \"YES\"\n        }\n        val start = Math.max(start1, start2)\n \
    \       val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  if (length % 2 == 1) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > end2 || start2 > end1) {\n            return \"NO\"\n   \
    \     }\n        if (start1 <= start2 && start2 <= end1) {\n            return\
    \ \"YES\"\n        }\n        if (start2 <= start1 && start1 <= end2) {\n    \
    \        return \"YES\"\n        }\n        if (start1 <= end2 && end2 <= end1)\
    \ {\n            return \"YES\"\n        }\n        if (start2 <= end1 && end1\
    \ <= end2) {\n            return \"YES\"\n        }\n        return \"NO\"", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1 || start2 > end2) {\n            return\
    \ \"NO\"\n        } else if (start1 <= start2 && end1 >= end2) {\n           \
    \ return \"YES\"\n        } else if (start1 <= start2 && end1 < end2) {\n    \
    \        return \"NO\"\n        } else if (start1 > start2 && end1 < end2) {\n\
    \            return \"NO\"\n        } else if (start1 > start2 && end1 > end2)\
    \ {\n            return \"NO\"\n        } else if (start1 < start2 && end1 > end2)\
    \ {\n            return \"NO\"\n        } else if (start1 < start2 && end1 < end2)\
    \ {\n            return \"NO\"\n        } else if (start1 > start2 && end1 > end2)\
    \ {\n            return \"NO\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 > end2 || start2 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start1 == end2 || start2 ==\
    \ end1) {\n            return \"NO\"\n        }\n        val length = end1 - start1\
    \ + 1\n        val length2 = end2 - start2 + 1\n        if (length == 0 || length2\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length == 1 || length2\
    \ == 1) {\n            return \"YES\"\n        }\n        val prime = isPrime(length)\n\
    \        val prime2 = isPrime(length2)\n        if (prime && prime2) {\n     \
    \       return \"YES\"\n        }\n        return \"NO\"", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1 || start2 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 < start2 || end1\
    \ > end2) {\n            return \"NO\"\n        }\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        val length = end -\
    \ start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n     \
    \   }\n        if (length % 3 == 0) {\n            return \"YES\"\n        }\n\
    \        if (length % 5 == 0) {\n            return \"YES\"\n        }\n     \
    \   return \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val length = end1 - start1\n      \
    \  val length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n \
    \           return \"NO\"\n        }\n        if (length == 1 || length2 == 1)\
    \ {\n            return \"YES\"\n        }\n        if (length % 2 == 0 && length2\
    \ % 2 == 0) {\n            return \"NO\"\n        }\n        if (length % 2 ==\
    \ 1 && length2 % 2 == 1) {\n            return \"YES\"\n        }\n        val\
    \ length3 = length + length2\n        val length4 = length3 / 2\n        val length5\
    \ = length3 / 3\n        val length6 = length3 / 4\n        val length7 = length3\
    \ / 5\n        val length8 = length3 / 6\n        val length9 = length3 / 7\n\
    \        val length10 = length3 / 8\n        val length11 = length3 / 9\n    \
    \    val length12 = length3 / 10\n        val length13 = length3 / 11\n      \
    \  val length14 = length3 / 12\n        val length15 = length3 / 13\n        val\
    \ length16 = length3 / 14\n        val length17 = length3 / 15\n        val length18\
    \ = length3 / 16\n        val length19 = length3 / 17\n        val length20 =\
    \ length3 / 18\n        val length21 = length3 / 19\n        val length22 = length3\
    \ / 20\n        val length23 = length3 / 21\n        val length24 = length3 /\
    \ 22\n        val length25 = length3 / 23\n        val length26 = length3 / 24\n\
    \        val length27 = length3 / 25\n        val length28 = length3 / 26\n  \
    \      val length29 = length3 / 27\n        ", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\
    \n        }\n        if (start2 > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n    \
    \    if (start2 > end1) {\n            return \"NO\"\n        }\n        val len1\
    \ = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val len =\
    \ len1 * len2\n        val divisor = len1 * len2\n        val divisor2 = len1\
    \ + len2\n        val divisor3 = len1 + len2\n        val divisor4 = len1 + len2\n\
    \        val divisor5 = len1 + len2\n        val divisor6 = len1 + len2\n    \
    \    val divisor7 = len1 + len2\n        val divisor8 = len1 + len2\n        val\
    \ divisor9 = len1 + len2\n        val divisor10 = len1 + len2\n        val divisor11\
    \ = len1 + len2\n        val divisor12 = len1 + len2\n        val divisor13 =\
    \ len1 + len2\n        val divisor14 = len1 + len2\n        val divisor15 = len1\
    \ + len2\n        val divisor16 = len1 + len2\n        val divisor17 = len1 +\
    \ len2\n        val divisor18 = len1 + len2\n        val divisor19 = len1 + len2\n\
    \        val divisor20 = len1 + len2\n        val divisor21 = len1 + len2\n  \
    \      val divisor22 = len1 + len2\n        val divisor23 = len1 + len2\n    \
    \    val divisor24 = len1 + len2\n        val divisor25 = len1 + len2\n      \
    \  val divisor26 = len1 + len2\n        val divisor27 = len1 + len2\n        val\
    \ divisor28", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  if (length % 3 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 5 == 0) {\n            return \"NO\"\n        }\n        if (length % 7 ==\
    \ 0) {\n            return \"NO\"\n        }\n        if (length % 11 == 0) {\n\
    \            return \"NO\"\n        }\n        if (length % 13 == 0) {\n     \
    \       return \"NO\"\n        }\n        if (length % 17 == 0) {\n          \
    \  return \"NO\"\n        }\n        if (length % 19 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 23 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 29 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (length % 31 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length % 37 == 0) {\n            return \"NO\"\n        }\n     \
    \   if (length % 41 == 0) {\n            return \"NO\"\n        }\n        if\
    \ (length % 43 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 47 == 0) {\n            return \"NO\"\n        }\n        if (length % 53\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length % 59 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length % 61 == 0) {\n \
    \           ", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val divisor = len % 2 == 0 ? 2 : 1\n        val result\
    \ = len / divisor == 1 ? \"YES\" : \"NO\"\n        return result", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        if (start1 > end1 ||\
    \ start2 > end2) {\n            return \"NO\"\n        }\n        if (start1 <=\
    \ start2 && end1 >= end2) {\n            return \"YES\"\n        }\n        if\
    \ (start1 <= start2 && end1 < end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 > start2 && end1 > end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > start2 && end1 < end2) {\n            return \"\
    YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n         \
    \   return \"YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2)\
    \ {\n            return \"YES\"\n        }\n        if (start1 > start2 && end1\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > start2\
    \ && end1 < end2) {\n            return \"YES\"\n        }\n        if (start1\
    \ > start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 > start2 && end1 < end2) {\n            return \"YES\"\n        }\n\
    \        if (start1 > start2 && end1 > end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > start2 && end1 < end2) {\n            return \"\
    YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n         \
    \   return \"YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        } else {\n\
    \            return \"YES\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) return \"NO\"\n       \
    \ val length = end - start + 1\n        if (length % 2 == 0) return \"NO\"\n \
    \       val num = length / 2\n        val isPrime = isPrime(num)\n        if (isPrime)\
    \ return \"YES\"\n        else return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 <= start2 && end1 >= end2)\
    \ {\n            return \"YES\"\n        }\n        if (start1 <= start2 && end1\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start1 > start2\
    \ && end1 >= end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 < end2) {\n            return \"YES\"\n        }\n        if\
    \ (start1 < start2 && end1 >= end2) {\n            return \"YES\"\n        }\n\
    \        if (start1 < start2 && end1 < end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > start2 && end1 > end2) {\n            return \"\
    NO\"\n        }\n        if (start1 == start2 && end1 == end2) {\n           \
    \ return \"YES\"\n        }\n        if (start1 == start2 && end1 < end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 == start2 && end1 >\
    \ end2) {\n            return \"NO\"\n        }\n        if (start1 < start2 &&\
    \ end1 == end2) {\n            return \"YES\"\n        }\n        if (start1 >\
    \ start2 && end1 == end2) {\n            return \"YES\"\n        }\n        if\
    \ (start1 < start2 && end1 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > start2 && end1 > end2) {\n            return \"NO\"\n   \
    \     }\n        if (start1 < start2 && end1 > end2) {\n            return \"\
    YES\"\n        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 < start2 && end1 < end2) {\n        \
    \    return \"NO\"\n        }\n        if (start", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2\
    \ = end2 - start2 + 1\n        val len = len1 * len2\n        if (len % 2 == 0)\
    \ {\n            return \"NO\"\n        }\n        val i = 0\n        val j =\
    \ 0\n        val k = 0\n        val m = 0\n        val n = 0\n        val p =\
    \ 0\n        val q = 0\n        val r = 0\n        val s = 0\n        val t =\
    \ 0\n        val u = 0\n        val v = 0\n        val w = 0\n        val x =\
    \ 0\n        val y = 0\n        val z = 0\n        val a = 0\n        val b =\
    \ 0\n        val c = 0\n        val d = 0\n        val e = 0\n        val f =\
    \ 0\n        val g = 0\n        val h = 0\n        val i1 = 0\n        val i2\
    \ = 0\n        val j1 = 0\n        val j2 = 0\n        val k1 = 0\n        val\
    \ k2 = 0\n        val l1 = 0\n        val l2 = 0\n        val m1 = 0\n       \
    \ val m2 = 0\n        val n1 = 0\n        val n2 = 0\n        val o1 = 0\n   \
    \     val o2 = 0\n        val p1 = 0\n        val p2 = 0\n        val q1 = 0\n\
    \        val q2 = 0\n        val r1 = 0\n        val r2 = 0\n        val s1 =\
    \ 0\n        val s2 = 0\n        val t1 = 0\n        val t2 = 0\n        val u1\
    \ = 0\n        val u2 = 0\n        val v1 = 0\n        val v2 = 0\n        val\
    \ w1 = 0\n        val w2 = 0\n        val x1 = 0\n        val x2 = 0\n       \
    \ val y1 = 0\n        val y2 = 0\n        val z1 = 0\n        val z2 = 0\n   \
    \     val a1 = 0\n        val a2 = 0\n        val b1 = 0", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val len1 = end1 - start1 + 1\n     \
    \   val len2 = end2 - start2 + 1\n        val len = len1 * len2\n        val div\
    \ = len / 2\n        val div2 = div / 2\n        val div3 = div2 / 2\n       \
    \ val div4 = div3 / 2\n        val div5 = div4 / 2\n        val div6 = div5 /\
    \ 2\n        val div7 = div6 / 2\n        val div8 = div7 / 2\n        val div9\
    \ = div8 / 2\n        val div10 = div9 / 2\n        val div11 = div10 / 2\n  \
    \      val div12 = div11 / 2\n        val div13 = div12 / 2\n        val div14\
    \ = div13 / 2\n        val div15 = div14 / 2\n        val div16 = div15 / 2\n\
    \        val div17 = div16 / 2\n        val div18 = div17 / 2\n        val div19\
    \ = div18 / 2\n        val div20 = div19 / 2\n        val div21 = div20 / 2\n\
    \        val div22 = div21 / 2\n        val div23 = div22 / 2\n        val div24\
    \ = div23 / 2\n        val div25 = div24 / 2\n        val div26 = div25 / 2\n\
    \        val div27 = div26 / 2\n        val div28 = div27 / 2\n        val div29\
    \ = div28 / 2\n        val div30 = div29 / 2\n        val div31 = div30 / 2\n\
    \        val div32 = div31 / 2\n        val div33 = div32 / 2\n        val div34\
    \ = div33 / 2\n        val div35 = div34 / 2\n        val div36 = div35 / 2\n\
    \        val div37 = div36 / 2\n        val div38 = div37 / 2\n        val div39\
    \ = div38 / 2\n        val div40 = div39 / 2\n        val div41 = div40 / 2\n\
    \        val div42 = div41 / 2\n        val div43 = div42 / 2\n        val div44\
    \ = div43 / 2", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime =\
    \ lenInt.isPrime\n        if (lenIntPrime) {\n            return \"YES\"\n   \
    \     } else {\n            return \"NO\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        val divisor = scala.math.Numeric.div(length, 2)\n        if\
    \ (scala.math.Numeric.isPrime(divisor)) {\n            return \"YES\"\n      \
    \  }\n        return \"NO\"", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n\
    \        val len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime\
    \ = lenInt.isPrime\n        val lenIntPrimeInt = lenIntPrime.toInt\n        if\
    \ (lenIntPrimeInt == 0) {\n            return \"NO\"\n        } else {\n     \
    \       return \"YES\"\n        }", "        val start1 = interval1._1\n     \
    \   val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2 = end2\
    \ - start2 + 1\n        val len = len1 * len2\n        val divisor = len1 * len2\n\
    \        val divisor2 = len1 * len2 - 1\n        val divisor3 = len1 * len2 -\
    \ 2\n        val divisor4 = len1 * len2 - 3\n        val divisor5 = len1 * len2\
    \ - 4\n        val divisor6 = len1 * len2 - 5\n        val divisor7 = len1 * len2\
    \ - 6\n        val divisor8 = len1 * len2 - 7\n        val divisor9 = len1 * len2\
    \ - 8\n        val divisor10 = len1 * len2 - 9\n        val divisor11 = len1 *\
    \ len2 - 10\n        val divisor12 = len1 * len2 - 11\n        val divisor13 =\
    \ len1 * len2 - 12\n        val divisor14 = len1 * len2 - 13\n        val divisor15\
    \ = len1 * len2 - 14\n        val divisor16 = len1 * len2 - 15\n        val divisor17\
    \ = len1 * len2 - 16\n        val divisor18 = len1 * len2 - 17\n        val divisor19\
    \ = len1 * len2 - 18\n        val divisor20 = len1 * len2 - 19\n        val divisor21\
    \ = len1 * len2 - 20\n        val divisor22 = len1 * len2 - 21\n        val divisor23\
    \ = len1 * len2 - 22\n        val divisor24 = len1 * len2 - 23\n        val divisor25\
    \ = len1 * len2 - 24\n        val divisor26 = len1 * len2 - 25\n        val divisor27\
    \ = len1 * len2 - 26\n        val divisor28 = len1 * len2 - 27\n        val divisor29\
    \ = len1 * len2 - 28\n        val divis", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        val isPrime = isPrime(length)\n\
    \        if (isPrime) {\n            return \"YES\"\n        } else {\n      \
    \      return \"NO\"\n        }", "        val start1 = interval1._1\n       \
    \ val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1 || start2 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 <= start2 && end1 >= end2) {\n       \
    \     return \"YES\"\n        }\n        if (start1 <= start2 && end1 < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 > start2 && end1\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > start2\
    \ && end1 < end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ < start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 < start2 && end1 < end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 == start2 && end1 == end2) {\n            return \"YES\"\n\
    \        }\n        if (start1 == start2 && end1 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 == end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 < start2 && end1 == end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 < start2 && end1\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 < start2\
    \ && end1 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 < end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 > start2 && end1 < end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 < start2 && end1 > end2) {\n            return \"NO\"\n   \
    \     }\n        if (start1 < start2 && end1 > end2) {\n            return \"\
    NO\"\n        }\n        if (start", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\n  \
    \      }\n        if (start2 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start2 > end1) {\n            return \"NO\"\n        }\n        val length\
    \ = end1 - start1 + 1\n        val length2 = end2 - start2 + 1\n        if (length\
    \ == 0 || length2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ == 1 || length2 == 1) {\n            return \"YES\"\n        }\n        val\
    \ prime = isPrime(length)\n        if (prime) {\n            return \"YES\"\n\
    \        }\n        return \"NO\"", "        val start1 = interval1._1\n     \
    \   val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2 = end2\
    \ - start2 + 1\n        val len = len1 * len2\n        val divisor = len1 * len2\n\
    \        val divisor2 = len1 * len2 - 1\n        val divisor3 = len1 * len2 -\
    \ 2\n        val divisor4 = len1 * len2 - 3\n        val divisor5 = len1 * len2\
    \ - 4\n        val divisor6 = len1 * len2 - 5\n        val divisor7 = len1 * len2\
    \ - 6\n        val divisor8 = len1 * len2 - 7\n        val divisor9 = len1 * len2\
    \ - 8\n        val divisor10 = len1 * len2 - 9\n        val divisor11 = len1 *\
    \ len2 - 10\n        val divisor12 = len1 * len2 - 11\n        val divisor13 =\
    \ len1 * len2 - 12\n        val divisor14 = len1 * len2 - 13\n        val divisor15\
    \ = len1 * len2 - 14\n        val divisor16 = len1 * len2 - 15\n        val divisor17\
    \ = len1 * len2 - 16\n        val divisor18 = len1 * len2 - 17\n        val divisor19\
    \ = len1 * len2 - 18\n        val divisor20 = len1 * len2 - 19\n        val divisor21\
    \ = len1 * len2 - 20\n        val divisor22 = len1 * len2 - 21\n        val divisor23\
    \ = len1 * len2 - 22\n        val divisor24 = len1 * len2 - 23\n        val divisor25\
    \ = len1 * len2 - 24\n        val divisor26 = len1 * len2 - 25\n        val divisor27\
    \ = len1 * len2 - 26\n        val divisor28 = len1 * len2 - 27\n        val divisor29\
    \ = len1 * len2 - 28\n        val divis", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2\
    \ = end2 - start2 + 1\n        val len = len1 * len2\n        val divisor = scala.math.div(len,\
    \ 2)\n        val divisorInt = divisor.toInt\n        val divisorInt2 = divisorInt.toInt\n\
    \        val divisorInt3 = divisorInt2.toInt\n        val divisorInt4 = divisorInt3.toInt\n\
    \        val divisorInt5 = divisorInt4.toInt\n        val divisorInt6 = divisorInt5.toInt\n\
    \        val divisorInt7 = divisorInt6.toInt\n        val divisorInt8 = divisorInt7.toInt\n\
    \        val divisorInt9 = divisorInt8.toInt\n        val divisorInt10 = divisorInt9.toInt\n\
    \        val divisorInt11 = divisorInt10.toInt\n        val divisorInt12 = divisorInt11.toInt\n\
    \        val divisorInt13 = divisorInt12.toInt\n        val divisorInt14 = divisorInt13.toInt\n\
    \        val divisorInt15 = divisorInt14.toInt\n        val divisorInt16 = divisorInt15.toInt\n\
    \        val divisorInt17 = divisorInt16.toInt\n        val divisorInt18 = divisorInt17.toInt\n\
    \        val divisorInt19 = divisorInt18.toInt\n        val divisorInt20 = divisorInt19.toInt\n\
    \        val divisorInt21 = divisorInt20.toInt\n        val divisorInt22 = divisorInt21.toInt\n\
    \        val divisorInt23 = divisorInt22.toInt\n        val divisorInt24 = divisorInt23.toInt\n\
    \        val divisorInt25 = divisorInt24.", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start2 <= start1 && end2 > end1) {\n            return \"NO\"\
    \n        }\n        if (start2 <= start1 && end2 < end1) {\n            return\
    \ \"YES\"\n        }\n        if (start1 > start2 && end1 < end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 > start2 && end1 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start2 > start1 && end2 > end1)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > start1 && end2\
    \ > end1) {\n            return \"YES\"\n        }\n        return \"NO\"", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        if (len1\
    \ == 0 || len2 == 0) {\n            return \"NO\"\n        }\n        val len\
    \ = len1 * len2\n        if (len % 2 == 0) {\n            return \"NO\"\n    \
    \    }\n        val mid1 = start1 + len1 / 2\n        val mid2 = start2 + len2\
    \ / 2\n        if (mid1 > mid2) {\n            return \"NO\"\n        }\n    \
    \    val mid = mid1 + (mid2 - mid1) / 2\n        if (mid % 2 == 0) {\n       \
    \     return \"NO\"\n        }\n        return \"YES\"", "        val start1 =\
    \ interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       val length = end - start + 1\n        if (length % 2 == 0) {\n       \
    \     return \"NO\"\n        } else {\n            val prime = isPrime(length)\n\
    \            if (prime) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1) {\n            return\
    \ \"NO\"\n        }\n        if (start2 > end2) {\n            return \"NO\"\n\
    \        }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start2 > end1) {\n            return \"NO\"\n        }\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime =\
    \ lenInt.isPrime\n        if (lenIntPrime) {\n            return \"YES\"\n   \
    \     } else {\n            return \"NO\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2\
    \ = end2 - start2 + 1\n        val len = len1 * len2\n        val div = len /\
    \ 2\n        val isPrime = div % 2 == 0\n        val isPrime2 = len % 2 == 0\n\
    \        val isPrime3 = len % 3 == 0\n        val isPrime4 = len % 4 == 0\n  \
    \      val isPrime5 = len % 5 == 0\n        val isPrime6 = len % 6 == 0\n    \
    \    val isPrime7 = len % 7 == 0\n        val isPrime8 = len % 8 == 0\n      \
    \  val isPrime9 = len % 9 == 0\n        val isPrime10 = len % 10 == 0\n      \
    \  val isPrime11 = len % 11 == 0\n        val isPrime12 = len % 12 == 0\n    \
    \    val isPrime13 = len % 13 == 0\n        val isPrime14 = len % 14 == 0\n  \
    \      val isPrime15 = len % 15 == 0\n        val isPrime16 = len % 16 == 0\n\
    \        val isPrime17 = len % 17 == 0\n        val isPrime18 = len % 18 == 0\n\
    \        val isPrime19 = len % 19 == 0\n        val isPrime20 = len % 20 == 0\n\
    \        val isPrime21 = len % 21 == 0\n        val isPrime22 = len % 22 == 0\n\
    \        val isPrime23 = len % 23 == 0\n        val isPrime24 = len % 24 == 0\n\
    \        val isPrime25 = len % 25 == 0\n        val isPrime26 = len % 26 == 0\n\
    \        val isPrime27 = len % 27 == 0\n        val isPrime28 = len % 28 == 0\n\
    \        val isPrime29 = len % 29 == 0\n        val isPrime30 = len % 30 == 0\n\
    \        val isPrime31 = len % 31 == 0\n        val isPrime32 = len % 32 == 0\n\
    \        val isPrime33 = len % 33 == 0\n        val isPrime34 = len % 34 == 0\n\
    \        val isPrime35 = len % 35 == 0\n        val isPrime36 = len % 36", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2 = end2\
    \ - start2 + 1\n        val len = len1 * len2\n        val lenInt = len.toInt\n\
    \        val lenIntPrime = lenInt.isPrime\n        val lenIntPrime_ = lenIntPrime.toString\n\
    \        val lenIntPrime_1 = lenIntPrime_\n        if (lenIntPrime_1 == \"true\"\
    ) {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       val length = end - start + 1\n        if (length % 2 == 0) {\n       \
    \     return \"NO\"\n        }\n        val prime = isPrime(length)\n        if\
    \ (prime) {\n            return \"YES\"\n        }\n        return \"NO\"", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val len1 = end1\
    \ - start1 + 1\n        val len2 = end2 - start2 + 1\n        val len = len1 *\
    \ len2\n        val divisor = len1 * len2\n        val divisor2 = divisor / 2\n\
    \        val divisor3 = divisor / 3\n        val divisor4 = divisor / 4\n    \
    \    val divisor5 = divisor / 5\n        val divisor6 = divisor / 6\n        val\
    \ divisor7 = divisor / 7\n        val divisor8 = divisor / 8\n        val divisor9\
    \ = divisor / 9\n        val divisor10 = divisor / 10\n        val divisor11 =\
    \ divisor / 11\n        val divisor12 = divisor / 12\n        val divisor13 =\
    \ divisor / 13\n        val divisor14 = divisor / 14\n        val divisor15 =\
    \ divisor / 15\n        val divisor16 = divisor / 16\n        val divisor17 =\
    \ divisor / 17\n        val divisor18 = divisor / 18\n        val divisor19 =\
    \ divisor / 19\n        val divisor20 = divisor / 20\n        val divisor21 =\
    \ divisor / 21\n        val divisor22 = divisor / 22\n        val divisor23 =\
    \ divisor / 23\n        val divisor24 = divisor / 24\n        val divisor25 =\
    \ divisor / 25\n        val divisor26 = divisor / 26\n        val divisor27 =\
    \ divisor / 27\n        val divisor28 = divisor / 28\n        val divisor29 =\
    \ divisor / 29\n        val divisor30 = divisor / 30\n        val divisor31 =\
    \ divisor / 31\n        val divisor32 = divisor / 32\n        val divisor33 =\
    \ divisor / 33\n        val divisor34 = div", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) return \"NO\"\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) return \"NO\"\n        val divisor = 2\n       \
    \ while (divisor <= length) {\n            if (length % divisor != 0) {\n    \
    \            divisor += 2\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        val num = length / 2\n\
    \        val num2 = num - 1\n        val num3 = num + 1\n        val num4 = num2\
    \ * num2\n        val num5 = num3 * num3\n        val num6 = num4 + num5\n   \
    \     val num7 = num4 - num5\n        val num8 = num6 + num7\n        val num9\
    \ = num6 - num7\n        val num10 = num8 + num9\n        val num11 = num8 - num9\n\
    \        val num12 = num10 + num11\n        val num13 = num10 - num11\n      \
    \  val num14 = num12 + num13\n        val num15 = num12 - num13\n        val num16\
    \ = num14 + num15\n        val num17 = num14 - num15\n        val num18 = num16\
    \ + num17\n        val num19 = num16 - num17\n        val num20 = num18 + num19\n\
    \        val num21 = num18 - num19\n        val num22 = num20 + num21\n      \
    \  val num23 = num20 - num21\n        val num24 = num22 + num23\n        val num25\
    \ = num22 - num23\n        val num26 = num24 + num25\n        val num27 = num24\
    \ - num25\n        val num28 = num26 + num27\n        val num29 = num26 - num27\n\
    \        val num30 = num28 + num29\n        val num31 = num28 - num29\n      \
    \  val num32 = num30 + num31\n        val num33 = num30 - num31\n        val num34\
    \ = num32 + num33\n        val num35 = num32 - num33\n        val num36 = num34\
    \ + num35\n        val num37 =", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end1 - start1 + 1\n        val length2 = end2 - start2 +\
    \ 1\n        if (length < length2) {\n            return \"NO\"\n        }\n \
    \       if (length == length2) {\n            val intersection = start1 + 1\n\
    \            return \"YES\"\n        }\n        if (start1 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start2 > end1) {\n            return\
    \ \"NO\"\n        }\n        val intersection = start1 + 1\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val length = end1 - start1 + 1\n  \
    \      val length2 = end2 - start2 + 1\n        if (length == 0 || length2 ==\
    \ 0) {\n            return \"NO\"\n        }\n        if (length == 1 || length2\
    \ == 1) {\n            return \"YES\"\n        }\n        val length3 = length\
    \ * length2\n        val length4 = length3 / 2\n        val length5 = length3\
    \ / 3\n        val length6 = length3 / 4\n        val length7 = length3 / 5\n\
    \        val length8 = length3 / 6\n        val length9 = length3 / 7\n      \
    \  val length10 = length3 / 8\n        val length11 = length3 / 9\n        val\
    \ length12 = length3 / 10\n        val length13 = length3 / 11\n        val length14\
    \ = length3 / 12\n        val length15 = length3 / 13\n        val length16 =\
    \ length3 / 14\n        val length17 = length3 / 15\n        val length18 = length3\
    \ / 16\n        val length19 = length3 / 17\n        val length20 = length3 /\
    \ 18\n        val length21 = length3 / 19\n        val length22 = length3 / 20\n\
    \        val length23 = length3 / 21\n        val length24 = length3 / 22\n  \
    \      val length25 = length3 / 23\n        val length26 = length3 / 24\n    \
    \    val length27 = length3 / 25\n        val length28 = length3 / 26\n      \
    \  val length29 = length3 / 27\n        val length30 = length3 / 28\n        val\
    \ length31 = length3 / 29\n        val length32 = length3 / 30\n        val length33\
    \ = length3 / 31\n        val length34 = length3 / 32\n        ", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        if (start1 > end1 ||\
    \ start2 > end2) {\n            return \"NO\"\n        }\n        if (start1 >\
    \ end2 || start2 > end1) {\n            return \"NO\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start2 <= start1 && end2 >= end1) {\n            return \"YES\"\n     \
    \   }\n        if (start1 <= start2 && end1 >= end2) {\n            return \"\
    YES\"\n        }\n        if (start2 <= start1 && end2 >= end1) {\n          \
    \  return \"YES\"\n        }\n        return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\
    \n        }\n        if (start2 > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n    \
    \    if (start2 > end1) {\n            return \"NO\"\n        }\n        val start\
    \ = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n       \
    \ val length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 3 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 5 == 0) {\n            return \"NO\"\n     \
    \   }\n        if (length % 7 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length % 11 == 0) {\n            return \"NO\"\n        }\n     \
    \   if (length % 13 == 0) {\n            return \"NO\"\n        }\n        if\
    \ (length % 17 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 19 == 0) {\n            return \"NO\"\n        }\n        if (length % 23\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length % 29 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length % 31 == 0) {\n \
    \           return \"NO\"\n        }\n        if (length % 37 == 0) {\n      \
    \      return \"NO\"\n        }\n        if (length % 41 == 0) {\n           \
    \ return \"NO\"\n        }\n        if (length % 43 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 47 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 53 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (length % 59 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length % 61 == 0) {\n            ", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length == 2) {\n            return \"YES\"\n\
    \        }\n        if (length == 3) {\n            return \"YES\"\n        }\n\
    \        if (length % 3 == 0) {\n            return \"YES\"\n        }\n     \
    \   if (length % 5 == 0) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 <= end2) {\n            return \"YES\"\n     \
    \   }\n        if (start2 <= start1 && end2 >= end1) {\n            return \"\
    YES\"\n        }\n        if (start2 <= start1 && end2 <= end1) {\n          \
    \  return \"YES\"\n        }\n        return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) return \"NO\"\n       \
    \ val length = end - start + 1\n        if (length % 2 == 0) return \"NO\"\n \
    \       val prime = isPrime(length)\n        if (prime) return \"YES\"\n     \
    \   else return \"NO\"", "        val start1 = interval1._1\n        val end1\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length % 2 == 0) {\n        \
    \    return \"NO\"\n        }\n        val prime = isPrime(length)\n        if\
    \ (prime) {\n            return \"YES\"\n        }\n        return \"NO\"", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) return \"NO\"\n        val divisor = scala.math.factorial(length\
    \ / 2)\n        if (divisor == 0) return \"NO\"\n        val result = divisor\
    \ % length == 0\n        return result ? \"YES\" : \"NO\"", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime =\
    \ lenInt.isPrime\n        val lenIntPrime_ = lenIntPrime.toString\n        val\
    \ lenIntPrime_1 = lenIntPrime_\n        if (lenIntPrime_1 == \"true\") {\n   \
    \         return \"YES\"\n        } else {\n            return \"NO\"\n      \
    \  }", "        val start1 = interval1._1\n        val end1 = interval1._2\n \
    \       val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        } else\
    \ if (start1 > end2 || start2 > end1) {\n            return \"NO\"\n        }\
    \ else if (start1 == end2 || start2 == end1) {\n            return \"NO\"\n  \
    \      } else if (start1 == end2 && start2 == end1) {\n            return \"YES\"\
    \n        } else {\n            val start = Math.max(start1, start2)\n       \
    \     val end = Math.min(end1, end2)\n            val length = end - start + 1\n\
    \            if (length % 2 == 0) {\n                return \"NO\"\n         \
    \   } else {\n                return \"YES\"\n            }\n        }", "   \
    \     val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 <= end2) {\n            return \"YES\"\n     \
    \   }\n        if (start2 <= start1 && end2 >= end1) {\n            return \"\
    YES\"\n        }\n        if (start2 <= start1 && end2 <= end1) {\n          \
    \  return \"YES\"\n        }\n        return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        val num =\
    \ length / 2\n        val num2 = num / 2\n        val num3 = num / 3\n       \
    \ val num4 = num / 4\n        val num5 = num / 5\n        val num6 = num / 6\n\
    \        val num7 = num / 7\n        val num8 = num / 8\n        val num9 = num\
    \ / 9\n        val num10 = num / 10\n        val num11 = num / 11\n        val\
    \ num12 = num / 12\n        val num13 = num / 13\n        val num14 = num / 14\n\
    \        val num15 = num / 15\n        val num16 = num / 16\n        val num17\
    \ = num / 17\n        val num18 = num / 18\n        val num19 = num / 19\n   \
    \     val num20 = num / 20\n        val num21 = num / 21\n        val num22 =\
    \ num / 22\n        val num23 = num / 23\n        val num24 = num / 24\n     \
    \   val num25 = num / 25\n        val num26 = num / 26\n        val num27 = num\
    \ / 27\n        val num28 = num / 28\n        val num29 = num / 29\n        val\
    \ num30 = num / 30\n        val num31 = num / 31\n        val num32 = num / 32\n\
    \        val num33 = num / 33\n        val num34 = num / 34\n        val num35\
    \ = num / 35\n        val num36 = num / 36\n        val num37 = num / 37\n   \
    \     val num38 = num / 38\n        val num39 = num / 39\n        val num40 =\
    \ num / 40\n        val num41 = num / 41\n        val num42 = num / 42\n     \
    \   val num43 = num / 43\n        val num44 = num / 44\n        val num45 = num\
    \ / 45\n        val num46 = num / 46", "        val start1 = interval1._1\n  \
    \      val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\
    \n        }\n        if (start2 > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n    \
    \    if (start2 > end1) {\n            return \"NO\"\n        }\n        val start\
    \ = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n       \
    \ val length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length == 2) {\n            return \"YES\"\n\
    \        }\n        val nums = scala.collection.JavaConversions.asJavaCollection(scala.collection.mutable.ArrayBuffer.apply(length\
    \ / 2))\n        for (i <- 0 until nums.length) {\n            nums[i] = start\
    \ + i\n        }\n        for (i <- 0 until nums.length) {\n            nums[i]\
    \ = start + i\n        }\n        for (i <- 0 until nums.length) {\n         \
    \   nums[i] = start + i\n        }\n        for (i <- 0 until nums.length) {\n\
    \            nums[i] = start + i\n        }\n        for (i <- 0 until nums.length)\
    \ {\n            nums[i] = start + i\n        }\n        for (i <- 0 until nums.length)\
    \ {\n            nums[i] = start + i\n        }\n        for (i <- 0 until nums.length)\
    \ {\n            nums[i] = start + i\n        }\n        for (i <- 0 until nums.length)\
    \ {\n            nums[i] = start + i\n        }\n        for (i <- 0 until nums.length)\
    \ {\n            nums[i] = start + i\n        }\n        for (i <- 0 until nums.length)\
    \ {\n            nums[i] = start + i\n        ", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        val isPrime = isPrime(length)\n        if (isPrime)\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val length = end1 - start1 + 1\n  \
    \      val length2 = end2 - start2 + 1\n        val length3 = end2 - start1 +\
    \ 1\n        val length4 = end1 - start2 + 1\n        val length5 = end1 - start1\
    \ + 1\n        val length6 = end2 - start1 + 1\n        val length7 = end1 - start2\
    \ + 1\n        val length8 = end2 - start1 + 1\n        val length9 = end1 - start2\
    \ + 1\n        val length10 = end2 - start1 + 1\n        val length11 = end1 -\
    \ start2 + 1\n        val length12 = end2 - start1 + 1\n        val length13 =\
    \ end1 - start2 + 1\n        val length14 = end2 - start1 + 1\n        val length15\
    \ = end1 - start2 + 1\n        val length16 = end2 - start1 + 1\n        val length17\
    \ = end1 - start2 + 1\n        val length18 = end2 - start1 + 1\n        val length19\
    \ = end1 - start2 + 1\n        val length20 = end2 - start1 + 1\n        val length21\
    \ = end1 - start2 + 1\n        val length22 = end2 - start1 + 1\n        val length23\
    \ = end1 - start2 + 1\n        val length24 = end2 - start1 + 1\n        val length25\
    \ = end1 - start2 + 1\n        val length26 = end2 - start1 + 1\n        val length27\
    \ = end1 - start2 + 1\n        val length28 = end2 - start1 + 1\n        val length29\
    \ = end1 - start2 + 1\n        val length30 = end2 - start1 + 1\n        val length",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ < start2 || end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 >= start2 && end1 <= end2) {\n            return \"YES\"\n        }\n\
    \        if (start2 >= start1 && end2 <= end1) {\n            return \"YES\"\n\
    \        }\n        val length = (end1 - start1) + (end2 - start2)\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 2 == 1) {\n            return \"YES\"\n        }\n        return \"NO\"",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > end2 || start2 > end1) {\n            return \"NO\"\n        }\n        if\
    \ (start1 == end2 || start2 == end1) {\n            return \"NO\"\n        }\n\
    \        if (start1 == start2 && end1 == end2) {\n            return \"YES\"\n\
    \        }\n        if (start1 == start2) {\n            return \"YES\"\n    \
    \    }\n        if (start1 == end2) {\n            return \"YES\"\n        }\n\
    \        if (start2 == end1) {\n            return \"YES\"\n        }\n      \
    \  if (start1 > start2) {\n            val temp = start1\n            start1 =\
    \ start2\n            start2 = temp\n        }\n        if (end1 > end2) {\n \
    \           val temp = end1\n            end1 = end2\n            end2 = temp\n\
    \        }\n        val length = end1 - start1 + 1\n        val divisor = 2\n\
    \        while (divisor <= length) {\n            if (length % divisor == 0) {\n\
    \                return \"NO\"\n            }\n            divisor += 1\n    \
    \    }\n        return \"YES\"", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        val length = end - start + 1\n        val isPrime = length %\
    \ 2 == 0\n        if (isPrime) {\n            return \"YES\"\n        } else {\n\
    \            return \"NO\"\n        }", "        val start1 = interval1._1\n \
    \       val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 <= start2 && end1 >= end2)\
    \ {\n            return \"YES\"\n        }\n        if (start1 <= start2 && end1\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start1 > start2\
    \ && end1 < end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 < start2 && end1 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 < start2 && end1 < end2) {\n            return \"YES\"\n  \
    \      }\n        if (start1 > start2 && end1 > end2) {\n            return \"\
    YES\"\n        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 < start2 && end1 > end2) {\n        \
    \    return \"YES\"\n        }\n        return \"NO\"", "        val start1 =\
    \ interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start <= end) {\n       \
    \     val length = end - start + 1\n            if (length % 2 == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        } else {\n            return \"NO\"\n        }", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        } else {\n            return \"YES\"\n        }", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        val length = end -\
    \ start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n     \
    \   } else {\n            return \"YES\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2 = end2\
    \ - start2 + 1\n        val len = len1 * len2\n        if (len % 2 == 0) {\n \
    \           return \"NO\"\n        } else {\n            val result = scala.math.BigInt.valueOf(len\
    \ / 2)\n            return result.isPrime() ? \"YES\" : \"NO\"\n        }", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1) {\n            return \"NO\"\n        }\n        if (start2 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start2 > end1) {\n            return\
    \ \"NO\"\n        }\n        val length = end1 - start1 + 1\n        val length2\
    \ = end2 - start2 + 1\n        if (length == 0 || length2 == 0) {\n          \
    \  return \"NO\"\n        }\n        if (length == 1 || length2 == 1) {\n    \
    \        return \"YES\"\n        }\n        if (length % 2 == 0 || length2 % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        val result = scala.math.BigInt.valueOf(length).multiply(scala.math.BigInt.valueOf(length2))\n\
    \        result = result.divide(scala.math.BigInt.valueOf(2))\n        if (result.isPrime())\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime =\
    \ lenInt.isPrime\n        if (lenIntPrime) {\n            return \"YES\"\n   \
    \     } else {\n            return \"NO\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 > end2 || start2 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start1 == end2 || start2 ==\
    \ end1) {\n            return \"NO\"\n        }\n        if (start1 == end2 &&\
    \ start2 == end1) {\n            return \"NO\"\n        }\n        if (start1\
    \ == end2 && start2 == end1) {\n            return \"NO\"\n        }\n       \
    \ if (start1 == end2 && start2 == end1) {\n            return \"NO\"\n       \
    \ }\n        if (start1 == end2 && start2 == end1) {\n            return \"NO\"\
    \n        }\n        if (start1 == end2 && start2 == end1) {\n            return\
    \ \"NO\"\n        }\n        if (start1 == end2 && start2 == end1) {\n       \
    \     return \"NO\"\n        }\n        if (start1 == end2 && start2 == end1)\
    \ {\n            return \"NO\"\n        }\n        if (start1 == end2 && start2\
    \ == end1) {\n            return \"NO\"\n        }\n        if (start1 == end2\
    \ && start2 == end1) {\n            return \"NO\"\n        }\n        if (start1\
    \ == end2 && start2 == end1) {\n            return \"NO\"\n        }\n       \
    \ if (start1 == end2 && start2 == end1) {\n            return \"NO\"\n       \
    \ }\n        if (start1 == end2 && start2 == end1) {\n            return \"NO\"\
    \n        }\n        if (start1 == end2 && start2 == end1) {\n            return\
    \ \"NO\"\n        }\n        if (start1 == end2 && start2 == end1) {\n       \
    \     return \"NO\"\n        }\n        if (start1 == end2 && start2 == end1)\
    \ {\n            return \"NO\"\n        }\n        if (start", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end2) {\n            return\
    \ \"NO\"\n        } else if (start2 > end1) {\n            return \"NO\"\n   \
    \     } else if (start1 > end2) {\n            return \"NO\"\n        } else if\
    \ (start2 > end1) {\n            return \"NO\"\n        } else if (start1 == end2)\
    \ {\n            return \"YES\"\n        } else if (start2 == end1) {\n      \
    \      return \"YES\"\n        } else if (start1 == end2) {\n            return\
    \ \"YES\"\n        } else if (start2 == end1) {\n            return \"YES\"\n\
    \        } else if (start1 == start2) {\n            return \"YES\"\n        }\
    \ else if (start2 == start1) {\n            return \"YES\"\n        } else if\
    \ (start1 == end2) {\n            return \"YES\"\n        } else if (start2 ==\
    \ end1) {\n            return \"YES\"\n        } else if (start1 == end2) {\n\
    \            return \"YES\"\n        } else if (start2 == end1) {\n          \
    \  return \"YES\"\n        } else if (start1 == start2) {\n            return\
    \ \"YES\"\n        } else if (start2 == start1) {\n            return \"YES\"\n\
    \        } else if (start1 == end2) {\n            return \"YES\"\n        } else\
    \ if (start2 == end1) {\n            return \"YES\"\n        } else if (start1\
    \ == end2) {\n            return \"YES\"\n        } else if (start2 == end1) {\n\
    \            return \"YES\"\n        } else if (start1 == start2) {\n        \
    \    return \"YES\"\n        } else if (start2 == start1) {\n            return\
    \ \"YES\"\n        } else if (start1 == end2) {\n            return \"YES\"\n\
    \        } else if (start2 == end1) {\n            return \"YES\"\n        } else\
    \ if (start1 == end2) {\n            return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val len1 = end1\
    \ - start1 + 1\n        val len2 = end2 - start2 + 1\n        val len = len1 *\
    \ len2\n        val isPrime = len % 2 == 0\n        if (isPrime) {\n         \
    \   val result = len / 2\n            return \"YES\"\n        } else {\n     \
    \       return \"NO\"\n        }", "        val start1 = interval1._1\n      \
    \  val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = Math.max(start1, start2)\n        val end\
    \ = Math.min(end1, end2)\n        val length = end - start + 1\n        val isPrime\
    \ = length % 2 == 0\n        if (isPrime) {\n            return \"YES\"\n    \
    \    } else {\n            return \"NO\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end1 - start1 + 1\n        val length2\
    \ = end2 - start2 + 1\n        val intersection = start1 + length - 1\n      \
    \  val intersection2 = start2 + length2 - 1\n        if (intersection < start2\
    \ || intersection > end2) {\n            return \"NO\"\n        }\n        if\
    \ (intersection2 < start1 || intersection2 > end1) {\n            return \"NO\"\
    \n        }\n        if (length == 1 && length2 == 1) {\n            return \"\
    YES\"\n        }\n        if (length == 2 && length2 == 2) {\n            return\
    \ \"YES\"\n        }\n        if (length == 3 && length2 == 3) {\n           \
    \ return \"YES\"\n        }\n        if (length == 4 && length2 == 4) {\n    \
    \        return \"YES\"\n        }\n        if (length == 5 && length2 == 5) {\n\
    \            return \"YES\"\n        }\n        if (length == 6 && length2 ==\
    \ 6) {\n            return \"YES\"\n        }\n        if (length == 7 && length2\
    \ == 7) {\n            return \"YES\"\n        }\n        if (length == 8 && length2\
    \ == 8) {\n            return \"YES\"\n        }\n        if (length == 9 && length2\
    \ == 9) {\n            return \"YES\"\n        }\n        if (length == 10 &&\
    \ length2 == 10) {\n            return \"YES\"\n        }\n        if (length\
    \ == 11 && length2 == 11) {\n            return \"YES\"\n        }\n        if\
    \ (length == 12 && length2 == 12) {\n            return \"YES\"\n        }\n \
    \       if (length == 13 && length2 == 13) {\n            return \"YES\"\n   \
    \     }\n        if (length == 14 && length2 == 14) {\n            return \"YES\"\
    \n        }\n        if (length == 15 && length2 == 15) {\n            return\
    \ \"YES\"\n        }\n        if (length == 16 && length2 == 16) {\n         \
    \   return \"YES\"\n        }\n        if (", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end1 - start1 + 1\n        val length2\
    \ = end2 - start2 + 1\n        if (length == 0 || length2 == 0) {\n          \
    \  return \"NO\"\n        }\n        val result = intersection(interval1, interval2,\
    \ start1, start2, end1, end2)\n        if (result.isEmpty()) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"\n    }\n\n    // [input] interval1,\
    \ interval2, start1, start2, end1, end2\n    // [output] result\n    def intersection(interval1\
    \ : Tuple2[Long, Long], interval2 : Tuple2[Long, Long], start1 : Long, start2\
    \ : Long, end1 : Long, end2 : Long) : scala.collection.immutable.List[Long] =\
    \ {\n        val result = new scala.collection.immutable.List[Long]\n        if\
    \ (end1 < start1 || end2 < start2) {\n            return result\n        }\n \
    \       if (end1 > end2) {\n            return result\n        }\n        if (end1\
    \ < start2 || end2 < start1) {\n            return result\n        }\n       \
    \ if (end1 > end2) {\n            return result\n        }\n        if (start1\
    \ > start2) {\n            return result\n        }\n        if (start1 < start2)\
    \ {\n            return result\n        }\n        if (start1 == start2) {\n \
    \           result.append(start1)\n            return result\n        }\n    \
    \    if (start1 > start2) {\n            return result\n        }\n        if\
    \ (start1 < start2) {\n            return result\n        }\n        if (start1\
    \ == start2) {\n            result.append(start1)\n            return result\n\
    \        }\n        if (start1 > start2) {\n            return result\n      \
    \  }\n        if (start1 < start2) {\n            return result\n        }\n \
    \       if (start1 == start2) {\n            result", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = (end1 - start1) * (end2 - start2)\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        } else {\n\
    \            val prime = scala.math.primeNumber(length / 2)\n            if (prime\
    \ != null) {\n                return \"YES\"\n            } else {\n         \
    \       return \"NO\"\n            }\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val len1 = end1\
    \ - start1 + 1\n        val len2 = end2 - start2 + 1\n        val len = len1 *\
    \ len2\n        val lenInt = len.toInt\n        val lenIntPrime = lenInt.isPrime\n\
    \        if (lenIntPrime) {\n            return \"YES\"\n        } else {\n  \
    \          return \"NO\"\n        }", "        val start1 = interval1._1\n   \
    \     val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 > end2 || start2 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start1 <= start2 && end1 >=\
    \ end2) {\n            return \"YES\"\n        }\n        if (start2 <= start1\
    \ && end2 >= end1) {\n            return \"YES\"\n        }\n        if (start1\
    \ <= start2 && end2 >= end1) {\n            return \"YES\"\n        }\n      \
    \  if (start2 <= start1 && end1 >= end2) {\n            return \"YES\"\n     \
    \   }\n        return \"NO\"", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 <= start2 && end1 >= end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 <= start2 && end1 < end2) {\n       \
    \     return \"NO\"\n        }\n        if (start2 <= start1 && end2 < end1) {\n\
    \            return \"NO\"\n        }\n        if (start2 <= start1 && end2 >=\
    \ end1) {\n            return \"YES\"\n        }\n        if (start1 <= start2\
    \ && end2 >= end1) {\n            return \"YES\"\n        }\n        if (start2\
    \ <= start1 && end2 >= end1) {\n            return \"YES\"\n        }\n      \
    \  return \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\
    \n        }\n        if (start2 > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n    \
    \    if (start2 > end1) {\n            return \"NO\"\n        }\n        val start\
    \ = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n       \
    \ val length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        val isPrime = isPrime(length)\n        if (isPrime)\
    \ {\n            return \"YES\"\n        }\n        return \"NO\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        if (start > end) {\n\
    \            return \"NO\"\n        }\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  return \"YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end2) {\n            return \"NO\"\n        } else if (start2 > end1)\
    \ {\n            return \"NO\"\n        } else if (start1 > end2) {\n        \
    \    return \"NO\"\n        } else if (start2 > end1) {\n            return \"\
    NO\"\n        } else if (start1 == end2) {\n            return \"YES\"\n     \
    \   } else if (start2 == end1) {\n            return \"YES\"\n        } else if\
    \ (start1 == end2) {\n            return \"YES\"\n        } else if (start2 ==\
    \ end1) {\n            return \"YES\"\n        } else if (start1 == start2) {\n\
    \            return \"YES\"\n        } else if (start2 == start1) {\n        \
    \    return \"YES\"\n        } else if (start1 == end2) {\n            return\
    \ \"YES\"\n        } else if (start2 == end1) {\n            return \"YES\"\n\
    \        } else if (start1 == end2) {\n            return \"YES\"\n        } else\
    \ if (start2 == end1) {\n            return \"YES\"\n        } else if (start1\
    \ == start2) {\n            return \"YES\"\n        } else if (start2 == start1)\
    \ {\n            return \"YES\"\n        } else if (start1 == end2) {\n      \
    \      return \"YES\"\n        } else if (start2 == end1) {\n            return\
    \ \"YES\"\n        } else if (start1 == end2) {\n            return \"YES\"\n\
    \        } else if (start2 == end1) {\n            return \"YES\"\n        } else\
    \ if (start1 == start2) {\n            return \"YES\"\n        } else if (start2\
    \ == start1) {\n            return \"YES\"\n        } else if (start1 == end2)\
    \ {\n            return \"YES\"\n        } else if (start2 == end1) {\n      \
    \      return \"YES\"\n        } else if (start1 == end2) {\n            return\
    \ \"YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 > end2 || start2 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start1 <= start2 && end1 >=\
    \ end2) {\n            return \"YES\"\n        }\n        if (start2 <= start1\
    \ && end2 >= end1) {\n            return \"YES\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start2 <= start1 && end2 >= end1) {\n            return \"YES\"\n     \
    \   }\n        if (start1 <= start2 && end2 >= end1) {\n            return \"\
    YES\"\n        }\n        if (start2 <= start1 && end2 >= end1) {\n          \
    \  return \"YES\"\n        }\n        return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 <= start2 && end1 >= end2)\
    \ {\n            return \"YES\"\n        }\n        if (start1 <= start2 && end1\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start1 > start2\
    \ && end1 >= end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 < end2) {\n            return \"YES\"\n        }\n        if\
    \ (start1 < start2 && end1 >= end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 < start2 && end1 > end2) {\n            return \"YES\"\n \
    \       }\n        if (start1 == start2 && end1 == end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 == start2 && end1 < end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 == start2 && end1 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > start2 && end1 ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start1 > start2 &&\
    \ end1 < end2) {\n            return \"YES\"\n        }\n        if (start1 <\
    \ start2 && end1 == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 < start2 && end1 > end2) {\n            return \"YES\"\n        }\n\
    \        if (start1 == start2 && end1 > end2) {\n            return \"NO\"\n \
    \       }\n        if (start1 == start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 < start2 && end1 > end2) {\n\
    \            return \"YES\"\n        }\n        if (start", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val len1 = end1 - start1 + 1\n        val len2\
    \ = end2 - start2 + 1\n        val len = len1 * len2\n        val isPrime = len\
    \ % 2 == 0\n        if (isPrime) {\n            val result = len / 2\n       \
    \     return \"YES\"\n        } else {\n            return \"NO\"\n        }",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end1 - start1 + 1\n        val length2 = end2 - start2 + 1\n        val intersection\
    \ = start1 + (length - 1) * (start2 + (length2 - 1) * 2) / 2\n        val prime\
    \ = isPrime(intersection)\n        if (prime) {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end1 - start1 + 1\n   \
    \     val length2 = end2 - start2 + 1\n        val intersection = start1 + length\
    \ - 1\n        val intersection2 = start2 + length2 - 1\n        val result =\
    \ if (length == 0) \"NO\" else if (length2 == 0) \"NO\" else if (intersection\
    \ == intersection2) \"YES\" else \"NO\"\n        return result", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        val length = end -\
    \ start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n     \
    \   }\n        val prime = isPrime(length)\n        if (prime) {\n           \
    \ return \"YES\"\n        } else {\n            return \"NO\"\n        }", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1) {\n            return \"NO\"\n        } else if (start2 > end2) {\n  \
    \          return \"NO\"\n        } else if (start1 > end2) {\n            return\
    \ \"NO\"\n        } else if (start2 > end1) {\n            return \"NO\"\n   \
    \     } else if (start1 == end2) {\n            return \"YES\"\n        } else\
    \ if (start2 == end1) {\n            return \"YES\"\n        } else if (start1\
    \ == start2 && end1 == end2) {\n            return \"YES\"\n        } else if\
    \ (start1 == start2 && end1 > end2) {\n            return \"YES\"\n        } else\
    \ if (start1 > start2 && end1 == end2) {\n            return \"YES\"\n       \
    \ } else if (start1 > start2 && end1 < end2) {\n            return \"YES\"\n \
    \       } else if (start1 < start2 && end1 == end2) {\n            return \"YES\"\
    \n        } else if (start1 < start2 && end1 > end2) {\n            return \"\
    YES\"\n        } else if (start1 < start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        } else if (start1 < start2 && end1 > end2) {\n            return\
    \ \"YES\"\n        } else if (start1 < start2 && end1 > end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        } else if (start1 > start2 && end1 > end2) {\n            return\
    \ \"YES\"\n        } else if (start1 < start2 && end1 > end2) {\n            return\
    \ \"YES\"\n        } else if (start1 < start2", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > start2 && end1 > end2) {\n            return \"NO\"\n\
    \        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 > start2 && end1 >\
    \ end2) {\n            return \"NO\"\n        }\n        if (start1 > start2 &&\
    \ end1 < end2) {\n            return \"YES\"\n        }\n        if (start1 >\
    \ start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 < end2) {\n            return \"YES\"\n        }\n        if\
    \ (start1 > start2 && end1 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > start2 && end1 < end2) {\n            return \"YES\"\n  \
    \      }\n        if (start1 > start2 && end1 > end2) {\n            return \"\
    NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 > start2 && end1 >\
    \ end2) {\n            return \"NO\"\n        }\n        if (start", "       \
    \ val start1 = interval1._1\n        val end1 = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        } else if (start2 > end1) {\n        \
    \    return \"NO\"\n        } else if (start1 > end2) {\n            return \"\
    NO\"\n        } else if (start2 > end1) {\n            return \"NO\"\n       \
    \ } else if (start1 == end2) {\n            return \"YES\"\n        } else if\
    \ (start2 == end1) {\n            return \"YES\"\n        } else if (start1 ==\
    \ start2 && end1 == end2) {\n            return \"YES\"\n        } else if (start1\
    \ == start2 && end1 == end2) {\n            return \"YES\"\n        } else if\
    \ (start1 == start2 && end1 == end2) {\n            return \"YES\"\n        }\
    \ else if (start1 == start2 && end1 == end2) {\n            return \"YES\"\n \
    \       } else if (start1 == start2 && end1 == end2) {\n            return \"\
    YES\"\n        } else if (start1 == start2 && end1 == end2) {\n            return\
    \ \"YES\"\n        } else if (start1 == start2 && end1 == end2) {\n          \
    \  return \"YES\"\n        } else if (start1 == start2 && end1 == end2) {\n  \
    \          return \"YES\"\n        } else if (start1 == start2 && end1 == end2)\
    \ {\n            return \"YES\"\n        } else if (start1 == start2 && end1 ==\
    \ end2) {\n            return \"YES\"\n        } else if (start1 == start2 &&\
    \ end1 == end2) {\n            return \"YES\"\n        } else if (start1 == start2\
    \ && end1 == end2) {\n            return \"YES\"\n        } else if (start1 ==\
    \ start2 && end1 == end2) {\n            return \"YES\"\n        } else if (start1\
    \ == start2 && end1 == end2) {\n            return \"YES\"\n        } else if\
    \ (start1 == start2", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 <= start2 && end1 >= end2) {\n            return \"YES\"\n\
    \        }\n        if (start1 <= start2 && end1 < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 > end2) {\n         \
    \   return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 > start2 && end1 >\
    \ end2) {\n            return \"YES\"\n        }\n        if (start1 < start2\
    \ && end1 > end2) {\n            return \"YES\"\n        }\n        if (start1\
    \ < start2 && end1 < end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 < start2 && end1 < end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 < start2 && end1 > end2) {\n            return \"YES\"\n  \
    \      }\n        if (start1 > start2 && end1 < end2) {\n            return \"\
    YES\"\n        }\n        if (start1 > start2 && end1 > end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 < start2 && end1 < end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 < start2 && end1 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 > start2 && end1\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start1 < start2\
    \ && end1 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ < start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = Math.max(start1, start2)\n        val end\
    \ = Math.min(end1, end2)\n        if (start > end) return \"NO\"\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) return \"NO\"\n     \
    \   val isPrime = isPrime(length)\n        if (isPrime) return \"YES\"\n     \
    \   else return \"NO\"", "        val start1 = interval1._1\n        val end1\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start1 > end1) {\n            return \"NO\"\n        }\n        if\
    \ (start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start2 > end1)\
    \ {\n            return \"NO\"\n        }\n        val len1 = end1 - start1 +\
    \ 1\n        val len2 = end2 - start2 + 1\n        val len = len1 * len2\n   \
    \     val divisor = len1 * len2\n        val divisor2 = len1 * len2\n        val\
    \ divisor3 = len1 * len2\n        val divisor4 = len1 * len2\n        val divisor5\
    \ = len1 * len2\n        val divisor6 = len1 * len2\n        val divisor7 = len1\
    \ * len2\n        val divisor8 = len1 * len2\n        val divisor9 = len1 * len2\n\
    \        val divisor10 = len1 * len2\n        val divisor11 = len1 * len2\n  \
    \      val divisor12 = len1 * len2\n        val divisor13 = len1 * len2\n    \
    \    val divisor14 = len1 * len2\n        val divisor15 = len1 * len2\n      \
    \  val divisor16 = len1 * len2\n        val divisor17 = len1 * len2\n        val\
    \ divisor18 = len1 * len2\n        val divisor19 = len1 * len2\n        val divisor20\
    \ = len1 * len2\n        val divisor21 = len1 * len2\n        val divisor22 =\
    \ len1 * len2\n        val divisor23 = len1 * len2\n        val divisor24 = len1\
    \ * len2\n        val divisor25 = len1 * len2\n        val divisor26 = len1 *\
    \ len2\n        val divisor27 = len1 * len2\n        val divisor28", "       \
    \ val start1 = interval1._1\n        val end1 = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start1 > end1 ||\
    \ start2 > end2) {\n            return \"NO\"\n        } else if (start1 <= start2\
    \ && end1 >= end2) {\n            return \"YES\"\n        } else if (start1 <=\
    \ start2 && end1 < end2) {\n            return \"NO\"\n        } else if (start2\
    \ <= start1 && end2 < end1) {\n            return \"NO\"\n        } else {\n \
    \           val min = Math.min(start1, start2)\n            val max = Math.max(end1,\
    \ end2)\n            val length = max - min + 1\n            val isPrime = isPrime(length)\n\
    \            if (isPrime) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime =\
    \ lenInt.isPrime\n        if (lenIntPrime) {\n            return \"YES\"\n   \
    \     } else {\n            return \"NO\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        val\
    \ isPrime = length % 2 == 0\n        if (isPrime) {\n            return \"YES\"\
    \n        } else {\n            return \"NO\"\n        }", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start <= end) {\n       \
    \     val length = end - start + 1\n            if (isPrime(length)) {\n     \
    \           return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        } else {\n            return \"NO\"\n        }", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1) {\n            return \"NO\"\n        }\n        if (start2 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start2 > end1) {\n            return\
    \ \"NO\"\n        }\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 2 == 1) {\n            return \"YES\"\n        }\n        return \"NO\"",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        val\
    \ min = Math.min(start1, start2)\n        val max = Math.max(end1, end2)\n   \
    \     if (min > max) {\n            return \"NO\"\n        }\n        val length\
    \ = max - min + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = Math.max(start1, start2)\n        val end\
    \ = Math.min(end1, end2)\n        if (start > end) {\n            return \"NO\"\
    \n        }\n        val length = end - start + 1\n        if (length % 2 == 0)\
    \ {\n            return \"NO\"\n        }\n        return \"YES\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        val length = end -\
    \ start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n     \
    \   }\n        val prime = isPrime(length)\n        if (prime) {\n           \
    \ return \"YES\"\n        } else {\n            return \"NO\"\n        }", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        } else {\n            return \"YES\"\n        }", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        if (start > end) {\n\
    \            return \"NO\"\n        }\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  return \"YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  if (length % 3 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 5 == 0) {\n            return \"NO\"\n        }\n        if (length % 7 ==\
    \ 0) {\n            return \"NO\"\n        }\n        if (length % 11 == 0) {\n\
    \            return \"NO\"\n        }\n        if (length % 13 == 0) {\n     \
    \       return \"NO\"\n        }\n        if (length % 17 == 0) {\n          \
    \  return \"NO\"\n        }\n        if (length % 19 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 23 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 29 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (length % 31 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length % 37 == 0) {\n            return \"NO\"\n        }\n     \
    \   if (length % 41 == 0) {\n            return \"NO\"\n        }\n        if\
    \ (length % 43 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 47 == 0) {\n            return \"NO\"\n        }\n        if (length % 53\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length % 59 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length % 61 == 0) {\n \
    \           ", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val len1 = end1 - start1 + 1\n    \
    \    val len2 = end2 - start2 + 1\n        val len = len1 * len2\n        val\
    \ divisor = len1 * len2\n        val divisor2 = len1 * len2\n        val divisor3\
    \ = len1 * len2\n        val divisor4 = len1 * len2\n        val divisor5 = len1\
    \ * len2\n        val divisor6 = len1 * len2\n        val divisor7 = len1 * len2\n\
    \        val divisor8 = len1 * len2\n        val divisor9 = len1 * len2\n    \
    \    val divisor10 = len1 * len2\n        val divisor11 = len1 * len2\n      \
    \  val divisor12 = len1 * len2\n        val divisor13 = len1 * len2\n        val\
    \ divisor14 = len1 * len2\n        val divisor15 = len1 * len2\n        val divisor16\
    \ = len1 * len2\n        val divisor17 = len1 * len2\n        val divisor18 =\
    \ len1 * len2\n        val divisor19 = len1 * len2\n        val divisor20 = len1\
    \ * len2\n        val divisor21 = len1 * len2\n        val divisor22 = len1 *\
    \ len2\n        val divisor23 = len1 * len2\n        val divisor24 = len1 * len2\n\
    \        val divisor25 = len1 * len2\n        val divisor26 = len1 * len2\n  \
    \      val divisor27 = len1 * len2\n        val divisor28", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  val isPrime = isPrime(length)\n        if (isPrime) {\n            return \"\
    YES\"\n        } else {\n            return \"NO\"\n        }", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1) {\n            return\
    \ \"NO\"\n        }\n        if (start2 > end2) {\n            return \"NO\"\n\
    \        }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start2 > end1) {\n            return \"NO\"\n        }\n        val\
    \ length = end1 - start1 + 1\n        val length2 = end2 - start2 + 1\n      \
    \  val intersection = length * length2\n        if (intersection % 2 == 0) {\n\
    \            return \"NO\"\n        }\n        return \"YES\"", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1 || start2 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 <= start2 && end1\
    \ >= end2) {\n            return \"YES\"\n        }\n        if (start1 <= start2\
    \ && end1 >= end2) {\n            return \"YES\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 >= end2) {\n            return \"YES\"\n     \
    \   }\n        if (start1 <= start2 && end1 >= end2) {\n            return \"\
    YES\"\n        }\n        if (start1 <= start2 && end1 >= end2) {\n          \
    \  return \"YES\"\n        }\n        if (start1 <= start2 && end1 >= end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 <= start2 && end1 >=\
    \ end2) {\n            return \"YES\"\n        }\n        if (start1 <= start2\
    \ && end1 >= end2) {\n            return \"YES\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 >= end2) {\n            return \"YES\"\n     \
    \   }\n        if (start1 <= start2 && end1 >= end2) {\n            return \"\
    YES\"\n        }\n        if (start1 <= start2 && end1 >= end2) {\n          \
    \  return \"YES\"\n        }\n        if (start1 <= start2 && end1 >= end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 <= start2 && end1 >=\
    \ end2) {\n            return \"YES\"\n        }\n        if (start1 <= start2\
    \ && end1 >= end2) {\n            return \"YES\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       val len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n \
    \       val len = len1 * len2\n        if (len % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        val i = 0\n        val j = 0\n        val k = 0\n\
    \        val prime = 2\n        while (i < len1 && j < len2) {\n            if\
    \ (start1 + i <= end2) {\n                prime = isPrime(start1 + i)\n      \
    \          if (prime != 0) {\n                    break\n                }\n \
    \               i += 1\n            } else {\n                j += 1\n       \
    \     }\n        }\n        if (prime == 0) {\n            return \"NO\"\n   \
    \     }\n        while (i < len1 && j < len2) {\n            if (start2 + j <=\
    \ end1) {\n                prime = isPrime(start2 + j)\n                if (prime\
    \ != 0) {\n                    break\n                }\n                j +=\
    \ 1\n            } else {\n                i += 1\n            }\n        }\n\
    \        if (prime == 0) {\n            return \"NO\"\n        }\n        if (i\
    \ == len1 && j == len2) {\n            return \"YES\"\n        }\n        val\
    \ result = \"\"\n        while (i < len1 && j < len2) {\n            if (start1\
    \ + i <= end2 && start2 + j <= end1) {\n                prime = isPrime(start1\
    \ + i)\n                if (prime != 0) {\n                    break\n       \
    \         }\n                i += 1\n                j += 1\n            } else\
    \ if (start1 + i <= end2) {\n                prime = isPrime(start1 + i)\n   \
    \             if (prime != 0) {\n                    break\n                }\n\
    \                i += 1\n            } else {\n                prime = isPrime(start2\
    \ + j)\n                if (prime != 0) {\n                    break", "     \
    \   val start1 = interval1._1\n        val end1 = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val len1 = end1 - start1\
    \ + 1\n        val len2 = end2 - start2 + 1\n        val len = len1 * len2\n \
    \       val divisor = scala.math.factorial(len)\n        val divisor2 = scala.math.factorial(len\
    \ - 1)\n        val divisor3 = scala.math.factorial(len - 2)\n        val divisor4\
    \ = scala.math.factorial(len - 3)\n        val divisor5 = scala.math.factorial(len\
    \ - 4)\n        val divisor6 = scala.math.factorial(len - 5)\n        val divisor7\
    \ = scala.math.factorial(len - 6)\n        val divisor8 = scala.math.factorial(len\
    \ - 7)\n        val divisor9 = scala.math.factorial(len - 8)\n        val divisor10\
    \ = scala.math.factorial(len - 9)\n        val divisor11 = scala.math.factorial(len\
    \ - 10)\n        val divisor12 = scala.math.factorial(len - 11)\n        val divisor13\
    \ = scala.math.factorial(len - 12)\n        val divisor14 = scala.math.factorial(len\
    \ - 13)\n        val divisor15 = scala.math.factorial(len - 14)\n        val divisor16\
    \ = scala.math.factorial(len - 15)\n        val divisor17 = scala.math.factorial(len\
    \ - 16)\n        val divisor18 = scala.math.factorial(len - 17)\n        val divisor19\
    \ = scala.math.factorial(len - 18)\n        val divisor20 = scala.math.factorial(len\
    \ - 19)\n        val divisor21 = scala.math.factorial(len - 20)\n        val divisor22\
    \ = scala.math.factorial(len - 21)", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1 || start2 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 <= start2 && end1 >= end2) {\n       \
    \     return \"YES\"\n        }\n        if (start1 <= start2 && end1 <= end2)\
    \ {\n            return \"YES\"\n        }\n        if (start1 >= start2 && end1\
    \ >= end2) {\n            return \"YES\"\n        }\n        return \"NO\"", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > end2 || start2 > end1) {\n            return \"NO\"\n        }\n        if\
    \ (start1 == end2 && start2 == end1) {\n            return \"NO\"\n        }\n\
    \        if (start1 == end2) {\n            return \"YES\"\n        }\n      \
    \  if (start2 == end1) {\n            return \"YES\"\n        }\n        val start\
    \ = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n       \
    \ val length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 2 == 1) {\n            return \"YES\"\
    \n        }\n        return \"NO\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\n  \
    \      }\n        if (start2 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start2 > end1) {\n            return \"NO\"\n        }\n        val length\
    \ = end1 - start1 + 1\n        if (length % 2 == 0) {\n            return \"NO\"\
    \n        }\n        val length2 = end2 - start2 + 1\n        if (length2 % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length != length2)\
    \ {\n            return \"NO\"\n        }\n        val result = scala.math.Numeric.gcd(length,\
    \ 2)\n        if (result == 1) {\n            return \"YES\"\n        }\n    \
    \    return \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        if (start1 == end2) {\n           \
    \ return \"YES\"\n        }\n        if (start2 == end1) {\n            return\
    \ \"YES\"\n        }\n        if (start1 == start2) {\n            return \"YES\"\
    \n        }\n        if (start2 == start1) {\n            return \"YES\"\n   \
    \     }\n        if (start1 > start2) {\n            return \"NO\"\n        }\n\
    \        if (end1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 == end2) {\n            return \"YES\"\n        }\n        if (start2\
    \ == end1) {\n            return \"YES\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        if (start1 == end2) {\n           \
    \ return \"YES\"\n        }\n        if (start2 == end1) {\n            return\
    \ \"YES\"\n        }\n        if (start1 > start2) {\n            return \"NO\"\
    \n        }\n        if (end1 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 == end2) {\n            return \"YES\"\n        }\n      \
    \  if (start2 == end1) {\n            return \"YES\"\n        }\n        if (start1\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start2 > end1)\
    \ {\n            return \"NO\"\n        }\n        if (start1 == end2) {\n   \
    \         return \"YES\"\n        }\n        if (start2 == end1) {\n         \
    \   ", "        val start1 = interval1._1\n        val end1 = interval1._2\n \
    \       val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       val len = end - start + 1\n        if (len % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        val num = len / 2\n        val num2 = num / 2\n \
    \       val num3 = num / 3\n        val num4 = num / 4\n        val num5 = num\
    \ / 5\n        val num6 = num / 6\n        val num7 = num / 7\n        val num8\
    \ = num / 8\n        val num9 = num / 9\n        val num10 = num / 10\n      \
    \  val num11 = num / 11\n        val num12 = num / 12\n        val num13 = num\
    \ / 13\n        val num14 = num / 14\n        val num15 = num / 15\n        val\
    \ num16 = num / 16\n        val num17 = num / 17\n        val num18 = num / 18\n\
    \        val num19 = num / 19\n        val num20 = num / 20\n        val num21\
    \ = num / 21\n        val num22 = num / 22\n        val num23 = num / 23\n   \
    \     val num24 = num / 24\n        val num25 = num / 25\n        val num26 =\
    \ num / 26\n        val num27 = num / 27\n        val num28 = num / 28\n     \
    \   val num29 = num / 29\n        val num30 = num / 30\n        val num31 = num\
    \ / 31\n        val num32 = num / 32\n        val num33 = num / 33\n        val\
    \ num34 = num / 34\n        val num35 = num / 35\n        val num36 = num / 36\n\
    \        val num37 = num / 37\n        val num38 = num / 38\n        val num39\
    \ = num / 39\n        val num40 = num / 40\n        val num41 = num / 41\n   \
    \     val num42 = num / 42\n        val num43 = num / 43\n        val num44 =\
    \ num / 44\n        val num45 = num / 45\n        val num46 = num / 46", "   \
    \     val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val len1 = end1\
    \ - start1 + 1\n        val len2 = end2 - start2 + 1\n        val len = len1 *\
    \ len2\n        if (len % 2 == 0) {\n            return \"NO\"\n        }\n  \
    \      val result = new ArrayList[Long]()\n        val i = start1\n        val\
    \ j = start2\n        while (i <= end1 && j <= end2) {\n            if (i == j)\
    \ {\n                result.add(i)\n                i = i + 1\n              \
    \  j = j + 1\n            } else if (i < j) {\n                i = i + 1\n   \
    \         } else {\n                j = j + 1\n            }\n        }\n    \
    \    val prime = new ArrayList[Long]()\n        for (i <- result.size()) {\n \
    \           if (isPrime(result.get(i))) {\n                prime.add(result.get(i))\n\
    \            }\n        }\n        if (prime.size() == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        val prime\
    \ = isPrime(length)\n        if (prime) {\n            return \"YES\"\n      \
    \  } else {\n            return \"NO\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end1 - start1 + 1\n        val length2 = end2 - start2 + 1\n        val intersection\
    \ = start1 + (start2 - start1) * length / length2\n        val end = start1 +\
    \ (end2 - start1) * length / length2\n        val length3 = end - intersection\
    \ + 1\n        if (length3 % 2 == 0) {\n            return \"NO\"\n        } else\
    \ {\n            return \"YES\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 < start2 || end1 > end2) {\n\
    \            return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  val isPrime = isPrime(length)\n        if (isPrime) {\n            return \"\
    YES\"\n        }\n        return \"NO\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end1 - start1 + 1\n        val length2\
    \ = end2 - start2 + 1\n        if (length <= 0 || length2 <= 0) {\n          \
    \  return \"NO\"\n        }\n        val length3 = length * length2\n        val\
    \ length4 = length3 / 2\n        val length5 = length3 % 2\n        val length6\
    \ = length4 + length5\n        val length7 = length6 / 2\n        val length8\
    \ = length6 % 2\n        val length9 = length7 + length8\n        val length10\
    \ = length9 / 2\n        val length11 = length9 % 2\n        val length12 = length10\
    \ + length11\n        val length13 = length12 / 2\n        val length14 = length12\
    \ % 2\n        val length15 = length13 + length14\n        val length16 = length15\
    \ / 2\n        val length17 = length15 % 2\n        val length18 = length16 +\
    \ length17\n        val length19 = length18 / 2\n        val length20 = length18\
    \ % 2\n        val length21 = length19 + length20\n        val length22 = length21\
    \ / 2\n        val length23 = length21 % 2\n        val length24 = length22 +\
    \ length23\n        val length25 = length24 / 2\n        val length26 = length24\
    \ % 2\n        val length27 = length25 + length26\n        val length28 = length27\
    \ / 2\n        val length29 = length27 % 2\n        val length30 = length28 +\
    \ length29\n        val length31 = length30 / 2\n        val length32 = length30\
    \ % 2\n        val length33 = length31 + length32\n        val length34 = length33\
    \ / 2\n        val length35 = length33 % 2\n        val length36 = length34 +\
    \ length35\n        val length37 = length36 / 2\n        val length38 = length36\
    \ % 2\n        val length39 = length37 + length38\n        val length40 = length39\
    \ / 2\n        val length41 = length39 % 2\n        val length42 = length40 +\
    \ length41\n        val length43 = length42 / 2\n        ", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1 || start2 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 < start2 || end1\
    \ > end2) {\n            return \"NO\"\n        }\n        val length = end1 -\
    \ start1 + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n    \
    \    }\n        return \"YES\"", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length % 2 == 0) {\n        \
    \    return \"NO\"\n        }\n        return \"YES\"", "        val start1 =\
    \ interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) return \"NO\"\n        if (start == end) return \"YES\"\
    \n        val length = end - start + 1\n        if (length % 2 == 0) return \"\
    NO\"\n        val divisor = scala.math.factorial(length / 2)\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n \
    \       if (start > end) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        return \"YES\"", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        } else {\n         \
    \   return \"YES\"\n        }", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 < start2 || end1 > end2) {\n            return \"\
    NO\"\n        }\n        val length = end1 - start1 + 1\n        if (length %\
    \ 2 == 0) {\n            return \"NO\"\n        }\n        val result = length\
    \ / 2\n        if (result.isPrime()) {\n            return \"YES\"\n        }\n\
    \        return \"NO\"", "        val start1 = interval1._1\n        val end1\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        if (start > end) return \"NO\"\n        val length = end - start\
    \ + 1\n        if (length % 2 == 0) return \"NO\"\n        val result = isPrime(length)\n\
    \        if (result) return \"YES\"\n        else return \"NO\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        if (start > end) {\n\
    \            return \"NO\"\n        }\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  return \"YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > end2 || start2 > end1) {\n            return \"NO\"\n   \
    \     }\n        if (start1 == end2 || start2 == end1) {\n            return \"\
    NO\"\n        }\n        val start = Math.max(start1, start2)\n        val end\
    \ = Math.min(end1, end2)\n        val length = end - start + 1\n        if (length\
    \ % 2 == 0) {\n            return \"NO\"\n        }\n        if (length == 2)\
    \ {\n            return \"YES\"\n        }\n        if (length % 2 == 1) {\n \
    \           return \"YES\"\n        }\n        return \"NO\"", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end2) {\n            return\
    \ \"NO\"\n        } else if (start2 > end1) {\n            return \"NO\"\n   \
    \     } else if (start1 > end2) {\n            return \"NO\"\n        } else if\
    \ (start2 > end1) {\n            return \"NO\"\n        } else if (start1 == end2)\
    \ {\n            return \"YES\"\n        } else if (start2 == end1) {\n      \
    \      return \"YES\"\n        } else if (start1 == end2) {\n            return\
    \ \"YES\"\n        } else if (start2 == end1) {\n            return \"YES\"\n\
    \        } else if (start1 == start2 && end1 == end2) {\n            return \"\
    YES\"\n        } else if (start1 == start2 && end1 == end2) {\n            return\
    \ \"YES\"\n        } else if (start1 == start2 && end1 == end2) {\n          \
    \  return \"YES\"\n        } else if (start1 == start2 && end1 == end2) {\n  \
    \          return \"YES\"\n        } else if (start1 == start2 && end1 == end2)\
    \ {\n            return \"YES\"\n        } else if (start1 == start2 && end1 ==\
    \ end2) {\n            return \"YES\"\n        } else if (start1 == start2 &&\
    \ end1 == end2) {\n            return \"YES\"\n        } else if (start1 == start2\
    \ && end1 == end2) {\n            return \"YES\"\n        } else if (start1 ==\
    \ start2 && end1 == end2) {\n            return \"YES\"\n        } else if (start1\
    \ == start2 && end1 == end2) {\n            return \"YES\"\n        } else if\
    \ (start1 == start2 && end1 == end2) {\n            return \"YES\"\n        }\
    \ else if (start1 == start2 && end1 == end2) {\n            return \"YES\"\n \
    \       } else if (start1 == start2 && end1 == end2) {\n            return \"",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) return \"NO\"\n        val divisor = scala.math.factorial(length\
    \ / 2)\n        if (divisor % 2 == 0) return \"NO\"\n        return \"YES\"",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ <= start2 && end1 >= end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 <= start2 && end1 < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 > start2 && end1 > end2) {\n            return \"NO\"\n\
    \        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 > end2) {\n         \
    \   return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > start2 && end1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 > start2 && end1\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start1 > start2\
    \ && end1 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 < end2) {\n            return \"NO\"\n        }\n        if\
    \ (start1 > start2 && end1 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > start2 && end1 < end2) {\n            return \"NO\"\n   \
    \     }\n        if (start1 > start2 && end1 > end2) {\n            return \"\
    NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 > end2) {\n         \
    \   return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > start2 && end1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        val isPrime = isPrime(length)\n        if (isPrime) {\n            return\
    \ \"YES\"\n        } else {\n            return \"NO\"\n        }", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        if (start > end) {\n\
    \            return \"NO\"\n        }\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  return \"YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n        val\
    \ len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime =\
    \ lenInt.isPrime\n        val lenIntPrimeInt = lenIntPrime.toInt\n        if (lenIntPrimeInt\
    \ == 0) {\n            return \"NO\"\n        } else {\n            return \"\
    YES\"\n        }", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length % 2 == 0) {\n        \
    \    return \"NO\"\n        }\n        return \"YES\"", "        val start1 =\
    \ interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end1 - start1 + 1\n   \
    \     val length2 = end2 - start2 + 1\n        val intersection = start1 + length\
    \ - 1\n        val intersection2 = start2 + length2 - 1\n        val intersection3\
    \ = start1 + length2 - 1\n        val intersection4 = start2 + length - 1\n  \
    \      val intersection5 = start1 + length - 1\n        val intersection6 = start2\
    \ + length - 1\n        val intersection7 = start1 + length2 - 1\n        val\
    \ intersection8 = start2 + length - 1\n        val intersection9 = start1 + length\
    \ - 1\n        val intersection10 = start2 + length - 1\n        val intersection11\
    \ = start1 + length2 - 1\n        val intersection12 = start2 + length - 1\n \
    \       val intersection13 = start1 + length - 1\n        val intersection14 =\
    \ start2 + length - 1\n        val intersection15 = start1 + length2 - 1\n   \
    \     val intersection16 = start2 + length - 1\n        val intersection17 = start1\
    \ + length - 1\n        val intersection18 = start2 + length - 1\n        val\
    \ intersection19 = start1 + length2 - 1\n        val intersection20 = start2 +\
    \ length - 1\n        val intersection21 = start1 + length - 1\n        val intersection22\
    \ = start2 + length - 1\n        val intersection23 = start1 + length2 - 1\n \
    \       val intersection24 = start2 + length - 1\n        val intersection25 =\
    \ start1 + length - 1\n        val intersection26 = start2 + length - 1\n    \
    \    val intersection27 = start1 + length2 - 1\n        val intersection28 = start2\
    \ + length - 1\n        val intersection29 = start1 + length - 1\n        val\
    \ intersection30 = start2 + length - 1\n        val intersection31 = start1 +\
    \ length2 - 1\n        val intersection32 = start2 + length - 1\n        val intersection33\
    \ = start1 + length - 1\n        val intersection34 = start2 + length - 1\n  \
    \      val intersection35 = start1 + length2 - 1\n        val intersection36 =\
    \ start2 + length - 1\n        val intersection37 = start", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        val length = end - start + 1\n        if (length % 2 == 0) {\n\
    \            return \"NO\"\n        }\n        if (length % 2 == 1) {\n      \
    \      val prime = isPrime(length)\n            if (prime) {\n               \
    \ return \"YES\"\n            }\n        }\n        return \"NO\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        if (start1 > end1 ||\
    \ start2 > end2) {\n            return \"NO\"\n        }\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = Math.max(start1, start2)\n        val end\
    \ = Math.min(end1, end2)\n        if (start > end) {\n            return \"NO\"\
    \n        }\n        if (start == end) {\n            return \"YES\"\n       \
    \ }\n        val length = end - start + 1\n        val divisor = 2\n        while\
    \ (divisor <= length) {\n            if (length % divisor == 0) {\n          \
    \      return \"NO\"\n            }\n            divisor += 1\n        }\n   \
    \     return \"YES\"", "        val start1 = interval1._1\n        val end1 =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length % 2 == 0) {\n        \
    \    return \"NO\"\n        }\n        val length2 = length / 2\n        val num\
    \ = scala.math.Numeric.range(start, end, length2).toSeq().map(x => x * 2).reduce(0,\
    \ (x, y) => x + y)\n        if (num == length) {\n            return \"YES\"\n\
    \        }\n        return \"NO\"", "        val start1 = interval1._1\n     \
    \   val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = Math.max(start1, start2)\n        val end\
    \ = Math.min(end1, end2)\n        if (start <= end) {\n            val length\
    \ = end - start + 1\n            if (isPrime(length)) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        } else {\n            return \"NO\"\n        }", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        if (start > end) {\n        \
    \    return \"NO\"\n        }\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        return \"\
    YES\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  if (length % 3 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 5 == 0) {\n            return \"NO\"\n        }\n        if (length % 7 ==\
    \ 0) {\n            return \"NO\"\n        }\n        if (length % 11 == 0) {\n\
    \            return \"NO\"\n        }\n        if (length % 13 == 0) {\n     \
    \       return \"NO\"\n        }\n        if (length % 17 == 0) {\n          \
    \  return \"NO\"\n        }\n        if (length % 19 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 23 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 29 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (length % 31 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length % 37 == 0) {\n            return \"NO\"\n        }\n     \
    \   if (length % 41 == 0) {\n            return \"NO\"\n        }\n        if\
    \ (length % 43 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 47 == 0) {\n            return \"NO\"\n        }\n        if (length % 53\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length % 59 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length % 61 == 0) {\n \
    \           ", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 > end2 || start2 > end1) {\n            return \"NO\"\n   \
    \     }\n        if (start1 == end2 || start2 == end1) {\n            return \"\
    NO\"\n        }\n        if (start1 == start2 && end1 == end2) {\n           \
    \ return \"YES\"\n        }\n        val start = Math.max(start1, start2)\n  \
    \      val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  val result = scala.math.factorial(length / 2)\n        if (result % 2 == 0)\
    \ {\n            return \"YES\"\n        }\n        return \"NO\"", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        if (start1 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start2 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start2 > end1) {\n            return \"NO\"\n\
    \        }\n        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        val length = end - start + 1\n        if (length % 2 == 0) {\n\
    \            return \"NO\"\n        }\n        if (length % 3 == 0) {\n      \
    \      return \"NO\"\n        }\n        if (length % 5 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 7 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 11 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (length % 13 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length % 17 == 0) {\n            return \"NO\"\n        }\n     \
    \   if (length % 19 == 0) {\n            return \"NO\"\n        }\n        if\
    \ (length % 23 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ % 29 == 0) {\n            return \"NO\"\n        }\n        if (length % 31\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length % 37 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length % 41 == 0) {\n \
    \           return \"NO\"\n        }\n        if (length % 43 == 0) {\n      \
    \      return \"NO\"\n        }\n        if (length % 47 == 0) {\n           \
    \ return \"NO\"\n        }\n        if (length % 53 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 59 == 0) {\n            return \"NO\"\
    \n        }\n        if (length % 61 == 0) {\n            ", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1) {\n            return\
    \ \"NO\"\n        }\n        if (start2 > end2) {\n            return \"NO\"\n\
    \        }\n        if (start1 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start2 > end1) {\n            return \"NO\"\n        }\n        val\
    \ length = end1 - start1\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ == 1 || length2 == 1) {\n            return \"YES\"\n        }\n        if (length\
    \ % 2 == 0) {\n            return \"NO\"\n        }\n        if (length2 % 2 ==\
    \ 0) {\n            return \"NO\"\n        }\n        if (length2 == 2) {\n  \
    \          return \"YES\"\n        }\n        if (length == 2) {\n           \
    \ return \"YES\"\n        }\n        if (length % 2 == 0 && length2 % 2 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length % 2 == 0 && length2\
    \ == 2) {\n            return \"YES\"\n        }\n        if (length == 2 && length2\
    \ % 2 == 0) {\n            return \"YES\"\n        }\n        if (length % 2 ==\
    \ 0 && length2 == 2) {\n            return \"YES\"\n        }\n        if (length\
    \ == 2 && length2 == 2) {\n            return \"YES\"\n        }\n        if (length\
    \ == 2 && length2 == 4) {\n            return \"YES\"\n        }\n        if (length\
    \ == 4 && length2 == 2) {\n            return \"YES\"\n        }\n        if (length\
    \ == 4 && length2 == 4) {\n            return \"YES\"\n        }\n        if (length\
    \ == 2 && length2 == 4) {\n            return \"YES\"\n        }\n        if (length\
    \ == 4 && length2 == 2) {\n            return \"YES\"\n        }\n        if (length\
    \ == 2 &&", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1) {\n            return \"NO\"\n        }\n        if (start2\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start1 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start2 > end1) {\n    \
    \        return \"NO\"\n        }\n        val length = end1 - start1 + 1\n  \
    \      val length2 = end2 - start2 + 1\n        if (length == 0 || length2 ==\
    \ 0) {\n            return \"NO\"\n        }\n        val length3 = length * length2\n\
    \        val length4 = length3 / 2\n        val length5 = length3 % 2\n      \
    \  val length6 = length4 + length5\n        if (length6 == 0) {\n            return\
    \ \"NO\"\n        }\n        val length7 = length6 / 2\n        val length8 =\
    \ length6 % 2\n        val length9 = length7 + length8\n        if (length9 ==\
    \ 0) {\n            return \"NO\"\n        }\n        val length10 = length9 /\
    \ 2\n        val length11 = length9 % 2\n        val length12 = length10 + length11\n\
    \        if (length12 == 0) {\n            return \"NO\"\n        }\n        val\
    \ length13 = length12 / 2\n        val length14 = length12 % 2\n        val length15\
    \ = length13 + length14\n        if (length15 == 0) {\n            return \"NO\"\
    \n        }\n        val length16 = length15 / 2\n        val length17 = length15\
    \ % 2\n        val length18 = length16 + length17\n        if (length18 == 0)\
    \ {\n            return \"NO\"\n        }\n        val length19 = length18 / 2\n\
    \        val length20 = length18 % 2\n        val length21 = length19 + length20\n\
    \        if (length21 == 0) {\n            return \"NO\"\n        }\n        val\
    \ length22 = length21 / 2\n        val length23 = length21 % 2\n        val length24\
    \ = length22 + length23\n        if (", "        val start1 = interval1._1\n \
    \       val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 <= start2 && end1 >= end2)\
    \ {\n            return \"YES\"\n        }\n        if (start1 >= start2 && end1\
    \ <= end2) {\n            return \"YES\"\n        }\n        if (start2 >= start1\
    \ && end2 <= end1) {\n            return \"YES\"\n        }\n        if (start2\
    \ >= start1 && end2 <= end1) {\n            return \"YES\"\n        }\n      \
    \  return \"NO\"", "        val start1 = interval1._1\n        val end1 = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start1 > end1 || start2 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 <= start2 && end1 >= end2) {\n            return \"YES\"\n\
    \        }\n        if (start1 <= start2 && end1 < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 > end2) {\n         \
    \   return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 < start2 && end1 >\
    \ end2) {\n            return \"NO\"\n        }\n        if (start1 < start2 &&\
    \ end1 < end2) {\n            return \"YES\"\n        }\n        if (start1 >\
    \ start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > start2 && end1 < end2) {\n            return \"YES\"\n        }\n        if\
    \ (start1 < start2 && end1 > end2) {\n            return \"NO\"\n        }\n \
    \       if (start1 < start2 && end1 > end2) {\n            return \"YES\"\n  \
    \      }\n        if (start1 > start2 && end1 < end2) {\n            return \"\
    NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n            return\
    \ \"YES\"\n        }\n        if (start1 < start2 && end1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 < start2 && end1 > end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 > start2 && end1 <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start1 > start2 &&\
    \ end1 < end2) {\n            return \"YES\"\n        }\n        if (start1 <\
    \ start2 && end1 > end2) {\n            return \"NO\"\n        }\n        if (start",
  "        val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val len1 = end1\
    \ - start1 + 1\n        val len2 = end2 - start2 + 1\n        val len = len1 *\
    \ len2\n        val lenInt = len.toInt\n        val lenIntPrime = lenInt.isPrime\n\
    \        if (lenIntPrime) {\n            return \"YES\"\n        } else {\n  \
    \          return \"NO\"\n        }", "        val start1 = interval1._1\n   \
    \     val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start1 > end1 || start2 > end2) {\n       \
    \     return \"NO\"\n        }\n        if (start1 > end2 || start2 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start1 == end2 || start2 ==\
    \ end1) {\n            return \"NO\"\n        }\n        val start = Math.max(start1,\
    \ start2)\n        val end = Math.min(end1, end2)\n        val length = end -\
    \ start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n     \
    \   }\n        if (length == 1) {\n            return \"YES\"\n        }\n   \
    \     val primeNumbers = scala.collection.JavaConversions.seqAsJavaList(scala.math.primes.Primes.primes())\n\
    \        val primeNumber = primeNumbers.find(p -> p >= length)\n        if (primeNumber\
    \ == null) {\n            return \"NO\"\n        }\n        return \"YES\"", " \
    \       val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) return \"NO\"\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) return \"NO\"\n        val result = isPrime(length)\n    \
    \    if (result) return \"YES\"\n        else return \"NO\"", "        val start1\
    \ = interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start1 > end1 || start2 > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start1 < start2 || end1\
    \ > end2) {\n            return \"NO\"\n        }\n        val length = end1 -\
    \ start1 + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n    \
    \    }\n        return \"YES\"", "        val start1 = interval1._1\n        val\
    \ end1 = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val len1 = end1 - start1 + 1\n        val len2 = end2 - start2 + 1\n\
    \        val len = len1 * len2\n        val lenInt = len.toInt\n        val lenIntPrime\
    \ = lenInt.isPrime\n        if (lenIntPrime) {\n            return \"YES\"\n \
    \       } else {\n            return \"NO\"\n        }", "        val start1 =\
    \ interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = Math.max(start1, start2)\n\
    \        val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        } else {\n\
    \            return \"YES\"\n        }", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1) {\n            return \"NO\"\n        }\n        if (start2 > end2) {\n\
    \            return \"NO\"\n        }\n        if (start1 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start2 > end1) {\n            return\
    \ \"NO\"\n        }\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        val length = end - start + 1\n        if\
    \ (length % 2 == 0) {\n            return \"NO\"\n        }\n        val result\
    \ = length / 2\n        if (result.isPrime()) {\n            return \"YES\"\n\
    \        }\n        return \"NO\"", "        val start1 = interval1._1\n     \
    \   val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\n  \
    \      }\n        if (start2 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 <= start2 && end1 >= end2) {\n            return \"YES\"\n\
    \        }\n        if (start2 <= start1 && end2 >= end1) {\n            return\
    \ \"YES\"\n        }\n        val length = end1 - start1 + 1\n        val length2\
    \ = end2 - start2 + 1\n        if (length == 0 || length2 == 0) {\n          \
    \  return \"NO\"\n        }\n        if (length == 1 || length2 == 1) {\n    \
    \        return \"YES\"\n        }\n        if (length % 2 == 0 && length2 % 2\
    \ == 0) {\n            return \"YES\"\n        }\n        return \"NO\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start1 >\
    \ end1 || start2 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ > end2 || start2 > end1) {\n            return \"NO\"\n        }\n        if\
    \ (start1 == end2 || start2 == end1) {\n            return \"NO\"\n        }\n\
    \        if (start1 < start2 && end1 < end2) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > start2 && end1 < end2) {\n            return \"\
    NO\"\n        }\n        if (start1 < start2 && end1 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 > end2) {\n         \
    \   return \"NO\"\n        }\n        val start = Math.max(start1, start2)\n \
    \       val end = Math.min(end1, end2)\n        val length = end - start + 1\n\
    \        if (length % 2 == 0) {\n            return \"NO\"\n        }\n      \
    \  if (length % 2 == 1) {\n            return \"YES\"\n        }", "        val\
    \ start1 = interval1._1\n        val end1 = interval1._2\n        val start2 =\
    \ interval2._1\n        val end2 = interval2._2\n        if (start1 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start2 > end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start2 > end1) {\n            return \"NO\"\n\
    \        }\n        if (start1 == end2) {\n            return \"YES\"\n      \
    \  }\n        if (start2 == end1) {\n            return \"YES\"\n        }\n \
    \       if (start1 == start2) {\n            return \"YES\"\n        }\n     \
    \   if (end1 == end2) {\n            return \"YES\"\n        }\n        if (start1\
    \ > start2) {\n            return \"NO\"\n        }\n        if (end1 < end2)\
    \ {\n            return \"NO\"\n        }\n        val length = end1 - start1\
    \ + 1\n        val length2 = end2 - start2 + 1\n        val length3 = end1 - start2\
    \ + 1\n        val length4 = end2 - start1 + 1\n        val length5 = end1 - start2\
    \ + 2\n        val length6 = end2 - start1 + 2\n        val length7 = end1 - start2\
    \ + 3\n        val length8 = end2 - start1 + 3\n        val length9 = end1 - start2\
    \ + 4\n        val length10 = end2 - start1 + 4\n        val length11 = end1 -\
    \ start2 + 5\n        val length12 = end2 - start1 + 5\n        val length13 =\
    \ end1 - start2 + 6\n        val length14 = end2 - start1 + 6\n        val length15\
    \ = end1 - start2 + 7\n        val length16 = end2 - start1 + 7\n        val length17\
    \ = end1 - start2 + 8\n        val length18 = end2 - start1 + 8\n        val length19\
    \ = end1 - start2 + 9\n        val length20 = end2 - start1 + 9\n        val length21\
    \ = end1 - start2 + 10\n", "        val start1 = interval1._1\n        val end1\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\"\n  \
    \      }\n        val start = Math.max(start1, start2)\n        val end = Math.min(end1,\
    \ end2)\n        if (start > end) {\n            return \"NO\"\n        }\n  \
    \      val length = end - start + 1\n        if (length % 2 == 0) {\n        \
    \    return \"NO\"\n        }\n        return \"YES\"", "        val start1 =\
    \ interval1._1\n        val end1 = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end1 - start1 + 1\n   \
    \     val length2 = end2 - start2 + 1\n        if (length < length2) {\n     \
    \       return \"NO\"\n        }\n        if (start1 > end2 || start2 > end1)\
    \ {\n            return \"NO\"\n        }\n        if (start1 <= start2 && end1\
    \ >= end2) {\n            return \"YES\"\n        }\n        if (start1 <= start2\
    \ && end1 < end2) {\n            return \"NO\"\n        }\n        if (start2\
    \ <= start1 && end2 > end1) {\n            return \"NO\"\n        }\n        if\
    \ (start2 <= start1 && end2 < end1) {\n            return \"YES\"\n        }\n\
    \        if (start1 > start2 && end2 > end1) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > start2 && end2 > end1) {\n            return \"\
    YES\"\n        }\n        if (start1 > start2 && end2 < end1) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end2 < end1) {\n         \
    \   return \"YES\"\n        }\n        if (start2 > start1 && end2 > end1) {\n\
    \            return \"NO\"\n        }\n        if (start2 > start1 && end2 > end1)\
    \ {\n            return \"YES\"\n        }\n        if (start2 > start1 && end2\
    \ < end1) {\n            return \"NO\"\n        }\n        if (start2 > start1\
    \ && end2 < end1) {\n            return \"YES\"\n        }\n        if (start1\
    \ > start2 && end2 > end1) {\n            return \"NO\"\n        }\n        if\
    \ (start1 > start2 && end2 > end1) {\n            return \"YES\"\n        }\n\
    \        if (start1 > start2 && end2 < end1) {\n            return \"NO\"\n  \
    \      }\n        if (start1 > start2 && end2 <", "        val start1 = interval1._1\n\
    \        val end1 = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        val isPrime = isPrime(length)\n\
    \        if (isPrime) {\n            return \"YES\"\n        } else {\n      \
    \      return \"NO\"\n        }", "        val start1 = interval1._1\n       \
    \ val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1 || start2 > end2) {\n            return\
    \ \"NO\"\n        }\n        val start = Math.max(start1, start2)\n        val\
    \ end = Math.min(end1, end2)\n        if (start > end) {\n            return \"\
    NO\"\n        }\n        val length = end - start + 1\n        if (length % 2\
    \ == 0) {\n            return \"NO\"\n        }\n        return \"YES\"", "  \
    \      val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\n  \
    \      }\n        if (start2 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start2 > end1) {\n            return \"NO\"\n        }\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        val\
    \ length = end - start + 1\n        if (length % 2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length % 2 == 1) {\n            return \"YES\"\
    \n        }\n        return \"NO\"", "        val start1 = interval1._1\n    \
    \    val end1 = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start1 > end1) {\n            return \"NO\"\n  \
    \      }\n        if (start2 > end2) {\n            return \"NO\"\n        }\n\
    \        if (start1 <= start2 && end1 >= end2) {\n            return \"YES\"\n\
    \        }\n        if (start1 <= start2 && end1 < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 >= end2) {\n        \
    \    return \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 < start2 && end1 >=\
    \ end2) {\n            return \"YES\"\n        }\n        if (start1 < start2\
    \ && end1 > end2) {\n            return \"NO\"\n        }\n        if (start1\
    \ == start2 && end1 == end2) {\n            return \"YES\"\n        }\n      \
    \  if (start1 == start2 && end1 < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start1 == start2 && end1 > end2) {\n            return \"NO\"\
    \n        }\n        if (start1 > start2 && end1 == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start1 > start2 && end1 < end2) {\n         \
    \   return \"YES\"\n        }\n        if (start1 < start2 && end1 == end2) {\n\
    \            return \"YES\"\n        }\n        if (start1 < start2 && end1 >\
    \ end2) {\n            return \"NO\"\n        }\n        return \"NO\"", "   \
    \     val start1 = interval1._1\n        val end1 = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ Math.max(start1, start2)\n        val end = Math.min(end1, end2)\n        if\
    \ (start > end) {\n            return \"NO\"\n        }\n        val length =\
    \ end - start + 1\n        if (length % 2 == 0) {\n            return \"NO\"\n\
    \        }\n        return \"YES\""]
stop_tokens:
- "\n    }\n"

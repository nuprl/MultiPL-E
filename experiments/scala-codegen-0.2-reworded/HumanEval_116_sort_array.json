{
  "name": "HumanEval_116_sort_array",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // In this Kata, you have to sort a list of non-negative integers according to\n    // number of ones in their binary representation in ascending order.\n    // For similar number of ones, sort based on decimal value.\n    // It must be implemented like this:\n    // >>> sortArray((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](-2l.toLong, -3l.toLong, -4l.toLong, -5l.toLong, -6l.toLong)))\n    // (List[Long](-6l.toLong, -5l.toLong, -4l.toLong, -3l.toLong, -2l.toLong))\n    // >>> sortArray((List[Long](1l.toLong, 0l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))\n    def sortArray(arr : List[Long]) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sortArray((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))));\n    assert(sortArray((List[Long](-2l.toLong, -3l.toLong, -4l.toLong, -5l.toLong, -6l.toLong))).equals((List[Long](-4l.toLong, -2l.toLong, -6l.toLong, -5l.toLong, -3l.toLong))));\n    assert(sortArray((List[Long](1l.toLong, 0l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 3l.toLong))));\n    assert(sortArray((List[Long]())).equals((List[Long]())));\n    assert(sortArray((List[Long](2l.toLong, 5l.toLong, 77l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](2l.toLong, 2l.toLong, 4l.toLong, 4l.toLong, 3l.toLong, 3l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 7l.toLong, 77l.toLong))));\n    assert(sortArray((List[Long](3l.toLong, 6l.toLong, 44l.toLong, 12l.toLong, 32l.toLong, 5l.toLong))).equals((List[Long](32l.toLong, 3l.toLong, 5l.toLong, 6l.toLong, 12l.toLong, 44l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 16l.toLong, 32l.toLong))).equals((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 16l.toLong, 32l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 16l.toLong, 32l.toLong))).equals((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 16l.toLong, 32l.toLong))));\n    }\n\n}\n",
  "completions": [
    "        arr.sort(Comparator.comparingLong(l -> l.toString(2).replace(\"0\", \"\").length()))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() < y.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort(Comparator.comparingLong(x -> x.toString(2).replace(\"0\", \"\").length()))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() > y.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() < y.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        var sorted2 = sorted.sort(Comparator.comparingLong(x -> x))\n        return sorted2",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparing(Long::toBinaryString).thenComparing(Long::toString))",
    "        arr.sort(Comparator.comparingLong(x -> x.toString(2)))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        arr.sort((a, b) -> {\n            if (a.toLong() < b.toLong()) {\n                return -1\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return 0\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> {\n            return Integer.toBinaryString(x).length()\n        }).reversed())",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replaceAll(\"0\", \"\").length()))\n        sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() < y.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted\n    }\n\n    def sortArray2(arr : List[Long]) : List[Long] = {\n        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        var sorted2 = sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted2",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() > y.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort(Comparator.comparingLong(x -> x.toString(2)))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replaceAll(\"0\", \"\").length()))\n        sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted",
    "        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            var count = 0\n            for (j <- 0 until arr.length) {\n                if (arr[j] == 1) {\n                    count += 1\n                }\n            }\n            sorted.append(count)\n        }\n        sorted.sort()\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replaceAll(\"0\", \"\").length()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparing(Long::toBinaryString).thenComparing(Long::toString))\n        sorted",
    "        var result = arr.toList\n        result.sort(Comparator.comparing(x -> x.toString(2)))\n        return result",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparingLong(x -> x.toString(2)))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(l -> l.toLong()))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() < 0 && y.toLong() > 0) {\n                return -1\n            } else if (x.toLong() > 0 && y.toLong() < 0) {\n                return 1\n            } else {\n                return x.toLong() - y.toLong()\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(new Comparator[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x == y) {\n                    return 0\n                } else if (x > y) {\n                    return 1\n                } else {\n                    return -1\n                }\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        arr.sort((a, b) -> {\n            var aBits = a.toLong & 0x3f\n            var bBits = b.toLong & 0x3f\n            if (aBits == bBits) {\n                return a.toLong - b.toLong\n            } else {\n                return aBits - bBits\n            }\n        })",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(new Comparator[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x.toLong > y.toLong) {\n                    return 1\n                } else if (x.toLong < y.toLong) {\n                    return -1\n                } else {\n                    return 0\n                }\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort((x, y) -> {\n            var xBits = x.toString().replaceAll(\"0\", \"\").length()\n            var yBits = y.toString().replaceAll(\"0\", \"\").length()\n            if (xBits == yBits) {\n                return x.toString().compareTo(y.toString())\n            } else {\n                return xBits - yBits\n            }\n        })\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.reverse()\n        return sorted\n    }\n\n    def sortArray2(arr : List[Long]) : List[Long] = {\n        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort(Comparator.comparingLong(x -> x.toString(2)))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort(Comparator.comparing(x -> {\n            var ones = 0\n            for (i <- 0 until x) {\n                if (x % 2 == 1) {\n                    ones += 1\n                }\n                x /= 2\n            }\n            return ones\n        }))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        var sorted2 = sorted.sort(Comparator.comparingLong(x -> x))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparingLong(l -> l.toString(2).chars().filter(c -> c == '1').count()))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort(Comparator.comparing(x -> {\n            return Integer.toBinaryString(x.intValue()).length()\n        }).reversed())",
    "        arr.sort(Comparator.comparingLong(x -> x.toString(2)))",
    "        arr.sort(Comparator.comparingLong(l -> l.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted",
    "        arr.sort((a, b) -> {\n            var aBits = a.toLong & 0x3f\n            var bBits = b.toLong & 0x3f\n            if (aBits == bBits) {\n                return a.toLong - b.toLong\n            } else {\n                return aBits - bBits\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(Long::toBinaryString).thenComparing(Long::toString))\n        sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(l -> l.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replaceAll(\"0\", \"\").length()))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.sort(Comparator.comparingLong(x -> x))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(Long::toBinaryString).thenComparing(Long::toString))\n        sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted",
    "        arr.sort(Comparator.comparing(Long::toBinaryString).thenComparing(Long::valueOf))",
    "        var sorted = arr.sort(Comparator.comparingLong(l -> l.toString(2)))\n        sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparingLong(l -> l.toString(2)))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(new Comparator[Long] {\n            def compare(x : Long, y : Long) : Int = {\n                if (x.toLong == y.toLong) {\n                    return 0\n                } else if (x.toLong < y.toLong) {\n                    return -1\n                } else {\n                    return 1\n                }\n            }\n        })",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() < b.toLong()) return -1\n            if (a.toLong() > b.toLong()) return 1\n            return 0\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.sort(Comparator.comparingLong(x -> x))\n        return sorted",
    "        var result = arr.toList\n        result.sort(Comparator.comparingLong(x -> {\n            var ones = 0\n            var i = 0\n            while (i < x) {\n                i += 1\n                ones += 1\n            }\n            return ones\n        }))\n        return result",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        var sorted2 = sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted2",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().length()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var result = arr.toList\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                if (arr[i] > arr[j]) {\n                    var temp = arr[i]\n                    arr[i] = arr[j]\n                    arr[j] = temp\n                }\n            }\n        }\n        return result",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.sort(Comparator.comparing(x -> x.toString()))\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replaceAll(\"0\", \"\").length()))\n        sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort(Comparator.comparingLong(l -> l.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l.toLong\", \"\").replace(\"L\", \"\").replace(\"0\", \"\").replace(\"1\", \"\")))\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(l -> l.toLong()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.sort(Comparator.comparingLong(x -> x.toLong()))\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(new Comparator[Long] {\n            def compare(x: Long, y: Long) : Int = {\n                if (x == y) {\n                    return 0\n                } else if (x > y) {\n                    return 1\n                } else {\n                    return -1\n                }\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        var sorted2 = sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted2",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted\n    }\n\n    // In this Kata, you have to sort a list of non-negative integers according to\n    // number of ones in their binary representation in ascending order.\n    // For similar number of ones, sort based on decimal value.\n    // It must be implemented like this:\n    // >>> sortArray((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](-2l.toLong, -3l.toLong, -4l.toLong, -5l.toLong, -6l.toLong)))\n    // (List[Long](-6l.toLong, -5l.toLong, -4l.toLong, -3l.toLong, -2l.toLong))\n    // >>> sortArray((List[Long](1l.toLong, 0l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))\n    def sortArray2(arr : List[Long]) : List[Long] = {\n        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        arr.sort(Comparator.comparingLong(l -> l.toString(2)))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort((x, y) -> {\n            if (x.toLong() == y.toLong()) {\n                return 0\n            } else if (x.toLong() < y.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.sort(Comparator.comparingLong(x -> x.toString()))\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            var count = 0\n            for (j <- 0 until arr.length) {\n                if (arr[j] == 1l) {\n                    count += 1\n                }\n            }\n            sorted.append(count)\n        }\n        sorted.sort(Comparator.comparing(x -> x))\n        return sorted",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort(Comparator.comparing(x -> x.toString()))",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() < b.toLong()) {\n                return -1\n            } else {\n                return 1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparing(Long::toBinaryString).thenComparing(Long::toString))\n        sorted",
    "        var sorted = mutable.List[Long]()\n        for (i <- 0 until arr.length) {\n            var count = 0\n            for (j <- 0 until arr.length) {\n                if (arr[j] == 1l) {\n                    count += 1\n                }\n            }\n            sorted.append(count)\n        }\n        sorted.sort()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        arr.sort((a, b) -> {\n            if (a.toLong() == b.toLong()) {\n                return 0\n            } else if (a.toLong() > b.toLong()) {\n                return 1\n            } else {\n                return -1\n            }\n        })",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString().replace(\"l\", \"\")))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparing(x -> x.toString()))\n        sorted.reverse()\n        return sorted",
    "        var sorted = arr.sort(Comparator.comparingLong(x -> x.toString(2)))\n        sorted.reverse()\n        return sorted"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
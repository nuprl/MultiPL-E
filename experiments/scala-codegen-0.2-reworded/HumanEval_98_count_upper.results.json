{
  "name": "HumanEval_98_count_upper",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val vowelsCount = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == vowels[vowelsCount]) {\n                    vowelsCount += 1\n                }\n            }\n        }\n        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9w3qek6p.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == vowels[\u001b[35mvowelsCount\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9w3qek6p.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsCount.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == \"A\" || s.charAt(i) == \"E\" || s.charAt(i) == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"U\") {\n                count += 1\n            }\n            i += 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwvc7jl0j.scala:15:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwvc7jl0j.scala:15:38 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwvc7jl0j.scala:15:60 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwvc7jl0j.scala:15:82 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwvc7jl0j.scala:15:104 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpperEven(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0l\n        for (i <- 2 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsgpxqpd_.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsgpxqpd_.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsgpxqpd_.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsgpxqpd_.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsgpxqpd_.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsgpxqpd_.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsgpxqpd_.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (s[i] == vowels[0]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpojp85lor.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpojp85lor.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s appears in the string t.\n    // For example:\n    // >>> count((\"a\"), (\"a\"))\n    // (1l)\n    // >>> count((\"a\"), (\"ab\"))\n    // (0l)\n    // >>> count((\"ab\"), (\"a\"))\n    // (1l)\n    // >>> count((\"ab\"), (\"ab\"))\n    // (1l)\n    def count(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (s.charAt(0) == t.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the substring s appears in the string t.\n    // For example:\n    // >>> countSubstring(\"a\", \"a\")\n    // (1l)\n    // >>> countSubstring(\"a\", \"ab\")\n    // (0l)\n    // >>> countSub\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3z10kkf6.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3z10kkf6.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3z10kkf6.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3z10kkf6.scala:17:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Found:    Char\n\u001b[31m   |\u001b[0m                                        Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3z10kkf6.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3z10kkf6.scala:36:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                Req",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = 0\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (vowelsIndex < vowels.length && vowels[vowelsIndex] == s.charAt(i)) {\n                    vowelsIndex += 1\n                }\n            } else {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb26ai_ke.scala:18:58 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (vowelsIndex < vowels.length && vowels[\u001b[35mvowelsIndex\u001b[0m] == s.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Not found: type vowelsIndex\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb26ai_ke.scala:19:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    vowelsIndex += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsIndex.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb26ai_ke.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            }\n        }\n        return sb.toString().chars().filter(c -> c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U').count()\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa3vbxa_o.scala:19:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mreturn\u001b[0m sb.toString().chars().filter(c -> c == \u001b[31m'A'\u001b[0m || c == \u001b[31m'E'\u001b[0m || c == \u001b[31m'I'\u001b[0m || c == \u001b[31m'O'\u001b[0m || c == \u001b[31m'U'\u001b[0m).count()\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5g6dwe9m.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5g6dwe9m.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_kzapp24.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_kzapp24.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsCount = 0\n        val sLength = s.length()\n        for (i <- 0 until sLength) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    vowelsCount += 1\n                }\n            }\n        }\n        return vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp1thafatl.scala:18:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1thafatl.scala:19:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsCount.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            }\n        }\n        val vowels = \"AEIOU\".toCharArray()\n        for (i <- 0 until vowels.length) {\n            if (sb.indexOf(vowels[i]) != -1) {\n                return 1l\n            }\n        }\n        return 0l\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0u89hq6w.scala:21:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (sb.indexOf(vowels[\u001b[35mi\u001b[0m]) != -\u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi5wgy7l3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi5wgy7l3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi5wgy7l3.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi5wgy7l3.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i] == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppj77_2q3.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val s2 = s.toLowerCase.replaceAll(\"[^a-z]\", \"\")\n        val vowels = \"aeiou\".toCharArray\n        val counts = mutable.LongBuffer[0]\n        for (i <- 0 until s2.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[i % vowels.length]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyqe0gzl3.scala:15:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer[\u001b[31m0\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyqe0gzl3.scala:18:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[\u001b[35mi\u001b[0m \u001b[35m%\u001b[0m vowels.length]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type %\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the substring starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : Array[Char]) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j) == vowels[0]) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // Given a string s, return a new string where all the lowercase letters\n    // have been changed to uppercase, but only if they have not already been\n    // changed.\n    // For example:\n    // >>> upper(\"Hello\")\n    // \"HELLO\"\n    // >>> upper(\"HELLO\")\n    // \"HELLO\"\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == vowels[0]) {\n                result += s.charAt(i).toUpperCase()\n            } else {\n                result += s.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a new string where all the lowercase letters\n    // have been changed to uppercase, but only if they have not already been\n    // changed.\n    // For example:\n    // >>> upper(\"Hello\")\n    // \"HELLO\"\n    // >>> upper(\"HELLO\")\n    // \"HELLO\"\n    // >>> upper(\"abc\")\n    // \"ABC\"\n    def upper2(s : String) : String = {\n        val vowels = \"AEIOU\".toChar\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknws1u2g.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmpknws1u2g.scala:28:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(j) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknws1u2g.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmpknws1u2g.scala:49:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknws1u2g.scala:50:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result += s.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknws1u2g.scala:50:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m                result += s.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknws1u2g.scala:52:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                result += ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == vowels[0]) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppc837f6q.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpows41u_f.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpows41u_f.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the substring starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j) == vowels[0]) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnx0dt4zp.scala:25:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36ms\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36mi\u001b[0m : \u001b[35mInt\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnx0dt4zp.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnx0dt4zp.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm26oq878.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm26oq878.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == \"A\") {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz7rse_r.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == \u001b[31m\"A\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzzwxjj5q.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzzwxjj5q.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpnq78b4no.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnq78b4no.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val s2 = s.toLowerCase\n        val vowels = \"aeiou\".toCharArray\n        val counts = mutable.LongBuffer[0]\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (s2(i) == vowels(i)) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeku6ke9d.scala:15:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer[\u001b[31m0\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in even indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (0l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, return the number of times that the string s appears in the string t.\n    // For example:\n    // >>> count(\"cat\", \"cat\")\n    // (1l)\n    // >>> count(\"cat\", \"dog\")\n    // (0l)\n    // >>> count(\"cat\", \"catt\")\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm5ui2xk3.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm5ui2xk3.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm5ui2xk3.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm5ui2xk3.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm5ui2xk3.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm5ui2xk3.scala:55:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean co",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1L\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn4sl3esg.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn4sl3esg.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1L\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293183,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmybc_ny.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptmybc_ny.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer[Long]\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp132yv203.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp132yv203.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = 0l\n        for (i <- 0 until s.length) {\n            if (s[i].isUpper()) {\n                vowels += 1l\n            }\n        }\n        return vowels\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqoh2f6_d.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].isUpper()) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5g6dwe9m.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5g6dwe9m.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                for (j <- 0 until vowels.length) {\n                    if (s.charAt(i) == vowels[j]) {\n                        result += 1L\n                    }\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqvn16z92.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[35mj\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqvn16z92.scala:19:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                        result += \u001b[31m1L\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == \"A\") {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz7rse_r.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == \u001b[31m\"A\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293183,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuky7v5ct.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuky7v5ct.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuky7v5ct.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var i = 0\n        var count = 0\n        while (i < s.length) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                count += 1\n            }\n            i += 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            }\n        }\n        return (sb.toString().count(\"A\") + sb.toString().count(\"E\") + sb.toString().count(\"I\") + sb.toString().count(\"O\") + sb.toString().count(\"U\"))\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293184,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp46dm5jod.scala:19:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mreturn\u001b[0m (sb.toString().count(\u001b[31m\"A\"\u001b[0m) + sb.toString().count(\u001b[31m\"E\"\u001b[0m) + sb.toString().count(\u001b[31m\"I\"\u001b[0m) + sb.toString().count(\u001b[31m\"O\"\u001b[0m) + sb.toString().count(\u001b[31m\"U\"\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Found:    (\u001b[32m\"A\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                    Required: Char => Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp46dm5jod.scala:19:63 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mreturn\u001b[0m (sb.toString().count(\u001b[31m\"A\"\u001b[0m) + sb.toString().count(\u001b[31m\"E\"\u001b[0m) + sb.toString().count(\u001b[31m\"I\"\u001b[0m) + sb.toString().count(\u001b[31m\"O\"\u001b[0m) + sb.toString().count(\u001b[31m\"U\"\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                               ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Found:    (\u001b[32m\"E\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                               Required: Char => Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp46dm5jod.scala:19:90 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mreturn\u001b[0m (sb.toString().count(\u001b[31m\"A\"\u001b[0m) + sb.toString().count(\u001b[31m\"E\"\u001b[0m) + sb.toString().count(\u001b[31m\"I\"\u001b[0m) + sb.toString().count(\u001b[31m\"O\"\u001b[0m) + sb.toString().count(\u001b[31m\"U\"\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Found:    (\u001b[32m\"I\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                               Required: Char => Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp46",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the substring of s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : Array[Char]) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s[j] == vowels[0]) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // Given a string s, return the number of times that the substring \"ab\"\n    // occurs in s.\n    // For example:\n    // >>> countAB(\"aababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293184,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3u83by4o.scala:50:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3u83by4o.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3u83by4o.scala:28:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mj\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3u83by4o.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3u83by4o.scala:41:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(countUpper((\u001b[31m\"aBCdEf\"\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: countUpper\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3u83by4o.scala:42:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(countUpper((\u001b[31m\"abcdefg\"\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: countUpper\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3u83by4o.scala:43:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(countUpper((\u001b[31m\"dBBE\"\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpows41u_f.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpows41u_f.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.substring(i, i + 1), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n    // (1l)\n    // >>> countVowels((\"abcdefg\"))\n    // (0l)\n    // >>> countVowels((\"dBBE\"))\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.substring(i, i + 1), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in even indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n    // (1l)\n    // >>> countVowels((\"abcdefg\"))\n    // (0l)\n    // >>> countVowels((\"dBBE\"))\n    // (0l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.substring(i, i + 1), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n    // (1l)\n    // >>> countVowels((\"abcdef\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw26tx2kp.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw26tx2kp.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.substring(i, i + \u001b[31m1\u001b[0m), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw26tx2kp.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.substring(i, i + \u001b[31m1\u001b[0m), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (String, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw26tx2kp.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.substring(i, i + \u001b[31m1\u001b[0m), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw26tx2kp.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.substring(i, i + \u001b[31m1\u001b[0m), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (String, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw26tx2kp.scala:55:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                count += countVowels(s.substring(i, i + \u001b[31m1\u001b[0m), vowels)\n\u001b[31m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the string starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j) == vowels[0]) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoyj2_zub.scala:25:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36ms\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36mi\u001b[0m : \u001b[35mInt\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpoyj2_zub.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpoyj2_zub.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countLowerOdd((\"dBBE\"))\n    \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqy2dlpdx.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqy2dlpdx.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqy2dlpdx.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqy2dlpdx.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqy2dlpdx.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqy2dlpdx.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqy2dlpdx.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            } else {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    sb.append(s.charAt(i))\n                }\n            }\n        }\n        val res = sb.toString().length()\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293186,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpk0jkj8y5.scala:27)\n\tat Problem.main(tmpk0jkj8y5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5g6dwe9m.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5g6dwe9m.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, return a string of the form \"a\", \"ab\", \"abc\", ...\n    // For example:\n    // >>> buildString(\"a\")\n    // \"a\"\n    // >>> buildString(\"ab\")\n    // \"ab\"\n    // >>> buildString(\"abc\")\n    // \"abc\"\n    // >>> buildString(\"abcd\")\n    // \"abcd\"\n    def buildString(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += s.charAt(i)\n            } else {\n                result += vowels[countVowels(s.charAt(i), vowels)]\n            }\n        }\n        result\n    }\n\n    // Given a string s, return a string of the form \"A\", \"AB\", \"ABC\", ...\n    // For example:\n    // >>> buildStringUpper(\"a\")\n    // \"A\"\n    // >>> buildStringUpper(\"ab\")\n    \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvjyewuya.scala:59:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m                result += vowels[\u001b[35mcountVowels\u001b[0m(s.charAt(i), vowels)]\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvjyewuya.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvjyewuya.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvjyewuya.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvjyewuya.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvjyewuya.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explana",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i) - 'A'] != 0) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz811xxb8.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i) - \u001b[31m'A'\u001b[0m] != \u001b[31m0\u001b[0m) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz811xxb8.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (s.charAt(i) == vowels[0]) counts += 1\n        }\n        return counts.toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293183,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcezyekxk.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcezyekxk.scala:17:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293188,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi7e3ihqk.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi7e3ihqk.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi7e3ihqk.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += 1l\n                if (s.charAt(i) == vowels[0]) count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293189,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpahfkufho.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmpahfkufho.scala:18:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpahfkufho.scala:18:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, return the number of times that the substring \"xyz\" occurs in s.\n    // For example:\n    // >>> countXYZ(\"abcxyzabc\")\n    // (1l)\n    // >>> countXYZ(\"abcabc\")\n    // (0l)\n    // >>> countXYZ(\"abcdabc\")\n    // (0l)\n    def countXYZ(s : String) : Long = {\n        val xyz = \"xyz\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + 3).equals(xyz)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // Given a string s, return the number of times that the substring \"xyz\" occurs in s.\n    // For example:\n    // >>> countXYZ(\"abcxyzabc\")\n    // (1l)\n    // >>> countXYZ(\"abcabc\")\n    // (0l)\n    // >>> countXYZ(\"abcd\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293190,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp69o403ig.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp69o403ig.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69o403ig.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp69o403ig.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69o403ig.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp69o403ig.scala:55:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a new string where all the lowercase letters have been\n    // exchanged with the uppercase equivalent.\n    // For example:\n    // >>> upper((\"aBcDeFgHij\"))\n    // (\"ABCDEFGHIJ\")\n    // >>> upper((\"abcdefghij\"))\n    // (\"ABCDEFGHIJ\")\n    // >>> upper((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    def upper(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += s[i].toUpperCase()\n            } else {\n                result += vowels[s[i].toUpperCase() - 'A']\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a new string where all the lowercase letters have been\n    // exchanged with the upperc\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293193,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmparwz0icz.scala:58:37 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m                result += vowels[\u001b[35ms\u001b[0m[\u001b[35mi\u001b[0m].toUpperCase() - \u001b[31m'A'\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                     ']' expected, but '.' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmparwz0icz.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmparwz0icz.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmparwz0icz.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmparwz0icz.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmparwz0icz.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmparwz0icz.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\"\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels.contains(s.charAt(i))) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293188,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvq6vmwg4.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293191,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcwzmv_pn.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcwzmv_pn.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (1l)\n    // >>> count((\"aBCdEf\"), (\"abcdefg\"))\n    // (0l)\n    // >>> count((\"aBCdEf\"), (\"abcd\"))\n    // (0l)\n    def count(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (s.equals(t.substring(i, i + s.length))) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the substring s occurs in the string t.\n    // For example:\n    // >>> countSubstring(\"aBCdEf\", \"aBCdEf\")\n    // (1l)\n    // >>> countSubstring(\"aBCd\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293193,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp96z1_8yl.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp96z1_8yl.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96z1_8yl.scala:17:40 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    Char\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96z1_8yl.scala:17:45 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                        Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp96z1_8yl.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96z1_8yl.scala:36:40 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    Char\n\u001b[31m   |\u001b[0m                                Required: S",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var i = 0\n        var count = 0\n        while (i < s.length) {\n            if (s[i].isUpper()) {\n                count += 1\n            }\n            i += 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293188,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwu7hge6.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].isUpper()) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (var i = 0; i < s.length(); i += 2) {\n            if (s.charAt(i) == vowels[0]) count += 1l\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293195,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpiledkuby.scala:15:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiledkuby.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiledkuby.scala:15:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiledkuby.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == \"A\") {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz7rse_r.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == \u001b[31m\"A\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (1l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countLower\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293195,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm767yhiz.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm767yhiz.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm767yhiz.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm767yhiz.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm767yhiz.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm767yhiz.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm767yhiz.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val s2 = s.toLowerCase\n        val vowels = \"aeiou\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s2.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293194,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgi_nokzj.scala:18:42 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (s2.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgi_nokzj.scala:18:53 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (s2.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpows41u_f.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpows41u_f.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the string s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : Array[Char]) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j) == vowels[0]) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the string s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, j : Int) : Int = {\n        val count = 0\n        for (k <- i until j) {\n            if (s.charAt(k) == \"AEIOU\".charAt(0)) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the string s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, j : Int, vowels : Array[Char]) : Int = {\n        val count = 0\n        for (k <- i until j) {\n            if (s.charAt(k) == vowels[0]) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the string s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, j : Int, vowels : Array[Char], vowels2 : Array[Char]) : Int = {\n        val count = 0\n        for (k <- i until j) {\n            if (s.charAt(k) == vowels[0] || s.charAt(k) == vowels2[\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3x6qe15_.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3x6qe15_.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x6qe15_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3x6qe15_.scala:28:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(j) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x6qe15_.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x6qe15_.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3x6qe15_.scala:52:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(k) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x6qe15_.scala:53:22 ------------------------\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i].toUpperCase() == \"A\") {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293192,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo_mmvphf.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == \u001b[31m\"A\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countLower\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4q820ihw.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4q820ihw.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4q820ihw.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4q820ihw.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4q820ihw.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4q820ihw.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4q820ihw.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (s[i] == vowels[0]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpojp85lor.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpojp85lor.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countLowerOdd(\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyidfmz8y.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyidfmz8y.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidfmz8y.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyidfmz8y.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidfmz8y.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyidfmz8y.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidfmz8y.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsCount = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    vowelsCount += 1\n                }\n            }\n        }\n        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293195,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_ydpn7xc.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_ydpn7xc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsCount.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a string where all the lowercase letters are\n    // replaced with their uppercase equivalent.\n    // For example:\n    // >>> upper((\"aBcDeFg\"))\n    // (\"ABCDEFg\")\n    // >>> upper((\"abcdefg\"))\n    // (\"ABCDEFg\")\n    // >>> upper((\"abc\"))\n    // (\"ABC\")\n    def upper(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += s[i].toUpperCase()\n            } else {\n                result += s[i]\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a string where all the lowercase letters are\n    // replaced with their uppercase equivalent.\n    // For example:\n    // >>> upper((\"aBcDeFg\"))\n    // (\"ABCDEFg\")\n    // >>> upper((\"abcdefg\"))\n    // (\"ABCDEF\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_9zohlv.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt_9zohlv.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_9zohlv.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_9zohlv.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt_9zohlv.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_9zohlv.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt_9zohlv.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            } else {\n                if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                    sb.append(s.charAt(i))\n                }\n            }\n        }\n        val result = sb.toString().length()\n        if (result == 0) {\n            result = 0\n        } else {\n            result = 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293193,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpnkbckeuo.scala:25:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            result = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpnkbckeuo.scala:27:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            result = \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var i = 0\n        var count = 0\n        while (i < s.length) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                count += 1\n            }\n            i += 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowels_count = 0\n        for (i <- 0 until s.length) {\n            if (s[i] == vowels[0]) {\n                vowels_count += 1\n            }\n            if (i % 2 == 0) {\n                vowels_count += 1\n            }\n        }\n        vowels_count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8heuf01y.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8heuf01y.scala:17:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                vowels_count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         value += is not a member of Int - did you mean vowels_count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8heuf01y.scala:20:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                vowels_count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         value += is not a member of Int - did you mean vowels_count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (1l)\n    def countLowerOdd\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpsnzutly6.scala:69:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountLowerOdd\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsnzutly6.scala:81:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsnzutly6.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsnzutly6.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsnzutly6.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsnzutly6.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsnzutly6.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == \"A\" || s.charAt(i) == \"E\" || s.charAt(i) == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"U\") {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpu4ubtgnr.scala:16:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu4ubtgnr.scala:16:42 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu4ubtgnr.scala:16:64 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu4ubtgnr.scala:16:86 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu4ubtgnr.scala:16:108 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.c",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (var i = 0; i < s.length(); i += 2) {\n            if (s.charAt(i) == vowels[0]) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpi6w4j9av.scala:15:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6w4j9av.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6w4j9av.scala:15:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi6w4j9av.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the string s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s[j] == vowels[0]) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprhy4xqt_.scala:25:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36ms\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36mi\u001b[0m : \u001b[35mInt\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprhy4xqt_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprhy4xqt_.scala:28:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mj\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprhy4xqt_.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5g6dwe9m.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5g6dwe9m.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0g9vq3kx.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0g9vq3kx.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0g9vq3kx.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0g9vq3kx.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0g9vq3kx.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0g9vq3kx.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0g9vq3kx.scala:55:26 ------------------------\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            }\n        }\n        val vowels = \"AEIOU\".toCharArray()\n        for (i <- 0 until vowels.length) {\n            if (sb.indexOf(vowels[i]) != -1) {\n                return 1l\n            }\n        }\n        return 0l\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0u89hq6w.scala:21:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (sb.indexOf(vowels[\u001b[35mi\u001b[0m]) != -\u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray(), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiklergqg.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray(), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiklergqg.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray(), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsCount = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                vowelsCount += count(vowels, s.charAt(i))\n            }\n        }\n        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmctf91b_.scala:17:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                vowelsCount += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsCount.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmctf91b_.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                vowelsCount += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count(\"cat\", \"cat\")\n    // (2l)\n    // >>> count(\"cat\", \"dog\")\n    // (0l)\n    def count(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (t.charAt(i) == s.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count(\"cat\", \"cat\")\n    // (2l)\n    // >>> count(\"cat\", \"dog\")\n    // (0l)\n    def count2(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (t.charAt(i) == s.char\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdwd_yjio.scala:68:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdwd_yjio.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdwd_yjio.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwd_yjio.scala:17:40 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    Char\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwd_yjio.scala:17:45 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                        Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdwd_yjio.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwd_yjio.scala:36:40 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val vowels_count = 0l\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == vowels[0]) {\n                vowels_count += 1l\n            }\n        }\n        return vowels_count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpd5qfy83a.scala:16:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5qfy83a.scala:17:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                vowels_count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        value += is not a member of Long - did you mean vowels_count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s[i]]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp171r2gy4.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp171r2gy4.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[\u001b[35ms\u001b[0m[\u001b[35mi\u001b[0m]]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type s\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += (s.charAt(i) == vowels[0]) ? 1 : 0\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293205,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuiiifadw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) ? \u001b[31m1\u001b[0m : \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuiiifadw.scala:17:47 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) ? \u001b[31m1\u001b[0m : \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm26oq878.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm26oq878.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the given character.\n    // Returns 0 if the character is not a vowel.\n    def countVowels(c : Char, vowels : CharArray) : Int = {\n        if (vowels.indexOf(c) >= 0) {\n            return 1\n        } else {\n            return 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293204,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdnpyju_9.scala:25:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36mc\u001b[0m : \u001b[35mChar\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdnpyju_9.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpows41u_f.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpows41u_f.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the given char.\n    // For example:\n    // >>> countVowels('a', \"AEIOU\")\n    // (1l)\n    // >>> countVowels('b', \"AEIOU\")\n    // (0l)\n    // >>> countVowels('c', \"AEIOU\")\n    // (0l)\n    def countVowels(c : Char, vowels : CharArray) : Long = {\n        val count = 0l\n        for (i <- 0 until vowels.length) {\n            if (vowels[i] == c) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293206,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn02b5z8a.scala:31:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36mc\u001b[0m : \u001b[35mChar\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mLong\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn02b5z8a.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn02b5z8a.scala:34:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[\u001b[35mi\u001b[0m] == c) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn02b5z8a.scala:35:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = 0\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[vowelsIndex]) {\n                    count += 1l\n                }\n                vowelsIndex += 1\n                if (vowelsIndex == vowels.length) {\n                    vowelsIndex = 0\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293206,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd7iykm9r.scala:18:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[35mvowelsIndex\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type vowelsIndex\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd7iykm9r.scala:19:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd7iykm9r.scala:21:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                vowelsIndex += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsIndex.!=?\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpd7iykm9r.scala:23:32 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                    vowelsIndex = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Reassignment to val vowelsIndex\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += countVowels(s.substring(i, i + 1))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels((\"aBCdEf\"))\n    // (1l)\n    // >>> countVowels((\"abcdefg\"))\n    // (3l)\n    // >>> countVowels((\"dBBE\"))\n    // (1l)\n    def countVowels(s : String) : Long = {\n        var result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 1) {\n                result += countVowels(s.substring(i, i + 1))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of vowels in the string.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (3l)\n    // >>> countVowels(\"abcdefg\")\n    // (6l)\n    // >>> countVowels(\"dBBE\")\n    // (2l)\n    def countVowels(s : String) : Long = {\n        var result = 0L\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == \"A\" || s.charAt(i) == \"E\" || s.charAt(i) == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"U\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of consonants in the string.\n    // For example:\n    // >>> countConsonants(\"aBCdEf\")\n    // (3l)\n    // >>> countConsonants(\"abcdefg\")\n    // (7l)\n    // >>> countConsonants(\"dBBE\")\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293207,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb2zzsx_0.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb2zzsx_0.scala:51:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb2zzsx_0.scala:51:38 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb2zzsx_0.scala:51:60 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb2zzsx_0.scala:51:82 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count(\"cat\", \"cat\")\n    // (2l)\n    // >>> count(\"cat\", \"dog\")\n    // (0l)\n    def count(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (t[i] == s[0]) {\n                result += 1\n                for (j <- 1 until s.length) {\n                    if (t[i + j] != s[j]) {\n                        break\n                    } else {\n                        result += 1\n                    }\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293208,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfbqh3wl6.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfbqh3wl6.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfbqh3wl6.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfbqh3wl6.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfbqh3wl6.scala:36:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfbqh3wl6.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += co",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sb.append(s.charAt(i))\n            else if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') sb.append(s.charAt(i))\n        }\n        val result = sb.toString().length()\n        if (result % 2 == 0) result / 2\n        else result / 2 + 1\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293209,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpsw01i1kg.scala:24)\n\tat Problem.main(tmpsw01i1kg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293204,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2mla2mu1.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_kzapp24.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_kzapp24.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (s.charAt(i).isUpper()) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293205,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpav7qmyad.scala:15:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i).isUpper()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35misUpper\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mRichChar\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += 1l\n            }\n            if (s[i] == vowels[0]) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293209,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp86p2_baj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp86p2_baj.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp86p2_baj.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = \"AEIOU\".toCharArray()\n        var count = 0l\n        for (var i = 0; i < s.length(); i += 2) {\n            if (s.charAt(i) == vowels[0]) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpi6w4j9av.scala:15:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6w4j9av.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6w4j9av.scala:15:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi6w4j9av.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a string of the form \"a\", \"ab\", \"abc\", ...\n    // where each a is the first letter of s.\n    // For example:\n    // >>> firstLetter(\"Hello\")\n    // \"H\"\n    // >>> firstLetter(\"abc\")\n    // \"a\"\n    // >>> firstLetter(\"abcd\")\n    // \"ab\"\n    def firstLetter(s : String) : String = {\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            result += s.charAt(i)\n        }\n        return result\n    }\n\n    // Given a string s, return a string of the form \"a\", \"ab\", \"abc\", ...\n    // where each a is the last letter of s.\n    // For example:\n    // >>> lastLetter(\"Hello\")\n    // \"o\"\n    // >>> lastLetter(\"abc\")\n    // \"c\"\n    // >>> lastLetter(\"abcd\")\n    // \"d\"\n    def lastLetter(s : String) : String = {\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            result += s.charAt(s.length - 1 - i)\n        }\n        return result\n    }\n\n    // Given a string s, return a string of the form \"a\", \"ab\", \"abc\", ...\n    // where each a is the first letter of s.\n    // For example:\n    // >>> firstLetter(\"Hello\")\n    // \"H\"\n    // >>> firstLetter(\"abc\")\n    // \"a\"\n    // >>> firstLetter(\"abcd\")\n    // \"ab\"\n    def firstLetter2(s : String) : String = {\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            result += s.charAt(i)\n        }\n        return result\n    }\n\n\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293209,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnysr3j3.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnysr3j3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnysr3j3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnysr3j3.scala:35:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            result += s.charAt(i)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnysr3j3.scala:52:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            result += s.charAt(s.length - \u001b[31m1\u001b[0m - i)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnysr3j3.scala:69:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m            result += s.charAt(i)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnysr3j3.scala:77:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    assert(countUpper((\u001b[31m\"aBCdEf\"\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: countUpper\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293209,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmprnxgb7la.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprnxgb7la.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm26oq878.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm26oq878.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Counts the number of vowels in the string s.\n    // Returns the number of vowels.\n    def countVowels(c : Char, vowels : CharArray) : Long = {\n        for (vowel <- 0 until vowels.length) {\n            if (vowels[vowel] == c) {\n                1l\n            }\n        }\n        0l\n    }\n\n    // Given a string s, return the string made of the first and last chars.\n    // For example:\n    // >>> firstAndLast(\"Hello\")\n    // \"Hl\"\n    // >>> firstAndLast(\"\")\n    // \"\"\n    // >>> firstAndLast(\"a\")\n    // \"a\"\n    def firstAndLast(s : String) : String = {\n        s.substring(0, 1) + s.substring(s.length - 1, s.length)\n    }\n\n    // Given a string s, return a string made of every second char starting at the beginning.\n    // For example:\n    // >>> secondChars(\"Hello\")\n    // \"el\"\n    // >>> secondChars(\"\")\n    // \"\"\n    // >>> secondChars(\"a\")\n    // \"a\"\n    def secondChars(s : String) : String = {\n        s.substring(1, s.length)\n    }\n\n    // Given a string s, return a string made of every second char starting at the end.\n    // For example:\n    // >>> secondChars(\"Hello\")\n    // \"lo\"\n    // >>> secondChars(\"\")\n    // \"\"\n    // >>> secondChars(\"a\")\n    // \"a\"\n    def secondLastChars(s : String) : String = {\n        s.substring(0, s.length - 1)\n    }\n\n    // Given a string s, return the string made of every char repeated\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293209,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjst1zypd.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjst1zypd.scala:25:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36mc\u001b[0m : \u001b[35mChar\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mLong\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjst1zypd.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjst1zypd.scala:27:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[\u001b[35mvowel\u001b[0m] == c) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type vowel\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjst1zypd.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(countUpper((\u001b[31m\"aBCdEf\"\u001b[0m)) == (\u001b[31m1l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: countUpper\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjst1zypd.scala:74:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m    assert(countUpper((\u001b[31m\"abcdefg\"\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: countUpper\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += 1L\n            } else {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293211,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuby02hg1.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += \u001b[31m1L\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuby02hg1.scala:19:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuby02hg1.scala:19:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm26oq878.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm26oq878.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (1\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxp77g9h.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyxp77g9h.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxp77g9h.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyxp77g9h.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxp77g9h.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyxp77g9h.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxp77g9h.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpperEven(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 2 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293212,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp86475i31.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp86475i31.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp86475i31.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp86475i31.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp86475i31.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp86475i31.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp86475i31.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the given character.\n    // Returns 0 if the character is not a vowel.\n    def countVowels(c : Char, vowels : Array[Char]) : Int = {\n        if (c == vowels[0]) {\n            return 1\n        } else {\n            return 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293211,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2dytsjzm.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2dytsjzm.scala:26:23 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mif\u001b[0m (c == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i] == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293212,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps6ftlz2i.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps6ftlz2i.scala:17:45 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s[i] == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293211,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2gs8vabj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2gs8vabj.scala:17:45 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293188,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi7e3ihqk.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi7e3ihqk.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi7e3ihqk.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in even indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (0l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkfdy79p0.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkfdy79p0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfdy79p0.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkfdy79p0.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfdy79p0.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkfdy79p0.scala:55:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean co",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpows41u_f.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpows41u_f.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (1l)\n    // >>> count((\"aBCdEf\"), (\"abcdEf\"))\n    // (0l)\n    // >>> count((\"aBCdEf\"), (\"abcdeF\"))\n    // (0l)\n    def count(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (t.charAt(i) == s.charAt(0)) {\n                result += 1\n                for (j <- 1 until s.length) {\n                    if (t.charAt(i + j) != s.charAt(j)) {\n                        break\n                    } else {\n                        result += 1\n                    }\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp61u9_xm2.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp61u9_xm2.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp61u9_xm2.scala:17:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Found:    Char\n\u001b[31m   |\u001b[0m                                        Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp61u9_xm2.scala:35:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                result += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp61u9_xm2.scala:38:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp61u9_xm2.scala:40:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m                        result += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\"\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (s[i].toUpperCase() == vowels[i % vowels.length]) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprv55600b.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == vowels[\u001b[35mi\u001b[0m \u001b[35m%\u001b[0m vowels.length]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprv55600b.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a new string where all the lowercase letters have been\n    // exchanged with the uppercase equivalent.\n    // For example:\n    // >>> upper((\"aBcDeFgHjKl\"))\n    // (\"ABCDEFGHJKL\")\n    // >>> upper((\"abcdefghijkl\"))\n    // (\"ABCDEFGHIJKL\")\n    // >>> upper((\"dbe\"))\n    // (\"DBE\")\n    def upper(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = \"\"\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += s.charAt(i).toUpperCase()\n            } else {\n                result += s.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return a new string where all the lowercase letters have been\n    // exchanged with the uppercase equivalent.\n    // For example:\n    // >>> upper((\"aBcDe\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293217,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfgjmlmy7.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfgjmlmy7.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfgjmlmy7.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfgjmlmy7.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfgjmlmy7.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfgjmlmy7.scala:56:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m                result += s.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfgjmlmy7.scala:56:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m                result += s.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the given character.\n    // Returns 0 if the character is not a vowel.\n    def countVowels(c : Char, vowels : CharArray) : Int = {\n        for (i <- 0 until vowels.length) {\n            if (c == vowels[i]) {\n                return 1\n            }\n        }\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx6cfxjp6.scala:25:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36mc\u001b[0m : \u001b[35mChar\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx6cfxjp6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx6cfxjp6.scala:27:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == vowels[\u001b[35mi\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                            Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (2l)\n    // >>> count((\"aBCdEf\"), (\"abcdefg\"))\n    // (0l)\n    // >>> count((\"aBCdEf\"), (\"abcd\"))\n    // (0l)\n    def count(s : String, t : String) : Long = {\n        val result = 0L\n        for (i <- 0 until t.length) {\n            if (s.equals(t.substring(i, i + 1))) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> count((\"aBCdEf\"), (\"aBCdEf\"))\n    // (2l)\n    // >>> count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293218,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsibiqvkr.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsibiqvkr.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsibiqvkr.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    Array[Char]\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsibiqvkr.scala:17:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Found:    (vowels : Array[Char])\n\u001b[31m   |\u001b[0m                                        Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsibiqvkr.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsibiqvkr.scala:36:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                for (j <- 0 until vowels.length) {\n                    if (s.charAt(i) == vowels[j]) {\n                        count += 1l\n                    }\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293217,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpif0vvhq0.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[35mj\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpif0vvhq0.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                        count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (0l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (1l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countLowerOdd(\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293219,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9c14o19p.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9c14o19p.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9c14o19p.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9c14o19p.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9c14o19p.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9c14o19p.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9c14o19p.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpperEven(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 2 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dB\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293220,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnnjywhg.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnnjywhg.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnnjywhg.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnnjywhg.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnnjywhg.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmnnjywhg.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnnjywhg.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperEven(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 2 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293220,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg2y4l0nz.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpg2y4l0nz.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg2y4l0nz.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpg2y4l0nz.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg2y4l0nz.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpg2y4l0nz.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg2y4l0nz.scala:55:26 ------------------------\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s[i]]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp171r2gy4.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp171r2gy4.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[\u001b[35ms\u001b[0m[\u001b[35mi\u001b[0m]]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type s\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzzwxjj5q.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzzwxjj5q.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val s2 = s.toLowerCase\n        val vowels = \"aeiou\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                for (j <- 0 until vowels.length) {\n                    if (s2.charAt(i) == vowels[j]) {\n                        count += 1l\n                    }\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293220,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvths87pk.scala:19:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    \u001b[33mif\u001b[0m (s2.charAt(i) == vowels[\u001b[35mj\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type j\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvths87pk.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                        count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val sb = new StringBuilder()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                sb.append(s.charAt(i))\n            } else {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    sb.append(1l)\n                } else {\n                    sb.append(0l)\n                }\n            }\n        }\n        return sb.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293221,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqoxcsejj.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mreturn\u001b[0m sb.toString()\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    String\n\u001b[31m   |\u001b[0m               Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val counts = mutable.LongBuffer[Long]\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts.update(vowels.indexOf(s.charAt(i)))\n        }\n        return counts.toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293218,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphj5crph_.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s, i, vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the substring of s starting at index i and\n    // ending at index j.\n    def countVowels(s : String, i : Int, vowels : CharArray) : Int = {\n        val count = 0\n        for (j <- i until s.length) {\n            if (s.charAt(j) == vowels[0]) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293223,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2nfg0w22.scala:25:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36ms\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36mi\u001b[0m : \u001b[35mInt\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nfg0w22.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s, i, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nfg0w22.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Given a string s, return a string where all the vowels are moved to the\n    // front. For example:\n    // >>> moveVowels(\"aBCdEf\")\n    // \"efaCBD\"\n    // >>> moveVowels(\"abcdefg\")\n    // \"gfedcb\"\n    // >>> moveVowels(\"dBBE\")\n    // \"BEADGB\"\n    def moveVowels(s : String) : String = {\n        val vowels = \"AEIOU\".toCharArray()\n        val vowelsCount = countVowels(s)\n        val vowelsIndex = 0\n        val vowelsIndexCount = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                vowelsIndexCount += 1l\n                if (vowelsIndexCount == vowelsCount) {\n                    vowelsIndex += 1l\n                }\n            }\n            s = s.substring(0, i) + s.charAt(i) + s.substring(i + 1)\n        }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293224,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpib9gpo1j.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib9gpo1j.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpib9gpo1j.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib9gpo1j.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpib9gpo1j.scala:57:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m                vowelsIndexCount += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    value += is not a member of Long - did you mean vowelsIndexCount.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpib9gpo1j.scala:59:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m                    vowelsIndex += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in odd indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (1l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in even indices.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (1l)\n    // >>> countVowels(\"abcdefg\")\n    // (0l)\n    // >>> countVowels(\"dBBE\")\n    // (0l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, return the number of times that the string s occurs in the string t.\n    // For example:\n    // >>> countOccurrences(\"aBCdEf\", \"aBCdEf\")\n    // (1l)\n    // >>> countOccurrences(\"aBCdEf\", \"abcdefg\")\n    // (0\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293223,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgi2vz1xw.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgi2vz1xw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgi2vz1xw.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgi2vz1xw.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgi2vz1xw.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgi2vz1xw.scala:55:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean co",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = new IndexedSeq[vowels.length]\n        for (i <- 0 until vowels.length) {\n            vowelsIndex(i) = i\n        }\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) == vowelsIndex(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293223,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbo81y6cn.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mvowelsIndex\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mIndexedSeq\u001b[0m[vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              type length is not a member of Array[Char]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbo81y6cn.scala:16:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            vowelsIndex(i) = i\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value update is not a member of Unit\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbo81y6cn.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += count(s.charAt(i) == vowelsIndex(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbo81y6cn.scala:21:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += count(s.charAt(i) == vowelsIndex(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpbo81y6cn.scala:21:47 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += count(s.charAt(i) == vowelsIndex(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mvalue\u001b[0m \u001b[35mvowelsIndex\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (vowels[s.charAt(i)]) counts += 1\n        }\n        return counts.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293220,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4ehjr9u5.scala:17:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ehjr9u5.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val s2 = s.toUpperCase()\n        val vowels = \"AEIOU\"\n        val count = 0l\n        for (i <- 0 until s2.length) {\n            if (s2.charAt(i) == vowels.charAt(0)) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293223,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx8acr_py.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293191,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcwzmv_pn.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcwzmv_pn.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (s[i] == vowels[0]) counts += 1\n        }\n        return counts.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293220,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxz0delu.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxz0delu.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        count\n    }\n\n    // Given a string s, count the number of vowels in the string.\n    // For example:\n    // >>> countVowels(\"aBCdEf\")\n    // (3l)\n    // >>> countVowels(\"abcdefg\")\n    // (6l)\n    // >>> countVowels(\"dBBE\")\n    // (3l)\n    def countVowels(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            count += countVowels(s.charAt(i), vowels)\n        }\n        count\n    }\n\n    // Given a char c and a set of chars vowels, return the number of vowels in c.\n    // For example:\n    // >>> countVowels('a', 'AEIOU')\n    // (0l)\n    // >>> countVowels('A', 'AEIOU')\n    // (1l)\n    // >>> countVowels('e', 'AEI\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293225,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprqpo0qtw.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprqpo0qtw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqpo0qtw.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprqpo0qtw.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqpo0qtw.scala:36:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    (Char, Array[Char])\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprqpo0qtw.scala:54:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m            count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Long - did you mean count.!=?\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countLowerOdd((\"dBBE\"))\n    \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293226,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7c3d5cnk.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7c3d5cnk.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c3d5cnk.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c3d5cnk.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7c3d5cnk.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c3d5cnk.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c3d5cnk.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i) :> vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpund0pvir.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpund0pvir.scala:17:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i) :> vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value :> is not a member of Char - did you mean Char.>>?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwwvtiqh.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsCount = 0l\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == vowels[0]) {\n                vowelsCount += 1\n            }\n            if (i % 2 == 0) {\n                vowelsCount += 1\n            }\n        }\n        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293227,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpjxs0wxkz.scala:16:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjxs0wxkz.scala:17:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         value += is not a member of Long - did you mean vowelsCount.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjxs0wxkz.scala:20:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         value += is not a member of Long - did you mean vowelsCount.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.LongBuffer()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts += 1\n            if (s.charAt(i) == vowels[0]) counts += 1\n        }\n        counts.toList\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293223,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuuk7g88j.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.LongBuffer()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuuk7g88j.scala:17:37 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) counts += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjf2xx0ro.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val vowelsIndex = new HashSet[Long]\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                vowelsIndex.add(i)\n            }\n        }\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (vowelsIndex.contains(i)) {\n                if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293226,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8y9mky66.scala:24:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = 0l\n        for (i <- 0 until s.length) {\n            if (s.charAt(i).isUpper()) {\n                vowels += 1l\n            }\n        }\n        return vowels\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293224,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpo2qt0diz.scala:15:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i).isUpper()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35misUpper\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mRichChar\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s.charAt(i))\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (0l)\n    // >>> countLower((\"abcdefg\"))\n    // (1l)\n    // >>> countLower((\"dBBE\"))\n    // (1\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxp77g9h.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyxp77g9h.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxp77g9h.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyxp77g9h.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxp77g9h.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyxp77g9h.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxp77g9h.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(vowels, s.charAt(i))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (vowels[s.charAt(i) - 'A'] == true) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293227,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf5uj3cql.scala:17:35 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (vowels[s.charAt(i) - \u001b[31m'A'\u001b[0m] == \u001b[31mtrue\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf5uj3cql.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = \"AEIOU\".toCharArray\n        var count = 0l\n        for (var i = 0; i < s.length(); i += 2) {\n            if (vowels[s.charAt(i) - 'A'] != 0) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293228,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp2_4onp9v.scala:15:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2_4onp9v.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2_4onp9v.scala:15:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2_4onp9v.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293229,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz4plxr43.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4plxr43.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\"\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (s[i].toUpperCase() == vowels[i % vowels.length]) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprv55600b.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == vowels[\u001b[35mi\u001b[0m \u001b[35m%\u001b[0m vowels.length]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprv55600b.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == \"A\" || s.charAt(i) == \"E\" || s.charAt(i) == \"I\" || s.charAt(i) == \"O\" || s.charAt(i) == \"U\") {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293230,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpz61n2b5r.scala:16:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz61n2b5r.scala:16:42 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz61n2b5r.scala:16:64 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz61n2b5r.scala:16:86 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"A\"\u001b[0m || s.charAt(i) == \u001b[31m\"E\"\u001b[0m || s.charAt(i) == \u001b[31m\"I\"\u001b[0m || s.charAt(i) == \u001b[31m\"O\"\u001b[0m || s.charAt(i) == \u001b[31m\"U\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz61n2b5r.scala:16:108 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                \u001b[33mif\u001b[0m (s.c",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countUpper(s.substring(i, i + 1))\n            } else if (vowels[s.charAt(i)]) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293230,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl3tvoh1j.scala:18:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (vowels[s.charAt(i)]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl3tvoh1j.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countUpper(s.substring(i, i + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl3tvoh1j.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpperOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpperOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countUpperOdd((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in even indices.\n    // For example:\n    // >>> countLower((\"aBCdEf\"))\n    // (1l)\n    // >>> countLower((\"abcdefg\"))\n    // (0l)\n    // >>> countLower((\"dBBE\"))\n    // (0l)\n    def countLower(s : String) : Long = {\n        val vowels = \"aeiou\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.charAt(i), vowels)\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of lowercase vowels in odd indices.\n    // For example:\n    // >>> countLowerOdd((\"aBCdEf\"))\n    // (0l)\n    // >>> countLowerOdd((\"abcdefg\"))\n    // (1l)\n    // >>> countLowerOdd(\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293230,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_1c7_hqc.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_1c7_hqc.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_1c7_hqc.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_1c7_hqc.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_1c7_hqc.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_1c7_hqc.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_1c7_hqc.scala:55:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += count(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293191,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcwzmv_pn.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcwzmv_pn.scala:18:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = List.range(0, s.length, 2).map(x => s.charAt(x)).filter(c => c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U').toList\n        return vowels.length\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += countVowels(s.charAt(i), vowels)\n            }\n        }\n        return count\n    }\n\n    // Counts the number of vowels in the given character.\n    // Returns 0 if the character is not a vowel.\n    // Returns 1 if the character is a vowel.\n    def countVowels(c : Char, vowels : CharArray) : Int = {\n        if (vowels.indexOf(c) >= 0) {\n            return 1\n        } else {\n            return 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293230,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki2gas5e.scala:26:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountVowels\u001b[0m(\u001b[36mc\u001b[0m : \u001b[35mChar\u001b[0m, \u001b[36mvowels\u001b[0m : \u001b[35mCharArray\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: type CharArray\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpki2gas5e.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += countVowels(s.charAt(i), vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += 1L\n            }\n            if (s[i] == vowels[0]) {\n                result += 1L\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv29a8z3l.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += \u001b[31m1L\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv29a8z3l.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv29a8z3l.scala:20:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result += \u001b[31m1L\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var vowels = \"AEIOU\".toCharArray\n        var count = 0l\n        for (var i = 0; i < s.length(); i += 2) {\n            if (s.charAt(i) == vowels[0]) count += 1l\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpb_lppniw.scala:15:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb_lppniw.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb_lppniw.scala:15:46 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb_lppniw.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length(); i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val vowelsCount = 0\n        for (i <- 0 until s.length) {\n            if (s[i].toUpperCase() == vowels[0]) {\n                vowelsCount += 1\n            }\n            if (i % 2 == 0) {\n                vowelsCount += 1\n            }\n        }\n        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4_8pzov5.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].toUpperCase() == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_8pzov5.scala:17:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsCount.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_8pzov5.scala:20:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                vowelsCount += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          value += is not a member of Int - did you mean vowelsCount.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var i = 0\n        var count = 0l\n        while (i < s.length) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                count += 1l\n            }\n            i += 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                count += 1l\n            }\n            if (s[i] == vowels[0]) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293209,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp86p2_baj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp86p2_baj.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m] == vowels[\u001b[31m0\u001b[0m]) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp86p2_baj.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count = 0l\n        for (var i = 0; i < s.length; i += 2) {\n            if (s[i].toUpperCase() == s[i]) {\n                count += 1l\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpfwcdbksu.scala:14:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfwcdbksu.scala:14:36 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfwcdbksu.scala:14:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfwcdbksu.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < s.length; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.iterator asScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val counts = mutable.List[Long]()\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) counts.append(0l)\n            else if (s[i] == vowels[0]) counts.append(1l)\n        }\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x => println(x))\n        counts.foreach(x =>\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293230,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpygod1n8l.scala:49:27 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m        counts.foreach(\u001b[36mx\u001b[0m =>\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpygod1n8l.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpygod1n8l.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (s[i] == vowels[\u001b[31m0\u001b[0m]) counts.append(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (1l)\n    def countUpperOdd(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 1 until s.length) {\n            if (i % 2 == 1) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpperEven(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(vowels, s[i])\n            }\n        }\n        return result\n    }\n\n    // Given a string s, count the number of uppercase vowels in odd indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (0l)\n    // >>> countUpper((\"abcdefg\"))\n    // (1l)\n    // >>> countUpper((\"dBBE\"))\n    // (\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7kno80an.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7kno80an.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7kno80an.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7kno80an.scala:17:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7kno80an.scala:36:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7kno80an.scala:36:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count(vowels, s[\u001b[35mi\u001b[0m])\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7kno80an.scala:36:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result += count",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val result = 0L\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                result += count(s.substring(i, i + 1).toCharArray, vowels)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxd4mx_3.scala:17:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of Long - did you mean result.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxd4mx_3.scala:17:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                result += count(s.substring(i, i + \u001b[31m1\u001b[0m).toCharArray, vowels)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: count\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val s2 = s.toLowerCase\n        val vowels = \"aeiou\".toCharArray\n        val vowels2 = vowels.toLowerCase\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s2.charAt(i) == vowels2[0]) {\n                    count += 1l\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsxvvxutk.scala:15:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mvowels2\u001b[0m = vowels.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toLowerCase is not a member of Array[Char]\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsxvvxutk.scala:20:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                    count += \u001b[31m1l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string s, count the number of uppercase vowels in even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels = \"AEIOU\".toCharArray()\n        val count = 0l\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == vowels[0]) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5g6dwe9m.scala:17:41 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mArray\u001b[0m does not take type parameters\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5g6dwe9m.scala:17:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mif\u001b[0m (s.charAt(i) == vowels[\u001b[31m0\u001b[0m]) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value += is not a member of Long - did you mean count.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
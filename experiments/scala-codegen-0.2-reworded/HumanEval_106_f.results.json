{
  "name": "HumanEval_106_f",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(range(1, i)))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxdoerx5.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxdoerx5.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxdoerx5.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:18:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // numbers from 1 to i if i is even, or the sum of numbers from 1 to i if i is odd.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong + factorial(i.toLong))\n            } else {\n                result.append(i.toLong)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // numbers from 1 to i if i is even, or the sum of numbers from 1 to i if i is odd.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpclotb8pz.scala:55:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpclotb8pz.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpclotb8pz.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpclotb8pz.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpclotb8pz.scala:32:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpclotb8pz.scala:33:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpclotb8pz.scala:51:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmtrd_b3j.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmtrd_b3j.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp96kvl41z.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96kvl41z.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhvrniga.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] =\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpkov1u8hx.scala:52:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mh\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mList\u001b[0m[\u001b[35mLong\u001b[0m] =\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkov1u8hx.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkov1u8hx.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov1u8hx.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkov1u8hx.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov1u8hx.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgrh1wgms.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgrh1wgms.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgrh1wgms.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 0.\n    // Example:\n    // >>> g(5l)\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 0 until n) {\n            result = result.append(factorial(i) + factorial(i + 1))\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> h(5l)\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            result = result.append(factorial(i) + factorial(i + 1))\n        }\n        return result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 0.\n    // Example:\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcyt0yurk.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyt0yurk.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcyt0yurk.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcyt0yurk.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcyt0yurk.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcyt0yurk.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxitr0kh.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxitr0kh.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the squares of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + sum(i.toLong * i.toLong))\n            } else {\n                result = result.append(i.toLong + sum(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the squares of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + sum(i.toLong *\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpusw0s18e.scala:54:64 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m                result = result.append(i.toLong + sum(i.toLong *\n\u001b[31m\u001b[31m   |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpusw0s18e.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusw0s18e.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpusw0s18e.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpusw0s18e.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpusw0s18e.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + 1 + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + 1 + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcarnmfm6.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcarnmfm6.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcarnmfm6.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcarnmfm6.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcarnmfm6.scala:52:35 --------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mh\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mList\u001b[0m[\u001b[35mLong\u001b[0m] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Found:    Unit\n\u001b[31m   |\u001b[0m                                   Required: List[Long]\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when com",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy8fh5mv4.scala:54:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8fh5mv4.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8fh5mv4.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8fh5mv4.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8fh5mv4.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8fh5mv4.scala:54:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compil",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkf9n0bd.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkf9n0bd.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(sum(range(1, i)))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(sum(range(1, i)) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // i and i - 1.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpmo2cw0la.scala:54:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmo2cw0la.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmo2cw0la.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmo2cw0la.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmo2cw0la.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmo2cw0la.scala:18:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even, otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even, otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4x57imis.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4x57imis.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4x57imis.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4x57imis.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4x57imis.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4x57imis.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E067] Syntax Error: /tmp/tmp4x57imis.scala:52:8 ----------------------------\u001b[0m\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result.append(i.toLong + 1l)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph4545lc0.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9b2y1nkp.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9b2y1nkp.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9b2y1nkp.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9b2y1nkp.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9b2y1nkp.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6f0juvrh.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6f0juvrh.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6f0juvrh.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong * (i.toLong + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgh7l7i1o.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgh7l7i1o.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        var result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1x4xftku.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1x4xftku.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1x4xftku.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1x4xftku.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2m2qc6x.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2m2qc6x.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292744,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfjzzzpex.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjzzzpex.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfjzzzpex.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjzzzpex.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfjzzzpex.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfjzzzpex.scala:34:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyr3twlff.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyr3twlff.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplp9w3rss.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplp9w3rss.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplp9w3rss.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplp9w3rss.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplp9w3rss.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplp9w3rss.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + 1l * factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + 1l * factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n :\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzugs8e6m.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzugs8e6m.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzugs8e6m.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzugs8e6m.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzugs8e6m.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzugs8e6m.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzugs8e6m.scala:18:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5we11bip.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong + 1l * (i - 1l).toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9jr_soyf.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9jr_soyf.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9jr_soyf.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * (i - \u001b[31m1l\u001b[0m).toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkf9n0bd.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkf9n0bd.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + factorial(i) + factorial(i + 1))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong +\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292748,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp50wugnkf.scala:54:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m                result = result.append(i.toLong +\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp50wugnkf.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50wugnkf.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50wugnkf.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50wugnkf.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50wugnkf.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a me",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsemdpyb.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qwn0wtw.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1qwn0wtw.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qwn0wtw.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1qwn0wtw.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn4rjkqkw.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn4rjkqkw.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn4rjkqkw.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4rjkqkw.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn4rjkqkw.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4rjkqkw.scala:34:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn4rjkqkw.scala:55:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(f((\u001b[31m5",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292747,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa9zydluz.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa9zydluz.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa9zydluz.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa9zydluz.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa9zydluz.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp96kvl41z.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96kvl41z.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsemdpyb.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5iaj2_ff.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5iaj2_ff.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            result.append(i.toLong + factorial(i - 1) + factorial(i))\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 2.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            result.append(i.toLong + factorial(i - 1) + factorial(i) + factorial(i + 1))\n        }\n        return result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 3\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8o_352rg.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8o_352rg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o_352rg.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8o_352rg.scala:31:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o_352rg.scala:32:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8o_352rg.scala:45:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292744,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfjzzzpex.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjzzzpex.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfjzzzpex.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfjzzzpex.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfjzzzpex.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfjzzzpex.scala:34:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkf9n0bd.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkf9n0bd.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + factorial(i) + factorial(i + 1))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i - 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong +\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292747,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpl2zosvcq.scala:54:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m                result = result.append(i.toLong +\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2zosvcq.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2zosvcq.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl2zosvcq.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2zosvcq.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl2zosvcq.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Lo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(range(1, i)))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(range(1, i)))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result =\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292747,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8vo3gofw.scala:53:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vo3gofw.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8vo3gofw.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8vo3gofw.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8vo3gofw.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8vo3gofw.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            result.append(i.toLong + factorial(i - 1l) + factorial(i))\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            result.append(i.toLong + factorial(i - 1l) + factorial(i))\n        }\n        return result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2gpn87vf.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2gpn87vf.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2gpn87vf.scala:31:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2gpn87vf.scala:45:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2gpn87vf.scala:56:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(f((\u001b[31m5l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m24l\u001b[0m.toLong, \u001b[31m15l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: f\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2gpn87vf.scala:57:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(f((\u001b[31m7l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m24l\u001b[0m.toLong, \u001b[31m15l\u001b[0m.toLong, \u001b[31m720l\u001b[0m.toLong, \u001b[31m28l\u001b[0m.toLong))));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i-1.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292747,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxea5zv6p.scala:54:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxea5zv6p.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxea5zv6p.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxea5zv6p.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxea5zv6p.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxea5zv6p.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5we11bip.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd0jf3_yh.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0jf3_yh.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result =\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292747,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpbbvyn9kd.scala:53:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbbvyn9kd.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbbvyn9kd.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbbvyn9kd.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbbvyn9kd.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbbvyn9kd.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5we11bip.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkf9n0bd.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkf9n0bd.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + 1 + factorial(i - 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf77wkl3p.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf77wkl3p.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhvrniga.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of all numbers from 1 to i,\n    // except the factorial of i itself.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            result.append(i.toLong + factorial(i - 1))\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of all numbers from 1 to i,\n    // except the factorial of i itself, multiplied by the factorial of i.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            result.append(i.toLong * factorial(i - 1) + factorial(i - 1))\n        }\n        result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292748,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpljhp4g9t.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpljhp4g9t.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljhp4g9t.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpljhp4g9t.scala:32:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljhp4g9t.scala:33:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpljhp4g9t.scala:47:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even, otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even, otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292749,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpautyztim.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpautyztim.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpautyztim.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpautyztim.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpautyztim.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpautyztim.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpautyztim.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5td9cfp2.scala:54:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5td9cfp2.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5td9cfp2.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5td9cfp2.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5td9cfp2.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5td9cfp2.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2m2qc6x.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2m2qc6x.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2m2qc6x.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2m2qc6x.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkzapti8y.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkzapti8y.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzapti8y.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkzapti8y.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzapti8y.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkzapti8y.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzapti8y.scala:55:11 ------------------------\u001b[0m\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprxadjnlg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxadjnlg.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2l == 0l) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2l == 0l) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgyazs8nw.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgyazs8nw.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyazs8nw.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgyazs8nw.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyazs8nw.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgyazs8nw.scala:36:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Lo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * (i + 1l).toLong * (i + 2l).toLong * (i + 3l).toLong * (i + 4l).toLong * (i + 5l).toLong)\n            } else {\n                result = result.append(i.toLong + (i + 1l).toLong + (i + 2l).toLong + (i + 3l).toLong + (i + 4l).toLong + (i + 5l).toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk73dcic1.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * (i + \u001b[31m1l\u001b[0m).toLong * (i + \u001b[31m2l\u001b[0m).toLong * (i + \u001b[31m3l\u001b[0m).toLong * (i + \u001b[31m4l\u001b[0m).toLong * (i + \u001b[31m5l\u001b[0m).toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk73dcic1.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + (i + \u001b[31m1l\u001b[0m).toLong + (i + \u001b[31m2l\u001b[0m).toLong + (i + \u001b[31m3l\u001b[0m).toLong + (i + \u001b[31m4l\u001b[0m).toLong + (i + \u001b[31m5l\u001b[0m).toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcmzwgwb.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgcmzwgwb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcmzwgwb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgcmzwgwb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcmzwgwb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of numbers from 1 to i\n    // divided by the factorial of i.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            result = result.append(i.toLong +\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpcyvfxeci.scala:54:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m            result = result.append(i.toLong +\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcyvfxeci.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyvfxeci.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcyvfxeci.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcyvfxeci.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcyvfxeci.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalu",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdx5_p2hr.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdx5_p2hr.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdx5_p2hr.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdx5_p2hr.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdx5_p2hr.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1 + factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1 + factorial(i.toLong) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmp5iistrot.scala:52:9 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mh\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m         ^\u001b[0m\n\u001b[31m   |\u001b[0m         Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5iistrot.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5iistrot.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5iistrot.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5iistrot.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5iistrot.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-expla",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprxadjnlg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxadjnlg.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph8rptinr.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph8rptinr.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph8rptinr.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph8rptinr.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcddzt9cq.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcddzt9cq.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpoaoiatxv.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoaoiatxv.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpoaoiatxv.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoaoiatxv.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6yfn16z9.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yfn16z9.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwiwcw549.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwiwcw549.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4te5tp95.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4te5tp95.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4te5tp95.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong * (i.toLong + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplr645tai.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr645tai.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplr645tai.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr645tai.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplr645tai.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplr645tai.scala:34:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <-",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(range(1, i)))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxdoerx5.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxdoerx5.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxdoerx5.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:18:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhvrniga.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwghbjnbh.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwghbjnbh.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwghbjnbh.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwghbjnbh.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwghbjnbh.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwghbjnbh.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhvrniga.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong)) / 2l\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyielotuv.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyielotuv.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyielotuv.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyielotuv.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyielotuv.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyielotuv.scala:55:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(f((\u001b[31m5l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m24l\u001b[0m.toLong, \u001b[31m15l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result =\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpfvhtkavl.scala:53:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvhtkavl.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfvhtkavl.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfvhtkavl.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfvhtkavl.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfvhtkavl.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        var result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        var result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i) / 2l)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n :\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc52g_3yc.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc52g_3yc.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc52g_3yc.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc52g_3yc.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc52g_3yc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc52g_3yc.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc52g_3yc.scala:36:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                result = result.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(range(1, i)))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxdoerx5.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxdoerx5.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmxdoerx5.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxdoerx5.scala:18:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijtmw47e.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpijtmw47e.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpimnjz653.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpimnjz653.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong - 1l))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3vog0vc7.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vog0vc7.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcmzwgwb.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgcmzwgwb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcmzwgwb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgcmzwgwb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcmzwgwb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i)\n            } else {\n                result = result.append(i.toLong + 1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292768,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mh_p9mv.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3mh_p9mv.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3mh_p9mv.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd0jf3_yh.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0jf3_yh.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprxadjnlg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxadjnlg.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + 1l * factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa0aoy49u.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0aoy49u.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0aoy49u.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0aoy49u.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0aoy49u.scala:18:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                    Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz9v_yerd.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz9v_yerd.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz9v_yerd.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz9v_yerd.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz9v_yerd.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2l == 0l) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_8eamsk3.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_8eamsk3.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_8eamsk3.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_8eamsk3.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        var result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1p9eu29x.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1p9eu29x.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1p9eu29x.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1p9eu29x.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprxadjnlg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxadjnlg.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppmpsb9gz.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmpsb9gz.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + 1l * factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa0aoy49u.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0aoy49u.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0aoy49u.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0aoy49u.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0aoy49u.scala:18:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                    Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        var result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw0219i6r.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw0219i6r.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw0219i6r.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw0219i6r.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + factorial(i) + factorial(i + 1))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i - 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292774,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7catb09u.scala:55:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7catb09u.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7catb09u.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7catb09u.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7catb09u.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7catb09u.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7catb09u.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2l == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5z06z2ha.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5z06z2ha.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5z06z2ha.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5z06z2ha.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbqpjnq52.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbqpjnq52.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbqpjnq52.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdx5_p2hr.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdx5_p2hr.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdx5_p2hr.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdx5_p2hr.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdx5_p2hr.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the squares of the numbers from 1 to i.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 9l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            result = result.append(i.toLong + i.toLong * i.toLong)\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the squares of the numbers from 1 to i,\n    // and the value of the element at index i is multiplied by i.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 1l.toLong, 4l.toLong, 9l.toLong, 16l.toLong, 25l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            result = result.append(i.toLong * i.toLong + i.toLong)\n        }\n        return result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n,\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292773,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8wmyn76d.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8wmyn76d.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wmyn76d.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8wmyn76d.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wmyn76d.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8wmyn76d.scala:33:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            result = result.append(i.toLong + i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbqpjnq52.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbqpjnq52.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbqpjnq52.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsemdpyb.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(range(1, i)))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292773,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ctqybcn.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6ctqybcn.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6ctqybcn.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6ctqybcn.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6ctqybcn.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(range(\u001b[31m1\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6ctqybcn.scala:18:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5we11bip.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5we11bip.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5we11bip.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result.append(i.toLong + 1l + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292769,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1zuaycn5.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + 1l * factorial(i - 1))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of numbers from 1 to i.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            result.append(i.toLong + 1l * factorial(i - 1))\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of numbers from 1 to i.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            result.append(i.toLong + 1l * factorial(i - 1))\n        }\n        result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of numbers from 1 to i.\n    // i starts from 1.\n    // Example:\n    // >>> i((5l))\n    // (List\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292773,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpne9uxeu9.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpne9uxeu9.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpne9uxeu9.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpne9uxeu9.scala:31:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpne9uxeu9.scala:32:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpne9uxeu9.scala:45:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292774,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1c7oxgll.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1c7oxgll.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1c7oxgll.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1c7oxgll.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprxadjnlg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxadjnlg.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292774,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcahrbzp3.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcahrbzp3.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + 1l * factorial(i - 1))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + 1l * factorial(i - 1))\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292773,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi2puh_9a.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2puh_9a.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi2puh_9a.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2puh_9a.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2puh_9a.scala:52:35 --------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mh\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mList\u001b[0m[\u001b[35mLong\u001b[0m] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Found:    Unit\n\u001b[31m   |\u001b[0m                                   Required: List[Long]\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when com",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result = result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpveo_6ufq.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpveo_6ufq.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpveo_6ufq.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpveo_6ufq.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpveo_6ufq.scala:18:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                    Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgh7l7i1o.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgh7l7i1o.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 0.\n    // Example:\n    // >>> g(5l)\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 0 until n) {\n            result = result.append(sum(1 until i) + i.toLong * factorial(i))\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> h(5l)\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            result = result.append(i.toLong * factorial(i) + (i + 1).toLong * factorial(i + 1))\n        }\n        return result\n    }\n\n    // Implement the function k that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292774,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprefpfrxn.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprefpfrxn.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprefpfrxn.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprefpfrxn.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprefpfrxn.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprefpfrxn.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprxadjnlg.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxadjnlg.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong)) / 2l\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyielotuv.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyielotuv.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyielotuv.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyielotuv.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyielotuv.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyielotuv.scala:55:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(f((\u001b[31m5l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m24l\u001b[0m.toLong, \u001b[31m15l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4te5tp95.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4te5tp95.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4te5tp95.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong * (i.toLong + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyr3twlff.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyr3twlff.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292774,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw8hhztk.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmw8hhztk.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw8hhztk.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmw8hhztk.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmw8hhztk.scala:52:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmw8hhztk.scala:54:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m5",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyr3twlff.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyr3twlff.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2cyi_8_2.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2cyi_8_2.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2cyi_8_2.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2cyi_8_2.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd1m7qzxx.scala:61:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd1m7qzxx.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1m7qzxx.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd1m7qzxx.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1m7qzxx.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E056] Syntax Error: /tmp/tmpd1m7qzxx.scala:52:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mh\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mList\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Missing type parameter for List",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplp9w3rss.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplp9w3rss.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplp9w3rss.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplp9w3rss.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplp9w3rss.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplp9w3rss.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // i and i + 1 if i is odd or the sum of the factorials of i and i - 1 if i is even.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong + factorial(i) + factorial(i + 1))\n            } else {\n                result.append(i.toLong + factorial(i) + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // i and i + 1 if i is odd or the sum of the factorials of i and i - 1 if i is even.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292776,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyf80uixy.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf80uixy.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyf80uixy.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf80uixy.scala:32:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyf80uixy.scala:33:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf80uixy.scala:51:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result = result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i-1.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            result = result.append(i.toLong + factorial(i.toLong).toLong + factorial(i.toLong - 1l).toLong)\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i-1.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            result = result.append(i.toLong + factorial(i.toLong).toLong + factorial(i.toLong - 1l).toLong)\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo0bfg930.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo0bfg930.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo0bfg930.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo0bfg930.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo0bfg930.scala:18:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1l\u001b[0m * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                    Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo0bfg930.scala:33:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            result = result.append(i.toLong + factorial(i.toLong).toLong + factorial(i.toLong - \u001b[31m1l\u001b[0m).toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1l to n) {\n            result = result.append(i.toLong + factorial(i) + factorial(i + 1l))\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 2.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1l to n) {\n            result = result.append(i.toLong + factorial(i) + factorial(i + 2l))\n        }\n        return result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 3.\n    // i\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292783,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpk9nultbo.scala:63:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk9nultbo.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9nultbo.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk9nultbo.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9nultbo.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk9nultbo.scala:33:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            result = result.append(i.toLong + factorial(i) + factorial(i + \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292784,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpytrxazdw.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpytrxazdw.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpytrxazdw.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpytrxazdw.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppmpsb9gz.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmpsb9gz.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + 1l * factorial(i.toLong))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292783,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyjlwg_g8.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyjlwg_g8.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292774,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1c7oxgll.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1c7oxgll.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1c7oxgll.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1c7oxgll.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 0.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 0l to n - 1l) {\n            result = result.append(i.toLong + factorial(i) + factorial(i + 1l))\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 2.\n    // i starts from 0.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 0l to n - 2l) {\n            result = result.append(i.toLong + factorial(i) + factorial(i + 2l))\n        }\n        result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292785,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp50xphn3j.scala:62:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50xphn3j.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50xphn3j.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50xphn3j.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50xphn3j.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50xphn3j.scala:33:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            result = result.append(i.toLong + factorial(i) + factorial(i + \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            result = result.append(i.toLong + factorial(i) + factorial(i + 1))\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 2.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            result = result.append(i.toLong + factorial(i) + factorial(i + 2))\n        }\n        return result\n    }\n\n    // Implement the function i that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 3.\n    // i starts from 1.\n    \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxm7a5rha.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm7a5rha.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxm7a5rha.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxm7a5rha.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxm7a5rha.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxm7a5rha.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292783,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx754t7dc.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx754t7dc.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx754t7dc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx754t7dc.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = mutable.List[Long\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292784,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76iwtii9.scala:54:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp76iwtii9.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76iwtii9.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp76iwtii9.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76iwtii9.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp76iwtii9.scala:53:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292784,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb2b7lnfb.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2b7lnfb.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result.append(i.toLong + 1l + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1l to n) {\n            if (i % 2 == 1) {\n                result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result.append(i.toLong + 1l + factorial(i - 1l) / 2l)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292780,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpthxbjg7s.scala:60:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpthxbjg7s.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpthxbjg7s.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpthxbjg7s.scala:54:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(f((\u001b[31m5l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m24l\u001b[0m.toLong, \u001b[31m15l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: f\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpthxbjg7s.scala:55:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(f((\u001b[31m7l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m24l\u001b[0m.toLong, \u001b[31m15l\u001b[0m.toLong, \u001b[31m720l\u001b[0m.toLong, \u001b[31m28l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: f\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpthxbjg7s.scala:56:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(f((\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i)\n            } else {\n                result = result.append(i.toLong + 1)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp774ywslf.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp774ywslf.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp774ywslf.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppmpsb9gz.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmpsb9gz.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4cw7_yro.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4cw7_yro.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cw7_yro.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong + factorial(i) + factorial(i + 1))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of i and i + 1 if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong +\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292748,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp50wugnkf.scala:54:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m                result = result.append(i.toLong +\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp50wugnkf.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50wugnkf.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50wugnkf.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50wugnkf.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp50wugnkf.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a me",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 1) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i) / 2)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of numbers from 1 to i\n    // multiplied by the factorial of i.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl9m1expn.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl9m1expn.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl9m1expn.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl9m1expn.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl9m1expn.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl9m1expn.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mf",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result =\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292762,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpfvhtkavl.scala:53:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvhtkavl.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfvhtkavl.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfvhtkavl.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfvhtkavl.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfvhtkavl.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qwn0wtw.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1qwn0wtw.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(sum(range(1l, i)))\n            }\n        }\n        result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(sum(range(1l, i)))\n            }\n        }\n        result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long](\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp5m7kjnbe.scala:53:32 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = List[\u001b[35mLong\u001b[0m](\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5m7kjnbe.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5m7kjnbe.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5m7kjnbe.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(sum(range(\u001b[31m1l\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5m7kjnbe.scala:18:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(sum(range(\u001b[31m1l\u001b[0m, i)))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5m7kjnbe.scala:18:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        var result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1hqk6iv7.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1hqk6iv7.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1hqk6iv7.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean List[Long].appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1hqk6iv7.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsemdpyb.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjsemdpyb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjsemdpyb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // numbers from 1 to i if i is even, or the sum of the factorials of numbers from 1 to i if i is odd.\n    // i starts from 1.\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(factorial(i).toLong + factorial(i - 1).toLong)\n            } else {\n                result = result.append(factorial(i).toLong)\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the sum of the factorials of\n    // numbers from 1 to i, multiplied by the number i.\n    // i starts from 1.\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            result = result.append(i.toLong * factorial(i).toLong)\n        \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292787,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwop42h8s.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwop42h8s.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwop42h8s.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwop42h8s.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwop42h8s.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwop42h8s.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not f",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2m2qc6x.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2m2qc6x.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * i.toLong)\n            } else {\n                result.append(i.toLong + 1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292785,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8t2q8mwh.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t2q8mwh.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp96kvl41z.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96kvl41z.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpta17f7_5.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpta17f7_5.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpta17f7_5.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpta17f7_5.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhvrniga.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + 1l * factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function g that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> g((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def g(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i))\n            } else {\n                result.append(i.toLong + 1l * factorial(i))\n            }\n        }\n        return result\n    }\n\n    // Implement the function h that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is odd\n    // or the sum of numbers from 1 to i divided by 2 if i is even.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> h((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def h(n : Long) : List[Long] = {\n\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxbsn7fap.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbsn7fap.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxbsn7fap.scala:33:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbsn7fap.scala:34:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbsn7fap.scala:52:35 --------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mh\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mList\u001b[0m[\u001b[35mLong\u001b[0m] = {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Found:    Unit\n\u001b[31m   |\u001b[0m                                   Required: List[Long]\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when com",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhvrniga.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplhvrniga.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplhvrniga.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0z92ftng.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0z92ftng.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z92ftng.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1\u001b[0m until i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpck2tyek7.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpck2tyek7.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i))\n            } else {\n                result = result.append(i.toLong + factorial(i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcmzwgwb.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgcmzwgwb.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcmzwgwb.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgcmzwgwb.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcmzwgwb.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgrh1wgms.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgrh1wgms.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgrh1wgms.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * i.toLong)\n            } else {\n                result = result.append(i.toLong * (i.toLong + 1))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4te5tp95.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4te5tp95.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * i.toLong)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4te5tp95.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong * (i.toLong + \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + sum(1l to i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292783,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx754t7dc.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx754t7dc.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx754t7dc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx754t7dc.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + sum(\u001b[31m1l\u001b[0m to i))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: sum\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292786,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1u45eym.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1u45eym.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i - 1l))\n            } else {\n                result = result.append(i.toLong + factorial(i - 1l))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292787,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjaiteqhh.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjaiteqhh.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjaiteqhh.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjaiteqhh.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i - \u001b[31m1l\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = List[Long](1l)\n        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n                result = result.append(i.toLong * factorial(i.toLong))\n            } else {\n                result = result.append(i.toLong + factorial(i.toLong))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292787,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj1q4rh6x.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1q4rh6x.scala:16:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                result = result.append(i.toLong * factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj1q4rh6x.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of List[Long] - did you mean result.appended?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1q4rh6x.scala:18:50 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                result = result.append(i.toLong + factorial(i.toLong))\n\u001b[31m\u001b[31m   |\u001b[0m                                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Not found: factorial\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Implement the function f that takes n as a parameter,\n    // and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    // i starts from 1.\n    // the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (i <- 1 until n) {\n            if (i % 2 == 0) {\n                result.append(i.toLong * factorial(i - 1))\n            } else {\n                result.append(i.toLong + sum(1 until i))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n    }\n\n}\n",
      "timestamp": 1664292731,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps3ww_364.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.List[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ww_364.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
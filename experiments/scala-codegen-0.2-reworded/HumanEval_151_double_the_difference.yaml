name: HumanEval_151_double_the_difference
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of numbers, return the sum of squares of the numbers\n    //\
  \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
  \    // >>> doubleTheDifference((List[Float](1l.toLong, 3l.toLong, 2l.toLong, 0l.toLong)))\n\
  \    // (10l)\n    // >>> doubleTheDifference((List[Float](-1l.toLong, -2l.toLong,\
  \ 0l.toLong)))\n    // (0l)\n    // >>> doubleTheDifference((List[Float](9l.toLong,\
  \ -2l.toLong)))\n    // (81l)\n    // >>> doubleTheDifference((List[Float](0l.toLong)))\n\
  \    // (0l)\n    // If the input list is empty, return 0.\n    def doubleTheDifference(lst\
  \ : List[Float]) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(doubleTheDifference((List[Float]()))\
  \ == (0l));\n    assert(doubleTheDifference((List[Float](5.0f.toFloat, 4.0f.toFloat)))\
  \ == (25l));\n    assert(doubleTheDifference((List[Float](0.1f.toFloat, 0.2f.toFloat,\
  \ 0.3f.toFloat))) == (0l));\n    assert(doubleTheDifference((List[Float](-10.0f.toFloat,\
  \ -20.0f.toFloat, -30.0f.toFloat))) == (0l));\n    assert(doubleTheDifference((List[Float](-1.0f.toFloat,\
  \ -2.0f.toFloat, 8.0f.toFloat))) == (0l));\n    assert(doubleTheDifference((List[Float](0.2f.toFloat,\
  \ 3.0f.toFloat, 5.0f.toFloat))) == (34l));\n    assert(doubleTheDifference((List[Float](-9.0f.toFloat,\
  \ -7.0f.toFloat, -5.0f.toFloat, -3.0f.toFloat, -1.0f.toFloat, 1.0f.toFloat, 3.0f.toFloat,\
  \ 5.0f.toFloat, 7.0f.toFloat, 9.0f.toFloat))) == (165l));\n    }\n\n}\n"
completions: ["        if (lst.isEmpty()) {\n            0l\n        } else {\n  \
    \          var sum = 0l\n            for (i <- lst.iterator()) {\n           \
    \     if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n     \
    \           }\n            }\n            return sum\n        }", "        if\
    \ (lst.isEmpty()) {\n            0l\n        } else {\n            var sum = 0l\n\
    \            for (i <- lst.iterator()) {\n                if (i.isOdd()) {\n \
    \                   sum += i.toLong * i.toLong\n                }\n          \
    \  }\n            sum\n        }", "        if (lst.isEmpty()) {\n           \
    \ 0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i * i\n             \
    \   }\n            }\n            return sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        var sum = 0l\n        for\
    \ (i <- lst) {\n            if (i.isNaN) {\n                continue\n       \
    \     }\n            if (i.isInfinite) {\n                continue\n         \
    \   }\n            if (i < 0) {\n                continue\n            }\n   \
    \         if (!i.isInteger) {\n                continue\n            }\n     \
    \       sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i * i\n             \
    \   }\n            }\n            sum\n        }", "        var sum = 0l\n   \
    \     for (i <- lst) {\n            if (i > 0 && i % 2 == 1) {\n             \
    \   sum += i * i\n            }\n        }\n        return sum", "        var\
    \ sum = 0l\n        for(i <- lst) {\n            if(i < 0) continue\n        \
    \    if(i % 2 == 1) sum += i * i\n        }\n        return sum", "        var\
    \ sum = 0l\n        for (i <- lst) {\n            if (i < 0) continue\n      \
    \      if (i % 2 == 1) sum += i * i\n        }\n        return sum", "       \
    \ if (lst.isEmpty()) return 0l\n        var sum = 0l\n        for (i <- lst.iterator())\
    \ {\n            if (i.isOdd()) sum += i * i\n        }\n        return sum",
  "        if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        var sum = 0l\n        for(var\
    \ i = 0; i < lst.length; i++) {\n            if(lst[i].isNaN()) continue\n   \
    \         if(lst[i].isInfinite()) continue\n            if(lst[i].isNegative())\
    \ continue\n            if(lst[i].toInt() % 2 != 0) {\n                sum +=\
    \ lst[i].toInt() * lst[i].toInt()\n            }\n        }\n        return sum",
  "        if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            return sum\n        }", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n   \
    \     for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        var sum = 0l\n        for\
    \ (i <- lst) {\n            if (i > 0) {\n                sum += i * i\n     \
    \       }\n        }\n        return sum", "        if (lst.isEmpty()) {\n   \
    \         0l\n        } else {\n            var sum = 0l\n            for (i <-\
    \ lst.iterator()) {\n                if (i.isOdd()) {\n                    sum\
    \ += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isInt()) {\n                    if (i.toInt() > 0) {\n         \
    \               sum += i.toInt() * i.toInt()\n                    }\n        \
    \        } else {\n                    sum += i.toLong() * i.toLong()\n      \
    \          }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i * i\n             \
    \   }\n            }\n            return sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        var sum\
    \ = 0l\n        for(var i = 0; i < lst.length; i++) {\n            if(lst[i] >\
    \ 0 && lst[i] % 2 == 1) {\n                sum += lst[i] * lst[i]\n          \
    \  }\n        }\n        return sum", "        if (lst.isEmpty()) {\n        \
    \    0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i.toLong * i.toLong\n        }\n        return sum",
  "        if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) {\n      \
    \      0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i.square()\n        }\n        return sum", "  \
    \      var sum = 0l\n        for(i <- lst) {\n            if(i < 0) continue\n\
    \            if(i % 2 == 1) sum += i * i\n        }\n        return sum", "  \
    \      if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) {\n      \
    \      0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for(i <- lst) {\n         \
    \   if(i > 0 && i % 2 == 1) {\n                sum += i * i\n            }\n \
    \       }\n        return sum", "        var sum = 0l\n        for (i <- lst)\
    \ {\n            if (i.isNaN) {\n                continue\n            }\n   \
    \         if (i < 0) {\n                continue\n            }\n            if\
    \ (!i.isInteger) {\n                continue\n            }\n            sum +=\
    \ i * i\n        }\n        return sum", "        if (lst.isEmpty()) return 0l\n\
    \        var sum = 0l\n        for (i <- lst.iterator()) {\n            if (i.isOdd())\
    \ sum += i.toLong * i.toLong\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            return sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n   \
    \             }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for (i <- lst.iterator()) {\n\
    \            if (i.isOdd()) {\n                sum += i.toLong * i.toLong\n  \
    \          }\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n   \
    \             }\n            }\n            return sum\n        }", "        if\
    \ (lst.isEmpty()) {\n            0l\n        } else {\n            var sum = 0l\n\
    \            for (i <- lst.iterator()) {\n                if (i.isOdd()) {\n \
    \                   sum += i.toLong * i.toLong\n                }\n          \
    \  }\n            sum\n        }", "        if (lst.isEmpty()) {\n           \
    \ 0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isInt()) {\n                    if (i.toInt() > 0)\
    \ {\n                        sum += i.toInt() * i.toInt()\n                  \
    \  }\n                } else {\n                    sum += i.toLong() * i.toLong()\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for (i <- lst) {\n        \
    \    if (i < 0) continue\n            if (i % 2 == 1) sum += i * i\n        }\n\
    \        return sum", "        if (lst.isEmpty()) return 0l\n        var sum =\
    \ 0l\n        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i\
    \ * i\n        }\n        return sum", "        var sum = 0l\n        for (i <-\
    \ lst) {\n            if (i > 0) {\n                sum += i * i\n           \
    \ }\n        }\n        return sum", "        if (lst.isEmpty()) {\n         \
    \   0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isInt()) {\n                    if (i.toInt() > 0) {\n     \
    \                   sum += i.toInt() * i.toInt()\n                    }\n    \
    \            } else {\n                    sum += i.toLong() * i.toLong()\n  \
    \              }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i * i\n                }\n            }\n            return sum\n   \
    \     }", "        var sum = 0l\n        for(var i = 0; i < lst.length; i++) {\n\
    \            if(lst[i] > 0 && lst[i] % 2 == 1) {\n                sum += lst[i]\
    \ * lst[i]\n            }\n        }\n        return sum", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isNaN()) continue\n            if (i < 0) continue\n           \
    \ if (!i.isInteger()) continue\n            sum += i.toLong * i.toLong\n     \
    \   }\n        return sum", "        if (lst.isEmpty()) {\n            0l\n  \
    \      } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i * i\n    \
    \            }\n            }\n            sum\n        }", "        var sum =\
    \ 0l\n        for (i <- lst) {\n            if (i < 0) continue\n            if\
    \ (i % 2 == 1) sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        var sum\
    \ = 0l\n        for (i <- lst) {\n            if (i < 0) continue\n          \
    \  if (i % 2 == 1) sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            return sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n   \
    \             }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for (i <- lst) {\n        \
    \    if (i > 0 && i % 2 == 1) {\n                sum += i * i\n            }\n\
    \        }\n        return sum", "        if (lst.isEmpty()) return 0l\n     \
    \   var sum = 0l\n        for (i <- lst.iterator()) {\n            if (i.isOdd())\
    \ sum += i * i\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n   \
    \     for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n   \
    \     for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        var sum = 0l\n        for(var\
    \ i = 0; i < lst.length; i++) {\n            if(lst[i] > 0) {\n              \
    \  sum += lst[i] * lst[i]\n            }\n        }\n        return sum", "  \
    \      if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i * i\n                }\n            }\n    \
    \        return sum\n        }", "        if (lst.isEmpty()) {\n            0l\n\
    \        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i * i\n    \
    \            }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isInt()) {\n                \
    \    if (i.toInt() > 0) {\n                        sum += i.toInt() * i.toInt()\n\
    \                    }\n                }\n            }\n            sum\n  \
    \      }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n \
    \           var sum = 0l\n            for (i <- lst.iterator()) {\n          \
    \      if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n    \
    \            }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i * i\n        }\n        return sum", "       \
    \ if (lst.isEmpty()) {\n            0l\n        } else {\n            var sum\
    \ = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        var sum = 0l\n        for (i\
    \ <- lst) {\n            if (i > 0) {\n                sum += i * i\n        \
    \    }\n        }\n        return sum", "        if (lst.isEmpty()) return 0l\n\
    \        var sum = 0l\n        for (i <- lst.iterator()) {\n            if (i.isOdd())\
    \ sum += i.toLong * i.toLong\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i * i\n\
    \        }\n        return sum", "        if (lst.isEmpty()) {\n            0l\n\
    \        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i * i\n    \
    \            }\n            }\n            return sum\n        }", "        if\
    \ (lst.isEmpty()) {\n            0l\n        } else {\n            var sum = 0l\n\
    \            for (i <- lst.iterator()) {\n                if (i.isOdd()) {\n \
    \                   sum += i.toLong * i.toLong\n                }\n          \
    \  }\n            sum\n        }", "        if (lst.isEmpty()) {\n           \
    \ 0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            return sum\n        }", "     \
    \   var sum = 0l\n        for(i <- lst) {\n            if(i > 0 && i % 2 == 1)\
    \ {\n                sum += i * i\n            }\n        }\n        return sum",
  "        var sum = 0l\n        for (i <- lst) {\n            if (i < 0) continue\n\
    \            if (i % 2 == 1) sum += i * i\n        }\n        return sum", " \
    \       if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) {\n      \
    \      0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            return sum\n\
    \        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n   \
    \     for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i * i\n                }\n\
    \            }\n            sum\n        }", "        if (lst.isEmpty()) {\n \
    \           0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isInt()) {\n                    if (i.toInt() > 0) {\n         \
    \               sum += i.toInt() * i.toInt()\n                    }\n        \
    \        }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isInt()) {\n                \
    \    if (i.toInt() > 0) {\n                        sum += i.toInt() * i.toInt()\n\
    \                    }\n                } else {\n                    sum += i\
    \ * i\n                }\n            }\n            sum\n        }", "      \
    \  var sum = 0l\n        for(i <- lst) {\n            if(i < 0) continue\n   \
    \         if(i % 2 == 1) sum += i * i\n        }\n        return sum", "     \
    \   if (lst.isEmpty()) {\n            0l\n        } else {\n            var sum\
    \ = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        var sum = 0l\n        for(i <-\
    \ lst) {\n            if(i.isNaN) continue\n            if(i.isInfinite) continue\n\
    \            if(i < 0) continue\n            if(!i.isInteger) continue\n     \
    \       sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i * i\n        }\n        return sum", "       \
    \ var sum = 0l\n        for (i <- lst) {\n            if (i > 0) {\n         \
    \       sum += i * i\n            }\n        }\n        return sum", "       \
    \ if (lst.isEmpty()) {\n            0l\n        } else {\n            var sum\
    \ = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) return 0l\n\
    \        var sum = 0l\n        for (i <- lst.iterator()) {\n            if (i.isOdd())\
    \ sum += i * i\n        }\n        return sum", "        var sum = 0l\n      \
    \  for (i <- lst) {\n            if (i > 0) {\n                sum += i * i\n\
    \            }\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i * i\n                }\n\
    \            }\n            return sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isInt()) {\n                \
    \    if (i.toInt() > 0) {\n                        sum += i.toInt() * i.toInt()\n\
    \                    }\n                }\n            }\n            sum\n  \
    \      }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n \
    \           var sum = 0l\n            for (i <- lst.iterator()) {\n          \
    \      if (i.isOdd()) {\n                    sum += i * i\n                }\n\
    \            }\n            sum\n        }", "        if (lst.isEmpty()) {\n \
    \           0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i * i\n                }\n\
    \            }\n            return sum\n        }", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i.toLong * i.toLong\n        }\n        return sum",
  "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n        for (i <- lst.iterator())\
    \ {\n            if (i.isOdd()) sum += i.toLong * i.toLong\n        }\n      \
    \  return sum", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i * i\n             \
    \   }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n   \
    \             }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i.toLong * i.toLong\n        }\n        return sum",
  "        if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i * i\n                }\n            }\n    \
    \        return sum\n        }", "        var sum = 0l\n        for (i <- lst)\
    \ {\n            if (i < 0) continue\n            if (i % 2 == 1) sum += i * i\n\
    \        }\n        return sum", "        if (lst.isEmpty()) {\n            0l\n\
    \        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isInt()) {\n                    if (i.toInt() > 0)\
    \ {\n                        sum += i.toInt() * i.toInt()\n                  \
    \  }\n                } else {\n                    sum += i.toLong() * i.toLong()\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            return sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isInt()) {\n                    if (i.toInt() > 0) {\n         \
    \               sum += i.toInt() * i.toInt()\n                    }\n        \
    \        }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            return sum\n        }", "     \
    \   if (lst.isEmpty()) {\n            0l\n        } else {\n            var sum\
    \ = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) {\n      \
    \      0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            return sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i * i\n                }\n\
    \            }\n            return sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            sum\n       \
    \ }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n      \
    \      var sum = 0l\n            for (i <- lst.iterator()) {\n               \
    \ if (i.isInt()) {\n                    if (i.toInt() > 0) {\n               \
    \         sum += i.toInt() * i.toInt()\n                    }\n              \
    \  }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isInt()) {\n                \
    \    if (i.toInt() > 0) {\n                        sum += i.toInt() * i.toInt()\n\
    \                    }\n                }\n            }\n            sum\n  \
    \      }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n \
    \           var sum = 0l\n            for (i <- lst.iterator()) {\n          \
    \      if (i.isInt()) {\n                    if (i.toInt() > 0) {\n          \
    \              sum += i.toInt() * i.toInt()\n                    }\n         \
    \       }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  return sum\n        }", "        if (lst.isEmpty()) {\n            0l\n   \
    \     } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i * i\n                }\n            }\n            sum\n        }",
  "        if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) {\n      \
    \      0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        return (lst.map(x\
    \ -> x * x).reduce(0l, (x, y) -> x + y))", "        if (lst.isEmpty()) {\n   \
    \         0l\n        } else {\n            var sum = 0l\n            for (i <-\
    \ lst.iterator()) {\n                if (i.isOdd()) {\n                    sum\
    \ += i * i\n                }\n            }\n            return sum\n       \
    \ }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n      \
    \      var sum = 0l\n            for (i <- lst.iterator()) {\n               \
    \ if (i.isOdd()) {\n                    sum += i * i\n                }\n    \
    \        }\n            return sum\n        }", "        if (lst.isEmpty()) return\
    \ 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n            if\
    \ (i.isOdd()) sum += i.toLong * i.toLong\n        }\n        return sum", "  \
    \      if (lst.isEmpty()) return 0l\n        var sum = 0l\n        for (i <- lst.iterator())\
    \ {\n            if (i.isOdd()) sum += i.toLong * i.toLong\n        }\n      \
    \  return sum", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i.toLong\
    \ * i.toLong\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) {\n            0l\n        } else {\n\
    \            var sum = 0l\n            for (i <- lst.iterator()) {\n         \
    \       if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n   \
    \             }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            return sum\n\
    \        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n   \
    \     for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i * i\n \
    \       }\n        return sum", "        var sum = 0l\n        for(i <- lst) {\n\
    \            if(i > 0 && i % 2 == 1) {\n                sum += i * i\n       \
    \     }\n        }\n        return sum", "        if (lst.isEmpty()) {\n     \
    \       0l\n        } else {\n            var sum = 0l\n            for (i <-\
    \ lst.iterator()) {\n                if (i.isOdd()) {\n                    sum\
    \ += i * i\n                }\n            }\n            sum\n        }", " \
    \       if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i.toLong * i.toLong\n                }\n     \
    \       }\n            sum\n        }", "        if (lst.isEmpty()) {\n      \
    \      0l\n        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for (i <- lst) {\n        \
    \    if (i > 0) {\n                sum += i * i\n            }\n        }\n  \
    \      return sum", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        var sum\
    \ = 0l\n        for (i <- lst) {\n            if (i > 0) {\n                sum\
    \ += i * i\n            }\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i * i\n                }\n            }\n            sum\n       \
    \ }", "        var sum = 0l\n        for (i <- lst) {\n            if (i.isNaN)\
    \ {\n                continue\n            }\n            if (i < 0) {\n     \
    \           continue\n            }\n            if (i % 2 == 1) {\n         \
    \       sum += i * i\n            }\n        }\n        return sum", "       \
    \ if (lst.isEmpty()) return 0l\n        return sum(map(x -> x * x, filter(x ->\
    \ x > 0 && x % 1 == 1, lst)))", "        if (lst.isEmpty()) {\n            0l\n\
    \        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n\
    \        for (i <- lst.iterator()) {\n            if (i.isNaN()) continue\n  \
    \          if (i < 0) continue\n            if (i % 2 == 0) continue\n       \
    \     sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ return 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n     \
    \       if (i.isOdd()) sum += i.toLong * i.toLong\n        }\n        return sum",
  "        if (lst.isEmpty()) {\n            0l\n        } else {\n            var\
    \ sum = 0l\n            for (i <- lst.iterator()) {\n                if (i.isOdd())\
    \ {\n                    sum += i * i\n                }\n            }\n    \
    \        return sum\n        }", "        if (lst.isEmpty()) {\n            0l\n\
    \        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for (i <- lst) {\n        \
    \    if (i > 0) {\n                sum += i * i\n            }\n        }\n  \
    \      return sum", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isInt()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        var sum\
    \ = 0l\n        for (i <- lst) {\n            if (i < 0) {\n                continue\n\
    \            }\n            if (i % 2 == 1) {\n                sum += i * i\n\
    \            }\n        }\n        return sum", "        if (lst.isEmpty()) {\n\
    \            0l\n        } else {\n            var sum = 0l\n            for (i\
    \ <- lst.iterator()) {\n                if (i.isOdd()) {\n                   \
    \ sum += i.toLong * i.toLong\n                }\n            }\n            sum\n\
    \        }", "        if (lst.isEmpty()) return 0l\n        var sum = 0l\n   \
    \     for (i <- lst.iterator()) {\n            if (i.isOdd()) sum += i * i\n \
    \       }\n        return sum", "        if (lst.isEmpty()) {\n            0l\n\
    \        } else {\n            var sum = 0l\n            for (i <- lst.iterator())\
    \ {\n                if (i.isOdd()) {\n                    sum += i * i\n    \
    \            }\n            }\n            sum\n        }", "        var sum =\
    \ 0l\n        for(i <- lst) {\n            if(i < 0) continue\n            if(i\
    \ % 2 == 1) sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        var sum = 0l\n        for(var i = 0; i < lst.length;\
    \ i++) {\n            if(lst[i].isNaN()) continue\n            if(lst[i].isInfinite())\
    \ continue\n            if(lst[i].isNegative()) continue\n            if(lst[i].isZero())\
    \ continue\n            if(lst[i].isInteger()) continue\n            sum += (lst[i]\
    \ * lst[i])\n        }\n        return sum", "        if (lst.isEmpty()) return\
    \ 0l\n        var sum = 0l\n        for (i <- lst.iterator()) {\n            if\
    \ (i.isOdd()) sum += i * i\n        }\n        return sum", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }", "        if (lst.isEmpty()) {\n            0l\n        } else\
    \ {\n            var sum = 0l\n            for (i <- lst.iterator()) {\n     \
    \           if (i.isOdd()) {\n                    sum += i.toLong * i.toLong\n\
    \                }\n            }\n            sum\n        }", "        if (lst.isEmpty())\
    \ {\n            0l\n        } else {\n            var sum = 0l\n            for\
    \ (i <- lst.iterator()) {\n                if (i.isOdd()) {\n                \
    \    sum += i.toLong * i.toLong\n                }\n            }\n          \
    \  sum\n        }"]
stop_tokens:
- "\n    }\n"

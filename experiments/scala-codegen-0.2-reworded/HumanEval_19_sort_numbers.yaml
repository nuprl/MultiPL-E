name: HumanEval_19_sort_numbers
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  \    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
  \ 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted from\
  \ smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n    // (\"\
  one three five\")\n    def sortNumbers(numbers : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortNumbers((\"\"\
  )).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        var numbers = numbers.split(\" \")\n        var sorted = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            if (number.equals(\"zero\")) {\n                sorted.append(\"\
    zero\")\n            } else if (number.equals(\"one\")) {\n                sorted.append(\"\
    one\")\n            } else if (number.equals(\"two\")) {\n                sorted.append(\"\
    two\")\n            } else if (number.equals(\"three\")) {\n                sorted.append(\"\
    three\")\n            } else if (number.equals(\"four\")) {\n                sorted.append(\"\
    four\")\n            } else if (number.equals(\"five\")) {\n                sorted.append(\"\
    five\")\n            } else if (number.equals(\"six\")) {\n                sorted.append(\"\
    six\")\n            } else if (number.equals(\"seven\")) {\n                sorted.append(\"\
    seven\")\n            } else if (number.equals(\"eight\")) {\n               \
    \ sorted.append(\"eight\")\n            } else if (number.equals(\"nine\")) {\n\
    \                sorted.append(\"nine\")\n            }\n        }\n        sorted.toList",
  "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[Int]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.toInt\n            sorted = sorted.append(number)\n\
    \        }\n        sorted.sort(Comparator.comparingInt(i -> i))\n        var\
    \ sortedNumbers = mutable.StringBuilder()\n        for (i <- 0 until sorted.length)\
    \ {\n            var number = sorted[i]\n            sortedNumbers.append(number)\n\
    \        }\n        sortedNumbers.toString", "        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if (i < numbersListSorted.length - 1) {\n\
    \                numbersListSortedString += \" \"\n            }\n        }\n\
    \        return numbersListSortedString\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from smallest to largest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"one three five\")\n    def\
    \ sortNumbers2(numbers : String) : String = {\n        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if (i < numbersListSorted.length - 1) {\n\
    \                numbersListSortedString += \" \"\n            }\n        }\n\
    \        return numbersListSortedString\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from smallest to largest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"one three five\")\n    def\
    \ sortNumbers3(numbers : String) : String = {\n        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if", "        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = numbersList.sort(Comparator.comparing(String::length).reversed())\n\
    \        var numbersListSortedString = \"\"\n        for (i <- 0 until numbersListSorted.length)\
    \ {\n            numbersListSortedString += numbersListSorted[i]\n        }\n\
    \        return numbersListSortedString", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[Int]()\n        for (i <- 0 until numbers.length)\
    \ {\n            var number = numbers[i]\n            var number = number.toInt\n\
    \            sorted.append(number)\n        }\n        sorted.sort(Comparator[Int](_\
    \ <=> _))\n        var sortedStr = \"\"\n        for (i <- 0 until sorted.length)\
    \ {\n            var number = sorted[i]\n            sortedStr += number.toString\n\
    \            if (i < sorted.length - 1) {\n                sortedStr += \" \"\n\
    \            }\n        }\n        return sortedStr", "        var numbers_sorted\
    \ = numbers.split(\" \")\n        var numbers_sorted_sorted = sort(numbers_sorted)\n\
    \        var numbers_sorted_sorted_joined = join(numbers_sorted_sorted, \" \"\
    )\n        return numbers_sorted_sorted_joined\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from largest to smallest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"three five one\")\n    def\
    \ sortNumbers_reverse(numbers : String) : String = {\n        var numbers_sorted\
    \ = numbers.split(\" \")\n        var numbers_sorted_sorted = sort(numbers_sorted,\
    \ reverse = true)\n        var numbers_sorted_sorted_joined = join(numbers_sorted_sorted,\
    \ \" \")\n        return numbers_sorted_sorted_joined\n    }\n\n    // Input is\
    \ a space-delimited string of numberals from 'zero' to 'nine'.\n    // Valid choices\
    \ are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and\
    \ 'nine'.\n    // Return the string with numbers sorted from smallest to largest\n\
    \    // >>> sortNumbers((\"three one five\"))\n    // (\"one three five\")\n \
    \   def sortNumbers_reverse_reverse(numbers : String) : String = {\n        var\
    \ numbers_sorted = numbers.split(\" \")\n        var numbers_sorted_sorted = sort(numbers_sorted,\
    \ reverse = true)\n        var numbers_sorted_sorted_sorted = sort(numbers_sorted_sorted,\
    \ reverse = true)\n        var numbers_sorted_sorted_sorted_joined = join(numbers_sorted_sorted_sorted,\
    \ \" \")\n        return numbers_sorted_sorted_sorted_joined\n    }\n\n    //\
    \ Input is a space-delimited string of numberals from 'zero' to", "        var\
    \ numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result",
  "        numbers.split(\" \").sort((a, b) -> {\n            var aInt = Integer.parseInt(a)\n\
    \            var bInt = Integer.parseInt(b)\n            if (aInt < bInt) return\
    \ -1\n            if (aInt > bInt) return 1\n            return 0\n        }).mkString(\"\
    \ \")", "        var numbersList = numbers.split(\" \")\n        var sortedList\
    \ = numbersList.sort(Comparator.comparing(Integer::parseInt))\n        var sortedString\
    \ = \"\"\n        for (i <- 0 until sortedList.length) {\n            sortedString\
    \ += sortedList[i] + \" \"\n        }\n        sortedString = sortedString.trim()\n\
    \        return sortedString", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ sort(numbersList)\n        var result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n   \
    \ // (\"one three five\")\n    def sortNumbers2(numbers : String) : String = {\n\
    \        var numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n   \
    \ // (\"one three five\")\n    def sortNumbers3(numbers : String) : String = {\n\
    \        var numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n   \
    \ // (\"one three five\")\n    def sort", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[Int]()\n        for (i <- 0 until numbers.length)\
    \ {\n            var number = numbers[i]\n            var number = number.toInt\n\
    \            sorted = sorted.append(number)\n        }\n        sorted.sort(Comparator.comparing(i\
    \ -> i))\n        var sortedString = \"\"\n        for (i <- 0 until sorted.length)\
    \ {\n            var number = sorted[i]\n            sortedString = sortedString\
    \ + number.toString\n        }\n        sortedString", "        numbers.split(\"\
    \ \").sort((a, b) -> {\n            var aInt = Integer.parseInt(a)\n         \
    \   var bInt = Integer.parseInt(b)\n            if (aInt < bInt) return -1\n \
    \           if (aInt > bInt) return 1\n            return 0\n        }).mkString(\"\
    \ \")", "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedNumbers = mutable.List[String]()\n        for (i <- 0\
    \ until numbersList.length) {\n            var number = numbersList[i]\n     \
    \       var numberInt = number.toInt\n            if (numberInt < 10) {\n    \
    \            sortedNumbers = sortedNumbers.append(number)\n            }\n   \
    \     }\n        sortedNumbers.sort(Comparator.comparingInt(String::toInt))\n\
    \        sortedNumbers.foreach(println)\n        sortedNumbers.foreach(println)\n\
    \        return sortedNumbers.mkString(\" \")", "        numbers.split(\" \").sort((a,\
    \ b) -> {\n            var ai = a.toInt\n            var bi = b.toInt\n      \
    \      if (ai < bi) return -1\n            if (ai > bi) return 1\n           \
    \ return 0\n        }).mkString(\" \")", "        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if (i < numbersListSorted.length - 1) {\n\
    \                numbersListSortedString += \" \"\n            }\n        }\n\
    \        return numbersListSortedString\n    }\n\n    // Sort a list of numbers\
    \ from smallest to largest\n    // >>> sort([3, 1, 5])\n    // [1, 3, 5]\n   \
    \ def sort(numbers : Array[Int]) : Array[Int] = {\n        var numbersList = numbers\n\
    \        var numbersListSorted = numbersList.toSeq().sort(Comparator.comparingInt(i\
    \ -> i))\n        return numbersListSorted.toList()", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[Int]()\n        for (i <- 0 until numbers.length)\
    \ {\n            sorted.append(Integer.parseInt(numbers[i]))\n        }\n    \
    \    sorted.sort(Comparator.comparing(i -> i))\n        var result = mutable.StringBuilder()\n\
    \        for (i <- 0 until sorted.length) {\n            result.append(sorted[i])\n\
    \            if (i < sorted.length - 1) {\n                result.append(\" \"\
    )\n            }\n        }\n        return result.toString()", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbers = numbers.split(\" \")\n        var sorted = numbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var result = \"\"\n        for (i <- 0 to sorted.length - 1) {\n    \
    \        result += sorted[i] + \" \"\n        }\n        return result", "   \
    \     var numbersList = numbers.split(\" \")\n        var sortedNumbers = numbersList.sort((a,\
    \ b) -> {\n            var aNum = Integer.parseInt(a)\n            var bNum =\
    \ Integer.parseInt(b)\n            return aNum.compareTo(bNum)\n        })\n \
    \       var sortedString = sortedNumbers.mkString(\" \")\n        return sortedString",
  "        var numbersList = numbers.split(\" \")\n        var numbersListSorted =\
    \ sort(numbersList)\n        var numbersListSortedString = \"\"\n        for (i\
    \ <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if (i < numbersListSorted.length - 1) {\n\
    \                numbersListSortedString += \" \"\n            }\n        }\n\
    \        return numbersListSortedString\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from smallest to largest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"one three five\")\n    def\
    \ sortNumbers2(numbers : String) : String = {\n        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if (i < numbersListSorted.length - 1) {\n\
    \                numbersListSortedString += \" \"\n            }\n        }\n\
    \        return numbersListSortedString\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from smallest to largest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"one three five\")\n    def\
    \ sortNumbers3(numbers : String) : String = {\n        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted = sorted.append(numbers[i])\n\
    \        }\n        sorted.sort(Comparator.comparing(String::toString))\n    \
    \    sorted.foreach(println(\" \"))\n        return sorted.mkString(\" \")", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result",
  '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ sort(numbersList)\n        var result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i] + \" \"\n        }\n        return result",
  '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\" \", \"\")\n            var number\
    \ = number.replaceAll(\"[0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    \ \", \"\")\n            var number = number.replaceAll(\"[0-9]\", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\" \", \"\")\n            var number\
    \ = number.replaceAll(\"[0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    \ \", \"\")\n            var number = number.replaceAll(\"[0-9]\", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\",", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', '        numbers.split("
    ").sort(Comparator.comparingInt(String::length)).mkString(" ")', '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"^[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[", "        var numbers_ = numbers.split(\"\
    \ \")\n        var numbers_ = numbers_.map(x => x.toInt)\n        var numbers_\
    \ = numbers_.sortBy(x => x)\n        var numbers_ = numbers_.map(x => x.toString)\n\
    \        var numbers_ = numbers_.mkString(\" \")\n        return numbers_", " \
    \       numbers.split(\" \").sort((a, b) -> {\n            var aInt = Integer.parseInt(a)\n\
    \            var bInt = Integer.parseInt(b)\n            if (aInt < bInt) return\
    \ -1\n            if (aInt > bInt) return 1\n            return 0\n        }).mkString(\"\
    \ \")", "        var numbersList = numbers.split(\" \")\n        var sortedList\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        var\
    \ result = \"\"\n        for (i <- 0 until sortedList.length) {\n            result\
    \ += sortedList[i]\n            if (i < sortedList.length - 1) {\n           \
    \     result += \" \"\n            }\n        }\n        return result", "   \
    \     var numbers = numbers.split(\" \")\n        var sorted = numbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.mkString(\" \")", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedNumbers = sort(numbersList)\n        var result = \"\"\
    \n        for (i <- 0 until sortedNumbers.length) {\n            result += sortedNumbers[i]\n\
    \            if (i < sortedNumbers.length - 1) {\n                result += \"\
    \ \"\n            }\n        }\n        return result\n    }\n\n    // Sort a\
    \ list of numbers\n    def sort(numbers : List[String]) : List[String] = {\n \
    \       var sortedNumbers = numbers.toJavaList().sort(Comparator.comparing(String::toString))\n\
    \        return sortedNumbers.toList()", "        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i] + \" \"\n        }\n        numbersListSortedString\
    \ = numbersListSortedString.trim()\n        return numbersListSortedString", " \
    \       var numbers = numbers.split(\" \")\n        var sorted = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sortedNumbers =\
    \ numbers.sort(Comparator.comparingInt(Integer::parseInt))\n        sortedNumbers.mkString(\"\
    \ \")", '        numbers.split(" ").sort((a, b) => a.toInt - b.toInt).mkString("
    ")', "        var numbers_ = numbers.split(\" \")\n        var numbers_ = numbers_.map(x\
    \ => x.toInt)\n        var numbers_ = numbers_.sortBy(x => x)\n        var numbers_\
    \ = numbers_.map(x => x.toString)\n        var numbers_ = numbers_.mkString(\"\
    \ \")\n        return numbers_", "        var numbersList = numbers.split(\" \"\
    )\n        var sortedNumbers = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var sortedString = \"\"\n        for(i <- 0 until sortedNumbers.length)\
    \ {\n            sortedString += sortedNumbers[i]\n            if(i < sortedNumbers.length\
    \ - 1) {\n                sortedString += \" \"\n            }\n        }\n  \
    \      return sortedString", "        var numbersList = numbers.split(\" \")\n\
    \        var sortedNumbers = sort(numbersList)\n        var sortedNumbersString\
    \ = \"\"\n        for (i <- 0 until sortedNumbers.length) {\n            sortedNumbersString\
    \ += sortedNumbers[i]\n            if (i < sortedNumbers.length - 1) {\n     \
    \           sortedNumbersString += \" \"\n            }\n        }\n        return\
    \ sortedNumbersString\n    }\n\n    // Input is a space-delimited string of numberals\
    \ from 'zero' to 'nine'.\n    // Return the string with numbers sorted from largest\
    \ to smallest\n    // >>> sortNumbers((\"three one five\"))\n    // (\"three five\
    \ one\")\n    def sortNumbersReverse(numbers : String) : String = {\n        var\
    \ numbersList = numbers.split(\" \")\n        var sortedNumbers = sortReverse(numbersList)\n\
    \        var sortedNumbersString = \"\"\n        for (i <- 0 until sortedNumbers.length)\
    \ {\n            sortedNumbersString += sortedNumbers[i]\n            if (i <\
    \ sortedNumbers.length - 1) {\n                sortedNumbersString += \" \"\n\
    \            }\n        }\n        return sortedNumbersString\n    }\n\n    //\
    \ Input is a space-delimited string of numberals from 'zero' to 'nine'.\n    //\
    \ Return the string with numbers sorted from smallest to largest\n    // >>> sortNumbers((\"\
    three one five\"))\n    // (\"one three five\")\n    def sortNumbersWithMap(numbers\
    \ : String) : String = {\n        var numbersList = numbers.split(\" \")\n   \
    \     var sortedNumbers = sortWithMap(numbersList)\n        var sortedNumbersString\
    \ = \"\"\n        for (i <- 0 until sortedNumbers.length) {\n            sortedNumbersString\
    \ += sortedNumbers[i]\n            if (i < sortedNumbers.length - 1) {\n     \
    \           sortedNumbersString += \" \"\n            }\n        }\n        return\
    \ sortedNumbersString\n    }\n\n    // Input is a space-delimited string of numberals\
    \ from 'zero' to 'nine'.\n    // Return the string with numbers sorted from largest\
    \ to smallest\n    // >>> sortNumbers((\"three one five\"))\n    // (\"three five\
    \ one\")\n    def sortNumbersWithReduce(numbers : String) : String =", "     \
    \   var numbersList = numbers.split(\" \")\n        var sortedNumbersList = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var sortedNumbers = sortedNumbersList.mkString(\" \")\n        return\
    \ sortedNumbers", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        var result\
    \ = \"\"\n        for (i <- 0 to sortedList.length - 1) {\n            result\
    \ += sortedList[i] + \" \"\n        }\n        return result", "        var numbers\
    \ = numbers.split(\" \")\n        var sorted = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort((a, b) => _.toInt(a) - _.toInt(b)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ sort(numbersList)\n        var result = \"\"\n        for(i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from largest to smallest\n    // >>> sortNumbers((\"three one five\"))\n   \
    \ // (\"three five one\")\n    def sortNumbersReverse(numbers : String) : String\
    \ = {\n        var numbersList = numbers.split(\" \")\n        var sortedList\
    \ = sortReverse(numbersList)\n        var result = \"\"\n        for(i <- 0 until\
    \ sortedList.length) {\n            result += sortedList[i] + \" \"\n        }\n\
    \        return result\n    }\n\n    // Input is a space-delimited string of numberals\
    \ from 'zero' to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string\
    \ with numbers sorted from smallest to largest\n    // >>> sortNumbers((\"three\
    \ one five\"))\n    // (\"one three five\")\n    def sortNumbersWithMap(numbers\
    \ : String) : String = {\n        var numbersList = numbers.split(\" \")\n   \
    \     var sortedList = sortWithMap(numbersList)\n        var result = \"\"\n \
    \       for(i <- 0 until sortedList.length) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from largest to smallest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"", "        var numbers_sorted\
    \ = numbers.split(\" \")\n        numbers_sorted.sort()\n        numbers_sorted.reverse()\n\
    \        var numbers_sorted_string = \"\"\n        for(i <- 0 to (numbers_sorted.length\
    \ - 1)) {\n            numbers_sorted_string += numbers_sorted[i] + \" \"\n  \
    \      }\n        numbers_sorted_string += numbers_sorted[numbers_sorted.length\
    \ - 1]\n        return numbers_sorted_string", "        var numbers_ = numbers.split(\"\
    \ \")\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).toList\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt).toList\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).toList\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt).toList\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).toList\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt).toList\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).toList\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt).toList\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).toList\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt).toList\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).toList\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt).toList\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    ^0+\", \"\")\n            var number = number.replaceAll(\"^[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+$\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n          \
    \  var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number", "        val numbersList = numbers.split(\" \")\n        val\
    \ sortedList = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sortedList.mkString(\" \")", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedNumbers = numbersList.sort((a, b) -> {\n            var\
    \ aInt = Integer.parseInt(a)\n            var bInt = Integer.parseInt(b)\n   \
    \         if (aInt < bInt) return -1\n            if (aInt > bInt) return 1\n\
    \            return 0\n        })\n        var result = \"\"\n        for (i <-\
    \ 0 to sortedNumbers.length - 1) {\n            result += sortedNumbers[i] + \"\
    \ \"\n        }\n        return result", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = sort(numbersList)\n        var result = \"\"\n\
    \        for (i <- 0 until sortedList.length) {\n            result = result +\
    \ sortedList[i] + \" \"\n        }\n        return result\n    }\n\n    // Sort\
    \ a list of strings\n    def sort(list : List[String]) : List[String] = {\n  \
    \      var sortedList = list.toList()\n        sortedList.sort()\n        return\
    \ sortedList", "        var numbers = numbers.split(\" \")\n        var sorted\
    \ = mutable.List[String]()\n        for (i <- 0 until numbers.length) {\n    \
    \        var number = numbers[i]\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"^0+\", \"\")\n \
    \           var number = number.replaceAll(\"^[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\",", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        numbers.split(\"\
    \ \").sort((a, b) -> {\n            int ai = Integer.parseInt(a)\n           \
    \ int bi = Integer.parseInt(b)\n            return ai - bi\n        }).mkString(\"\
    \ \")", "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted = sorted.append(numbers[i])\n\
    \        }\n        sorted.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"$\"\
    ))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(println(\"$\"))\n        sorted.foreach(println(\"\
    $\"))\n        sorted.foreach(", "        var numbersList = numbers.split(\" \"\
    )\n        var sortedNumbers = mutable.ListBuffer[String]()\n        for (i <-\
    \ 0 until numbersList.length) {\n            var number = numbersList[i]\n   \
    \         var numberInt = number.toInt\n            if (numberInt < 10) {\n  \
    \              sortedNumbers.append(number)\n            } else {\n          \
    \      var numberIntInt = numberInt.toInt\n                var numberIntIntInt\
    \ = numberIntInt.toInt\n                if (numberIntIntInt < numberIntInt) {\n\
    \                    sortedNumbers.append(number)\n                }\n       \
    \     }\n        }\n        sortedNumbers.toList", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[Int]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted.append(Integer.parseInt(numbers[i]))\n\
    \        }\n        sorted.sort(Comparator.comparing(i -> i))\n        var result\
    \ = mutable.StringBuilder()\n        for (i <- 0 until sorted.length) {\n    \
    \        result.append(sorted[i])\n            if (i < sorted.length - 1) {\n\
    \                result.append(\" \")\n            }\n        }\n        return\
    \ result.toString()", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        sortedNumbers.mkString(\"\
    \ \")\n    }\n\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers2((\"three one five\"\
    ))\n    // (\"one three five\")\n    def sortNumbers2(numbers : String) : String\
    \ = {\n        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        sortedNumbers.mkString(\"\
    \ \")\n    }\n\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers3((\"three one five\"\
    ))\n    // (\"one three five\")\n    def sortNumbers3(numbers : String) : String\
    \ = {\n        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        sortedNumbers.mkString(\"\
    \ \")\n    }\n\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers4((\"three one five\"\
    ))\n    // (\"one three five\")\n    def sortNumbers4(numbers : String) : String\
    \ = {\n        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n", "       \
    \ val numbersList = numbers.split(\" \")\n        val sortedList = sort(numbersList)\n\
    \        val result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Sort a list of numbers from smallest to largest\n    def sort(numbers\
    \ : List[String]) : List[String] = {\n        val sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            val number = numbers[i]\n\
    \            if (number.equals(\"zero\")) {\n                sorted.append(\"\
    zero\")\n            } else if (number.equals(\"one\")) {\n                sorted.append(\"\
    one\")\n            } else if (number.equals(\"two\")) {\n                sorted.append(\"\
    two\")\n            } else if (number.equals(\"three\")) {\n                sorted.append(\"\
    three\")\n            } else if (number.equals(\"four\")) {\n                sorted.append(\"\
    four\")\n            } else if (number.equals(\"five\")) {\n                sorted.append(\"\
    five\")\n            } else if (number.equals(\"six\")) {\n                sorted.append(\"\
    six\")\n            } else if (number.equals(\"seven\")) {\n                sorted.append(\"\
    seven\")\n            } else if (number.equals(\"eight\")) {\n               \
    \ sorted.append(\"eight\")\n            } else if (number.equals(\"nine\")) {\n\
    \                sorted.append(\"nine\")\n            }\n        }\n        return\
    \ sorted", "        var numbers = numbers.split(\" \")\n        var sorted = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\" \", \"\")\n            var number\
    \ = number.replaceAll(\"[0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    \ \", \"\")\n            var number = number.replaceAll(\"[0-9]\", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\" \", \"\")\n            var number\
    \ = number.replaceAll(\"[0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    \ \", \"\")\n            var number = number.replaceAll(\"[0-9]\", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]", "      \
    \  var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted = sorted.append(numbers[i])\n\
    \        }\n        sorted.sort(Comparator.comparingInt(Integer.parseInt))\n \
    \       sorted.foreach(println(\" \" + _))", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedNumbers = mutable.ListBuffer[String]()\n        for (i\
    \ <- 0 until numbersList.length) {\n            var number = numbersList.apply(i)\n\
    \            var numberInt = number.toInt\n            if (numberInt < 10) {\n\
    \                sortedNumbers.append(number)\n            }\n        }\n    \
    \    sortedNumbers.sort()\n        sortedNumbers.foreach(x => println(x))\n  \
    \      return sortedNumbers.mkString(\" \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers_sorted = numbers.split(\" \")\n        var numbers_sorted_sorted\
    \ = sort(numbers_sorted)\n        var numbers_sorted_sorted_joined = join(numbers_sorted_sorted,\
    \ \" \")\n        numbers_sorted_sorted_joined", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted.append(numbers[i])\n\
    \        }\n        sorted.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.foreach(println(\" \" + _))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(", "        var numbers = numbers.split(\" \")\n\
    \        var sorted = mutable.List[String]()\n        for (i <- 0 until numbers.length)\
    \ {\n            sorted = sorted.append(numbers[i])\n        }\n        sorted.sort(Comparator.comparing(String::toString))\n\
    \        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\" \"\
    ))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println(\" \"))\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[String]()\n        for (i <- 0 until\
    \ numbers.length) {\n            var number = numbers[i]\n            var index\
    \ = mutable.List[String]()\n            for (j <- 0 until sorted.length) {\n \
    \               var num = sorted[j]\n                if (num.toInt < number.toInt)\
    \ {\n                    index.append(num)\n                } else {\n       \
    \             index.append(number)\n                    break\n              \
    \  }\n            }\n            if (index.length == 0) {\n                index.append(number)\n\
    \            }\n            sorted.appendAll(index)\n        }\n        sorted.foreach(println(\"\
    \ \"))\n        return sorted.mkString(\" \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        var\
    \ result = \"\"\n        for(var i = 0; i < sortedNumbers.length; i++) {\n   \
    \         result += sortedNumbers[i] + \" \"\n        }\n        return result",
  "        var numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from largest to smallest\n    // >>> sortNumbers(\"three one five\")\n    //\
    \ (\"three five one\")\n    def sortNumbers2(numbers : String) : String = {\n\
    \        var numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from smallest to largest\n    // >>> sortNumbers(\"three one five\")\n    //\
    \ (\"one three five\")\n    def sortNumbers3(numbers : String) : String = {\n\
    \        var numbersList = numbers.split(\" \")\n        var sortedList = sort(numbersList)\n\
    \        var result = \"\"\n        for (i <- 0 until sortedList.length) {\n \
    \           result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from largest to smallest\n    // >>> sortNumbers(\"three one five\")\n    //\
    \ (\"three five one\")\n    def sortNumbers4(", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers_ = numbers.split(\" \")\n        var numbers_ = numbers_.map(x\
    \ => x.toInt)\n        var numbers_ = numbers_.sortBy(x => x)\n        var numbers_\
    \ = numbers_.map(x => x.toString)\n        var numbers_ = numbers_.mkString(\"\
    \ \")\n        return numbers_", "        var numbersList = numbers.split(\" \"\
    )\n        var sortedList = sort(numbersList)\n        var result = \"\"\n   \
    \     for(i <- 0 to sortedList.length - 1) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var sortedString = sortedList.mkString(\" \")\n        return sortedString",
  "        var numbers_ = numbers.split(\" \")\n        var numbers_sorted = sort(numbers_)\n\
    \        var numbers_sorted_str = \"\"\n        for (i <- 0 until numbers_sorted.length)\
    \ {\n            numbers_sorted_str += numbers_sorted[i]\n        }\n        numbers_sorted_str",
  "        var numbersList = numbers.split(\" \")\n        var sortedList = numbersList.sort((a,\
    \ b) -> {\n            var aNum = Integer.parseInt(a)\n            var bNum =\
    \ Integer.parseInt(b)\n            if (aNum < bNum) return -1\n            if\
    \ (aNum > bNum) return 1\n            return 0\n        })\n        var result\
    \ = \"\"\n        for (i <- 0 until sortedList.length) {\n            result +=\
    \ sortedList[i]\n            if (i < sortedList.length - 1) result += \" \"\n\
    \        }\n        return result", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ mutable.List[String]()\n        for (i <- 0 until numbersList.length) {\n  \
    \          var number = numbersList[i]\n            var numberInt = number.toInt\n\
    \            if (numberInt < 10) {\n                sortedList = sortedList.append(number)\n\
    \            }\n        }\n        sortedList.sort(Comparator[String] {\n    \
    \        def compare(a, b) : Int = {\n                var aInt = a.toInt\n   \
    \             var bInt = b.toInt\n                if (aInt < bInt) {\n       \
    \             return -1\n                } else if (aInt > bInt) {\n         \
    \           return 1\n                } else {\n                    return 0\n\
    \                }\n            }\n        })\n        var result = \"\"\n   \
    \     for (i <- 0 until sortedList.length) {\n            result = result + sortedList[i]\
    \ + \" \"\n        }\n        return result", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[String]()\n        for (i <- 0 until\
    \ numbers.length) {\n            var number = numbers[i]\n            var number\
    \ = number.toLowerCase\n            var number = number.replaceAll(\"[^0-9]\"\
    , \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n      \
    \      var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n        var\
    \ sortedNumbersString = sortedNumbers.mkString(\" \")\n        return sortedNumbersString",
  "        var numbersList = numbers.split(\" \")\n        var sortedNumbers = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sortedNumbers.reduce(\"\", (a, b) -> a + b)", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbersList = numbers.split(\" \")\n        var sortedNumbers = mutable.List[String]()\n\
    \        for (i <- 0 until numbersList.length) {\n            var number = numbersList[i]\n\
    \            var numberInt = Integer.parseInt(number)\n            sortedNumbers\
    \ = sortedNumbers.append(number)\n        }\n        sortedNumbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var sortedString = \"\"\n        for (i <- 0 until sortedNumbers.length)\
    \ {\n            var number = sortedNumbers[i]\n            sortedString = sortedString.concat(number)\n\
    \            if (i < sortedNumbers.length - 1) {\n                sortedString\
    \ = sortedString.concat(\" \")\n            }\n        }\n        return sortedString",
  "        var numbers_ = numbers.split(\" \")\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt).map(i -> \"\" + i)\n \
    \       var numbers_ = numbers_.mkString(\" \")\n        return numbers_", " \
    \       var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var index = i\n            for (j <- i + 1 until numbers.length)\
    \ {\n                if (numbers[j].toInt() < number.toInt()) {\n            \
    \        index = j\n                }\n            }\n            sorted = sorted.insert(index,\
    \ number)\n            numbers = numbers.remove(index)\n        }\n        sorted.foreach(println(\"\
    \ \"))\n        sorted.foreach(println())\n        return \"\".join(sorted)",
  '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = numbersList.sort(Comparator.comparing(String::length).reversed())\n      \
    \  sortedNumbers.reduce(\"\", (a, b) -> a + b)", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = mutable.List[Int]()\n        for (i <- 0 until\
    \ numbersList.length) {\n            var number = numbersList[i]\n           \
    \ var numberInt = number.toInt\n            if (numberInt >= 0 && numberInt <=\
    \ 9) {\n                sortedList = sortedList.append(numberInt)\n          \
    \  }\n        }\n        sortedList.sort(Comparator.comparingInt(x -> x))\n  \
    \      var sortedNumbers = mutable.StringBuilder()\n        for (i <- 0 until\
    \ sortedList.length) {\n            var number = sortedList[i]\n            sortedNumbers.append(number)\n\
    \        }\n        return sortedNumbers.toString", "        var numbersList =\
    \ numbers.split(\" \")\n        var sortedList = sort(numbersList)\n        var\
    \ sortedString = \"\"\n        for (i <- 0 until sortedList.length) {\n      \
    \      sortedString += sortedList(i) + \" \"\n        }\n        sortedString\
    \ = sortedString.trim()\n        return sortedString", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\",", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = sort(numbersList)\n        var result = \"\"\n\
    \        for (i <- 0 until sortedList.length) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result\n    }\n\n    // Sort a list of numbers\
    \ from smallest to largest\n    // >>> sort([3, 1, 5])\n    // [1, 3, 5]\n   \
    \ def sort(numbers : List[Int]) : List[Int] = {\n        var sorted = numbers.toSeq().sort(Comparator.comparingInt(x\
    \ -> x))\n        return sorted.toList()", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = sort(numbersList)\n        var result = \"\"\n\
    \        for (i <- 0 until sortedList.length) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result\n    }\n\n    // Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    // Valid choices are 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n\
    \    // Return the string with numbers sorted from largest to smallest\n    //\
    \ >>> sortNumbers((\"three one five\"))\n    // (\"three five one\")\n    def\
    \ sortNumbersReverse(numbers : String) : String = {\n        var numbersList =\
    \ numbers.split(\" \")\n        var sortedList = sortReverse(numbersList)\n  \
    \      var result = \"\"\n        for (i <- 0 until sortedList.length) {\n   \
    \         result += sortedList[i] + \" \"\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
    \ from smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n   \
    \ // (\"one three five\")\n    def sortNumbersWithMap(numbers : String) : String\
    \ = {\n        var numbersList = numbers.split(\" \")\n        var sortedList\
    \ = sortWithMap(numbersList)\n        var result = \"\"\n        for (i <- 0 until\
    \ sortedList.length) {\n            result += sortedList[i] + \" \"\n        }\n\
    \        return result\n    }\n\n    // Input is a space-delimited string of numberals\
    \ from 'zero' to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string\
    \ with numbers sorted from largest to smallest\n    // >>> sortNumbers((\"three\
    \ one five\"))\n    // (\"", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted = sorted.append(numbers[i])\n\
    \        }\n        sorted.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.foreach(x => println(x))\n        sorted.foreach(x => println(x))\n\
    \        return sorted.mkString(\" \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\" \", \"\")\n            var number\
    \ = number.replaceAll(\"[0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    \ \", \"\")\n            var number = number.replaceAll(\"[0-9]\", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\" \", \"\")\n            var number\
    \ = number.replaceAll(\"[0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    \ \", \"\")\n            var number = number.replaceAll(\"[0-9]\", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\",", "   \
    \     var numbers = numbers.split(\" \")\n        var sorted = numbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.mkString(\" \")", "        var numbers = numbers.split(\" \")\n\
    \        var numbers = mutable.ListBuffer[String]()\n        for (i <- 0 until\
    \ numbers.length) {\n            var number = numbers.get(i)\n            if (number.equals(\"\
    zero\")) {\n                numbers.append(\"zero\")\n            } else if (number.equals(\"\
    one\")) {\n                numbers.append(\"one\")\n            } else if (number.equals(\"\
    two\")) {\n                numbers.append(\"two\")\n            } else if (number.equals(\"\
    three\")) {\n                numbers.append(\"three\")\n            } else if\
    \ (number.equals(\"four\")) {\n                numbers.append(\"four\")\n    \
    \        } else if (number.equals(\"five\")) {\n                numbers.append(\"\
    five\")\n            } else if (number.equals(\"six\")) {\n                numbers.append(\"\
    six\")\n            } else if (number.equals(\"seven\")) {\n                numbers.append(\"\
    seven\")\n            } else if (number.equals(\"eight\")) {\n               \
    \ numbers.append(\"eight\")\n            } else if (number.equals(\"nine\")) {\n\
    \                numbers.append(\"nine\")\n            }\n        }\n        numbers.sort()\n\
    \        var result = mutable.ListBuffer[String]()\n        for (i <- 0 until\
    \ numbers.length) {\n            result.append(numbers.get(i))\n        }\n  \
    \      return result.toString()", "        var numbers = numbers.split(\" \")\n\
    \        var sorted = mutable.ListBuffer[String]()\n        for (i <- 0 until\
    \ numbers.length) {\n            var number = numbers[i]\n            if (number.equals(\"\
    zero\")) {\n                sorted.append(\"zero\")\n            } else if (number.equals(\"\
    one\")) {\n                sorted.append(\"one\")\n            } else if (number.equals(\"\
    two\")) {\n                sorted.append(\"two\")\n            } else if (number.equals(\"\
    three\")) {\n                sorted.append(\"three\")\n            } else if (number.equals(\"\
    four\")) {\n                sorted.append(\"four\")\n            } else if (number.equals(\"\
    five\")) {\n                sorted.append(\"five\")\n            } else if (number.equals(\"\
    six\")) {\n                sorted.append(\"six\")\n            } else if (number.equals(\"\
    seven\")) {\n                sorted.append(\"seven\")\n            } else if (number.equals(\"\
    eight\")) {\n                sorted.append(\"eight\")\n            } else if (number.equals(\"\
    nine\")) {\n                sorted.append(\"nine\")\n            }\n        }\n\
    \        sorted.toList", "        var numbers_array = numbers.split(\" \")\n \
    \       var numbers_array_sorted = sort(numbers_array)\n        var numbers_array_sorted_string\
    \ = \"\"\n        for (i <- 0 until numbers_array_sorted.length) {\n         \
    \   numbers_array_sorted_string += numbers_array_sorted[i] + \" \"\n        }\n\
    \        numbers_array_sorted_string", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedNumbers = mutable.List[String]()\n        for (i <- 0\
    \ until numbersList.length) {\n            var number = numbersList[i]\n     \
    \       var numberInt = number.toInt\n            if (numberInt < 10) {\n    \
    \            sortedNumbers = sortedNumbers.append(number)\n            }\n   \
    \     }\n        sortedNumbers.sort()\n        var sortedNumbersString = \"\"\n\
    \        for (i <- 0 until sortedNumbers.length) {\n            sortedNumbersString\
    \ = sortedNumbersString + sortedNumbers[i] + \" \"\n        }\n        sortedNumbersString\
    \ = sortedNumbersString.trim()\n        return sortedNumbersString", "       \
    \ var numbers_ = numbers.split(\" \")\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt)\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt)\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt)\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt)\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt)\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n        var numbers_\
    \ = numbers_.map(Integer::parseInt)\n        var numbers_ = numbers_.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbers_ = numbers_.map(Integer::parseInt)\n        var numbers_\
    \ = numbers_.sort(Comparator.comparingInt(Integer::parse", "        var numbers\
    \ = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n      \
    \  for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[String]()\n        for (i <- 0 until\
    \ numbers.length) {\n            var number = numbers[i]\n            var number\
    \ = number.toLowerCase()\n            var number = number.replaceAll(\"[^0-9]\"\
    , \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n      \
    \      var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.List[Int]()\n        for (i <- 0 until numbers.length)\
    \ {\n            var number = numbers[i]\n            var number = number.toInt\n\
    \            sorted.append(number)\n        }\n        sorted.sort(Comparator.comparingInt(x\
    \ => x))\n        var result = \"\"\n        for (i <- 0 until sorted.length)\
    \ {\n            var number = sorted[i]\n            result += number.toString\n\
    \            if (i < sorted.length - 1) {\n                result += \" \"\n \
    \           }\n        }\n        return result", "        numbers.split(\" \"\
    ).sort((a, b) => {\n            var aNum = Integer.parseInt(a)\n            var\
    \ bNum = Integer.parseInt(b)\n            if (aNum < bNum) return -1\n       \
    \     if (aNum > bNum) return 1\n            return 0\n        })\n        .mkString(\"\
    \ \")", "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.toLowerCase\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n", '        numbers.split(" ").sort(Comparator.comparingInt(String::length)).mkString("
    ")', "        var numbers_array = numbers.split(\" \")\n        var numbers_array_sorted\
    \ = sort(numbers_array)\n        var numbers_array_sorted_string = \"\"\n    \
    \    for (i <- 0 until numbers_array_sorted.length) {\n            numbers_array_sorted_string\
    \ += numbers_array_sorted[i]\n            if (i < numbers_array_sorted.length\
    \ - 1) {\n                numbers_array_sorted_string += \" \"\n            }\n\
    \        }\n        return numbers_array_sorted_string\n    }\n\n    // Sort a\
    \ list of numbers\n    def sort(numbers : Array[Int]) : Array[Int] = {\n     \
    \   var numbers_sorted = numbers.toSeq().sort(Comparator[Int](_ <=> _))\n    \
    \    return numbers_sorted.toList()", "        numbers.split(\" \").sort((a, b)\
    \ => {\n            var aNum = a.toInt\n            var bNum = b.toInt\n     \
    \       if (aNum < bNum) return -1\n            if (aNum > bNum) return 1\n  \
    \          return 0\n        }).mkString(\" \")", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedNumbers = mutable.ListBuffer[String]()\n        for (i\
    \ <- 0 until numbersList.length) {\n            var number = numbersList.apply(i)\n\
    \            var numberInt = number.toInt\n            if (numberInt < 10) {\n\
    \                sortedNumbers.append(number)\n            }\n        }\n    \
    \    sortedNumbers.sort(Comparator.comparingInt(Integer::parseInt))\n        sortedNumbers.mkString(\"\
    \ \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = numbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.mkString(\" \")", '        numbers.split(" ").sort((a, b) -> _.toInt(a)
    - _.toInt(b)).mkString(" ")', "        var numbers = numbers.split(\" \")\n  \
    \      var sorted = mutable.List[String]()\n        for (i <- 0 until numbers.length)\
    \ {\n            var number = numbers[i]\n            var number = number.toLowerCase()\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replace", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = sort(numbersList)\n        var result = \"\"\n\
    \        for (i <- 0 until sortedList.length) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\",", "        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var numbersListSortedString = \"\"\n        for (i <- 0 until numbersListSorted.length)\
    \ {\n            numbersListSortedString += numbersListSorted[i] + \" \"\n   \
    \     }\n        numbersListSortedString.trim()\n        return numbersListSortedString",
  '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ mutable.ListBuffer[String]()\n        for (i <- 0 until numbersList.length)\
    \ {\n            var number = numbersList.apply(i)\n            var numberInt\
    \ = number.toInt\n            if (numberInt >= 0 && numberInt <= 9) {\n      \
    \          sortedList.append(number)\n            }\n        }\n        sortedList.sort()\n\
    \        sortedList.toList", '        numbers.split(" ").sort(Comparator.comparingInt(String::length)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort((a, b) -> _.toInt(a) - _.toInt(b)).mkString("
    ")', "        numbers.split(\" \").sort((a, b) => {\n            var aInt = Integer.parseInt(a)\n\
    \            var bInt = Integer.parseInt(b)\n            if (aInt < bInt) return\
    \ -1\n            if (aInt > bInt) return 1\n            return 0\n        }).mkString(\"\
    \ \")", "        var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var index = i\n            for (j <- i + 1 until numbers.length)\
    \ {\n                if (numbers[j].toInt() > numbers[i].toInt()) {\n        \
    \            index = j\n                }\n            }\n            if (index\
    \ != i) {\n                var temp = numbers[i]\n                numbers[i] =\
    \ numbers[index]\n                numbers[index] = temp\n            }\n     \
    \   }\n        for (i <- 0 until numbers.length) {\n            sorted = sorted.append(numbers[i])\n\
    \        }\n        sorted.foreach(println(\" \"))\n        return sorted.mkString(\"\
    \ \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        val numbersList = numbers.split(\" \")\n        val sortedList =\
    \ sort(numbersList)\n        val result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i]\n            if (i < sortedList.length\
    \ - 1) {\n                result += \" \"\n            }\n        }\n        return\
    \ result\n    }\n\n    // Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n    // Return the string with numbers sorted from smallest\
    \ to largest\n    // >>> sortNumbers(\"one three five\")\n    // (\"three one\
    \ five\")\n    def sortNumbers2(numbers : String) : String = {\n        val numbersList\
    \ = numbers.split(\" \")\n        val sortedList = sort(numbersList)\n       \
    \ val result = \"\"\n        for (i <- 0 until sortedList.length) {\n        \
    \    result += sortedList[i]\n            if (i < sortedList.length - 1) {\n \
    \               result += \" \"\n            }\n        }\n        return result\n\
    \    }\n\n    // Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n    // Return the string with numbers sorted from largest to smallest\n\
    \    // >>> sortNumbers(\"three one five\")\n    // (\"five three one\")\n   \
    \ def sortNumbers3(numbers : String) : String = {\n        val numbersList = numbers.split(\"\
    \ \")\n        val sortedList = sort(numbersList)\n        val result = \"\"\n\
    \        for (i <- 0 until sortedList.length) {\n            result += sortedList[sortedList.length\
    \ - i - 1]\n            if (i < sortedList.length - 1) {\n                result\
    \ += \" \"\n            }\n        }\n        return result\n    }\n\n    // Input\
    \ is a space-delimited string of numberals from 'zero' to 'nine'.\n    // Return\
    \ the string with numbers sorted from largest to smallest\n    // >>> sortNumbers(\"\
    three one five\")\n    // (\"five three one\")\n    def sortNumbers4(numbers :\
    \ String) : String = {\n        val numbersList = numbers.split(\" \")\n     \
    \   val sortedList = sort(numbersList)\n        val result = \"\"\n        for\
    \ (", '        numbers.split(" ").sort(Comparator.comparingInt(String::length)).mkString("
    ")', "        var numbers_ = numbers.split(\" \")\n        var numbers_ = numbers_.map(x\
    \ => x.toInt)\n        var numbers_ = numbers_.sortBy(x => x)\n        var numbers_\
    \ = numbers_.map(x => x.toString)\n        var numbers_ = numbers_.mkString(\"\
    \ \")\n        return numbers_", "        var numbers = numbers.split(\" \")\n\
    \        var sorted = mutable.List[String]()\n        for (i <- 0 until numbers.length)\
    \ {\n            var number = numbers[i]\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"^0+\", \"\")\n \
    \           var number = number.replaceAll(\"^[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\",", "  \
    \      var numbersList = numbers.split(\" \")\n        var sortedNumbers = mutable.List[Int]()\n\
    \        for (i <- 0 until numbersList.length) {\n            var number = numbersList.apply(i)\n\
    \            var numberInt = number.toInt\n            if (numberInt < 10) {\n\
    \                sortedNumbers = sortedNumbers.append(numberInt)\n           \
    \ }\n        }\n        sortedNumbers.sort()\n        var sortedNumbersString\
    \ = mutable.StringBuilder()\n        for (i <- 0 until sortedNumbers.length) {\n\
    \            var number = sortedNumbers.apply(i)\n            sortedNumbersString.append(number)\n\
    \        }\n        return sortedNumbersString.toString", "        var numbers\
    \ = numbers.split(\" \")\n        var sorted = mutable.List[Int]()\n        for\
    \ (i <- 0 until numbers.length) {\n            sorted.append(Integer.parseInt(numbers[i]))\n\
    \        }\n        sorted.sort(Comparator.comparing(i -> i))\n        var result\
    \ = \"\"\n        for (i <- 0 until sorted.length) {\n            result += sorted[i]\
    \ + \" \"\n        }\n        return result", "        var numbersList = numbers.split(\"\
    \ \")\n        var sortedList = sort(numbersList)\n        var result = \"\"\n\
    \        for (i <- 0 until sortedList.length) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result", "        var numbers_ = numbers.split(\"\
    \ \")\n        var numbers_ = numbers_.map(x => x.toInt)\n        var numbers_\
    \ = numbers_.sortBy(x => x)\n        var numbers_ = numbers_.map(x => x.toString)\n\
    \        var numbers_ = numbers_.mkString(\" \")\n        return numbers_", " \
    \       var numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"^[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$", '        numbers.split("
    ").sort((a, b) -> a.toInt - b.toInt).mkString(" ")', "        numbers.split(\"\
    \ \").sort((a, b) => {\n            var aInt = Integer.parseInt(a)\n         \
    \   var bInt = Integer.parseInt(b)\n            if (aInt < bInt) return -1\n \
    \           if (aInt > bInt) return 1\n            return 0\n        }).mkString(\"\
    \ \")", "        var numbers = numbers.split(\" \")\n        var sorted = numbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.mkString(\" \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedList =\
    \ mutable.List[Int]()\n        for (i <- 0 until numbersList.length) {\n     \
    \       var number = numbersList.apply(i).toInt\n            sortedList = sortedList.append(number)\n\
    \        }\n        sortedList.sort(Comparator[Int](_ <=> _))\n        var sortedString\
    \ = \"\"\n        for (i <- 0 until sortedList.length) {\n            sortedString\
    \ = sortedString + sortedList.apply(i) + \" \"\n        }\n        sortedString\
    \ = sortedString.trim()\n        return sortedString", "        var numbers =\
    \ numbers.split(\" \")\n        var sorted = mutable.List[Int]()\n        for\
    \ (i <- 0 until numbers.length) {\n            var number = numbers[i]\n     \
    \       var number = number.toInt\n            sorted = sorted.append(number)\n\
    \        }\n        sorted.sort(Comparator.comparingInt(i -> i))\n        var\
    \ result = mutable.StringBuilder()\n        for (i <- 0 until sorted.length) {\n\
    \            result.append(sorted[i])\n            result.append(\" \")\n    \
    \    }\n        result.trim()\n        return result.toString", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbers_sorted = numbers.split(\" \")\n        for (i <- 0 until numbers_sorted.length\
    \ - 1) {\n            var number = numbers_sorted[i]\n            var number_int\
    \ = number.toInt\n            var number_int_sorted = numbers_sorted.sort(Comparator.comparingInt(n\
    \ -> n.toInt))\n            numbers_sorted[i] = number_int_sorted[number_int_sorted.length\
    \ - 1]\n        }\n        numbers_sorted.join(\" \")", "        var numbers =\
    \ numbers.split(\" \")\n        var sorted = mutable.List[String]()\n        for\
    \ (i <- 0 until numbers.length) {\n            var number = numbers[i]\n     \
    \       var number = number.replaceAll(\"[^0-9]\", \"\")\n            var number\
    \ = number.replaceAll(\" \", \"\")\n            var number = number.replaceAll(\"\
    ^0+\", \"\")\n            var number = number.replaceAll(\"^[1-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+$\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"^[1-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+$\", \"\")\n           \
    \ var number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"^[1-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+$\", \"\")\n           \
    \ var number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"^[1-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+$\", \"\")\n           \
    \ var number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"^[1-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+$\", \"\")\n           \
    \ var number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"^[1-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+$\", \"\")\n           \
    \ var number = number", "        var numbersList = numbers.split(\" \")\n    \
    \    var sortedList = mutable.List[Int]()\n        for (i <- 0 until numbersList.length)\
    \ {\n            sortedList = sortedList.append(numbersList[i].toInt)\n      \
    \  }\n        sortedList.sort()\n        var sortedString = \"\"\n        for\
    \ (i <- 0 until sortedList.length) {\n            sortedString = sortedString\
    \ + sortedList[i]\n        }\n        return sortedString", "        numbers.split(\"\
    \ \").sort((a, b) => {\n            var ai = a.toInt\n            var bi = b.toInt\n\
    \            if (ai < bi) return -1\n            if (ai > bi) return 1\n     \
    \       return 0\n        }).mkString(\" \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        val numbersList = numbers.split(\" \")\n        val sortedList =\
    \ sort(numbersList)\n        val result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i]\n            if (i < sortedList.length\
    \ - 1) {\n                result += \" \"\n            }\n        }\n        return\
    \ result\n    }\n\n    // Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    def sortNumbers2(numbers : String) : String\
    \ = {\n        val numbersList = numbers.split(\" \")\n        val sortedList\
    \ = sort(numbersList)\n        val result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i]\n            if (i < sortedList.length\
    \ - 1) {\n                result += \" \"\n            }\n        }\n        return\
    \ result\n    }\n\n    // Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    def sortNumbers3(numbers : String) : String\
    \ = {\n        val numbersList = numbers.split(\" \")\n        val sortedList\
    \ = sort(numbersList)\n        val result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i]\n            if (i < sortedList.length\
    \ - 1) {\n                result += \" \"\n            }\n        }\n        return\
    \ result\n    }\n\n    // Input is a space-delimited string of numberals from\
    \ 'zero' to 'nine'.\n    // Valid choices are 'zero', 'one', 'two", "        var\
    \ numbers = numbers.split(\" \")\n        var sorted = mutable.List[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[1-9]+\", \"\")\n            var number = number.replaceAll(\"[1-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n          \
    \  var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-", "     \
    \   numbers.split(\" \").sort((a, b) -> {\n            int ai = Integer.parseInt(a)\n\
    \            int bi = Integer.parseInt(b)\n            return ai - bi\n      \
    \  }).mkString(\" \")", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var numbers = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            numbers.append(numbers.get(i).toInt)\n\
    \        }\n        numbers.sort(Comparator.comparingInt(i -> i))\n        var\
    \ result = mutable.StringBuilder()\n        for (i <- 0 until numbers.length)\
    \ {\n            result.append(numbers.get(i))\n            if (i < numbers.length\
    \ - 1) {\n                result.append(\" \")\n            }\n        }\n   \
    \     return result.toString", "        numbers.split(\" \").sort((a, b) -> {\n\
    \            var aInt = Integer.parseInt(a)\n            var bInt = Integer.parseInt(b)\n\
    \            if (aInt < bInt) return -1\n            if (aInt > bInt) return 1\n\
    \            return 0\n        }).mkString(\" \")", "        var numbers = numbers.split(\"\
    \ \")\n        var sorted = mutable.ListBuffer[String]()\n        for (i <- 0\
    \ until numbers.length) {\n            var number = numbers[i]\n            var\
    \ number = number.toLowerCase()\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\" \", \"\")\n   \
    \         var number = number.replaceAll(\"[0-9]+\", \"\")\n            var number\
    \ = number.replaceAll(\"[^0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]+\", \"\")\n            var number = number.replaceAll(\"[^0-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[^0-9]+\", \"\")\n           \
    \ var number = number.replaceAll(\"[^0-9]+\", \"\")\n            var number =\
    \ number.replaceAll(\"[^0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]+\", \"\")\n            var number = number.replaceAll(\"[^0-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[^0-9]+\", \"\")\n           \
    \ var number = number.replaceAll(\"[^0-9]+\", \"\")\n            var number =\
    \ number.replaceAll(\"[^0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]+\", \"\")\n            var number = number.replaceAll(\"[^0-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[^0-9]+\", \"\")\n           \
    \ var number = number.replaceAll(\"[^0-9]+\", \"\")\n            var number =\
    \ number.replaceAll(\"[^0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]+\", \"\")\n            var number = number.replaceAll(\"[^0-9]+\", \"\"\
    )\n            var number = number.replaceAll(\"[^0-9]+\", \"\")\n           \
    \ var number = number.replaceAll(\"[^0-9]+\", \"\")\n            var number =\
    \ number.replaceAll(\"[^0-9]+\", \"\")\n            var number = number", '        numbers.split("
    ").sort(Comparator.comparingInt(Integer::parseInt)).mkString(" ")', "        var\
    \ numbers = numbers.split(\" \")\n        var sorted = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[1-9]+\", \"\")\n            var number = number.replaceAll(\"[1-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n          \
    \  var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\
    \")\n            var number = number.replaceAll(\"^[0-9]+$\", \"\")\n        \
    \    var number = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number\
    \ = number.replaceAll(\"^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+$\", \"\")\n            var number = number.replaceAll(\"^[0", "      \
    \  var numbers = numbers.split(\" \")\n        var sorted = mutable.List[Int]()\n\
    \        for (i <- 0 until numbers.length) {\n            sorted.append(Integer.parseInt(numbers[i]))\n\
    \        }\n        sorted.sort(Comparator.comparing(i -> i))\n        var result\
    \ = mutable.StringBuilder()\n        for (i <- 0 until sorted.length) {\n    \
    \        result.append(sorted[i])\n            if (i < sorted.length - 1) {\n\
    \                result.append(\" \")\n            }\n        }\n        return\
    \ result.toString()", '        numbers.split(" ").sort(Comparator.comparingInt(String::length)).mkString("
    ")', "        var numbers_ = numbers.split(\" \")\n        var numbers_ = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            if (number.equals(\"zero\")) {\n                numbers_ = numbers_.append(\"\
    zero\")\n            } else if (number.equals(\"one\")) {\n                numbers_\
    \ = numbers_.append(\"one\")\n            } else if (number.equals(\"two\")) {\n\
    \                numbers_ = numbers_.append(\"two\")\n            } else if (number.equals(\"\
    three\")) {\n                numbers_ = numbers_.append(\"three\")\n         \
    \   } else if (number.equals(\"four\")) {\n                numbers_ = numbers_.append(\"\
    four\")\n            } else if (number.equals(\"five\")) {\n                numbers_\
    \ = numbers_.append(\"five\")\n            } else if (number.equals(\"six\"))\
    \ {\n                numbers_ = numbers_.append(\"six\")\n            } else if\
    \ (number.equals(\"seven\")) {\n                numbers_ = numbers_.append(\"\
    seven\")\n            } else if (number.equals(\"eight\")) {\n               \
    \ numbers_ = numbers_.append(\"eight\")\n            } else if (number.equals(\"\
    nine\")) {\n                numbers_ = numbers_.append(\"nine\")\n           \
    \ }\n        }\n        numbers_ = numbers_.toList\n        return numbers_.mkString(\"\
    \ \")", "        var numbersList = numbers.split(\" \")\n        var sortedList\
    \ = sort(numbersList)\n        var result = \"\"\n        for (i <- 0 until sortedList.length)\
    \ {\n            result += sortedList[i]\n            if (i < sortedList.length\
    \ - 1) {\n                result += \" \"\n            }\n        }\n        return\
    \ result\n    }\n\n    // Sort a list of numbers from smallest to largest\n  \
    \  // >>> sort([3, 1, 5])\n    // [1, 3, 5]\n    def sort(numbers : Array[Int])\
    \ : Array[Int] = {\n        var sorted = numbers.toJavaList\n        sorted.sort(Comparator.comparingInt(i\
    \ -> i))\n        return sorted.toArray[Int]", "        val numbers = numbers.split(\"\
    \ \")\n        val sorted = numbers.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        sorted.mkString(\" \")", "        var numbersList = numbers.split(\"\
    \ \")\n        var numbersListSorted = sort(numbersList)\n        var numbersListSortedString\
    \ = \"\"\n        for (i <- 0 until numbersListSorted.length) {\n            numbersListSortedString\
    \ += numbersListSorted[i]\n            if (i < numbersListSorted.length - 1) {\n\
    \                numbersListSortedString += \" \"\n            }\n        }\n\
    \        return numbersListSortedString", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbers = numbers.split(\" \")\n        var numbers = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers.get(i)\n\
    \            if (number.equals(\"zero\")) {\n                numbers.append(\"\
    zero\")\n            } else if (number.equals(\"one\")) {\n                numbers.append(\"\
    one\")\n            } else if (number.equals(\"two\")) {\n                numbers.append(\"\
    two\")\n            } else if (number.equals(\"three\")) {\n                numbers.append(\"\
    three\")\n            } else if (number.equals(\"four\")) {\n                numbers.append(\"\
    four\")\n            } else if (number.equals(\"five\")) {\n                numbers.append(\"\
    five\")\n            } else if (number.equals(\"six\")) {\n                numbers.append(\"\
    six\")\n            } else if (number.equals(\"seven\")) {\n                numbers.append(\"\
    seven\")\n            } else if (number.equals(\"eight\")) {\n               \
    \ numbers.append(\"eight\")\n            } else if (number.equals(\"nine\")) {\n\
    \                numbers.append(\"nine\")\n            }\n        }\n        numbers.sort()\n\
    \        var result = mutable.StringBuilder()\n        for (i <- 0 until numbers.length)\
    \ {\n            result.append(numbers.get(i))\n            if (i < numbers.length\
    \ - 1) {\n                result.append(\" \")\n            }\n        }\n   \
    \     return result.toString()", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")', "        var numbersList = numbers.split(\" \")\n        var sortedNumbers\
    \ = mutable.List[String]()\n        for (i <- 0 until numbersList.length) {\n\
    \            var number = numbersList.apply(i)\n            var numberInt = number.toInt\n\
    \            if (numberInt < 10) {\n                sortedNumbers = sortedNumbers.append(number)\n\
    \            }\n        }\n        sortedNumbers.foreach(sortedNumbers)\n    \
    \    sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.foreach(sortedNumbers)\n\
    \        sortedNumbers.foreach(sortedNumbers)\n        sortedNumbers.", "    \
    \    var numbersList = numbers.split(\" \")\n        var sortedNumbers = numbersList.sort(Comparator.comparingInt(Integer::parseInt))\n\
    \        var sortedString = \"\"\n        for(i <- 0 until sortedNumbers.length)\
    \ {\n            sortedString += sortedNumbers[i]\n            if(i < sortedNumbers.length\
    \ - 1) {\n                sortedString += \" \"\n            }\n        }\n  \
    \      return sortedString", "        var numbersList = numbers.split(\" \")\n\
    \        var sortedList = sort(numbersList)\n        var result = \"\"\n     \
    \   for (i <- 0 until sortedList.length) {\n            result += sortedList[i]\
    \ + \" \"\n        }\n        return result\n    }\n\n    // Sort a list of strings\n\
    \    def sort(list : List[String]) : List[String] = {\n        var sortedList\
    \ = list.toList().sort(Comparator.comparing(String::toString))\n        return\
    \ sortedList", "        var numbers = numbers.split(\" \")\n        var sorted\
    \ = mutable.ListBuffer[String]()\n        for (i <- 0 until numbers.length) {\n\
    \            var number = numbers[i]\n            var number = number.toLowerCase\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"[^0-9]\", \"\")\n            var number = number.replaceAll(\"\
    [^0-9]\", \"\")\n            var number = number.replaceAll(\"[^0-9]\", \"\")",
  "        numbers.split(\" \").sort((a, b) -> {\n            var aNum = a.toInt\n\
    \            var bNum = b.toInt\n            if (aNum < bNum) return -1\n    \
    \        if (aNum > bNum) return 1\n            return 0\n        }).mkString(\"\
    \ \")", "        var numbers = numbers.split(\" \")\n        var sorted = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until numbers.length) {\n            var number = numbers[i]\n\
    \            var number = number.replaceAll(\"[^0-9]\", \"\")\n            var\
    \ number = number.replaceAll(\"^0+\", \"\")\n            var number = number.replaceAll(\"\
    ^[0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+$\", \"\"\
    )\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+\", \"\")\n            var number = number.replaceAll(\"\
    [0-9]+\", \"\")\n            var number = number.replaceAll(\"[0-9]+\", \"\")\n\
    \            var number = number.replaceAll(\"[0-9]+\", \"\")\n            var\
    \ number = number.replaceAll(\"[0-9]+", '        numbers.split(" ").sort(Comparator.comparingInt(Integer::parseInt)).mkString("
    ")']
stop_tokens:
- "\n    }\n"

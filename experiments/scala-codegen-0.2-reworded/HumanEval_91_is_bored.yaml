name: HumanEval_91_is_bored
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You'll be given a string of words, and your task is to count the number\n\
  \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
  \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n    //\
  \ >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky is\
  \ blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
  \ : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello\
  \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n  \
  \  assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) ==\
  \ (0l));\n    assert(isBored((\"I feel good today. I will be productive. will kill\
  \ It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\")) ==\
  \ (0l));\n    }\n\n}\n"
completions: ["        var words = S.split(\" \")\n        var boredoms = 0L\n   \
    \     for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for(var word : words) {\n            if(word.startsWith(\"I\")) {\n \
    \               boredoms += 1L\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var boredoms = 0\n        for (var\
    \ i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"I\"))\
    \ {\n                boredoms += 1\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var count = 0\n        for(var i =\
    \ 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        val words = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w\
    \ -> w.startsWith(\"I\")).count()\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        // Your code\
    \ here\n        scala.collection.immutable.List<String> words = S.split(\"\\\\\
    s+\")\n        words = words.filter(w => w.startsWith(\"I\"))\n        words =\
    \ words.map(w => w.substring(1))\n        words = words.filter(w => w.length()\
    \ > 0)\n        words = words.map(w => w.length())\n        words = words.filter(w\
    \ => w > 0)\n        words = words.map(w => w - 1)\n        words = words.filter(w\
    \ => w >= 0)\n        words = words.map(w => w + 1)\n        words = words.filter(w\
    \ => w <= words.length())\n        words = words.map(w => w - 1)\n        words\
    \ = words.filter(w => w >= 0)\n        words = words.map(w => w + 1)\n       \
    \ words = words.filter(w => w <= words.length())\n        words = words.map(w\
    \ => w - 1)\n        words = words.filter(w => w >= 0)\n        words = words.map(w\
    \ => w + 1)\n        words = words.filter(w => w <= words.length())\n        words\
    \ = words.map(w => w - 1)\n        words = words.filter(w => w >= 0)\n       \
    \ words = words.map(w => w + 1)\n        words = words.filter(w => w <= words.length())\n\
    \        words = words.map(w => w - 1)\n        words = words.filter(w => w >=\
    \ 0)\n        words = words.map(w => w + 1)\n        words = words.filter(w =>\
    \ w <= words.length())\n        words = words.map(w => w - 1)\n        words =\
    \ words.filter(w => w >= 0)\n        words = words.map(w => w + 1)\n        words\
    \ = words.filter(w => w <= words.length())\n        words = words.map(w => w -\
    \ 1)\n        words = words.filter(w => w >= 0)\n        words = words.map(w =>\
    \ w + 1)\n        words = words.filter(w => w <= words", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(i <- 0 until words.length)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0L\n        for(var i = 0; i < words.length; i++) {\n\
    \            if(words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        // Your code here\n\
    \        S.split(\" \").filter(s -> s.startsWith(\"I\")).count()", "        var\
    \ words = S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0\n        for(var i = 0; i < words.length; i++) {\n \
    \           if(words[i].startsWith(\"I\")) {\n                boredoms += 1\n\
    \            }\n        }\n        return boredoms", "        // Your code here\n\
    \        val words = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w\
    \ -> w.startsWith(\"I\")).count()\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0L\n        for(var i = 0; i < words.length; i++) {\n\
    \            if(words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (i <- 0 until words.length) {\n\
    \            if (words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for (var i = 0; i < words.length; i++)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for (i <- 0 until words.length)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        // Your code here\n        def\
    \ countBoreds(s: String) : Long = 0L\n        for(i <- 0 until s.length) {\n \
    \           if(s.substring(i, i + 1) == \"I\") {\n                countBoreds(s.substring(i\
    \ + 1))\n            }\n        }\n        countBoreds(s)", "        val words\
    \ = S.split(\"[.?!]\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0\n        for(var i = 0; i < words.length; i++) {\n \
    \           if(words[i].startsWith(\"I\")) {\n                boredoms += 1\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for (i <- 0 until words.length)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w => w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0L\n        for(var i = 0; i < words.length; i++) {\n\
    \            if(words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for (i <- 0 until words.length)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                count += 1\n\
    \            }\n        }\n        return count", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length; i++)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0\n        for(var i = 0; i < words.length; i++) {\n \
    \           if(words[i].startsWith(\"I\")) {\n                boredoms += 1\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w => w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0L\n        for(var word : words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var count = 0\n    \
    \    for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var boredoms = 0L\n   \
    \     for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        val words = S.split(\"\\\\s+\")\n        val boredoms =\
    \ words.filter(w -> w.startsWith(\"I\")).count()\n        return boredoms", " \
    \       var words = S.split(\" \")\n        var boredoms = 0\n        for (var\
    \ i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"I\"))\
    \ {\n                boredoms += 1\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var count = 0\n        for(var i =\
    \ 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        var words = S.split(\" \")\n        var count = 0\n        for (var i =\
    \ 0; i < words.length; i++) {\n            if (words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        var words = S.split(\" \")\n        var count = 0\n        for(var i =\
    \ 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        // Your code here\n        val words = S.split(\"\\\\s+\")\n        val\
    \ boredoms = words.filter(w -> w.startsWith(\"I\")).count()\n        return boredoms",
  "        var words = S.split(\" \")\n        var count = 0\n        for(var i =\
    \ 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        var words = S.split(\" \")\n        var boredoms = 0\n        for(var i\
    \ = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                boredoms += 1\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var boredoms = 0L\n        for (i <-\
    \ 0 until words.length) {\n            if (words[i].startsWith(\"I\")) {\n   \
    \             boredoms += 1L\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var boredoms = 0\n        for(var i\
    \ = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                boredoms += 1\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var boredoms = 0L\n        for(var\
    \ i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\"))\
    \ {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var count = 0\n    \
    \    for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var boredoms = 0L\n   \
    \     for(var word : words) {\n            if(word.startsWith(\"I\")) {\n    \
    \            boredoms += 1L\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var count = 0\n        for (var i =\
    \ 0; i < words.length; i++) {\n            if (words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        var words = S.split(\" \")\n        var count = 0\n        for(var i =\
    \ 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\")) {\n\
    \                count += 1\n            }\n        }\n        return count",
  "        var words = S.split(\" \")\n        var boredoms = 0\n        for (i <-\
    \ 0 until words.length) {\n            if (words[i].startsWith(\"I\")) {\n   \
    \             boredoms += 1\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var count = 0\n        for (i <- 0\
    \ until words.length) {\n            if (words[i].startsWith(\"I\")) {\n     \
    \           count += 1\n            }\n        }\n        return count", "   \
    \     val words = S.split(\"[\\\\.\\\\?\\\\!]\")\n        val boredoms = words.filter(w\
    \ => w.startsWith(\"I\")).count()\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var count = 0\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w => w.startsWith(\"\
    I\")).count()\n        return boredoms", "        // Your code here\n        def\
    \ countI(s: String): Long = 0L\n        def countB(s: String): Long = 0L\n   \
    \     def countBored(s: String): Long = 0L\n        def countBoreds(s: String):\
    \ Long = 0L\n        def countBoredsI(s: String): Long = 0L\n        def countBoredsB(s:\
    \ String): Long = 0L\n        def countBoredsBored(s: String): Long = 0L\n   \
    \     def countBoredsBoreds(s: String): Long = 0L\n        def countBoredsBoredsI(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBored(s: String): Long = 0L\n\
    \        def countBoredsBoredsBoreds(s: String): Long = 0L\n        def countBoredsBoredsBoredsI(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBored(s: String): Long\
    \ = 0L\n        def countBoredsBoredsBoredsBoreds(s: String): Long = 0L\n    \
    \    def countBoredsBoredsBoredsBoredsI(s: String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBored(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBoreds(s: String):\
    \ Long = 0L\n        def countBoredsBoredsBoredsBoredsBoredsI(s: String): Long\
    \ = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBored(s: String): Long\
    \ = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBoreds(s: String): Long\
    \ = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBoredsI(s: String): Long\
    \ = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBoredsBored(s: String):\
    \ Long = 0L\n        def countBored", "        var words = S.split(\" \")\n  \
    \      var boredoms = 0L\n        for(var i = 0; i < words.length; i++) {\n  \
    \          if(words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (var word : words) {\n         \
    \   if (word.startsWith(\"I\")) {\n                boredoms += 1L\n          \
    \  }\n        }\n        return boredoms", "        var words = S.split(\" \"\
    )\n        var boredoms = 0L\n        for (var i = 0; i < words.length; i++) {\n\
    \            if (words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var word : words) {\n           \
    \ if(word.startsWith(\"I\")) {\n                boredoms += 1\n            }\n\
    \        }\n        return boredoms", "        var words = S.split(\" \")\n  \
    \      var boredoms = 0L\n        for(var word : words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var count = 0\n    \
    \    for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var boredoms = 0\n    \
    \    for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var count = 0\n    \
    \    for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var count = 0\n       \
    \ for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var count = 0\n       \
    \ for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var boredoms = 0\n    \
    \    for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for(var word : words) {\n            if(word.startsWith(\"I\")) {\n \
    \               boredoms += 1L\n            }\n        }\n        return boredoms",
  "        // Your code here\n        scala.collection.immutable.List<String> words\
    \ = S.split(\"[.?!]\")\n        words.foreach(word => {\n            if(word.startsWith(\"\
    I\")) {\n                words.foreach(w => {\n                    if(w.startsWith(\"\
    I\")) {\n                        words.foreach(w2 => {\n                     \
    \       if(w2.startsWith(\"I\")) {\n                                words.foreach(w3\
    \ => {\n                                    if(w3.startsWith(\"I\")) {\n     \
    \                                   words.foreach(w4 => {\n                  \
    \                          if(w4.startsWith(\"I\")) {\n                      \
    \                          words.foreach(w5 => {\n                           \
    \                         if(w5.startsWith(\"I\")) {\n                       \
    \                                 words.foreach(w6 => {\n                    \
    \                                        if(w6.startsWith(\"I\")) {\n        \
    \                                                        words.foreach(w7 => {\n\
    \                                                                    if(w7.startsWith(\"\
    I\")) {\n                                                                    \
    \    words.foreach(w8 => {\n                                                 \
    \                           if(w8.startsWith(\"I\")) {\n                     \
    \                                                           words.foreach(w9 =>\
    \ {\n                                                                        \
    \            if(w9.startsWith(\"I\")) {\n                                    \
    \                                                    words.foreach(w10 => {\n\
    \                                                                            \
    \                if(w10.startsWith(\"I\")) {\n                               \
    \                                                                 words.foreach(w11\
    \ => {\n                                                                     \
    \                               if(w11.startsWith(\"I\")) {\n                \
    \                                                                            \
    \            words.foreach(w12 => {\n                                        \
    \                                                                    if(w12.startsWith(\"\
    I\")) {\n                                                                    \
    \                                            words.foreach(w13 => {\n        \
    \                                                                            \
    \                                if(w13.startsWith(\"I\")) {\n               \
    \                                                                            \
    \                             words.foreach(w14 => {\n                       \
    \                                                                            \
    \                         if(w14.startsWith(\"I\")) {\n                      \
    \                                                                            \
    \                              words.fore", "        val words = S.split(\"\\\\\
    s+\")\n        val boredoms = words.filter(w => w.startsWith(\"I\")).count()\n\
    \        return boredoms", "        var words = S.split(\" \")\n        var boredoms\
    \ = 0L\n        for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0\n \
    \       for (i <- 0 until words.length) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        val words = S.split(\"\\\\s+\")\n        val boredoms =\
    \ words.filter(w -> w.startsWith(\"I\")).count()\n        return boredoms", " \
    \       var words = S.split(\" \")\n        var boredoms = 0\n        for(var\
    \ i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\"))\
    \ {\n                boredoms += 1\n            }\n        }\n        return boredoms",
  "        var words = S.split(\" \")\n        var boredoms = 0L\n        for(var\
    \ i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"I\"))\
    \ {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var count = 0\n    \
    \    for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var count = 0\n       \
    \ for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var boredoms = 0L\n   \
    \     for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        // Your code here\n        val words = S.split(\"\\\\s+\"\
    )\n        words.filter(w -> w.startsWith(\"I\")).count()", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        def words\
    \ = S.split(\"\\\\s+\")\n        def isBored = words.filter(w => w.startsWith(\"\
    I\")).length == 0\n        isBored", "        var words = S.split(\" \")\n   \
    \     var boredoms = 0L\n        for(var i = 0; i < words.length; i++) {\n   \
    \         if(words[i].startsWith(\"I\")) {\n                boredoms += 1L\n \
    \           }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var count = 0\n        for(var i = 0; i < words.length; i++) {\n\
    \            if(words[i].startsWith(\"I\")) {\n                count += 1\n  \
    \          }\n        }\n        return count", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0L\n        for (var i = 0; i < words.length; i++) {\n\
    \            if (words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (var word : words) {\n         \
    \   if (word.startsWith(\"I\")) {\n                boredoms += 1L\n          \
    \  }\n        }\n        return boredoms", "        var words = S.split(\" \"\
    )\n        var count = 0\n        for(var i = 0; i < words.length; i++) {\n  \
    \          if(words[i].startsWith(\"I\")) {\n                count += 1\n    \
    \        }\n        }\n        return count", "        val words = S.split(\"\
    [.?!]\")\n        val boredoms = words.filter(w => w.startsWith(\"I\")).count()\n\
    \        boredoms", "        var words = S.split(\" \")\n        var boredoms\
    \ = 0L\n        for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        def words = S.split(\" \")\n        def boredoms = words.filter(w\
    \ => w.startsWith(\"I\")).count()\n        boredoms", "        // Count the number\
    \ of \"I\" words in the sentence\n        var count = 0\n        for(i <- 0 until\
    \ S.length) {\n            if(S.charAt(i) == 'I') {\n                count +=\
    \ 1\n            }\n        }\n        return count", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for (i <- 0 until words.length)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        // Your\
    \ code here\n        def countI(s: String): Long = 0L\n        def countB(s: String):\
    \ Long = 0L\n        def countBored(s: String): Long = 0L\n        def countBoreds(s:\
    \ String): Long = 0L\n        def countBoredsI(s: String): Long = 0L\n       \
    \ def countBoredsB(s: String): Long = 0L\n        def countBoredsBored(s: String):\
    \ Long = 0L\n        def countBoredsBoreds(s: String): Long = 0L\n        def\
    \ countBoredsBoredsI(s: String): Long = 0L\n        def countBoredsBoredsBored(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoreds(s: String): Long = 0L\n\
    \        def countBoredsBoredsBoredsI(s: String): Long = 0L\n        def countBoredsBoredsBoredsBored(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBoreds(s: String): Long\
    \ = 0L\n        def countBoredsBoredsBoredsBoredsI(s: String): Long = 0L\n   \
    \     def countBoredsBoredsBoredsBoredsBored(s: String): Long = 0L\n        def\
    \ countBoredsBoredsBoredsBoredsBoreds(s: String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBoredsI(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBored(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBoreds(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBoredsI(s:\
    \ String): Long = 0L\n        def countBoredsBoredsBoredsBoredsBoredsBoredsBored(s:\
    \ String): Long = 0L\n        def countBored", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w => w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var count = 0\n        for (var i = 0; i < words.length; i++) {\n   \
    \         if (words[i].startsWith(\"I\")) {\n                count += 1\n    \
    \        }\n        }\n        return count", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length; i++)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for (i <- 0 until words.length)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for (var word : words) {\n\
    \            if (word.startsWith(\"I\")) {\n                boredoms += 1L\n \
    \           }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1L\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var count = 0\n        for(var i = 0; i < words.length; i++) {\n    \
    \        if(words[i].startsWith(\"I\")) {\n                count += 1\n      \
    \      }\n        }\n        return count", "        var words = S.split(\" \"\
    )\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++) {\n\
    \            if(words[i].startsWith(\"I\")) {\n                boredoms += 1\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length; i++)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for (var i = 0; i < words.length;\
    \ i++) {\n            if (words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        val words = S.split(\"\\\\s+\"\
    )\n        val boredoms = words.filter(w => w.startsWith(\"I\")).count()\n   \
    \     return boredoms", "        var words = S.split(\" \")\n        var boredoms\
    \ = 0\n        for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0\n \
    \       for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        def words = S.split(\"\\\\s+\")\n        def isI = words.filter(w\
    \ -> w.startsWith(\"I\")).count() > 0\n        def isBored = words.filter(w ->\
    \ w.startsWith(\"I\")).count() == 0\n        return (isI && isBored) ? 1l : 0l",
  "        val words = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w\
    \ -> w.startsWith(\"I\")).count()\n        return boredoms", "        val words\
    \ = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w => w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0L\n        for (var i = 0; i < words.length; i++) {\n\
    \            if (words[i].startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for (var i = 0; i < words.length; i++)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0L\n        for (i <- 0 until words.length)\
    \ {\n            if (words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        var words =\
    \ S.split(\" \")\n        var count = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var words =\
    \ S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        val words\
    \ = S.split(\"[\\\\.\\\\?\\\\!]\")\n        val boredoms = words.filter(w => w.startsWith(\"\
    I\")).length\n        boredoms", "        var words = S.split(\" \")\n       \
    \ var boredoms = 0\n        for (i <- 0 until words.length) {\n            if\
    \ (words[i].startsWith(\"I\")) {\n                boredoms += 1\n            }\n\
    \        }\n        return boredoms", "        var words = S.split(\" \")\n  \
    \      var count = 0\n        for(var i = 0; i < words.length; i++) {\n      \
    \      if(words[i].startsWith(\"I\")) {\n                count += 1\n        \
    \    }\n        }\n        return count", "        var words = S.split(\" \")\n\
    \        var boredoms = 0\n        for(var i = 0; i < words.length; i++) {\n \
    \           if(words[i].startsWith(\"I\")) {\n                boredoms += 1\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var count = 0\n        for (var i = 0; i < words.length; i++) {\n\
    \            if (words[i].startsWith(\"I\")) {\n                count += 1\n \
    \           }\n        }\n        return count", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1\n            }\n        }\n        return boredoms", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0\n        for(var i = 0; i < words.length; i++) {\n \
    \           if(words[i].startsWith(\"I\")) {\n                boredoms += 1\n\
    \            }\n        }\n        return boredoms", "        var words = S.split(\"\
    \ \")\n        var boredoms = 0L\n        for(var i = 0; i < words.length; i++)\
    \ {\n            if(words[i].startsWith(\"I\")) {\n                boredoms +=\
    \ 1L\n            }\n        }\n        return boredoms", "        val words =\
    \ S.split(\"\\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"\
    I\")).count()\n        return boredoms", "        var words = S.split(\" \")\n\
    \        var boredoms = 0\n        for (var word : words) {\n            if (word.startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        // Your code here\n        val words = S.split(\"[.?!]\"\
    )\n        val boredoms = words.filter(w -> w.startsWith(\"I\")).count()\n   \
    \     return boredoms", "        val words = S.split(\"\\\\s+\")\n        val\
    \ boredoms = words.filter(w -> w.startsWith(\"I\")).count()\n        return boredoms",
  "        var words = S.split(\" \")\n        var boredoms = 0L\n        for (var\
    \ i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"I\"))\
    \ {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0\n \
    \       for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0\n \
    \       for (i <- 0 until words.length) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var count = 0\n    \
    \    for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var words = S.split(\" \")\n        var boredoms = 0\n    \
    \    for(var i = 0; i < words.length; i++) {\n            if(words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        // Your code here\n        val words = S.split(\"\\\\s+\"\
    )\n        words.foreach(word => {\n            if (word.startsWith(\"I\")) {\n\
    \                words.foreach(w => {\n                    if (w.startsWith(\"\
    I\")) {\n                        words.foreach(w => {\n                      \
    \      if (w.startsWith(\"I\")) {\n                                words.foreach(w\
    \ => {\n                                    if (w.startsWith(\"I\")) {\n     \
    \                                   words.foreach(w => {\n                   \
    \                         if (w.startsWith(\"I\")) {\n                       \
    \                         words.foreach(w => {\n                             \
    \                       if (w.startsWith(\"I\")) {\n                         \
    \                               words.foreach(w => {\n                       \
    \                                     if (w.startsWith(\"I\")) {\n           \
    \                                                     words.foreach(w => {\n \
    \                                                                   if (w.startsWith(\"\
    I\")) {\n                                                                    \
    \    words.foreach(w => {\n                                                  \
    \                          if (w.startsWith(\"I\")) {\n                      \
    \                                                          words.foreach(w =>\
    \ {\n                                                                        \
    \            if (w.startsWith(\"I\")) {\n                                    \
    \                                                    words.foreach(w => {\n  \
    \                                                                            \
    \              if (w.startsWith(\"I\")) {\n                                  \
    \                                                              words.foreach(w\
    \ => {\n                                                                     \
    \                               if (w.startsWith(\"I\")) {\n                 \
    \                                                                            \
    \           words.foreach(w => {\n                                           \
    \                                                                 if (w.startsWith(\"\
    I\")) {\n                                                                    \
    \                                            words.foreach(w => {\n          \
    \                                                                            \
    \                              if (w.startsWith(\"I\")) {\n                  \
    \                                                                            \
    \                          words.foreach(w => {\n                            \
    \                                                                            \
    \                    if (w.startsWith(\"I\")) {\n                            \
    \                                                                            \
    \                        words.foreach(w => {\n                              \
    \                                                                            \
    \                           if (w.startsWith(\"I\")) {\n                     \
    \                                                                            \
    \                                      words.foreach(w", "        // Your code\
    \ here\n        val words = S.split(\"\\\\s+\")\n        val boredoms = words.filter(w\
    \ -> w.startsWith(\"I\")).count()\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0\n        for(var i = 0; i < words.length;\
    \ i++) {\n            if(words[i].startsWith(\"I\")) {\n                boredoms\
    \ += 1\n            }\n        }\n        return boredoms", "        var words\
    \ = S.split(\" \")\n        var boredoms = 0L\n        for (var word : words)\
    \ {\n            if (word.startsWith(\"I\")) {\n                boredoms += 1L\n\
    \            }\n        }\n        return boredoms", "        val words = S.split(\"\
    \\\\s+\")\n        val boredoms = words.filter(w -> w.startsWith(\"I\")).count()\n\
    \        return boredoms", "        var words = S.split(\" \")\n        var boredoms\
    \ = 0\n        for (i <- 0 until words.length) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1\n            }\n        }\n        return\
    \ boredoms", "        var words = S.split(\" \")\n        var boredoms = 0L\n\
    \        for (var i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\
    I\")) {\n                boredoms += 1L\n            }\n        }\n        return\
    \ boredoms", "        val words = S.split(\"\\\\s+\")\n        val boredoms =\
    \ words.filter(w -> w.startsWith(\"I\")).count()\n        return boredoms"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_36_fizz_buzz",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n    def fizzBuzz(n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n",
  "completions": [
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val n11 = 11l\n        val n13 = 13l\n        val n7 = 7l\n        val n = n11 * n13\n        val count = 0l\n        while (n > 0l) {\n            if (n % n11 == 0l) {\n                count += 1l\n            }\n            if (n % n13 == 0l) {\n                count += 1l\n            }\n            n /= 10l\n        }\n        count",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val nn = n.toInt\n        val divisibleBy11 = (nn % 11 == 0)\n        val divisibleBy13 = (nn % 13 == 0)\n        val divisibleBy7 = (nn % 7 == 0)\n        val result = 0l\n        if (divisibleBy11) {\n            result += 1l\n        }\n        if (divisibleBy13) {\n            result += 1l\n        }\n        if (divisibleBy7) {\n            result += 1l\n        }\n        return result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And3 = (i: Long) => divisibleBy11Or13And7(i) && i % 3 == 0\n        val divisibleBy11Or13And7And1 = (i: Long) => divisibleBy11Or13And7(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5Or3 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0)\n        val divisibleBy11Or13And7And5Or1 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 1 == 0)\n        val divisibleBy11Or13And7And3Or1 = (i: Long) => divisibleBy11Or13And7(i) && (i % 3 == 0 || i % 1 == 0)\n        val divisibleBy11Or13And7And5Or3Or1 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0 || i % 1 == 0)\n        val divisibleBy11Or13And7And5Or3Or1And2 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0 || i % 1 == 0 || i % 2 == 0)\n        val divisibleBy11Or13And7And5Or3Or1And2Or4 = (i: Long) => divisibleBy11Or13And7(i) && (",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7 = (i: Long) => divisibleBy11Or13And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7 = (i: Long) => divisibleBy11Or13And7Or7(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7Or7(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7Or7Or7Or7(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7Or7Or7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7(i) && i % 7 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 5 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7 = (i: Long) => divisibleBy11Or13And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7 = (i: Long) => divisibleBy11Or13And7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7Or7Or7Or7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7Or7Or7Or7Or7(i) || i % 7 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            var j = i\n            while (j < n && (j % 11l == 0 || j % 13l == 0)) {\n                j += 1l\n            }\n            if (j == n) {\n                i += 1l\n            } else {\n                i = j\n            }\n        }\n        return i",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(7)\n            } else {\n                println(i)\n            }\n            i = i + 1l\n        }\n        0l",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(7)\n            } else {\n                println(i)\n            }\n            i = i + 1l\n        }\n        0l",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val x = 0l\n        while (x < n) {\n            if (x % 11 == 0 || x % 13 == 0) {\n                x += 1\n            } else {\n                x += 2\n            }\n        }\n        x",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (n % 11) == 0\n        val divisibleBy13 = (n % 13) == 0\n        val divisibleBy7 = (n % 7) == 0\n        val result = (divisibleBy11 || divisibleBy13) && divisibleBy7 ? 1 : 0\n        return result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (n % 11 == 0)\n        val divisibleBy13 = (n % 13 == 0)\n        val divisibleBy7 = (n % 7 == 0)\n        val result = 0l\n        for (i <- 0 until (n / 11)) {\n            if (divisibleBy11) {\n                result += 1l\n            }\n            if (divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy7) {\n                result += 1l\n            }\n            if (divisibleBy11 && divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy11 && divisibleBy7) {\n                result += 1l\n            }\n            if (divisibleBy13 && divisibleBy7) {\n                result += 1l\n            }\n            if (divisibleBy11 && divisibleBy13 && divisibleBy7) {\n                result += 1l\n            }\n            divisibleBy11 = divisibleBy11 && (n % 11 != 0)\n            divisibleBy13 = divisibleBy13 && (n % 13 != 0)\n            divisibleBy7 = divisibleBy7 && (n % 7 != 0)\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if (divisibleBy11 || divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy11 && divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy11 && !divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy13 && !divisibleBy11) {\n                result += 1l\n            }\n        }\n        result",
    "        val x = 0l\n        for(i <- 0 until n) {\n            if(i % 11 == 0 || i % 13 == 0) {\n                x += 1l\n            }\n            if(i % 7 == 0) {\n                x += 1l\n            }\n        }\n        x",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val nn = n.toInt\n        val fizz = 0\n        val buzz = 0\n        val fizzBuzz = 0\n        for (i <- 1 to nn) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz = fizzBuzz + 1\n            } else if (i % 7 == 0) {\n                fizz = fizz + 1\n            } else {\n                buzz = buzz + 1\n            }\n        }\n        fizzBuzz",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(\"fizzbuzz\")\n            } else {\n                println(i)\n            }\n            i = i + 1l\n        }\n        0l",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(\"FizzBuzz\")\n            } else if (i % 7 == 0) {\n                println(\"Fizz\")\n            } else {\n                println(\"Buzz\")\n            }\n            i = i + 1\n        }\n        0l",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 5 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 5 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 5 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = n % 11 == 0\n        val divisibleBy13 = n % 13 == 0\n        val divisibleBy7 = n % 7 == 0\n        val result = 0l\n        if (divisibleBy11 || divisibleBy13) {\n            result = result + 1l\n        }\n        if (divisibleBy7) {\n            result = result + 1l\n        }\n        return result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            var j = i\n            while (j < n && (j % 11l == 0 || j % 13l == 0)) {\n                j += 1l\n            }\n            if (j == n) {\n                i += 1l\n            } else {\n                i = j\n            }\n        }\n        return i",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            var j = i\n            while (j < n && (j % 11l == 0l || j % 13l == 0l)) {\n                j += 1l\n            }\n            if (j == n) {\n                i += 1l\n            } else {\n                i = j\n            }\n        }\n        return i",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 {\n                result += 1l\n            }\n            if divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && !divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy13 && !divisibleBy11 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n        }\n        return result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(7)\n            } else {\n                println(i)\n            }\n            i = i + 1\n        }\n        0l",
    "        val x = 0l\n        while (x < n) {\n            val y = x\n            val z = x\n            if (z % 11 == 0 || z % 13 == 0) {\n                y = y + 1\n                z = z + 1\n            }\n            if (z % 11 == 0) {\n                y = y + 1\n            }\n            if (z % 13 == 0) {\n                y = y + 1\n            }\n            x = x + 1\n            yield y\n        }",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(7)\n            } else {\n                println(i)\n            }\n            i = i + 1l\n        }\n        0l",
    "        val divisibleBy11 = (n % 11 == 0)\n        val divisibleBy13 = (n % 13 == 0)\n        val divisibleBy7 = (n % 7 == 0)\n        val result = (divisibleBy11 || divisibleBy13) ? 1 : 0\n        result += (divisibleBy7) ? 1 : 0\n        return result",
    "        val divisibleBy11 = (i: Long) => (i % 11 == 0)\n        val divisibleBy13 = (i: Long) => (i % 13 == 0)\n        val divisibleBy11Or13 = (i: Long) => (divisibleBy11(i) || divisibleBy13(i))\n        val divisibleBy11Or13And7 = (i: Long) => (divisibleBy11Or13(i) && (i % 7 == 0))\n        val divisibleBy11Or13And7And5 = (i: Long) => (divisibleBy11Or13And7(i) && (i % 5 == 0))\n        val divisibleBy11Or13And7And5And3 = (i: Long) => (divisibleBy11Or13And7And5(i) && (i % 3 == 0))\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => (divisibleBy11Or13And7And5And3(i) && (i % 1 == 0))\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => (divisibleBy11Or13And7And5And3And1(i) && (i % 2 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => (divisibleBy11Or13And7And5And3And1And2(i) && (i % 4 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => (divisibleBy11Or13And7And5And3And1And2And4(i) && (i % 6 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => (divisibleBy11Or13And7And5And3And1And2And4And6(i) && (i % 8 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => (divisibleBy11",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 {\n                result += 1l\n            }\n            if divisibleBy13 {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(i)\n            }\n            i = i + 1l\n        }",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And3 = (i: Long) => divisibleBy11Or13And7(i) && i % 3 == 0\n        val divisibleBy11Or13And7And1 = (i: Long) => divisibleBy11Or13And7(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5Or3 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0)\n        val divisibleBy11Or13And7And5Or1 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 1 == 0)\n        val divisibleBy11Or13And7And5Or3Or1 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0 || i % 1 == 0)\n        val divisibleBy11Or13And7And5Or3Or1And2 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0 || i % 1 == 0 || i % 2 == 0)\n        val divisibleBy11Or13And7And5Or3Or1And2Or4 = (i: Long) => divisibleBy11Or13And7(i) && (i % 5 == 0 || i % 3 == 0 || i % 1 == 0 || i % 2 == 0 || i % 4 == 0)\n        val divisibleBy11Or13And7And5Or3Or1",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var result = 0l\n        for (var i = 1l; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n        }\n        return result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or5 = (i: Long) => divisibleBy11Or13And7(i) || divisibleBy11Or13And7(i) || i % 5 == 0\n        val divisibleBy11Or13And7Or5Or3 = (i: Long) => divisibleBy11Or13And7Or5(i) || divisibleBy11Or13And7Or5(i) || i % 3 == 0\n        val divisibleBy11Or13And7Or5Or3Or1 = (i: Long) => divisibleBy11Or13And7Or5Or3(i) || divisibleBy11Or13And7Or5Or3(i) || i % 1 == 0\n        val divisibleBy11Or13And7Or5Or3Or1And2 = (i: Long) => divisibleBy11Or13And7Or5Or3Or1(i) || divisibleBy11Or13And7Or5Or3Or1(i) || i % 2 == 0\n        val divisibleBy11Or13And7Or5Or3Or1And2Or4 = (i: Long) => divisibleBy11Or13And7Or5Or3Or1And2(i) || divisibleBy11Or13And7Or5Or3Or1And2(i) || i % 4 == 0\n        val divisibleBy11Or13And7Or5Or3Or1And2Or4Or6 = (i: Long) => divisibleBy11Or13And7Or5Or3Or1And2Or4(i) || divisibleBy11Or13And7Or5Or3Or1And2Or4(i) || i % 6 == 0\n        val divisibleBy11Or13And7Or5Or3Or1And2Or4Or6Or8 = (",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11or13And7 = (i: Long) => divisibleBy11or13(i) && i % 7 == 0\n        val divisibleBy11or13And7And5 = (i: Long) => divisibleBy11or13And7(i) && i % 5 == 0\n        val divisibleBy11or13And7And5And3 = (i: Long) => divisibleBy11or13And7And5(i) && i % 3 == 0\n        val divisibleBy11or13And7And5And3And1 = (i: Long) => divisibleBy11or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11or13And7And5And3And1And2 = (i: Long) => divisibleBy11or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val n_ = n\n        val divisibleBy11 = (n % 11 == 0)\n        val divisibleBy13 = (n % 13 == 0)\n        val divisibleBy7 = (n % 7 == 0)\n        val result = (divisibleBy11 || divisibleBy13) && divisibleBy7\n        if (result) {\n            val result_ = n_\n            return result_\n        } else {\n            return 0l\n        }",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (x : Long) => x % 11 == 0\n        val divisibleBy13 = (x : Long) => x % 13 == 0\n        val divisibleBy11Or13 = (x : Long) => divisibleBy11(x) || divisibleBy13(x)\n        val divisibleBy11Or13And7 = (x : Long) => divisibleBy11Or13(x) && x % 7 == 0\n        val divisibleBy11Or13And7And5 = (x : Long) => divisibleBy11Or13And7(x) && x % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (x : Long) => divisibleBy11Or13And7And5(x) && x % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (x : Long) => divisibleBy11Or13And7And5And3(x) && x % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (x : Long) => divisibleBy11Or13And7And5And3And1(x) && x % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (x : Long) => divisibleBy11Or13And7And5And3And1And2(x) && x % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (x : Long) => divisibleBy11Or13And7And5And3And1And2And4(x) && x % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (x : Long) => divisibleBy11Or13And7And5And3And1And2And4And6(x) && x % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (x : Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(x) && x % 9 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5Or3 = (i: Long) => divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) || divisibleBy11Or13(i) || i % 3 == 0\n        val divisibleBy11Or13And7And5Or3And1 = (i: Long) => divisibleBy11Or13And7And5Or3(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) || divisibleBy11Or13(i) || i % 1 == 0\n        val divisibleBy11Or13And7And5Or3And1And2 = (i: Long) => divisibleBy11Or13And7And5Or3And1(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) || divisibleBy11Or13(i) || i % 2 == 0\n        val divisibleBy11Or13And7And5Or3And1And2Or4 = (i: Long) => divisibleBy11Or13And7And5Or3And1And2(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) || divisibleBy11Or13(i) || i % 4 == 0\n        val divisibleBy11Or13And7And5Or3And1And2Or4Or6 = (i: Long) => divisibleBy11Or13And7And5Or3And1And2Or4(i) || divisibleBy11",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1\n            }\n            if divisibleBy11 && !divisibleBy13 {\n                result += 1\n            }\n            if divisibleBy13 && !divisibleBy11 {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => (i % 11 == 0)\n        val divisibleBy13 = (i: Long) => (i % 13 == 0)\n        val divisibleBy11Or13 = (i: Long) => (divisibleBy11(i) || divisibleBy13(i))\n        val divisibleBy11Or13And7 = (i: Long) => (divisibleBy11Or13(i) && (i % 7 == 0))\n        val divisibleBy11Or13And7And5 = (i: Long) => (divisibleBy11Or13And7(i) && (i % 5 == 0))\n        val divisibleBy11Or13And7And5And3 = (i: Long) => (divisibleBy11Or13And7And5(i) && (i % 3 == 0))\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => (divisibleBy11Or13And7And5And3(i) && (i % 1 == 0))\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => (divisibleBy11Or13And7And5And3And1(i) && (i % 2 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => (divisibleBy11Or13And7And5And3And1And2(i) && (i % 4 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => (divisibleBy11Or13And7And5And3And1And2And4(i) && (i % 6 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => (divisibleBy11Or13And7And5And3And1And2And4And6(i) && (i % 8 == 0))\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => (divisibleBy11",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val x = 0l\n        for(i <- 0 until n) {\n            if(i % 11 == 0 || i % 13 == 0) {\n                x += 1l\n            }\n            if(i % 7 == 0) {\n                x += 1l\n            }\n        }\n        x",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val x = (n / 11) * 11\n        val y = (n / 13) * 13\n        val z = (n % 11) * 11\n        val result = x + y + z\n        if (result % 15 == 0) {\n            return result / 15\n        } else {\n            return result\n        }",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 {\n                result += 1l\n            }\n            if divisibleBy13 {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5Or3 = (i: Long) => divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5Or3Or1 = (i: Long) => divisibleBy11Or13And7And5Or3(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5Or3Or1And2 = (i: Long) => divisibleBy11Or13And7And5Or3Or1(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5Or3Or1And2Or4 = (i: Long) => divisibleBy11Or13And7And5Or3Or1And2(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5Or3Or1And2Or4Or6 = (i: Long) => divisibleBy11Or13And7And5Or3Or1And2Or4(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if (divisibleBy11 || divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy11 && divisibleBy13) {\n                result += 1l\n            }\n            if (divisibleBy11) {\n                result += 1l\n            }\n            if (divisibleBy13) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11or13And7 = (i: Long) => divisibleBy11or13(i) && i % 7 == 0\n        val divisibleBy11or13And7And5 = (i: Long) => divisibleBy11or13And7(i) && i % 5 == 0\n        val divisibleBy11or13And7And5And3 = (i: Long) => divisibleBy11or13And7And5(i) && i % 3 == 0\n        val divisibleBy11or13And7And5And3And1 = (i: Long) => divisibleBy11or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11or13And7And5And3And1And2 = (i: Long) => divisibleBy11or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (n % 11) == 0\n        val divisibleBy13 = (n % 13) == 0\n        val divisibleBy7 = (n % 7) == 0\n        val result = (divisibleBy11 || divisibleBy13) && divisibleBy7 ? 1 : 0\n        return result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5Or3 = (i: Long) => divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5Or3And1 = (i: Long) => divisibleBy11Or13And7And5Or3(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5Or3And1And2 = (i: Long) => divisibleBy11Or13And7And5Or3And1(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5Or3And1And2Or4 = (i: Long) => divisibleBy11Or13And7And5Or3And1And2(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5Or3And1And2Or4Or5 = (i: Long) => divisibleBy11Or13And7And5Or3And1And2Or4(i) || divisibleBy11Or13And7And5(i) || divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5",
    "        val nn = n.toInt\n        val fizz = 0\n        val buzz = 0\n        val divisibleBy11 = 0\n        val divisibleBy13 = 0\n        for (i <- 1 to nn) {\n            if (i % 11 == 0) {\n                divisibleBy11 += 1\n            }\n            if (i % 13 == 0) {\n                divisibleBy13 += 1\n            }\n            if (i % 7 == 0) {\n                fizz += 1\n            }\n            if (i % 5 == 0) {\n                buzz += 1\n            }\n        }\n        val result = fizz * buzz\n        if (divisibleBy11 > 0) {\n            result += divisibleBy11\n        }\n        if (divisibleBy13 > 0) {\n            result += divisibleBy13\n        }\n        return result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val nn = n\n        val n11 = nn / 11\n        val n13 = nn / 13\n        val n7 = nn % 7\n        val n11_7 = n11 * 7\n        val n13_7 = n13 * 7\n        val n11_7_n7 = n11_7 + n7\n        val n13_7_n7 = n13_7 + n7\n        val n11_7_n7_n7 = n11_7_n7 + n7\n        val n13_7_n7_n7 = n13_7_n7 + n7\n        val n11_7_n7_n7_n7 = n11_7_n7_n7 + n7\n        val n13_7_n7_n7_n7 = n13_7_n7_n7 + n7\n        val n11_7_n7_n7_n7_n7 = n11_7_n7_n7_n7 + n7\n        val n13_7_n7_n7_n7_n7 = n13_7_n7_n7_n7 + n7\n        val n11_7_n7_n7_n7_n7_n7 = n11_7_n7_n7_n7_n7 + n7\n        val n13_7_n7_n7_n7_n7_n7 = n13_7_n7_n7_n7_n7 + n7\n        val n11_7_n7_n7_n7_n7_n7_n7 = n11_7_n7_n7_n7_n7_n7 + n7\n        val n13_7_n7_n7_n7_n7_n7_n7 = n13_7_n7_n7_n7_n7_n7 + n7\n        val n11_7_n7_n7_n7_n7_n7_n7_n7 = n11_7_n7_n7_n7_n7_n7_n7 + n7\n        ",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7 = (i: Long) => divisibleBy11Or13And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7 = (i: Long) => divisibleBy11Or13And7Or7(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7 = (i: Long) => divisibleBy11Or13And7Or7And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7And7(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7And7(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7Or7And7(i) || i % 7 == 0\n        val divisibleBy11Or13And7Or7And7Or7Or7Or7Or7Or7Or7 = (i: Long) => divisibleBy11Or13And7Or7Or7Or7Or7And7(i) && i % 7 == 0\n        val divisibleBy11Or13And7",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        var i = 0l\n        while (i < n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                println(7)\n            } else {\n                println(i)\n            }\n            i = i + 1l\n        }",
    "        val divisibleBy11 = (n % 11) == 0\n        val divisibleBy13 = (n % 13) == 0\n        val divisibleBy7 = (n % 7) == 0\n        val result = 0l\n        if (divisibleBy11) {\n            result += 1l\n        }\n        if (divisibleBy13) {\n            result += 1l\n        }\n        if (divisibleBy7) {\n            result += 1l\n        }\n        return result",
    "        val nn = n\n        val n11 = nn / 11\n        val n13 = nn / 13\n        val n7 = nn % 7\n        val n11_or_13 = n11 + n13\n        val n11_or_13_divisible_by_7 = n11_or_13 % 7\n        val n11_or_13_divisible_by_7_is_7 = n11_or_13_divisible_by_7 == 7\n        val n11_or_13_divisible_by_7_is_not_7 = !n11_or_13_divisible_by_7_is_7\n        val n11_or_13_divisible_by_7_is_0 = n11_or_13_divisible_by_7_is_7 && n11_or_13_divisible_by_7_is_not_7\n        val n11_or_13_divisible_by_7_is_not_0 = !n11_or_13_divisible_by_7_is_0\n        val n11_or_13_divisible_by_7_is_not_0_or_7 = n11_or_13_divisible_by_7_is_not_0 || n11_or_13_divisible_by_7_is_7\n        val n11_or_13_divisible_by_7_is_not_0_or_7_or_13 = n11_or_13_divisible_by_7_is_not_0_or_7 || n11_or_13_divisible_by_7_is_13\n        val n11_or_13_divisible_by_7_is_not_0_or_7_or_13_or_11 = n11_or_13_divisible_by_7_is_not_0_or_7_or_13 || n11_or_13_divisible_by_7_is_11\n        val n11_or_13_divisible_by_7_is_not_0_or_7_or_13_or_11_or_13 = n11_or_",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val x = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                x += 1l\n            }\n            if (i % 7 == 0) {\n                x += 1l\n            }\n        }\n        x",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (n % 11 == 0)\n        val divisibleBy13 = (n % 13 == 0)\n        val divisibleBy7 = (n % 7 == 0)\n        val result = (divisibleBy11 || divisibleBy13) && divisibleBy7\n        if (result) {\n            println(\"(\", n, \",\", result, \")\")\n        } else {\n            println(\"(\", n, \",\", result, \")\")\n        }\n        return n",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1\n            }\n            if (i % 7 == 0) {\n                result += 1\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7Or5 = (i: Long) => divisibleBy11Or13And7(i) || divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7Or5Or3 = (i: Long) => divisibleBy11Or13And7Or5(i) || divisibleBy11Or13And7Or5(i) && i % 3 == 0\n        val divisibleBy11Or13And7Or5Or3Or1 = (i: Long) => divisibleBy11Or13And7Or5Or3(i) || divisibleBy11Or13And7Or5Or3(i) && i % 1 == 0\n        val divisibleBy11Or13And7Or5Or3Or1Or2 = (i: Long) => divisibleBy11Or13And7Or5Or3Or1(i) || divisibleBy11Or13And7Or5Or3Or1(i) && i % 2 == 0\n        val divisibleBy11Or13And7Or5Or3Or1Or2Or4 = (i: Long) => divisibleBy11Or13And7Or5Or3Or1Or2(i) || divisibleBy11Or13And7Or5Or3Or1Or2(i) && i % 4 == 0\n        val divisibleBy11Or13And7Or5Or3Or1Or2Or4Or6 = (i: Long) => divisibleBy11Or13And7Or5Or3Or1Or2Or4(i) || divisibleBy11Or13And7Or5Or3Or1Or2Or4(i) && i % 6 == 0\n        val divisibleBy11Or13And7Or5Or3Or1Or2Or4Or6Or8 = (",
    "        val nn = n.toInt\n        val divisibleBy11 = (nn % 11) == 0\n        val divisibleBy13 = (nn % 13) == 0\n        val divisibleBy7 = (nn % 7) == 0\n        val result = (divisibleBy11 || divisibleBy13) && divisibleBy7\n        if (result) {\n            return 1l\n        } else {\n            return 0l\n        }",
    "        val n11 = 11l\n        val n13 = 13l\n        val n7 = 7l\n        val n9 = 9l\n        val n5 = 5l\n        val n3 = 3l\n        val n1 = 1l\n        val n0 = 0l\n        val n2 = 2l\n        val n4 = 4l\n        val n6 = 6l\n        val n8 = 8l\n        val n10 = 10l\n        val n12 = 12l\n        val n14 = 14l\n        val n16 = 16l\n        val n18 = 18l\n        val n20 = 20l\n        val n22 = 22l\n        val n24 = 24l\n        val n26 = 26l\n        val n28 = 28l\n        val n30 = 30l\n        val n32 = 32l\n        val n34 = 34l\n        val n36 = 36l\n        val n38 = 38l\n        val n40 = 40l\n        val n42 = 42l\n        val n44 = 44l\n        val n46 = 46l\n        val n48 = 48l\n        val n50 = 50l\n        val n52 = 52l\n        val n54 = 54l\n        val n56 = 56l\n        val n58 = 58l\n        val n60 = 60l\n        val n62 = 62l\n        val n64 = 64l\n        val n66 = 66l\n        val n68 = 68l\n        val n70 = 70l\n        val n72 = 72l\n        val n74 = 74l\n        val n76 = 76l\n        val n78 = 78l\n        val n80 = 80l\n        val n82 = 82l\n        val n84 = 84l\n        val n86 = 86l\n        val n88 = 88l\n        val n90 = 90l\n        val n92 = 92l\n        val n94 = 94l\n        val n96 = 96l\n        val n98 = 98l\n        val n100 = 100l\n        val n102 = 102l\n        val n104 = 104l\n        val n106 = 106l\n        val n108 = 108l\n        val n110 = 110l\n        val n112 = 112l\n",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            val divisibleBy11 = i % 11 == 0\n            val divisibleBy13 = i % 13 == 0\n            if divisibleBy11 || divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 && divisibleBy13 {\n                result += 1l\n            }\n            if divisibleBy11 {\n                result += 1l\n            }\n            if divisibleBy13 {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (i: Long) => i % 11 == 0\n        val divisibleBy13 = (i: Long) => i % 13 == 0\n        val divisibleBy11Or13 = (i: Long) => divisibleBy11(i) || divisibleBy13(i)\n        val divisibleBy11Or13And7 = (i: Long) => divisibleBy11Or13(i) && i % 7 == 0\n        val divisibleBy11Or13And7And5 = (i: Long) => divisibleBy11Or13And7(i) && i % 5 == 0\n        val divisibleBy11Or13And7And5And3 = (i: Long) => divisibleBy11Or13And7And5(i) && i % 3 == 0\n        val divisibleBy11Or13And7And5And3And1 = (i: Long) => divisibleBy11Or13And7And5And3(i) && i % 1 == 0\n        val divisibleBy11Or13And7And5And3And1And2 = (i: Long) => divisibleBy11Or13And7And5And3And1(i) && i % 2 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4 = (i: Long) => divisibleBy11Or13And7And5And3And1And2(i) && i % 4 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4(i) && i % 6 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6(i) && i % 8 == 0\n        val divisibleBy11Or13And7And5And3And1And2And4And6And8And9 = (i: Long) => divisibleBy11Or13And7And5And3And1And2And4And6And8(i) && i % 9 == 0\n        val",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val x = (n / 11) * 11\n        val y = (n / 13) * 13\n        val z = (n % 11) * 11\n        val r = (x + y + z)\n        if (r == n) {\n            return 1l\n        } else if (r < n) {\n            return 0l\n        } else {\n            return 2l\n        }",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        var i = 0l\n        while (i < n) {\n            var j = i\n            while (j < n && (j % 11l == 0 || j % 13l == 0)) {\n                j += 1l\n            }\n            if (j == n) {\n                i += 1l\n            } else {\n                i = j\n            }\n        }\n        return i",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val result = 0l\n        for (i <- 0 until n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                result += 1l\n            }\n            if (i % 7 == 0) {\n                result += 1l\n            }\n        }\n        result",
    "        val divisibleBy11 = (n % 11) == 0\n        val divisibleBy13 = (n % 13) == 0\n        val divisibleBy7 = (n % 7) == 0\n        val result = (divisibleBy11 || divisibleBy13) ? 1 : 0\n        return result + (divisibleBy7 ? 1 : 0)",
    "        val divisibleBy11 = (n % 11) == 0\n        val divisibleBy13 = (n % 13) == 0\n        val divisibleBy7 = (n % 7) == 0\n        val result = (divisibleBy11 || divisibleBy13) && divisibleBy7 ? 1 : 0\n        return result",
    "        var i = 0l\n        while (i < n) {\n            var j = i\n            while (j < n && j % 11 != 0 && j % 13 != 0) {\n                j = j + 1\n            }\n            if (j == n) {\n                i = i + 1\n            } else {\n                if (j % 11 == 0) {\n                    i = i + 1\n                }\n                if (j % 13 == 0) {\n                    i = i + 1\n                }\n            }\n        }\n        return i",
    "        val nn = n.toInt\n        val fizz = 0\n        val buzz = 0\n        val divisibleBy11 = 0\n        val divisibleBy13 = 0\n        for (i <- 1 to nn) {\n            if (i % 11 == 0) {\n                divisibleBy11 += 1\n            }\n            if (i % 13 == 0) {\n                divisibleBy13 += 1\n            }\n            if (i % 15 == 0) {\n                fizz += 1\n            }\n            if (i % 5 == 0) {\n                buzz += 1\n            }\n        }\n        val result = fizz * buzz\n        if (divisibleBy11 > 0) {\n            result += divisibleBy11\n        }\n        if (divisibleBy13 > 0) {\n            result += divisibleBy13\n        }\n        return result"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
name: HumanEval_81_numerical_letter_grade
language: rkt
prompt: "#lang racket\n\n;; It is the last week of the semester and the teacher has\
  \ to give the grades\n;; to students. The teacher has been making her own algorithm\
  \ for grading.\n;; The only problem is, she has lost the code she used for grading.\n\
  ;; She has given you a list of GPAs for some students and you have to write \n;;\
  \ a function that can output a list of letter grades using the following table:\n\
  ;; GPA       |    Letter grade\n;; 4.0                A+\n;; > 3.7             \
  \   A \n;; > 3.3                A- \n;; > 3.0                B+\n;; > 2.7      \
  \          B \n;; > 2.3                B-\n;; > 2.0                C+\n;; > 1.7\
  \                C\n;; > 1.3                C-\n;; > 1.0                D+ \n;;\
  \ > 0.7                D \n;; > 0.0                D-\n;; 0.0                E\n\
  ;; Example:\n;; >>> (grade_equation (list 4.0 3 1.7 2 3.5))\n;; (list \"A+\" \"\
  B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade grades)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
  \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
  \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal?\
  \ (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0))\
  \ (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list\
  \ \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7))\
  \ (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
completions: ["  (cond\n   [(>= (car grades) 4.0) (cons \"A+\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 3.7) (cons \"A\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 3.0) (cons \"B+\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 2.0) (cons \"C+\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 1.0) (cons \"D+\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 0.7) (cons \"D\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(>= (car grades) 0.0) (cons \"D-\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(= (car grades) 0.0) (cons \"E\" (numerical_letter_grade\
    \ (cdr grades)))]\n   [(null? grades) empty]))\n\n", "  (map (lambda (x)\n   \
    \      (cond ((>= x 4.0) \"A+\")\n               ((>= x 3.7) \"A\")\n        \
    \       ((>= x 3.3) \"A-\")\n               ((>= x 3.0) \"B+\")\n            \
    \   ((>= x 2.7) \"B\")\n               ((>= x 2.3) \"B-\")\n               ((>=\
    \ x 2.0) \"C+\")\n               ((>= x 1.7) \"C\")\n               ((>= x 1.3)\
    \ \"C-\")\n               ((>= x 1.0) \"D+\")\n               ((>= x 0.7) \"D\"\
    )\n               ((>= x 0.0) \"D-\")\n               (else \"E\")))\n       grades))\n\
    \n", "  (if (null? grades) '()\n      (cons (give_letter_grade (car grades))\n\
    \            (numerical_letter_grade (cdr grades)))))\n", "  (cond \n    [(empty?\
    \ grades) empty]\n    [(<= (first grades) 0.0) (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 0.7) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 1.0) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 2.0) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 3.0) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= (first grades) 3.7) (cons \"A\" (numerical_letter_grade\
    \ (rest grades)))]\n    [else (cons \"A+\" (numerical_letter_grade (rest grades)))]))\n",
  "  (map (lambda (grade)\n         (cond [(= grade 4.0) \"A+\"]\n               [(>\
    \ grade 3.7) \"A\"]\n               [(> grade 3.3) \"A-\"]\n               [(>\
    \ grade 3.0) \"B+\"]\n               [(> grade 2.7) \"B\"]\n               [(>\
    \ grade 2.3) \"B-\"]\n               [(> grade 2.0) \"C+\"]\n               [(>\
    \ grade 1.7) \"C\"]\n               [(> grade 1.3) \"C-\"]\n               [(>\
    \ grade 1.0) \"D+\"]\n               [(> grade 0.7) \"D\"]\n               [(>\
    \ grade 0.0) \"D-\"]\n               [else \"E\"]))\n       grades))\n```\n\n\
    ```racket\n#lang racket\n", "  (map \n   (lambda (grade)\n     (cond \n      \
    \ [(>= grade 4.0) 'A+]\n       [(>= grade 3.7) 'A]\n       [(>= grade 3.3) 'A-]\n\
    \       [(>= grade 3.0) 'B+]\n       [(>= grade 2.7) 'B]\n       [(>= grade 2.3)\
    \ 'B-]\n       [(>= grade 2.0) 'C+]\n       [(>= grade 1.7) 'C]\n       [(>= grade\
    \ 1.3) 'C-]\n       [(>= grade 1.0) 'D+]\n       [(>= grade 0.7) 'D]\n       [(>=\
    \ grade 0.0) 'D-]\n       [else 'E]))\n   grades))\n", "  (map\n   (lambda (grade)\n\
    \     (cond\n       [(>= grade 4.0) \"A+\"]\n       [(>= grade 3.7) \"A\"]\n \
    \      [(>= grade 3.3) \"A-\"]\n       [(>= grade 3.0) \"B+\"]\n       [(>= grade\
    \ 2.7) \"B\"]\n       [(>= grade 2.3) \"B-\"]\n       [(>= grade 2.0) \"C+\"]\n\
    \       [(>= grade 1.7) \"C\"]\n       [(>= grade 1.3) \"C-\"]\n       [(>= grade\
    \ 1.0) \"D+\"]\n       [(>= grade 0.7) \"D\"]\n       [(>= grade 0.0) \"D-\"]\n\
    \       [else \"E\"]))\n   grades))\n", "  (map (lambda (x)\n         (cond\n\
    \           [(< x 0.0) \"E\"]\n           [(< x 0.7) \"D-\"]\n           [(< x\
    \ 1.0) \"D+\"]\n           [(< x 1.3) \"C-\"]\n           [(< x 1.7) \"C\"]\n\
    \           [(< x 2.0) \"C+\"]\n           [(< x 2.3) \"B-\"]\n           [(<\
    \ x 2.7) \"B\"]\n           [(< x 3.0) \"B+\"]\n           [(< x 3.3) \"A-\"]\n\
    \           [(< x 3.7) \"A\"]\n           [(< x 4.0) \"A+\"]))\n       grades))",
  "  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons \"A+\"\
    \ (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3) (cons\
    \ \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.0)\
    \ (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(= (first grades)\
    \ 0.0) (cons \"E\" (numerical_letter_grade (rest grades)))]\n    [else (cons \"\
    D-\" (numerical_letter_grade (rest grades)))]))\n", "\t(map \n\t\t(lambda (gpa)\
    \ \n\t\t\t(cond \n\t\t\t\t[(>= gpa 4.0)\n\t\t\t\t\t\"A+\"]\n\t\t\t\t[(>= gpa 3.7)\n\
    \t\t\t\t\t\"A\"]\n\t\t\t\t[(>= gpa 3.3)\n\t\t\t\t\t\"A-\"]\n\t\t\t\t[(>= gpa 3.0)\n\
    \t\t\t\t\t\"B+\"]\n\t\t\t\t[(>= gpa 2.7)\n\t\t\t\t\t\"B\"]\n\t\t\t\t[(>= gpa 2.3)\n\
    \t\t\t\t\t\"B-\"]\n\t\t\t\t[(>= gpa 2.0)\n\t\t\t\t\t\"C+\"]\n\t\t\t\t[(>= gpa\
    \ 1.7)\n\t\t\t\t\t\"C\"]\n\t\t\t\t[(>= gpa 1.3)\n\t\t\t\t\t\"C-\"]\n\t\t\t\t[(>=\
    \ gpa 1.0)\n\t\t\t\t\t\"D+\"]\n\t\t\t\t[(>= gpa 0.7)\n\t\t\t\t\t\"D\"]\n\t\t\t\
    \t[(>= gpa 0.0)\n\t\t\t\t\t\"D-\"]\n\t\t\t\t[(= gpa 0.0)\n\t\t\t\t\t\"E\"]\n\t\
    \t\t\t[else\n\t\t\t\t\t\"Error\"]))\n\t\tgrades))\n", "  (map\n   (lambda (gpa)\n\
    \     (cond\n       [(>= gpa 4.0) \"A+\"]\n       [(>= gpa 3.7) \"A\"]\n     \
    \  [(>= gpa 3.3) \"A-\"]\n       [(>= gpa 3.0) \"B+\"]\n       [(>= gpa 2.7) \"\
    B\"]\n       [(>= gpa 2.3) \"B-\"]\n       [(>= gpa 2.0) \"C+\"]\n       [(>=\
    \ gpa 1.7) \"C\"]\n       [(>= gpa 1.3) \"C-\"]\n       [(>= gpa 1.0) \"D+\"]\n\
    \       [(>= gpa 0.7) \"D\"]\n       [(>= gpa 0.0) \"D-\"]\n       [else \"E\"\
    ]))\n   grades))\n", "  (map (lambda (grade)\n\t (cond\n\t  ((= grade 4.0) \"\
    A+\")\n\t  ((> grade 3.7) \"A\")\n\t  ((> grade 3.3) \"A-\")\n\t  ((> grade 3.0)\
    \ \"B+\")\n\t  ((> grade 2.7) \"B\")\n\t  ((> grade 2.3) \"B-\")\n\t  ((> grade\
    \ 2.0) \"C+\")\n\t  ((> grade 1.7) \"C\")\n\t  ((> grade 1.3) \"C-\")\n\t  ((>\
    \ grade 1.0) \"D+\")\n\t  ((> grade 0.7) \"D\")\n\t  ((> grade 0.0) \"D-\")\n\t\
    \  (else \"E\")))\n\tgrades))\n\n", "  (map\n   (lambda (gpa)\n     (cond\n  \
    \     [(>= gpa 4.0) \"A+\"]\n       [(>= gpa 3.7) \"A\"]\n       [(>= gpa 3.3)\
    \ \"A-\"]\n       [(>= gpa 3.0) \"B+\"]\n       [(>= gpa 2.7) \"B\"]\n       [(>=\
    \ gpa 2.3) \"B-\"]\n       [(>= gpa 2.0) \"C+\"]\n       [(>= gpa 1.7) \"C\"]\n\
    \       [(>= gpa 1.3) \"C-\"]\n       [(>= gpa 1.0) \"D+\"]\n       [(>= gpa 0.7)\
    \ \"D\"]\n       [(>= gpa 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n",
  "  (map (lambda (x) (cond ((>= x 4.0) \"A+\")\n                         ((>= x 3.7)\
    \ \"A\")\n                         ((>= x 3.3) \"A-\")\n                     \
    \    ((>= x 3.0) \"B+\")\n                         ((>= x 2.7) \"B\")\n      \
    \                   ((>= x 2.3) \"B-\")\n                         ((>= x 2.0)\
    \ \"C+\")\n                         ((>= x 1.7) \"C\")\n                     \
    \    ((>= x 1.3) \"C-\")\n                         ((>= x 1.0) \"D+\")\n     \
    \                    ((>= x 0.7) \"D\")\n                         ((>= x 0.0)\
    \ \"D-\")\n                         (else \"E\"))) grades))\n", "  (map \n   (lambda\
    \ (gpa)\n     (cond\n      [(>= gpa 4.0) \"A+\"]\n      [(>= gpa 3.7) \"A\"]\n\
    \      [(>= gpa 3.3) \"A-\"]\n      [(>= gpa 3.0) \"B+\"]\n      [(>= gpa 2.7)\
    \ \"B\"]\n      [(>= gpa 2.3) \"B-\"]\n      [(>= gpa 2.0) \"C+\"]\n      [(>=\
    \ gpa 1.7) \"C\"]\n      [(>= gpa 1.3) \"C-\"]\n      [(>= gpa 1.0) \"D+\"]\n\
    \      [(>= gpa 0.7) \"D\"]\n      [(>= gpa 0.0) \"D-\"]\n      [(>= gpa 0.0)\
    \ \"E\"]\n      ))\n   grades))\n", "  (map\n   (lambda (x)\n     (cond\n    \
    \   [(>= x 4.0) \"A+\"]\n       [(>= x 3.7) \"A\"]\n       [(>= x 3.3) \"A-\"\
    ]\n       [(>= x 3.0) \"B+\"]\n       [(>= x 2.7) \"B\"]\n       [(>= x 2.3) \"\
    B-\"]\n       [(>= x 2.0) \"C+\"]\n       [(>= x 1.7) \"C\"]\n       [(>= x 1.3)\
    \ \"C-\"]\n       [(>= x 1.0) \"D+\"]\n       [(>= x 0.7) \"D\"]\n       [(>=\
    \ x 0.0) \"D-\"]\n       [(= x 0.0) \"E\"]))\n   grades))\n", "  (for/list ([g\
    \ grades])\n    (match g\n      [(and (>= _ 4.0) (<= _ 5.0)) \"A+\"]\n      [(and\
    \ (>= _ 3.7) (<= _ 3.99)) \"A\"]\n      [(and (>= _ 3.3) (<= _ 3.69)) \"A-\"]\n\
    \      [(and (>= _ 3.0) (<= _ 3.29)) \"B+\"]\n      [(and (>= _ 2.7) (<= _ 2.99))\
    \ \"B\"]\n      [(and (>= _ 2.3) (<= _ 2.69)) \"B-\"]\n      [(and (>= _ 2.0)\
    \ (<= _ 2.29)) \"C+\"]\n      [(and (>= _ 1.7) (<= _ 1.99)) \"C\"]\n      [(and\
    \ (>= _ 1.3) (<= _ 1.69)) \"C-\"]\n      [(and (>= _ 1.0) (<= _ 1.29)) \"D+\"\
    ]\n      [(and (>= _ 0.7) (<= _ 0.99)) \"D\"]\n      [(and (>= _ 0.0) (<= _ 0.69))\
    \ \"D-\"]\n      [(= _ 0.0) \"E\"])))\n", "  (for/list ([g grades])\n    (cond\n\
    \      [(>= g 4.0) \"A+\"]\n      [(>= g 3.7) \"A\"]\n      [(>= g 3.3) \"A-\"\
    ]\n      [(>= g 3.0) \"B+\"]\n      [(>= g 2.7) \"B\"]\n      [(>= g 2.3) \"B-\"\
    ]\n      [(>= g 2.0) \"C+\"]\n      [(>= g 1.7) \"C\"]\n      [(>= g 1.3) \"C-\"\
    ]\n      [(>= g 1.0) \"D+\"]\n      [(>= g 0.7) \"D\"]\n      [(>= g 0.0) \"D-\"\
    ]\n      [else \"E\"])))\n", "  (cond\n    [(null? grades) '()]\n    [(>= (car\
    \ grades) 4.0) (cons \"A+\" (numerical_letter_grade (cdr grades)))]\n    [(>=\
    \ (car grades) 3.7) (cons \"A\" (numerical_letter_grade (cdr grades)))]\n    [(>=\
    \ (car grades) 3.3) (cons \"A-\" (numerical_letter_grade (cdr grades)))]\n   \
    \ [(>= (car grades) 3.0) (cons \"B+\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 2.7) (cons \"B\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 2.3) (cons \"B-\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 2.0) (cons \"C+\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 1.7) (cons \"C\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 1.3) (cons \"C-\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 1.0) (cons \"D+\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 0.7) (cons \"D\" (numerical_letter_grade (cdr grades)))]\n\
    \    [(>= (car grades) 0.0) (cons \"D-\" (numerical_letter_grade (cdr grades)))]\n\
    \    [else (cons \"E\" (numerical_letter_grade (cdr grades)))]))\n", "  (map (lambda\
    \ (x)\n\t(cond\n\t ((>= x 4.0) \"A+\")\n\t ((>= x 3.7) \"A\")\n\t ((>= x 3.3)\
    \ \"A-\")\n\t ((>= x 3.0) \"B+\")\n\t ((>= x 2.7) \"B\")\n\t ((>= x 2.3) \"B-\"\
    )\n\t ((>= x 2.0) \"C+\")\n\t ((>= x 1.7) \"C\")\n\t ((>= x 1.3) \"C-\")\n\t ((>=\
    \ x 1.0) \"D+\")\n\t ((>= x 0.7) \"D\")\n\t ((>= x 0.0) \"D-\")\n\t (else \"E\"\
    )))\n       grades))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

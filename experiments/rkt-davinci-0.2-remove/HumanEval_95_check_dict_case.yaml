name: HumanEval_95_check_dict_case
language: rkt
prompt: "#lang racket\n\n;; Given a dictionary, return True if all keys are strings\
  \ in lower \n;; case or all keys are strings in upper case, else return False.\n\
  ;; The function should return False is the given dictionary is empty.\n;; Examples:\n\
  (define (check_dict_case dict)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate check_dict_case))\n\
  \    (check-equal? (candidate #hash((\"p\" .  \"pineapple\") (\"b\" .  \"banana\"\
  ))) #t)\n    (check-equal? (candidate #hash((\"p\" .  \"pineapple\") (\"A\" .  \"\
  banana\") (\"B\" .  \"banana\"))) #f)\n    (check-equal? (candidate #hash((\"p\"\
  \ .  \"pineapple\") (5 .  \"banana\") (\"a\" .  \"apple\"))) #f)\n    (check-equal?\
  \ (candidate #hash((\"Name\" .  \"John\") (\"Age\" .  \"36\") (\"City\" .  \"Houston\"\
  ))) #f)\n    (check-equal? (candidate #hash((\"STATE\" .  \"NC\") (\"ZIP\" .  \"\
  12345\"))) #t)\n    (check-equal? (candidate #hash((\"fruit\" .  \"Orange\") (\"\
  taste\" .  \"Sweet\"))) #t)\n    (check-equal? (candidate #hash()) #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? dict) false]\n    [(and (string? (key dict))\n\
    \          (string-ci=? (key dict) (string-downcase (key dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [(and (string? (key dict))\n          (string-ci=? (key dict)\
    \ (string-upcase (key dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string? (first (keys (rest dict)))))\n     (and (string-ci=?\
    \ (first (keys dict)) (first (keys (rest dict))))\n          (check_dict_case\
    \ (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n  \
    \  [(and (string? (key dict))\n          (string-ci=? (key dict) (string-downcase\
    \ (key dict))))\n     (check-dict-case (rest dict))]\n    [(and (string? (key\
    \ dict))\n          (string-ci=? (key dict) (string-upcase (key dict))))\n   \
    \  (check-dict-case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (key dict))\n          (or (string-ci=? (key\
    \ dict) (string-downcase (key dict)))\n              (string-ci=? (key dict) (string-upcase\
    \ (key dict)))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond [(empty? dict) #f]\n        [(and (string? (first (keys dict)))\n     \
    \         (or (string-ci=? (first (keys dict)) (first (keys dict)))\n        \
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict))))))\n\
    \         (check_dict_case (rest dict))]\n        [else #f]))\n", "  (cond\n \
    \   [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n         \
    \ (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict))\
    \ (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n   \
    \ [else false]))\n", "  (cond [(empty? dict) #f]\n        [(and (string? (first\
    \ (keys dict)))\n              (string? (first (keys (rest dict)))))\n       \
    \  (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n       \
    \       (check_dict_case (rest dict)))]\n        [else #f]))\n", "  (cond\n  \
    \  [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n          (string?\
    \ (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict)) (first\
    \ (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (and (check_dict_case (rest dict))\n          (string-ci=? (first (keys\
    \ dict)) (string-upcase (first (keys dict)))))]\n    [(and (string? (first (keys\
    \ dict)))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n    \
    \      (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n   \
    \ [(and (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n    \
    \      (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string-ci=? (hash-ref dict (hash-key dict))\n        \
    \               (hash-ref dict (hash-key dict)))\n          (check-dict-case (hash-remove\
    \ dict (hash-key dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (or (string-ci=? (first (keys dict)) (first (keys (rest\
    \ dict))))\n              (string-ci=? (string-upcase (first (keys dict))) (first\
    \ (keys (rest dict)))))\n          (check_dict_case (rest dict)))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys\
    \ dict)))\n          (string-ci=? (first (keys dict)) (string-upcase (first (keys\
    \ dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=? (first\
    \ (keys dict)) (string-upcase (first (keys dict)))))]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))]\n    [else #f]))\n",
  "  (if (empty? dict)\n      #f\n      (let ([keys (keys dict)])\n        (if (andmap\
    \ string-ci=? keys)\n            #t\n            (andmap string-ci=? (map string-upcase\
    \ keys))))))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys\
    \ dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict)))) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (key\
    \ (first dict)))\n          (string? (key (first (rest dict)))))\n     (and (string-ci=?\
    \ (key (first dict)) (key (first (rest dict))))\n          (check_dict_case (rest\
    \ dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase\
    \ (first (keys dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase\
    \ (first (keys dict)))))\n     (check_dict_case (rest dict))]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict)))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys\
    \ dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys\
    \ (rest dict))))\n          (check_dict_case (rest dict)))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (car (keys dict)))\n   \
    \       (string? (car (keys (cdr dict)))))\n     (and (string-ci=? (car (keys\
    \ dict)) (car (keys (cdr dict))))\n          (check_dict_case (cdr dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))\n     (check_dict_case (rest dict))]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase (first\
    \ (keys dict)))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n\
    \          (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n    \
    \ (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n        \
    \  (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (key\
    \ dict))\n          (or (string-ci=? (key dict) (key dict)))\n          (check_dict_case\
    \ (rest dict)))]\n    [else false]))\n", "  (cond [(empty? dict) #f]\n       \
    \ [(and (string-ci=? (car (keys dict)) (car (keys dict)))\n              (string-ci=?\
    \ (car (keys dict)) (car (keys dict))))\n         (check_dict_case (cdr dict))]\n\
    \        [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (key dict))\n          (string? (key (rest dict))))\n     (and (string-ci=?\
    \ (key dict) (key (rest dict)))\n          (check_dict_case (rest dict)))]\n \
    \   [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (key\
    \ dict))\n          (string-ci=? (key dict) (string-downcase (key dict))))\n \
    \    (check-dict-case (rest dict))]\n    [(and (string? (key dict))\n        \
    \  (string-ci=? (key dict) (string-upcase (key dict))))\n     (check-dict-case\
    \ (rest dict))]\n    [else #f]))\n", "  (if (empty? dict)\n      #f\n      (let\
    \ ([keys (keys dict)])\n        (if (andmap string-ci=? keys)\n            #t\n\
    \            (andmap string-ci=? (map string-upcase keys))))))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys\
    \ dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (key dict))\n          (string? (key (rest dict))))\n     (and (string-ci=?\
    \ (key dict) (key (rest dict)))\n          (check_dict_case (rest dict)))]\n \
    \   [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict)))))\n     (check-dict-case-helper dict)]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase\
    \ (first (keys dict)))))\n     (check-dict-case-helper dict)]\n    [else false]))\n",
  "  (cond [(empty? dict) false]\n        [(andmap string? (map key dict))\n     \
    \    (or (andmap string-ci=? (map key dict))\n             (andmap string-ci=?\
    \ (map key dict) #:key (\u03BB (x) (string-upcase x))))]\n        [else false]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n    \
    \      (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and\
    \ (string? (first (keys dict)))\n          (string-ci=? (first (keys dict)) (first\
    \ (keys dict))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n   \
    \ [(and (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n    \
    \      (check_dict_case (rest dict)))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict)))) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (or (string-ci=? (first (keys dict)) (first\
    \ (keys (rest dict))))\n              (string-ci=? (string-upcase (first (keys\
    \ dict))) (first (keys (rest dict)))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys\
    \ dict))))\n     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys\
    \ dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (keys\
    \ dict)])\n        (if (andmap string-lowercase? keys)\n            (andmap string-uppercase?\
    \ keys)\n            #f))))\n", "  (let ([keys (hash-keys dict)])\n    (cond [(empty?\
    \ keys) #f]\n          [(andmap string-lowercase? keys) #t]\n          [(andmap\
    \ string-uppercase? keys) #t]\n          [else #f])))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (key\
    \ dict))\n          (string-ci=? (key dict) (string-downcase (key dict))))\n \
    \    (check-dict-case (rest dict))]\n    [(and (string? (key dict))\n        \
    \  (string-ci=? (key dict) (string-upcase (key dict))))\n     (check-dict-case\
    \ (rest dict))]\n    [else #f]))\n</code>\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (key dict))\n          (string? (key (rest dict))))\n    \
    \ (and (string-ci=? (key dict) (key (rest dict)))\n          (check_dict_case\
    \ (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string? (first (keys (rest dict)))))\n     (and (string-ci=?\
    \ (first (keys dict)) (first (keys (rest dict))))\n          (check_dict_case\
    \ (rest dict)))]\n    [else false]))\n", "  (if (empty? dict)\n      #f\n    \
    \  (let ([keys (keys dict)])\n        (if (andmap string-ci=? keys)\n        \
    \    #t\n            (andmap string-ci=? (map string-upcase keys))))))\n", " \
    \ (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (key\
    \ dict)) (string-ci=? (key dict) (string-downcase (key dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [(and (string? (key dict)) (string-ci=? (key dict) (string-upcase\
    \ (key dict))))\n     (check_dict_case (rest dict))]\n    [else false]))\n", " \
    \ (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-downcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (cond\n       [(and (string-ci=? (first (keys dict))\
    \ (first (keys (rest dict))))\n             (check_dict_case (rest dict)))\n \
    \       true]\n       [else false])]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string? (first (keys (rest dict)))))\n     (and (string-ci=?\
    \ (first (keys dict)) (first (keys (rest dict))))\n          (check_dict_case\
    \ (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string-ci=? (first (keys dict)) (string-downcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys\
    \ (rest dict))))\n          (check_dict_case (rest dict)))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n   \
    \ [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys dict))\
    \ (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n",
  "  (if (empty? dict)\n      #f\n      (let ([keys (map key dict)])\n        (if\
    \ (andmap string-ci=? keys)\n            #t\n            #f))))\n", "  (if (empty?\
    \ dict)\n      #f\n      (let ([keys (keys dict)])\n        (if (andmap string-ci=?\
    \ keys)\n            #t\n            (andmap string-ci=? (map string-upcase keys))))))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys\
    \ (rest dict))))\n          (check_dict_case (rest dict)))]\n    [else false]))\n\
    </code>\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string-ci=? (hash-ref\
    \ dict (hash-keys dict 0))\n                       (hash-ref dict (hash-keys dict\
    \ 0))\n                       (hash-ref dict (hash-keys dict 1))\n           \
    \            (hash-ref dict (hash-keys dict 1)))\n          (string-ci=? (hash-ref\
    \ dict (hash-keys dict 0))\n                       (hash-ref dict (hash-keys dict\
    \ 0))\n                       (hash-ref dict (hash-keys dict 2))\n           \
    \            (hash-ref dict (hash-keys dict 2))))\n     #t]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (key\
    \ dict))\n          (or (string-ci=? (key dict) (key dict)))\n              (string-ci=?\
    \ (key dict) (key dict))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\
    \ #t]\n    [else #f]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (map\
    \ key dict)])\n        (if (every string? keys)\n            (if (every string-ci=?\
    \ keys)\n                #t\n                #f)\n            #f))))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (key\
    \ dict))\n          (string-ci=? (key dict) (string-downcase (key dict))))\n \
    \    (check-dict-case (rest dict))]\n    [(and (string? (key dict))\n        \
    \  (string-ci=? (key dict) (string-upcase (key dict))))\n     (check-dict-case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n   \
    \ [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys dict))\
    \ (string-downcase (first (keys dict)))))\n     (check_dict_case (rest dict))]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (string-upcase (first (keys dict)))))\n     (check_dict_case (rest dict))]\n\
    \    [else false]))\n", "  (if (empty? dict)\n      #f\n      (let ((keys (map\
    \ key dict)))\n        (if (andmap string-lower-case? keys)\n            (andmap\
    \ string-upper-case? keys)\n            #f))))\n", "  (cond\n    [(empty? dict)\
    \ false]\n    [(and (string? (key dict))\n          (string-ci=? (key dict) (string-downcase\
    \ (key dict))))\n     (check-dict-case (rest dict))]\n    [(and (string? (key\
    \ dict))\n          (string-ci=? (key dict) (string-upcase (key dict))))\n   \
    \  (check-dict-case (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))\n     (check_dict_case (rest dict))]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase (first\
    \ (keys dict)))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n   \
    \ [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys dict))\
    \ (first (keys dict)))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict)\
    \ false]\n    [(and (string? (key dict))\n          (or (string-ci=? (key dict)\
    \ (key dict)))\n              (string-ci=? (key dict) (key dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n   \
    \ [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys dict))\
    \ (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n    \
    \      (string-ci=? (first (keys dict)) (string-downcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))\n     (and (check_dict_case\
    \ (rest dict))\n          (string-ci=? (first (keys dict)) (string-upcase (first\
    \ (keys dict)))))]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))\n     (and (check_dict_case\
    \ (rest dict))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string-ci=?\
    \ (key dict) (string-downcase (key dict)))\n          (string-ci=? (key dict)\
    \ (string-upcase (key dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (key dict))\n\
    \          (or (string-ci=? (key dict) (string-downcase (key dict)))\n       \
    \       (string-ci=? (key dict) (string-upcase (key dict)))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else false]))\n", "  (if (empty? dict)\n\
    \      #f\n      (let ([keys (keys dict)])\n        (if (andmap string-ci=? keys)\n\
    \            #t\n            (andmap string-ci=? (map string-upcase keys))))))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(andmap string-ci=? (map key dict)) #t]\n\
    \    [(andmap string-ci=? (map key dict) (map (lambda (x) (string-upcase x)) (map\
    \ key dict))) #t]\n    [else #f]))\n", "  (if (empty? dict)\n      #f\n      (let\
    \ ([keys (keys dict)])\n        (if (andmap string-ci=? keys)\n            #t\n\
    \            (andmap string-upcase=? keys)))))\n", "  (cond\n    [(empty? dict)\
    \ false]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (key\
    \ dict))\n          (string-ci=? (key dict) (string-downcase (key dict))))\n \
    \    (check-dict-case (rest dict))]\n    [(and (string? (key dict))\n        \
    \  (string-ci=? (key dict) (string-upcase (key dict))))\n     (check-dict-case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n   \
    \ [(and (string? (key dict))\n          (string? (key (rest dict))))\n     (and\
    \ (string-ci=? (key dict) (key (rest dict)))\n          (check_dict_case (rest\
    \ dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n    \
    \      (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))\n     (check-dict-case-helper\
    \ dict)]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (string-downcase (first (keys dict)))))\n     (check-dict-case-helper\
    \ dict)]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict)))))\n     (check-dict-case (rest dict))]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase\
    \ (first (keys dict)))))\n     (check-dict-case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n    \
    \      (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and\
    \ (string? (key dict)) (string-ci=? (key dict) (string-upcase (key dict))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (key dict)) (string-ci=?\
    \ (key dict) (string-downcase (key dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (lower-case? (first (keys dict)))\n       \
    \   (lower-case? (first (keys (rest dict)))))]\n    [(and (string? (first (keys\
    \ dict)))\n          (string? (first (keys (rest dict)))))\n     (and (upper-case?\
    \ (first (keys dict)))\n          (upper-case? (first (keys (rest dict)))))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n    \
    \ (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n        \
    \  (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys\
    \ (rest dict))))\n          (check_dict_case (rest dict)))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n    \
    \      (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n   \
    \ [(and (string? (key dict))\n          (or (string-ci=? (key dict) (key dict)))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys\
    \ dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (keys\
    \ dict)])\n        (if (or (every string-lowercase? keys)\n                (every\
    \ string-uppercase? keys))\n            #t\n            #f))))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))\n     (check-dict-case\
    \ (rest dict))]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))\n     (check-dict-case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n   \
    \ [(and (string? (key dict))\n          (string? (key (rest dict))))\n     (and\
    \ (string-ci=? (key dict) (key (rest dict)))\n          (check_dict_case (rest\
    \ dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and\
    \ (string? (key dict))\n          (string-ci=? (key dict) (string-downcase (key\
    \ dict))))\n     (check-dict-case (rest dict))]\n    [(and (string? (key dict))\n\
    \          (string-ci=? (key dict) (string-upcase (key dict))))\n     (check-dict-case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and\
    \ (string? (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase\
    \ (first (keys dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict)))))\n     (and (check_dict_case (rest dict))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (or (string-ci=? (first (keys dict)) (first (keys dict)))\n\
    \              (string-ci=? (first (keys dict)) (string-upcase (first (keys dict))))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (if (empty? dict)\n\
    \      #f\n      (let ([keys (keys dict)])\n        (if (andmap string-ci=? keys)\n\
    \            #t\n            (andmap string-ci=? (map string-upcase keys))))))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string-ci=? (first (keys dict)) (string-downcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n    \
    \ (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n        \
    \  (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase\
    \ (first (keys dict)))))\n     (check_dict_case (rest dict))]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict)))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string-ci=? (key dict) (string-downcase\
    \ (key dict)))\n          (string-ci=? (key dict) (string-upcase (key dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string-ci=? (first (keys dict)) (first (keys dict)))\n\
    \          (check_dict_case (rest dict))) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string-ci=? (car (first dict)) (car (first\
    \ dict)))\n          (string-ci=? (cdr (first dict)) (cdr (first dict))))\n  \
    \   (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (or (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict))))\n              (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict))))))\n     (check_dict_case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond [(empty? dict) false]\n        [(and\
    \ (string? (first (keys dict)))\n              (string? (first (keys (rest dict)))))\n\
    \         (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \              (check_dict_case (rest dict)))]\n        [else false]))\n", " \
    \ (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n   \
    \ [(and (string? (first (keys dict)))\n          (check-case (first (keys dict))))\n\
    \     (and (check-dict-case (rest (keys dict)))\n          (check-case (first\
    \ (keys dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and\
    \ (string-ci=? (car (keys dict)) (car (keys dict)))\n          (check_dict_case\
    \ (cdr dict)))\n     #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (string-upcase (first (keys dict)))))\n     (check-dict-case (rest dict))]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (string-downcase (first (keys dict)))))\n     (check-dict-case (rest\
    \ dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string-ci=? (first (keys dict)) (first\
    \ (keys dict))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n    \
    \      (or (string-ci=? (first (keys dict)) (first (keys dict)))\n           \
    \   (string-ci=? (first (keys dict)) (string-upcase (first (keys dict))))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (key dict))\n          (string-ci=? (key dict)\
    \ (string-downcase (key dict))))\n     (check-dict-case (rest dict))]\n    [(and\
    \ (string? (key dict))\n          (string-ci=? (key dict) (string-upcase (key\
    \ dict))))\n     (check-dict-case (rest dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (key dict))\n          (string-ci=?\
    \ (key dict) (string-downcase (key dict))))\n     (check-dict-case (rest dict))]\n\
    \    [(and (string? (key dict))\n          (string-ci=? (key dict) (string-upcase\
    \ (key dict))))\n     (check-dict-case (rest dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string-ci=? (first (keys dict)) (string-downcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (key dict))\n          (string-ci=? (key dict)\
    \ (string-downcase (key dict))))\n     (check_dict_case (rest dict))]\n    [(and\
    \ (string? (key dict))\n          (string-ci=? (key dict) (string-upcase (key\
    \ dict))))\n     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (keys dict)])\n\
    \        (if (andmap string-ci=? keys)\n            #t\n            (andmap string-ci=?\
    \ (map string-upcase keys))))))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (key dict)) (string-ci=? (key dict) (string-downcase (key dict))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (key dict)) (string-ci=?\
    \ (key dict) (string-upcase (key dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (or (string-ci=? (first (keys dict)) (first\
    \ (keys dict)))\n              (string-ci=? (first (keys dict)) (string-upcase\
    \ (first (keys dict))))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (keys\
    \ dict)])\n        (if (andmap string-ci=? keys)\n            #t\n           \
    \ (andmap string-ci=? (map string-upcase keys))))))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (string-upcase (first (keys dict)))))\n     (and (check_dict_case\
    \ (rest dict))\n          (string-ci=? (first (keys dict)) (first (keys (rest\
    \ dict)))))]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))\n     (and (check_dict_case\
    \ (rest dict))\n          (string-ci=? (first (keys dict)) (first (keys (rest\
    \ dict)))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (if (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \              (check_dict_case (rest dict)))\n         true\n         false)]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (key dict))\n          (string-ci=? (key dict) (string-downcase (key dict))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (key dict))\n       \
    \   (string-ci=? (key dict) (string-upcase (key dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ false]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (keys dict)])\n\
    \        (if (andmap string-ci=? keys)\n            #t\n            (andmap string-ci=?\
    \ (map string-upcase keys))))))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n    \
    \      (check_dict_case (rest dict)))]\n    [else false]))\n", "  (if (empty?\
    \ dict)\n      #f\n      (let ([keys (map key dict)])\n        (if (andmap string-ci=?\
    \ keys)\n            #t\n            #f))))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first (keys\
    \ dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (or (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict))))\n              (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict))))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n   \
    \ [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys dict))\
    \ (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(and (string? (key dict))\n          (string-ci=?\
    \ (key dict) (string-downcase (key dict))))\n     (check-dict-case (rest dict))]\n\
    \    [(and (string? (key dict))\n          (string-ci=? (key dict) (string-upcase\
    \ (key dict))))\n     (check-dict-case (rest dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string-ci=? (first (keys dict)) (string-downcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [(and (string? (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (string-upcase (first (keys dict)))))\n\
    \     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond [(empty?\
    \ dict) false]\n        [(andmap string? (map key dict))\n         (or (andmap\
    \ string-ci=? (map key dict))\n             (andmap string-ci=? (map key dict)\
    \ #:key (\u03BB (x) (string-upcase x))))]\n        [else false]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase (first\
    \ (keys dict)))))\n     (check-dict-case (rest dict))]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))\n     (check-dict-case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys\
    \ dict))))\n     (check_dict_case (rest dict))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys\
    \ dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n    \
    \ (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n        \
    \  (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict)))) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string? (first\
    \ (keys (rest dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys\
    \ (rest dict))))\n          (check_dict_case (rest dict)))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string?\
    \ (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n    \
    \ (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n        \
    \  (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n  \
    \  [else #f]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string? (first (keys (rest dict)))))\n     (and (string-ci=?\
    \ (first (keys dict)) (first (keys (rest dict))))\n          (check_dict_case\
    \ (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (key dict))\n          (string?\
    \ (key (rest dict))))\n     (and (or (string-ci=? (key dict) (key dict))\n   \
    \           (string-ci=? (key dict) (key dict)))\n          (check_dict_case (rest\
    \ dict)))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n    \
    \      (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string? (first (keys dict)))\n          (string-ci=? (first\
    \ (keys dict)) (first (keys dict)))) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))\n     (check_dict_case\
    \ (rest dict))]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first (keys\
    \ dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys dict))))\n\
    \     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) false]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-downcase (first (keys dict)))))\n     (check_dict_case\
    \ (rest dict))]\n    [(and (string? (first (keys dict)))\n          (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict)))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string-ci=? (first (keys\
    \ dict)) (first (keys dict))))\n     (check_dict_case (rest dict))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? dict) false]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-downcase (first\
    \ (keys dict)))))\n     (check_dict_case (rest dict))]\n    [(and (string? (first\
    \ (keys dict)))\n          (string-ci=? (first (keys dict)) (string-upcase (first\
    \ (keys dict)))))\n     (check_dict_case (rest dict))]\n    [else false]))\n",
  "  (cond\n    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n \
    \         (string? (first (keys (rest dict)))))\n     (and (string-ci=? (first\
    \ (keys dict)) (first (keys (rest dict))))\n          (check_dict_case (rest dict)))]\n\
    \    [else false]))\n", "  (if (empty? dict)\n      #f\n      (let ([keys (keys\
    \ dict)])\n        (if (andmap string-lowercase? keys)\n            (andmap string-uppercase?\
    \ keys)\n            #f))))\n", "  (cond\n    [(empty? dict) false]\n    [(and\
    \ (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n    \
    \      (check_dict_case (rest dict)))]\n    [else false]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(and (string-ci=? (first (keys dict)) (first (keys dict)))\n\
    \          (string-ci=? (first (keys dict)) (first (keys dict))))\n     (check_dict_case\
    \ (rest dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and\
    \ (string? (first (keys dict)))\n          (string? (first (keys (rest dict)))))\n\
    \     (cond\n       [(and (string-ci=? (first (keys dict)) (first (keys (rest\
    \ dict))))\n             (check_dict_case (rest dict)))\n        #t]\n       [else\
    \ #f])]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(and (string?\
    \ (first (keys dict)))\n          (string-ci=? (first (keys dict)) (first (keys\
    \ dict))))\n     (check_dict_case (rest dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) false]\n    [(and (string? (first (keys dict)))\n        \
    \  (or (string-ci=? (first (keys dict)) (first (keys dict)))\n              (string-ci=?\
    \ (first (keys dict)) (string-upcase (first (keys dict))))))\n     (check_dict_case\
    \ (rest dict))]\n    [else false]))\n", "  (cond\n    [(empty? dict) false]\n\
    \    [(and (string? (first (keys dict)))\n          (string? (first (keys (rest\
    \ dict)))))\n     (and (string-ci=? (first (keys dict)) (first (keys (rest dict))))\n\
    \          (check_dict_case (rest dict)))]\n    [else false]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_126_is_sorted
language: rkt
prompt: "#lang racket\n\n;; Given a list of numbers, return whether or not they are\
  \ sorted\n;; in ascending order. If list has more than 1 duplicate of the same\n\
  ;; number, return False. Assume no negative numbers and only integers.\n;; Examples\n\
  (define (is_sorted lst)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_sorted))\n\
  \    (check-equal? (candidate (list 5)) #t)\n    (check-equal? (candidate (list\
  \ 1 2 3 4 5)) #t)\n    (check-equal? (candidate (list 1 3 2 4 5)) #f)\n    (check-equal?\
  \ (candidate (list 1 2 3 4 5 6)) #t)\n    (check-equal? (candidate (list 1 2 3 4\
  \ 5 6 7)) #t)\n    (check-equal? (candidate (list 1 3 2 4 5 6 7)) #f)\n    (check-equal?\
  \ (candidate (list )) #t)\n    (check-equal? (candidate (list 1)) #t)\n    (check-equal?\
  \ (candidate (list 3 2 1)) #f)\n    (check-equal? (candidate (list 1 2 2 2 3 4))\
  \ #f)\n    (check-equal? (candidate (list 1 2 3 3 3 4)) #f)\n    (check-equal? (candidate\
  \ (list 1 2 2 3 3 4)) #t)\n    (check-equal? (candidate (list 1 2 3 4)) #t)\n))\n\
  \n(test-humaneval)"
completions: ["  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(>\
    \ (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst))\
    \ true]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n\
    \    [(and (not (empty? lst)) (not (empty? (rest lst))))\n     (if (< (first lst)\
    \ (second lst))\n         (is_sorted (rest lst))\n         #f)]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second\
    \ lst))\n     (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n \
    \   [(empty? (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n   \
    \ [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) true]\n    [(empty? (rest lst)) true]\n    [(< (first lst) (second lst))\
    \ (is_sorted (rest lst))]\n    [else false]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(and (not (empty? lst)) (not (empty?\
    \ (rest lst))))\n     (if (and (= (first lst) (second lst)) (not (empty? (rest\
    \ (rest lst)))))\n         #f\n         (if (&lt; (first lst) (second lst))\n\
    \             (is_sorted (rest lst))\n             #f))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond [(empty? lst) true]\n        [(empty? (rest lst))\
    \ true]\n        [(and (not (= (first lst) (second lst)))\n              (or (<\
    \ (first lst) (second lst))\n                  (is_sorted (rest lst))))\n    \
    \     true]\n        [else false]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond [(empty? lst) #t]\n        [(empty? (rest lst))\
    \ #t]\n        [(> (first lst) (second lst)) #f]\n        [else (is_sorted (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n\
    \    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(> (first\
    \ lst) (second lst)) false]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) true]\n        [(empty? (rest lst)) true]\n        [(and\
    \ (not (empty? (rest lst)))\n              (not (empty? (rest (rest lst))))\n\
    \              (and (<= (first lst) (first (rest lst)))\n                   (<=\
    \ (first (rest lst)) (first (rest (rest lst)))))\n         (is_sorted (rest (rest\
    \ lst)))]\n        [else false]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty?\
    \ (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst)\
    \ (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ lst) true]\n    [(empty? (rest lst)) true]\n    [(> (first lst) (second lst))\
    \ false]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ true]\n    [(empty? (rest lst)) true]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else false]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n \
    \   [(empty? (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n   \
    \ [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst)\
    \ (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond [(empty?\
    \ lst) #t]\n        [(empty? (rest lst)) #t]\n        [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n        [else #f]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst))\
    \ true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n\
    \    [(> (first lst) (second lst)) false]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(> (first\
    \ lst) (second lst)) false]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(> (first lst)\
    \ (second lst)) false]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n   \
    \ [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst)\
    \ true]\n    [(empty? (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n\
    \    [else #f]))\n", "  (cond [(empty? lst) #t]\n        [(empty? (rest lst))\
    \ #t]\n        [(> (first lst) (second lst)) #f]\n        [else (is_sorted (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n\
    \    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty?\
    \ lst) true]\n        [(empty? (rest lst)) true]\n        [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n        [else false]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else #f]))\n", "  (cond [(empty? lst) #t]\n        [(empty?\
    \ (rest lst)) #t]\n        [(= (first lst) (second lst)) #f]\n        [(< (first\
    \ lst) (second lst)) (is_sorted (rest lst))]\n        [else #f]))\n", "  (cond\
    \ [(empty? lst) #t]\n        [(empty? (rest lst)) #t]\n        [(< (first lst)\
    \ (second lst)) (is_sorted (rest lst))]\n        [else #f]))\n", "  (cond\n  \
    \  [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond [(empty? lst) #t]\n        [(empty?\
    \ (rest lst)) #t]\n        [(> (first lst) (second lst)) #f]\n        [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst))\
    \ true]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else\
    \ false]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n\
    \    [(> (first lst) (second lst)) false]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) true]\n    [(empty? (rest lst)) true]\n    [(< (first lst) (second lst))\
    \ (is_sorted (rest lst))]\n    [else false]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty?\
    \ lst) #t]\n        [(empty? (rest lst)) #t]\n        [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n        [else #f]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(and (not (empty? lst)) (not (empty? (rest lst))))\n\
    \     (and (not (= (first lst) (second lst)))\n          (is_sorted (rest lst)))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) true]\n    [(empty? (rest lst)) true]\n    [(< (first lst) (second lst))\
    \ (is_sorted (rest lst))]\n    [else false]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond [(empty? lst) true]\n        [(empty? (rest lst))\
    \ true]\n        [(> (first lst) (second lst)) false]\n        [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(and (equal? (first lst) (second lst))\n          (is_sorted (rest\
    \ lst))) #f]\n    [(and (< (first lst) (second lst))\n          (is_sorted (rest\
    \ lst))) #t]\n    [else #f]))\n", "  (cond [(empty? lst) true]\n        [(empty?\
    \ (rest lst)) true]\n        [(and (equal? (first lst) (second lst))\n       \
    \       (is_sorted (rest lst))) false]\n        [(> (first lst) (second lst))\
    \ false]\n        [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(and (not (empty?\
    \ lst))\n          (not (empty? (rest lst)))\n          (not (empty? (rest (rest\
    \ lst))))\n          (and (equal? (first lst) (first (rest lst)))\n          \
    \     (equal? (first lst) (first (rest (rest lst)))))\n          (is_sorted (rest\
    \ (rest lst)))) #f]\n    [(and (not (empty? lst))\n          (not (empty? (rest\
    \ lst)))\n          (not (empty? (rest (rest lst)))))\n     (and (<= (first lst)\
    \ (first (rest lst)))\n          (is_sorted (rest (rest lst))))]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) true]\n        [(empty? (rest lst)) true]\n        [(= (first\
    \ lst) (second lst)) false]\n        [(> (first lst) (second lst)) false]\n  \
    \      [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n \
    \   [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else\
    \ (is_sorted (rest lst))]))\n", "  (cond [(empty? lst) #t]\n        [(empty? (rest\
    \ lst)) #t]\n        [(and (not (empty? (rest lst)))\n              (not (empty?\
    \ (rest (rest lst))))\n              (and (= (first lst) (second lst))\n     \
    \              (= (second lst) (third lst)))) #f]\n        [(and (< (first lst)\
    \ (second lst))\n              (is_sorted (rest lst))) #t]\n        [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty?\
    \ lst) true]\n        [(empty? (rest lst)) true]\n        [(> (first lst) (second\
    \ lst)) false]\n        [else (is_sorted (rest lst))]))\n", "  (cond [(empty?\
    \ lst) #t]\n        [(empty? (rest lst)) #t]\n        [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n        [else #f]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(and (not (empty? lst)) (not (empty?\
    \ (rest lst))))\n     (if (and (not (= (first lst) (second lst)))\n          \
    \    (< (first lst) (second lst)))\n         (is_sorted (rest lst))\n        \
    \ #f)]))\n", "  (cond [(empty? lst) #t]\n        [(empty? (rest lst)) #t]\n  \
    \      [(> (first lst) (second lst)) #f]\n        [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(< (first\
    \ lst) (second lst)) (is_sorted (rest lst))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) #t]\n        [(empty? (rest lst)) #t]\n        [(> (first\
    \ lst) (second lst)) #f]\n        [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(> (first lst)\
    \ (second lst)) false]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n   \
    \ [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(and (not (empty?\
    \ lst))\n          (not (empty? (rest lst)))\n          (and (<= (first lst) (second\
    \ lst))\n               (is_sorted (rest lst))))]\n    [else false]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ true]\n    [(empty? (rest lst)) true]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else false]))\n", "  (cond\n    [(empty? lst) true]\n   \
    \ [(empty? (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n    [else\
    \ (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst))\
    \ true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n\
    \    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst)\
    \ (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond [(empty?\
    \ lst) #t]\n        [(empty? (rest lst)) #t]\n        [(> (first lst) (second\
    \ lst)) #f]\n        [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(= (first lst) (second lst)) #f]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(and (not\
    \ (empty? lst)) (not (empty? (rest lst))))\n     (and (<= (first lst) (second\
    \ lst)) (is_sorted (rest lst)))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(and (not (empty?\
    \ lst)) (not (empty? (rest lst))))\n     (if (< (first lst) (first (rest lst)))\n\
    \         (is_sorted (rest lst))\n         #f)]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted\
    \ (rest lst))]\n    [else #f]))\n", "  (cond [(empty? lst) #t]\n        [(empty?\
    \ (rest lst)) #t]\n        [(< (first lst) (second lst)) (is_sorted (rest lst))]\n\
    \        [else #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) true]\n        [(empty? (rest lst)) true]\n        [(< (first\
    \ lst) (second lst)) (is_sorted (rest lst))]\n        [else false]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty? lst) true]\n\
    \        [(empty? (rest lst)) true]\n        [(and (not (empty? (rest lst)))\n\
    \              (and (<= (first lst) (second lst))\n                   (is_sorted\
    \ (rest lst)))) true]\n        [else false]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n  \
    \  [(empty? (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n    [else\
    \ (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty?\
    \ (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) #t]\n        [(empty? (rest lst)) #t]\n        [(> (first\
    \ lst) (second lst)) #f]\n        [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty? lst) #t]\n\
    \        [(empty? (rest lst)) #t]\n        [(> (first lst) (second lst)) #f]\n\
    \        [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n\
    \    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else\
    \ (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) #t]\n        [(empty? (rest lst)) #t]\n        [(and (not\
    \ (empty? (rest lst)))\n              (and (<= (first lst) (second lst))\n   \
    \                (is_sorted (rest lst)))) #t]\n        [else #f]))\n", "  (cond\n\
    \    [(empty? lst) true]\n    [(empty? (rest lst)) true]\n    [(< (first lst)\
    \ (second lst)) (is_sorted (rest lst))]\n    [else false]))\n", "  (cond\n   \
    \ [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(and (empty? (rest (rest lst)))\n          (<= (first lst) (second\
    \ lst))) #t]\n    [(and (<= (first lst) (second lst))\n          (is_sorted (rest\
    \ lst))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty?\
    \ (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) true]\n        [(empty? (rest lst)) true]\n        [(> (first\
    \ lst) (second lst)) false]\n        [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second\
    \ lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n \
    \   [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty?\
    \ (rest lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst))\
    \ true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n\
    \    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond [(empty? lst) true]\n        [(empty? (rest lst)) true]\n        [(> (first\
    \ lst) (second lst)) false]\n        [else (is_sorted (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n    [else #f]))\n", "  (cond\n    [(empty? lst)\
    \ true]\n    [(empty? (rest lst)) true]\n    [(> (first lst) (second lst)) false]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty?\
    \ lst) #t]\n        [(empty? (rest lst)) #t]\n        [(and (not (empty? (rest\
    \ lst)))\n              (and (not (empty? (rest (rest lst))))\n              \
    \     (and (= (first lst) (first (rest lst)))\n                        (= (first\
    \ (rest lst)) (first (rest (rest lst)))))))\n         #f]\n        [(and (not\
    \ (empty? (rest lst)))\n              (and (not (empty? (rest (rest lst))))\n\
    \                   (and (= (first lst) (first (rest lst)))\n                \
    \        (not (= (first (rest lst)) (first (rest (rest lst)))))))\n         (is_sorted\
    \ (rest (rest lst))))]\n        [(and (not (empty? (rest lst)))\n            \
    \  (and (not (empty? (rest (rest lst))))\n                   (and (< (first lst)\
    \ (first (rest lst)))\n                        (< (first (rest lst)) (first (rest\
    \ (rest lst)))))))\n         (is_sorted (rest (rest lst)))]\n        [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst))\
    \ #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond [(empty? lst) true]\n      \
    \  [(empty? (rest lst)) true]\n        [(and (not (empty? (rest lst)))\n     \
    \         (and (not (empty? (rest (rest lst))))\n                   (and (not\
    \ (empty? (rest (rest (rest lst)))))\n                        (and (not (empty?\
    \ (rest (rest (rest (rest lst))))))\n                             (and (not (empty?\
    \ (rest (rest (rest (rest (rest lst)))))))))))))\n         (cond [(< (first lst)\
    \ (first (rest lst)))\n                (cond [(< (first (rest lst)) (first (rest\
    \ (rest lst))))\n                       (cond [(< (first (rest (rest lst))) (first\
    \ (rest (rest (rest lst)))))\n                              (cond [(< (first (rest\
    \ (rest (rest lst)))) (first (rest (rest (rest (rest lst))))))\n             \
    \                        (cond [(< (first (rest (rest (rest (rest lst))))) (first\
    \ (rest (rest (rest (rest (rest lst)))))))\n                                 \
    \           (cond [(< (first (rest (rest (rest (rest (rest lst)))))) (first (rest\
    \ (rest (rest (rest (rest (rest lst))))))))\n                                \
    \                   (cond [(< (first (rest (rest (rest (rest (rest (rest lst)))))))\
    \ (first (rest (rest (rest (rest (rest (rest (rest lst)))))))))\n            \
    \                                              (cond [(< (first (rest (rest (rest\
    \ (rest (rest (rest (rest lst)))))))) (first (rest (rest (rest (rest (rest (rest\
    \ (rest (rest lst))))))))))\n                                                \
    \                 (cond [(< (first (rest (rest (rest (rest (rest (rest (rest (rest\
    \ lst))))))))) (first (rest (rest (rest (rest (rest (rest (rest (rest (rest lst)))))))))))]\n\
    \                                                                        [else\
    \ false])])\n                                                                \
    \ [else false])])\n                                                   [else false])])\n\
    \                                            [else false])])\n               \
    \                      [else false])])\n                              [else false])])\n\
    \                       [", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest\
    \ lst)) #t]\n    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n  \
    \  [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n\
    \    [else (is_sorted (rest lst))]))\n", "  (cond\n    [(empty? lst) #t]\n   \
    \ [(empty? (rest lst)) #t]\n    [(> (first lst) (second lst)) #f]\n    [else (is_sorted\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) true]\n    [(empty? (rest lst))\
    \ true]\n    [(> (first lst) (second lst)) false]\n    [else (is_sorted (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n\
    \    [(< (first lst) (second lst)) (is_sorted (rest lst))]\n    [else #f]))\n",
  "  (cond\n    [(empty? lst) #t]\n    [(empty? (rest lst)) #t]\n    [(> (first lst)\
    \ (second lst)) #f]\n    [else (is_sorted (rest lst))]))\n", "  (cond [(empty?\
    \ lst) #t]\n        [(empty? (rest lst)) #t]\n        [(< (first lst) (second\
    \ lst)) (is_sorted (rest lst))]\n        [else #f]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

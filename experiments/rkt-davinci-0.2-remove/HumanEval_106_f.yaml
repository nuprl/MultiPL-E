name: HumanEval_106_f
language: rkt
prompt: "#lang racket\n\n;; Implement the function f that takes n as a parameter,\n\
  ;; and returns a list of size n, such that the value of the element at index i is\
  \ the factorial of i if i is even\n;; or the sum of numbers from 1 to i otherwise.\n\
  ;; i starts from 1.\n;; the factorial of i is the multiplication of the numbers\
  \ from 1 to i (1 * 2 * ... * i).\n;; Example:\n(define (f n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate f))\n\
  \    (check-equal? (candidate 5) (list 1 2 6 24 15))\n    (check-equal? (candidate\
  \ 7) (list 1 2 6 24 15 720 28))\n    (check-equal? (candidate 1) (list 1))\n   \
  \ (check-equal? (candidate 3) (list 1 2 6))\n))\n\n(test-humaneval)"
completions: ["  (if (= n 0)\n      '()\n      (cons (if (even? n)\n             \
    \   (fact n)\n                (sum n))\n            (f (- n 1)))))\n", "  (if\
    \ (= n 0)\n      '()\n      (cons (if (even? n)\n                (fact n)\n  \
    \              (sum n))\n            (f (- n 1)))))\n", "  (cond\n    [(= n 0)\
    \ empty]\n    [else (cons (cond\n                  [(even? n) (factorial n)]\n\
    \                  [else (sum-to n)])\n                (f (- n 1)))]))\n", " \
    \ (cond [(= n 0) empty]\n        [else (cons (if (even? n)\n                 \
    \       (fact n)\n                        (sum n))\n                      (f (-\
    \ n 1)))]))\n", "  (if (= n 0)\n      empty\n      (cons (if (even? n)\n     \
    \         (fact n)\n              (sum n))\n            (f (- n 1)))))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (fact n)]\n                  [else (sum n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (if (= n 0)\n      empty\n      (cons (if (even? n)\n  \
    \            (fact n)\n              (sum n))\n            (f (- n 1)))))\n",
  "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ n) (factorial n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", " \
    \ (cond [(= n 0) empty]\n        [else (cons (if (even? n)\n                 \
    \       (factorial n)\n                        (sum-to n))\n                 \
    \   (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n\
    \                  [(even? n) (factorial n)]\n                  [else (sum-to\
    \ n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n  \
    \  [else\n     (cons\n      (if (even? n)\n          (factorial n)\n         \
    \ (sum-to n))\n      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (cond\n                  [(even? n) (factorial n)]\n                 \
    \ [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial n)]\n\
    \                  [else (sum-to n)])\n                (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ n) (fact n)]\n        [else (sum n)])\n      (f (- n 1)))]))\n", "  (for/list\
    \ ([i (in-range 1 (+ 1 n))])\n    (if (even? i)\n        (factorial i)\n     \
    \   (sum (in-range 1 (+ 1 i))))))\n", "  (cond [(= n 0) empty]\n        [else\
    \ (cons (if (even? n)\n                        (factorial n)\n               \
    \         (sum-to n))\n                    (f (- n 1)))]))\n", "  (cond [(= n\
    \ 0) empty]\n        [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \  (fact n)\n                   (sum n))\n                 (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (if (= n 0)\n      '()\n      (cons (if (even? n)\n    \
    \            (factorial n)\n                (sum-to n))\n            (f (- n 1)))))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\
    \ (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (cond\n                  [(even? n) (fact n)]\n                  [else\
    \ (sum n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                \
    \    (fact n)\n                    (sum n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n\
    \      (if (even? n)\n          (fact n)\n          (sum n))\n      (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (fact n)]\n                  [else (sum n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\
    \ (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (if (even? n)\n                   (factorial n)\n           \
    \        (sum-to n))\n                 (f (- n 1)))]))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial n)]\n\
    \                  [else (sum-to n)])\n                (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even?\
    \ n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond [(= n 0) empty]\n\
    \        [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n)\n                    (fact\
    \ n)\n                    (sum n))\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (cond\n                  [(even? n) (fact\
    \ n)]\n                  [else (sum n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n\
    \                   (fact n)\n                   (sum n))\n                 (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n\
    \                    (factorial n)\n                    (sum-to n))\n        \
    \        (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n\
    \                  [(even? n) (factorial n)]\n                  [else (sum-to\
    \ n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n  \
    \  [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", " \
    \ (cond [(= n 0) empty]\n        [else (cons (cond [(even? n) (factorial n)]\n\
    \                         [else (sum-to n)])\n                    (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n    [else (cons (if (even? n)\n\
    \                    (factorial n)\n                    (sum-to n))\n        \
    \        (f (- n 1)))]))\n", "  (if (= n 0)\n      '()\n      (cons (if (even?\
    \ n)\n                (fact n)\n                (sum n))\n            (f (- n\
    \ 1)))))\n", "  (cond\n    [(= n 0) '()]\n    [else\n     (cons\n      (cond\n\
    \        [(even? n) (factorial n)]\n        [else (sum-to n)])\n      (f (- n\
    \ 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial\
    \ n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (cond\n                  [(even? n) (fact n)]\n                  [else\
    \ (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (if (even? n)\n                    (fact n)\n               \
    \     (sum n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even? n) (factorial\
    \ n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", "  (cond [(= n 0)\
    \ empty]\n        [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n\
    \                  [(even? n) (factorial n)]\n                  [else (sum-to\
    \ n)])\n                (f (- n 1)))]))\n", "  (cond [(= n 0) empty]\n       \
    \ [else (cons (if (even? n)\n                        (factorial n)\n         \
    \               (sum-to n))\n                    (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n    \
    \  (cond\n        [(even? n) (factorial n)]\n        [else (sum-to n)])\n    \
    \  (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n\
    \                  [(even? n) (factorial n)]\n                  [else (sum-to\
    \ n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n  \
    \  [else\n     (cons\n      (if (even? n)\n          (factorial n)\n         \
    \ (sum-to n))\n      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (if (even? n)\n                    (fact n)\n                    (sum\
    \ n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n   \
    \ [else (cons (if (even? n)\n                   (factorial n)\n              \
    \     (sum-to n))\n                 (f (- n 1)))]))\n", "  (cond\n    [(= n 0)\
    \ empty]\n    [else (cons (if (even? n)\n                   (fact n)\n       \
    \            (sum n))\n                 (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even? n) (factorial\
    \ n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else\n     (cons\n      (if (even? n)\n          (fact n)\n\
    \          (sum n))\n      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (if (= n 0)\n      '()\n      (cons (if (even? n)\n\
    \                (fact n)\n                (sum n))\n            (f (- n 1)))))\n",
  "  (if (= n 0)\n      '()\n      (cons (if (even? n)\n                (fact n)\n\
    \                (sum n))\n            (f (- n 1)))))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else\n     (cons\n      (cond\n        [(even? n) (factorial\
    \ n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", "  (for/list ([i\
    \ (in-range 1 (+ 1 n))])\n    (if (even? i)\n        (factorial i)\n        (sum\
    \ (in-range 1 (+ 1 i))))))\n", "  (cond [(= n 0) empty]\n        [else (cons (if\
    \ (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else (cons (if (even? n)\n                   (factorial n)\n\
    \                   (sum-to n))\n                 (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n)\n                    (factorial\
    \ n)\n                    (sum-to n))\n                (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) '()]\n    [else (cons (if (even? n)\n                  \
    \  (fact n)\n                    (sum n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \  (fact n)\n                   (sum n))\n                 (f (- n 1)))]))\n",
  "  (cond [(= n 0) empty]\n        [else (cons (if (even? n)\n                  \
    \      (fact n)\n                        (sum n))\n                    (f (- n\
    \ 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n\
    \        [(even? n) (fact n)]\n        [else (sum n)])\n      (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n\
    \                  [(even? n) (factorial n)]\n                  [else (sum-to\
    \ n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n  \
    \  [else\n     (cons\n      (cond\n        [(even? n) (factorial n)]\n       \
    \ [else (sum-to n)])\n      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond [(=\
    \ n 0) '()]\n        [else (cons (if (even? n)\n                        (factorial\
    \ n)\n                        (sum-to n))\n                    (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (fact n)]\n                  [else (sum n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ (- n 1)) (factorial (- n 1))]\n        [else (sum-to (- n 1))])\n      (f (-\
    \ n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n       \
    \           [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (cond\n                  [(even? n) (factorial n)]\n                 \
    \ [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else (cons\n            (if (even? n)\n                (factorial\
    \ n)\n                (sum-to n))\n            (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) '()]\n    [else\n     (cons (if (even? n)\n               (factorial\
    \ n)\n               (sum-to n))\n           (f (- n 1)))]))\n", "  (cond\n  \
    \  [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even? n) (fact\
    \ n)]\n        [else (sum n)])\n      (f (- n 1)))]))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else\n     (cons\n      (cond\n        [(even? n) (factorial\
    \ n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else (cons (if (even? n)\n                    (factorial n)\n\
    \                    (sum-to n))\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n))\
    \ (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (append (list (if\
    \ (even? n) (fact n) (sum n))) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) '()]\n    [else (cons (if (even? n)\n                    (fact n)\n\
    \                    (sum n))\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n))\
    \ (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n \
    \                 [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n\
    \ 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial\
    \ n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n    [else (cons\
    \ (if (even? n)\n                    (factorial n)\n                    (sum-to\
    \ n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n   \
    \ [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n))\
    \ (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n \
    \                 [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (if (even? n)\n                    (factorial n)\n                   \
    \ (sum-to n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n))\
    \ (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n \
    \     (if (even? n)\n          (fact n)\n          (sum n))\n      (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \   (fact n)\n                    (sum n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \  (fact n)\n                   (sum n))\n                 (f (- n 1)))]))\n",
  "  (if (= n 0)\n      '()\n      (cons (if (even? n)\n                (fact n)\n\
    \                (sum n))\n            (f (- n 1)))))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even?\
    \ n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even? n) (factorial\
    \ n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial\
    \ n)]\n                  [else (sum-to n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \   (factorial n)\n                    (sum-to n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \   (fact n)\n                    (sum n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ n) (factorial n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ n) (factorial n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", " \
    \ (cond [(= n 0) empty]\n        [else (cons (if (even? n)\n                 \
    \       (factorial n)\n                        (sum-to n))\n                 \
    \   (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n\
    \      (if (even? n)\n          (factorial n)\n          (sum-to n))\n      (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n    \
    \              [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else (cons (if (even? n)\n                    (fact n)\n \
    \                   (sum n))\n                (f (- n 1)))]))\n", "  (cond\n \
    \   [(= n 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial\
    \ n)]\n                  [else (sum-to n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n\
    \                    (fact n)\n                    (sum n))\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\
    \ (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n\
    \    [else (cons (if (even? n)\n                    (fact n)\n               \
    \     (sum n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n)\n                    (fact\
    \ n)\n                    (sum n))\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f (- n\
    \ 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n \
    \                   (fact n)\n                    (sum n))\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n\
    \                    (fact n)\n                    (sum n))\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons (if (even?\
    \ n)\n               (fact n)\n               (sum n))\n           (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ n) (factorial n)]\n        [else (sum-to n)])\n      (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\
    \ (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n    [else\
    \ (cons (if (even? n)\n                    (factorial n)\n                   \
    \ (sum-to n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) '()]\n    [else (cons (if (even? n)\n                  \
    \  (fact n)\n                    (sum n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n    \
    \              [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to n))\
    \ (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n \
    \                 [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\
    \ (cons (if (even? n)\n                   (factorial n)\n                   (sum-to\
    \ n))\n                 (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n  \
    \  [else (cons (cond\n                  [(even? n) (factorial n)]\n          \
    \        [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n  \
    \  [(= n 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial\
    \ n)]\n                  [else (sum-to n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n        [(even?\
    \ n) (fact n)]\n        [else (sum n)])\n      (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else\n     (cons\n      (if (even? n)\n          (fact\
    \ n)\n          (sum n))\n      (f (- n 1)))]))\n", "  (cond [(= n 0) empty]\n\
    \        [else (cons (if (even? n)\n                        (fact n)\n       \
    \                 (sum n))\n                    (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f (- n\
    \ 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (cond\n\
    \        [(even? n) (fact n)]\n        [else (sum n)])\n      (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \   (factorial n)\n                    (sum-to n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                 \
    \   (fact n)\n                    (sum n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n    [else (cons (if (even?\
    \ n)\n                    (factorial n)\n                    (sum-to n))\n   \
    \             (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons\
    \ (if (even? n)\n                    (factorial n)\n                    (sum-to\
    \ n))\n                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n   \
    \ [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n \
    \   [(= n 0) '()]\n    [else (cons (if (even? n)\n                    (factorial\
    \ n)\n                    (sum-to n))\n                (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (cond [(= n 0) empty]\n        [else (cons (if (even? n)\n\
    \                        (fact n)\n                        (sum n))\n        \
    \            (f (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n    [else (cons\
    \ (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n    \
    \              [(even? n) (factorial n)]\n                  [else (sum-to n)])\n\
    \                (f (- n 1)))]))\n", "  (cond\n    [(= n 0) '()]\n    [else (cons\
    \ (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else\n     (cons\n      (if (even? n)\n          (fact n)\n\
    \          (sum n))\n      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (if (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", " \
    \ (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n                \
    \    (factorial n)\n                    (sum-to n))\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n    \
    \  (cond\n        [(even? n)\n         (factorial n)]\n        [else\n       \
    \  (sum-to n)])\n      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n   \
    \ [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n", "  (cond\n \
    \   [(= n 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial\
    \ n)]\n                  [else (sum-to n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\n      (if (even? n)\n    \
    \      (fact n)\n          (sum n))\n      (f (- n 1)))]))\n", "  (cond\n    [(=\
    \ n 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial\
    \ n)]\n                  [else (sum-to n)])\n                (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (cond\n                  [(even?\
    \ n) (factorial n)]\n                  [else (sum-to n)])\n                (f\
    \ (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\
    \ (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else (cons (cond\n                  [(even? n) (factorial n)]\n        \
    \          [else (sum-to n)])\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) '()]\n    [else (cons (if (even? n)\n                    (factorial\
    \ n)\n                    (sum-to n))\n                (f (- n 1)))]))\n", " \
    \ (if (= n 0)\n      '()\n      (cons (if (even? n)\n                (fact n)\n\
    \                (sum n))\n            (f (- n 1)))))\n", "  (cond\n    [(= n\
    \ 0) '()]\n    [else (cons (if (even? n)\n                    (factorial n)\n\
    \                    (sum-to n))\n                (f (- n 1)))]))\n", "  (cond\n\
    \    [(= n 0) empty]\n    [else (cons (cond\n                  [(even? n) (factorial\
    \ n)]\n                  [else (sum-to n)])\n                (f (- n 1)))]))\n",
  "  (if (= n 0)\n      '()\n      (cons (if (even? n)\n                (fact n)\n\
    \                (sum n))\n            (f (- n 1)))))\n", "  (cond\n    [(= n\
    \ 0) empty]\n    [else (cons (if (even? n) (fact n) (sum n)) (f (- n 1)))]))\n",
  "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n) (factorial n) (sum-to\
    \ n)) (f (- n 1)))]))\n", "  (cond [(= n 0) empty]\n        [else (cons (if (even?\
    \ n)\n                        (factorial n)\n                        (sum-to n))\n\
    \                    (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n\
    \     (cons\n      (cond\n        [(even? n) (fact n)]\n        [else (sum n)])\n\
    \      (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if\
    \ (even? n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n\
    \ 0) '()]\n    [else (cons (if (even? n)\n                    (factorial n)\n\
    \                    (sum-from-1-to n))\n                (f (- n 1)))]))\n", " \
    \ (cond [(= n 0) '()]\n        [else (cons (if (even? n)\n                   \
    \     (fact n)\n                        (sum n))\n                      (f (-\
    \ n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even? n)\n\
    \                    (factorial n)\n                    (sum-to n))\n        \
    \         (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else\n     (cons\
    \ (if (even? n)\n               (fact n)\n               (sum n))\n          \
    \ (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n    [else (cons (if (even?\
    \ n) (factorial n) (sum-to n)) (f (- n 1)))]))\n", "  (cond\n    [(= n 0) empty]\n\
    \    [else\n     (cons\n      (cond\n        [(even? n) (factorial n)]\n     \
    \   [else (sum-to n)])\n      (f (- n 1)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

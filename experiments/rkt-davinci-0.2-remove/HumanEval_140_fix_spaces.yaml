name: HumanEval_140_fix_spaces
language: rkt
prompt: "#lang racket\n\n;; Given a string text, replace all spaces in it with underscores,\
  \ \n;; and if a string has more than 2 consecutive spaces, \n;; then replace all\
  \ consecutive spaces with -\n(define (fix_spaces text)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fix_spaces))\n\
  \    (check-equal? (candidate \"Example\") \"Example\")\n    (check-equal? (candidate\
  \ \"Mudasir Hanif \") \"Mudasir_Hanif_\")\n    (check-equal? (candidate \"Yellow\
  \ Yellow  Dirty  Fellow\") \"Yellow_Yellow__Dirty__Fellow\")\n    (check-equal?\
  \ (candidate \"Exa   mple\") \"Exa-mple\")\n    (check-equal? (candidate \"   Exa\
  \ 1 2 2 mple\") \"-Exa_1_2_2_mple\")\n))\n\n(test-humaneval)"
completions: ["  (regexp-replace* #rx\" +\" text (lambda (m)\n                   \
    \               (if (string=? (regexp-match #rx\" +\" m) \" \")\n            \
    \                          \"_\"\n                                      \"-\"\
    ))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ (lambda (m)\n                                  (if (&gt; (string-length m) 2)\n\
    \                                      \"-\"\n                               \
    \       \"_\"))))\n</code>\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text (lambda (s) (if (string=? s \" \") \"-\" \"_\"\
    ))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n      \
    \                            (if (string=? (regexp-match #rx\" +\" m) \" \")\n\
    \                                      \"_\"\n                               \
    \       \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text (lambda (m)\n                              \
    \    (if (string=? (regexp-match #rx\" +\" m) \" \")\n                       \
    \               \"_\"\n                                      \"-\"))))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\"\
    \ text (lambda (s) (if (string=? s \" \") \"_\" \"-\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text (lambda (m)\n                              \
    \    (if (equal? (regexp-match-end m)\n                                      \
    \        (regexp-match-end m))\n                                      \"_\"\n\
    \                                      \"-\"))))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (regexp-replace* #rx\" {2,}\" text \"-\")\n  (regexp-replace*\
    \ #rx\" \" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text (lambda (m) (if (string=? (regexp-match #rx\" +\" m) \" \") \"\
    _\" \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text (lambda (m) (if (string=? (regexp-match-end m) (regexp-match-end\
    \ m)) \"_\" \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text (lambda (m)\n                              \
    \    (if (equal? (regexp-match-end m)\n                                      \
    \        (regexp-match-end m))\n                                      \"_\"\n\
    \                                      \"-\"))))\n", "  (regexp-replace* #rx\"\
    ([ ]{2,})\" text \"-\")\n  (regexp-replace* #rx\" \" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m) (if\
    \ (string=? (regexp-match-end m) (regexp-match-end m)) \"_\" \"-\"))))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (m)\n           \
    \                         (if (string=? (regexp-match #rx\"\\\\s+\" m) \" \")\n\
    \                                        \"_\"\n                             \
    \           \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text (lambda (m)\n                                  (if (string=?\
    \ (regexp-match #rx\" +\" m) \" \")\n                                      \"\
    _\"\n                                      \"-\"))))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (regexp-replace* #rx\" {2,}\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (m)\n\
    \                                    (if (string=? (regexp-match #rx\"\\\\s+\"\
    \ m) \" \")\n                                        \"_\"\n                 \
    \                       \"-\"))))\n", "  (regexp-replace* #rx\" +\" text (lambda\
    \ (m)\n                                  (if (string=? (regexp-match #rx\" +\"\
    \ m) \" \")\n                                      \"_\"\n                   \
    \                   \"-\"))))\n", "  (regexp-replace* #rx\" {2,}\" text \"-\"\
    ))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (define (fix_spaces-helper text result)\n    (cond\n\
    \      [(empty? text) result]\n      [(char=? (first text) #\\space)\n       (fix_spaces-helper\
    \ (rest text) (string-append result \"_\"))]\n      [(char=? (first text) #\\\
    _)\n       (fix_spaces-helper (rest text) (string-append result \"-\"))]\n   \
    \   [else\n       (fix_spaces-helper (rest text) (string-append result (string\
    \ (first text))))]))\n  (fix_spaces-helper text \"\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" {2,}\" text \"-\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text (lambda (m)\n                                    (if (string=?\
    \ (regexp-match #rx\"\\\\s+\" m) \" \")\n                                    \
    \    \"_\"\n                                        \"-\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n               \
    \                   (if (string=? (regexp-match #rx\" +\" m) \" \")\n        \
    \                              \"_\"\n                                      \"\
    -\"))))\n", "  (regexp-replace* #rx\"( +)\" text (lambda (m)\n               \
    \                     (if (string=? (regexp-match-substring m 0) \" \")\n    \
    \                                    \"_\"\n                                 \
    \       \"-\"))))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (m)\n   \
    \                                 (if (string=? (regexp-match #rx\"\\\\s+\" m)\
    \ \" \")\n                                        \"_\"\n                    \
    \                    \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ (lambda (m)\n                                  (if (string=? (regexp-match #rx\"\
    \ +\" m) \" \")\n                                      \"_\"\n               \
    \                       \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"\
    ))\n", "  (define (fix-spaces-helper text acc)\n    (cond\n      [(empty? text)\
    \ (reverse acc)]\n      [(char=? (first text) #\\space)\n       (if (char=? (second\
    \ text) #\\space)\n           (fix-spaces-helper (rest (rest text)) (cons #\\\
    - acc))\n           (fix-spaces-helper (rest text) (cons #\\_ acc)))]\n      [else\
    \ (fix-spaces-helper (rest text) (cons (first text) acc))]))\n  (list->string\
    \ (fix-spaces-helper (string->list text) '())))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n      \
    \                            (if (string=? (regexp-match* #rx\" +\" m) \" \")\n\
    \                                      \"_\"\n                               \
    \       \"-\"))))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (m) (if (string=?\
    \ (regexp-match #rx\"\\\\s+\" m) \" \") \"_\" \"-\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (match)\n\
    \                                    (if (string=? (match:submatch match 0) \"\
    \ \")\n                                        \"_\"\n                       \
    \                 \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text (lambda (m)\n                                    (if (string=?\
    \ (regexp-match #rx\"\\\\s+\" m) \" \")\n                                    \
    \    \"_\"\n                                        \"-\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" {2,}\" text \"-\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\"\
    \ text (lambda (m)\n                                    (if (string=? (regexp-match\
    \ #rx\"\\\\s+\" m) \" \")\n                                        \"_\"\n   \
    \                                     \"-\"))))\n", "  (regexp-replace* #rx\"\
    \ +\" text (lambda (m)\n                                  (if (string=? (regexp-match\
    \ #rx\" +\" m) \" \")\n                                      \"_\"\n         \
    \                             \"-\"))))\n</code>\n", "  (regexp-replace* #rx\"\
    \ +\" text (lambda (match)\n                                  (if (string=? (regexp-match\
    \ #rx\" +\" match) \" \")\n                                      \"_\"\n     \
    \                                 \"-\"))))\n", "  (regexp-replace* #rx\" +\"\
    \ text (lambda (m)\n                                  (if (string=? (regexp-match\
    \ #rx\" +\" text) m)\n                                      \"-\"\n          \
    \                            \"_\"))))\n", "  (regexp-replace* #rx\" +\" text\
    \ (lambda (m)\n                                  (if (string=? (regexp-match #rx\"\
    \ +\" m) \" \")\n                                      \"_\"\n               \
    \                       \"-\"))))\n", "  (regexp-replace* #rx\" {2,}\" text \"\
    _\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\
    \ +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (= (string-length m) 1)\n             \
    \                         \"_\"\n                                      \"-\"))))\n",
  "  (regexp-replace* #rx\"\\\\s+\" text \"_\"))\n", "  (regexp-replace* #rx\"\\\\\
    s+\" text (lambda (m) (if (string=? (regexp-match #rx\"\\\\s+\" m) \" \") \"_\"\
    \ \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text (lambda (m)\n                              \
    \    (if (&gt; (string-length m) 2)\n                                      \"\
    -\"\n                                      \"_\"))))\n</code>\n", "  (regexp-replace*\
    \ #rx\" +\" text (lambda (m)\n                                  (if (= (string-length\
    \ m) 1)\n                                      \"_\"\n                       \
    \               \"-\"))))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\"( +)\" text (lambda (m) (if (= (string-length (cadr m))\
    \ 1) \"_\" \"-\"))))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n    \
    \                              (if (string=? (regexp-match #rx\" +\" m) \" \"\
    )\n                                      \"_\"\n                             \
    \         \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text (lambda (m)\n                                    (if (string=?\
    \ (regexp-match #rx\"\\\\s+\" m) \" \")\n                                    \
    \    \"_\"\n                                        \"-\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"([ ]{2,})\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text (lambda (m) (if (= (string-length m) 1) \"_\"\
    \ \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ (lambda (m)\n                                  (if (string=? (regexp-match #rx\"\
    \ +\" m) \" \")\n                                      \"_\"\n               \
    \                       \"-\"))))\n", "  (regexp-replace* #rx\" +\" text (lambda\
    \ (m)\n                                  (if (string=? (regexp-match #rx\" +\"\
    \ m) \" \")\n                                      \"_\"\n                   \
    \                   \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (define (fix-spaces-helper text\
    \ acc)\n    (cond\n      [(empty? text) (reverse acc)]\n      [(char=? (first\
    \ text) #\\space)\n       (if (char=? (first (rest text)) #\\space)\n        \
    \   (fix-spaces-helper (rest (rest text)) (cons #\\- acc))\n           (fix-spaces-helper\
    \ (rest text) (cons #\\_ acc)))]\n      [else (fix-spaces-helper (rest text) (cons\
    \ (first text) acc))]))\n  (fix-spaces-helper text '()))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text (lambda (m) (if (= (string-length m) 1) \"_\" \"-\"))))\n",
  "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string-length (regexp-match-substring\
    \ m))\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n \
    \                                 (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (m)\n           \
    \                         (if (string=? (regexp-match #rx\"\\\\s+\" m) \" \")\n\
    \                                        \"_\"\n                             \
    \           \"-\"))))\n", "  (regexp-replace* #rx\"(\\\\s+)\" text (lambda (m)\n\
    \                                      (if (string=? (regexp-match #rx\"\\\\s+\"\
    \ m) \" \")\n                                          \"_\"\n               \
    \                           \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"\
    _\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n                   \
    \               (if (string=? (regexp-match #rx\" +\" m) \" \")\n            \
    \                          \"-\"\n                                      \"_\"\
    ))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\
    \\\\s+\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n   \
    \                               (if (string=? (regexp-match #rx\" +\" m) \" \"\
    )\n                                      \"_\"\n                             \
    \         \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" \" text \"_\")\n  (regexp-replace* #rx\"_+\" text \"-\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (s)\
    \ (if (string=? s \" \") \"-\" \"_\"))))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text (lambda (m)\n                                    (if (string=?\
    \ (regexp-match #rx\"\\\\s+\" m) \" \")\n                                    \
    \    \"_\"\n                                        \"-\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\"( +)\" text (lambda (m)\n                            \
    \        (if (> (string-length (car m)) 2)\n                                 \
    \       \"-\"\n                                        \"_\"))))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\n\
    \                   (lambda (m)\n                     (if (string=? (regexp-match\
    \ #rx\" +\" m) \" \")\n                         \"_\"\n                      \
    \   \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"\\\\s+\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text (lambda (m)\n                              \
    \    (if (string=? (regexp-match #rx\" +\" m) \" \")\n                       \
    \               \"_\"\n                                      \"-\"))))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text\n                   (lambda (m)\n\
    \                     (if (string=? (regexp-match* #rx\" +\" m) \" \")\n     \
    \                    \"_\"\n                         \"-\"))))\n", "  (regexp-replace*\
    \ #rx\"\\s+\" text (lambda (m)\n                                   (if (string-length\
    \ (match:substring m 0))\n                                       \"_\"\n     \
    \                                  \"-\"))))\n", "  (regexp-replace* #rx\" +\"\
    \ text (lambda (m) (if (string=? (regexp-match #rx\" +\" m) \" \") \"_\" \"-\"\
    ))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"\
    \ {2,}\" text \"-\")\n  (regexp-replace* #rx\" \" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\"  +\" text \"-\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" {2,}\" text \"-\")\n  (regexp-replace* #rx\" \" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text\
    \ \"_\"))\n", "  (regexp-replace* #rx\"\\\\s+\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n\
    \                                  (if (string=? (regexp-match #rx\" +\" m) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n</code>\n", "  (regexp-replace* #rx\" +\" text \"_\"\
    ))\n", "  (regexp-replace* #rx\"\\\\s+\" text (lambda (m)\n                  \
    \                  (if (string=? (regexp-match #rx\"\\\\s+\" m) \" \")\n     \
    \                                   \"_\"\n                                  \
    \      \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", "  (regexp-replace*\
    \ #rx\" +\" text \"_\"))\n", "  (regexp-replace* #rx\"  +\" text \"-\")\n  (regexp-replace*\
    \ #rx\" \" text \"_\"))\n", "  (regexp-replace* #rx\" +\" text (lambda (m)\n \
    \                                 (if (string=? (regexp-match-substring m 0) \"\
    \ \")\n                                      \"_\"\n                         \
    \             \"-\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n", " \
    \ (regexp-replace* #rx\"\\\\s+\" text (lambda (m)\n                          \
    \          (if (string=? (regexp-match #rx\"\\\\s+\" m) \" \")\n             \
    \                           \"_\"\n                                        \"\
    -\"))))\n", "  (regexp-replace* #rx\" +\" text \"_\"))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

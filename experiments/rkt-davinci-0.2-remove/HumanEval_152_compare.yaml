name: HumanEval_152_compare
language: rkt
prompt: "#lang racket\n\n;; I think we all remember that feeling when the result of\
  \ some long-awaited\n;; event is finally known. The feelings and thoughts you have\
  \ at that moment are\n;; definitely worth noting down and comparing.\n;; Your task\
  \ is to determine if a person correctly guessed the results of a number of matches.\n\
  ;; You are given two arrays of scores and guesses of equal length, where each index\
  \ shows a match. \n;; Return an array of the same length denoting how far off each\
  \ guess was. If they have guessed correctly,\n;; the value is 0, and if not, the\
  \ value is the absolute difference between the guess and the score.\n;; example:\n\
  (define (compare game guess)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate compare))\n\
  \    (check-equal? (candidate (list 1 2 3 4 5 1) (list 1 2 3 4 2 -2)) (list 0 0\
  \ 0 0 3 3))\n    (check-equal? (candidate (list 0 0 0 0 0 0) (list 0 0 0 0 0 0))\
  \ (list 0 0 0 0 0 0))\n    (check-equal? (candidate (list 1 2 3) (list -1 -2 -3))\
  \ (list 2 4 6))\n    (check-equal? (candidate (list 1 2 3 5) (list -1 2 3 4)) (list\
  \ 2 0 0 1))\n))\n\n(test-humaneval)"
completions: ["  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (g) (if (= g 0) 0 (abs (- g guess)))) game))\n", "  (map abs (map\
    \ - game guess)))\n", "  (map (lambda (g) (if (= g 0) 0 (abs (- g guess)))) game))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y)\
    \ 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs\
    \ (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (for/list ([g game] [q guess])\n    (if (= g q)\n        0\n        (abs (- g\
    \ q)))))\n", "  (map (lambda (g s)\n         (if (= g s)\n             0\n   \
    \          (abs (- g s))))\n       guess\n       game))\n", "  (map (lambda (x\
    \ y)\n         (cond\n           [(= x y) 0]\n           [else (abs (- x y))]))\n\
    \       game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game\
    \ guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map abs (map - game guess)))\n", "  (map abs (map - game guess)))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs (map\
    \ - game guess)))\n", "  (map abs (map - game guess)))\n", "  (map (lambda (x\
    \ y)\n         (if (= x y)\n             0\n             (abs (- x y))))\n   \
    \    game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game\
    \ guess))\n", "  (for/list ([g game] [p guess])\n    (if (= g p)\n        0\n\
    \        (abs (- g p)))))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (x y)\n         (if (= x y)\n             0\n             (abs (-\
    \ x y))))\n       game guess))", "  (map (lambda (x y)\n         (if (= x y)\n\
    \             0\n             (abs (- x y))))\n       game guess))\n", "  (map\
    \ abs (map - game guess)))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n\
    \             (abs (- x y))))\n       game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n         (if\
    \ (= x y)\n             0\n             (abs (- x y))))\n       game guess))\n",
  "  (for/list ([g game] [r guess])\n    (if (= g r)\n        0\n        (abs (- g\
    \ r)))))\n", "  (for/list ([g game] [q guess])\n    (if (= g q)\n        0\n \
    \       (abs (- g q)))))\n", "  (map (lambda (x y)\n         (cond ((= x y) 0)\n\
    \               (else (abs (- x y)))))\n       game guess))\n", "  (map (\u03BB\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y)\
    \ 0 (abs (- x y)))) game guess))\n", "  (map (lambda (g s)\n         (if (= g\
    \ s)\n             0\n             (abs (- g s))))\n       guess\n       game))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (for/list\
    \ ([g game] [p guess])\n    (if (= g p)\n        0\n        (abs (- g p)))))\n",
  "  (map (lambda (x y)\n         (if (= x y)\n             0\n             (abs (-\
    \ x y))))\n       game guess))", "  (map abs (map - game guess)))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs (map\
    \ - game guess)))\n", "  (map (lambda (x y)\n         (if (= x y)\n          \
    \   0\n             (abs (- x y))))\n       game guess))\n", "  (map (lambda (x\
    \ y)\n         (if (= x y)\n             0\n             (abs (- x y))))\n   \
    \    game guess))\n", "  (for/list ([g game] [g2 guess])\n    (if (= g g2)\n \
    \       0\n        (abs (- g g2)))))\n", "  (map (lambda (x y)\n         (if (=\
    \ x y)\n             0\n             (abs (- x y))))\n       game guess))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (g s) (if (= g s) 0 (abs (- g s)))) guess game))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (for/list ([g game] [r guess])\n\
    \    (if (= g r)\n        0\n        (abs (- g r)))))\n", "  (map abs (map - game\
    \ guess)))\n", "  (map abs (map - game guess)))\n", "  (map (lambda (g) (if (=\
    \ g 0) 0 (abs (- g guess)))) game))\n", "  (map (lambda (x y) (if (= x y) 0 (abs\
    \ (- x y)))) game guess))\n", "  (map (\u03BB (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (\u03BB (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (g s) (if (= g s) 0 (abs (- g s)))) guess game))\n", "  (for/list\
    \ ([i (in-range (length game))])\n    (if (= (list-ref game i) (list-ref guess\
    \ i))\n        0\n        (- (list-ref game i) (list-ref guess i)))))\n", "  (map\
    \ (lambda (x y)\n         (if (= x y)\n             0\n             (abs (- x\
    \ y))))\n       game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x\
    \ y)))) game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game\
    \ guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n  \
    \           (abs (- x y))))\n       game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n         (if\
    \ (= x y)\n             0\n             (abs (- x y))))\n       game guess))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n\
    \         (if (= x y)\n             0\n             (abs (- x y))))\n       game\
    \ guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n  \
    \           (abs (- x y))))\n       game guess))\n", "  (map (\u03BB (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y)\
    \ 0 (abs (- x y)))) game guess))\n", "  (map abs (map - game guess)))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (for/list ([g game]\
    \ [q guess])\n    (if (= g q)\n        0\n        (abs (- g q)))))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (g s) (if (= g s)\
    \ 0 (abs (- g s)))) game guess))\n", "  (for/list ([i (in-range (length game))])\n\
    \    (if (= (list-ref game i) (list-ref guess i))\n        0\n        (- (list-ref\
    \ game i) (list-ref guess i)))))\n", "  (map abs (map - game guess)))\n", "  (map\
    \ abs (map - game guess)))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n\
    \             (abs (- x y))))\n       game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs (map - game guess)))\n",
  "  (map (lambda (g) (if (= g 0) 0 (abs (- g guess)))) game))\n", "  (map (lambda\
    \ (g) (if (= g 0) 0 (abs (- g guess)))) game))\n", "  (for/list ([g game] [r guess])\n\
    \    (cond\n      [(= g r) 0]\n      [else (abs (- g r))])))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs (map - game\
    \ guess)))\n", "  (map abs (map - game guess)))\n", "  (map (lambda (x y)\n  \
    \       (if (= x y)\n             0\n             (abs (- x y))))\n       game\
    \ guess))\n", "  (for/list ([g game] [q guess])\n    (if (= g q)\n        0\n\
    \        (abs (- g q)))))\n", "  (map abs (map - game guess)))\n", "  (map (lambda\
    \ (g) (if (= g 0) 0 (abs (- g guess)))) game))\n", "  (map (lambda (x y) (if (=\
    \ x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n         (if\
    \ (= x y)\n             0\n             (abs (- x y))))\n       game guess))\n",
  "  (map abs (map - game guess)))\n", "  (for/list ([g game] [q guess])\n    (if\
    \ (= g q)\n        0\n        (abs (- g q)))))\n", "  (map (\u03BB (x y) (if (=\
    \ x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y) 0\
    \ (abs (- x y)))) game guess))\n", "  (for/list ([g game] [a guess])\n    (if\
    \ (= g a)\n        0\n        (abs (- g a)))))\n", "  (for/list ([g game] [s guess])\n\
    \    (if (= g s)\n        0\n        (abs (- g s)))))\n", "  (map (lambda (x y)\
    \ (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (=\
    \ x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y) 0\
    \ (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n\
    \             0\n             (abs (- x y))))\n       game guess))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y)\n         (if (= x y)\n             0\n             (abs (- x y))))\n\
    \       game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game\
    \ guess))\n", "  (map abs (map - game guess)))\n", "  (map (lambda (x y) (if (=\
    \ x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (g s) (if (= g s) 0\
    \ (abs (- g s)))) game guess))\n", "  (map (lambda (game guess)\n         (if\
    \ (= game guess)\n             0\n             (abs (- game guess))))\n      \
    \ game guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n\
    \             (abs (- x y))))\n       game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y)\
    \ 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n         (if (= x\
    \ y)\n             0\n             (abs (- x y))))\n       game guess))\n", " \
    \ (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs\
    \ (map - game guess)))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (for/list\
    \ ([g game] [p guess])\n    (if (= g p)\n        0\n        (abs (- g p)))))\n",
  "  (map (lambda (x y)\n         (if (= x y)\n             0\n             (abs (-\
    \ x y))))\n       game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (-\
    \ x y)))) game guess))\n", "  (map abs (map - game guess)))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (g s) (if (= g s)\
    \ 0 (abs (- g s)))) game guess))\n", "  (map abs (map - game guess)))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs (map\
    \ - game guess)))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game\
    \ guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n  \
    \           (abs (- x y))))\n       game guess))\n", "  (for/list ([i (in-range\
    \ (length game))])\n    (if (= (list-ref game i) (list-ref guess i))\n       \
    \ 0\n        (- (list-ref game i) (list-ref guess i)))))\n", "  (map (lambda (x\
    \ y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n  \
    \       (if (= x y)\n             0\n             (abs (- x y))))\n       game\
    \ guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n  \
    \           (abs (- x y))))\n       game guess))\n", "  (map (lambda (x y)\n \
    \        (if (= x y)\n             0\n             (abs (- x y))))\n       game\
    \ guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (g) (if\
    \ (= g 0) 0 (abs (- g guess)))) game))\n", "  (map abs (map - game guess)))\n",
  "  (map (lambda (x y)\n         (if (= x y)\n             0\n             (abs (-\
    \ x y))))\n       game guess))\n", "  (map abs (map - game guess)))\n", "  (for/list\
    \ ([g game] [s guess])\n    (if (= g s)\n        0\n        (abs (- g s)))))\n",
  "  (map abs (map - game guess)))\n", "  (map abs (map - game guess)))\n", "  (map\
    \ (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map abs (map - game\
    \ guess)))\n", "  (map (\u03BB (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map abs (map - game guess)))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (-\
    \ x y)))) game guess))\n", "  (map (lambda (x y)\n         (if (= x y)\n     \
    \        0\n             (abs (- x y))))\n       game guess))\n", "  (map abs\
    \ (- game guess)))\n", "  (for/list ([i (in-range (length game))])\n    (abs (-\
    \ (list-ref game i) (list-ref guess i)))))\n", "  (map (lambda (x y)\n       \
    \  (if (= x y)\n             0\n             (abs (- x y))))\n       game guess))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (\u03BB (g) (if\
    \ (= g 0) 0 (abs (- g guess)))) game))\n", "  (for/list ([i (in-range (length\
    \ game))])\n    (if (= (list-ref game i) (list-ref guess i))\n        0\n    \
    \    (- (list-ref game i) (list-ref guess i)))))\n", "  (for/list ([g game] [r\
    \ guess])\n    (if (= g r)\n        0\n        (abs (- g r)))))\n", "  (for/list\
    \ ([i (in-range (length game))])\n    (abs (- (list-ref game i) (list-ref guess\
    \ i)))))\n", "  (for/list ([g game] [g2 guess])\n    (if (= g g2)\n        0\n\
    \        (abs (- g g2)))))\n", "  (map (lambda (g) (if (= g 0) 0 (abs (- g guess))))\
    \ game))\n", "  (map (lambda (x y)\n         (if (= x y)\n             0\n   \
    \          (abs (- x y))))\n       game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y)\
    \ 0 (abs (- x y)))) game guess))\n", "  (for/list ([i (in-range (length game))])\n\
    \    (if (= (list-ref game i) (list-ref guess i))\n        0\n        (- (list-ref\
    \ game i) (list-ref guess i)))))\n", "  (for/list ([g game] [q guess])\n    (if\
    \ (= g q)\n        0\n        (abs (- g q)))))\n", "  (map (lambda (x y)\n   \
    \      (if (= x y)\n             0\n             (abs (- x y))))\n       game\
    \ guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (x y)\n         (if (= x y)\n             0\n             (abs (-\
    \ x y))))\n       game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (-\
    \ x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y))))\
    \ game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map abs (map - game guess)))\n", "  (map (lambda (x y)\n         (if (= x y)\n\
    \             0\n             (abs (- x y))))\n       game guess))\n", "  (for/list\
    \ ([g game] [r guess])\n    (if (= g r)\n        0\n        (abs (- g r)))))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y)\n         (if (= x y)\n             0\n             (abs (- x y))))\n\
    \       game guess))\n", "  (map abs (map - game guess)))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (for/list ([i (in-range\
    \ (length game))])\n    (if (= (list-ref game i) (list-ref guess i))\n       \
    \ 0\n        (- (list-ref game i) (list-ref guess i)))))\n", "  (map (lambda (x\
    \ y)\n         (if (= x y)\n             0\n             (abs (- x y))))\n   \
    \    game guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game\
    \ guess))\n", "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n",
  "  (map (lambda (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda\
    \ (x y) (if (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if\
    \ (= x y) 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y) (if (= x y)\
    \ 0 (abs (- x y)))) game guess))\n", "  (map (lambda (x y)\n         (if (= x\
    \ y)\n             0\n             (abs (- x y))))\n       game guess))\n", " \
    \ (map (lambda (g) (if (= g 0) 0 (abs (- g guess)))) game))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

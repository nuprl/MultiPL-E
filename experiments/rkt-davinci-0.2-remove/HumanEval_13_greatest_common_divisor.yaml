name: HumanEval_13_greatest_common_divisor
language: rkt
prompt: "#lang racket\n\n;; Return a greatest common divisor of two integers a and\
  \ b\n(define (greatest_common_divisor a b)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate greatest_common_divisor))\n\
  \    (check-equal? (candidate 3 7) 1)\n    (check-equal? (candidate 10 15) 5)\n\
  \    (check-equal? (candidate 49 14) 7)\n    (check-equal? (candidate 144 60) 12)\n\
  ))\n\n(test-humaneval)"
completions: ["  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder\
    \ a b))))\n", "  (cond\n    [(= a 0) b]\n    [(= b 0) a]\n    [(> a b) (greatest_common_divisor\
    \ (- a b) b)]\n    [else (greatest_common_divisor a (- b a))]))\n", "  (if (=\
    \ b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", "  (if\
    \ (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", " \
    \ (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= b 0) a]\n    [else (greatest_common_divisor b (modulo a b))]))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond ((= b 0) a)\n        (else (greatest_common_divisor b (remainder a b)))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= a 0) b]\n    [(= b 0) a]\n    [(> a b) (greatest_common_divisor\
    \ (- a b) b)]\n    [else (greatest_common_divisor a (- b a))]))\n", "  (if (=\
    \ b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", "  (if\
    \ (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", " \
    \ (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= a 0) b]\n    [(= b 0) a]\n    [(< a b) (greatest_common_divisor\
    \ a (- b a))]\n    [else (greatest_common_divisor (- a b) b)]))\n", "  (if (=\
    \ b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", "  (if\
    \ (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", " \
    \ (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond ((= a 0) b)\n        ((= b 0) a)\n        ((< a b) (greatest_common_divisor\
    \ a (- b a)))\n        (else (greatest_common_divisor (- a b) b))))\n", "  (if\
    \ (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", " \
    \ (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= a 0) b]\n    [(= b 0) a]\n    [(= a b) a]\n    [(> a b) (greatest_common_divisor\
    \ (- a b) b)]\n    [else (greatest_common_divisor a (- b a))]))\n", "  (if (=\
    \ b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", "  (if\
    \ (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", " \
    \ (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= a 0) b]\n    [(= b 0) a]\n    [(= a b) a]\n    [(> a b) (greatest_common_divisor\
    \ (- a b) b)]\n    [else (greatest_common_divisor a (- b a))]))\n", "  (if (=\
    \ b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", "  (if\
    \ (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n", " \
    \ (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= b 0) a]\n    [else (greatest_common_divisor b (modulo a b))]))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n",
  "  (cond\n    [(= b 0) a]\n    [else (greatest_common_divisor b (modulo a b))]))\n",
  "  (cond\n    [(= a 0) b]\n    [(= b 0) a]\n    [(< a b) (greatest_common_divisor\
    \ b a)]\n    [else (greatest_common_divisor (- a b) b)]))\n", "  (if (= b 0)\n\
    \      a\n      (greatest_common_divisor b (remainder a b))))\n", "  (if (= b\
    \ 0)\n      a\n      (greatest_common_divisor b (remainder a b))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

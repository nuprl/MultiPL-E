name: HumanEval_46_fib4
language: rkt
prompt: "#lang racket\n\n;; The Fib4 number sequence is a sequence similar to the\
  \ Fibbonacci sequnece that's defined as follows:\n;; fib4(0) -> 0\n;; fib4(1) ->\
  \ 0\n;; fib4(2) -> 2\n;; fib4(3) -> 0\n;; fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
  \ + fib4(n-4).\n;; Please write a function to efficiently compute the n-th element\
  \ of the fib4 number sequence.  Do not use recursion.\n(define (fib4 n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib4))\n\
  \    (check-equal? (candidate 5) 4)\n    (check-equal? (candidate 8) 28)\n    (check-equal?\
  \ (candidate 10) 104)\n    (check-equal? (candidate 12) 386)\n))\n\n(test-humaneval)"
completions: ["  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(= n 0) a]\n\
    \          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n       \
    \   [else (loop (- n 1) b c d (+ a b c d))])))\n", "  (define (fib4-iter n a b\
    \ c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n          ((= n 2) c)\n\
    \          ((= n 3) d)\n          (else (fib4-iter (- n 1) b c d (+ a b c d)))))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n \
    \   (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n        \
    \  [(= n 3) d]\n          [else (loop (- n 1) b c d (+ a b c d))])))\n", "  (let\
    \ loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(= n 0) a]\n          [(= n\
    \ 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n          [else (loop (-\
    \ n 1) b c d (+ a b c d))])))\n", "  (define (fib4-iter n a b c d)\n    (cond\n\
    \      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n\
    \      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n\
    \      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+\
    \ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n\
    \    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(=\
    \ n 3) d]\n      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper\
    \ n 0 0 2 0))\n", "  (cond [(= n 0) 0]\n        [(= n 1) 0]\n        [(= n 2)\
    \ 2]\n        [(= n 3) 0]\n        [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (let ([a 0] [b 0] [c 2] [d 0])\n    (for\
    \ ([i (in-range n)])\n      (let ([e (+ a b c d)])\n        (set! a b)\n     \
    \   (set! b c)\n        (set! c d)\n        (set! d e)))))\n", "  (let loop ([n\
    \ n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (loop (- n 1) b\
    \ c d (+ a b c d))])))\n", "  (define (fib4-iter n a b c d)\n    (cond\n     \
    \ [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n     \
    \ [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (define (fib4-helper n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1)\
    \ b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper (- n 1) b\
    \ c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (define (fib4-iter n\
    \ a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n\
    \          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond [(=\
    \ n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n\
    \          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0\
    \ 2 0))\n", "  (define (fib4-iter a b c d n)\n    (if (= n 0)\n        a\n   \
    \     (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter 0 0 2 0 n))\n", " \
    \ (define (fib4-helper n-1 n-2 n-3 n-4)\n    (cond [(= n 0) n-1]\n          [(=\
    \ n 1) n-2]\n          [(= n 2) n-3]\n          [(= n 3) n-4]\n          [else\
    \ (fib4-helper (+ n-1 n-2 n-3 n-4) n-1 n-2 n-3)]))\n  (fib4-helper 0 0 2 0))\n",
  "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n\
    \      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+\
    \ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (let loop ([n n] [a 0] [b 0] [c\
    \ 2] [d 0])\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (loop (- n 1) b c d (+ a b c d))])))\n",
  "  (define (fib4-helper n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1)\
    \ b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper (- n 1) b\
    \ c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (define (fib4-helper\
    \ n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2)\
    \ c]\n      [(= n 3) d]\n      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-helper n 0 0 2 0))\n", "  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n\
    \    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(=\
    \ n 3) d]\n      [else (loop (- n 1) b c d (+ a b c d))])))\n", "  (cond\n   \
    \ [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+\
    \ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define\
    \ (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n   \
    \   [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a\
    \ b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n\
    \    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n       \
    \   [(= n 3) d]\n          [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-helper n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n \
    \   [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter a b c d n)\n    (if (=\
    \ n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter\
    \ 0 0 2 0 n))\n", "  (define (fib4-helper n a b c d)\n    (cond [(= n 0) a]\n\
    \          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n       \
    \   [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (define (fib4-iter a b c d n)\n    (if (= n 0)\n        a\n        (fib4-iter\
    \ b c d (+ a b c d) (- n 1))))\n  (fib4-iter 0 0 2 0 n))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2)\
    \ c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond [(=\
    \ n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n\
    \          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0\
    \ 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(=\
    \ n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (-\
    \ n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n    \
    \      [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n          [else\
    \ (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define\
    \ (fib4-helper n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n \
    \     [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper (- n 1) b c d (+\
    \ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n\
    \    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n       \
    \   [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n    (cond\n      [(= n 0)\
    \ a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (let loop ([n\
    \ n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (loop (- n 1) b\
    \ c d (+ a b c d))])))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(=\
    \ n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (-\
    \ n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter a b c d n)\n    (if (= n\
    \ 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter\
    \ 0 0 2 0 n))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (define (fib4-helper n a b c d)\n    (cond ((= n 0) a)\n\
    \          ((= n 1) b)\n          ((= n 2) c)\n          ((= n 3) d)\n       \
    \   (else (fib4-helper (- n 1) b c d (+ a b c d)))))\n  (fib4-helper n 0 0 2 0))\n",
  "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n\
    \      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+\
    \ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n\
    \    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n       \
    \   [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (define (fib4-iter a b c d n)\n    (if (= n 0)\n        a\n\
    \        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter 0 0 2 0 n))\n",
  "  (define (fib4-iter n a b c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n\
    \          ((= n 2) c)\n          ((= n 3) d)\n          (else (fib4-iter (- n\
    \ 1) b c d (+ a b c d)))))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0)\
    \ 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (-\
    \ n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2)\
    \ c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n   \
    \ [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (cond [(= n 0) 0]\n        [(= n 1) 0]\n\
    \        [(= n 2) 2]\n        [(= n 3) 0]\n        [else (+ (fib4 (- n 1)) (fib4\
    \ (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-helper n a b\
    \ c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n \
    \     [(= n 3) d]\n      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper\
    \ n 0 0 2 0))\n", "  (if (< n 4)\n      n\n      (+ (fib4 (- n 1))\n         (fib4\
    \ (- n 2))\n         (fib4 (- n 3))\n         (fib4 (- n 4)))))\n", "  (if (or\
    \ (= n 0) (= n 1))\n      0\n      (if (= n 2)\n          2\n          (if (=\
    \ n 3)\n              0\n              (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))))))\n", "  (define (fib4-iter a b c d n)\n    (if (=\
    \ n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter\
    \ 0 0 2 0 n))\n", "  (define (fib4-helper n a b c d)\n    (cond [(= n 0) a]\n\
    \          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n       \
    \   [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n",
  "  (define (fib4-helper n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-helper (-\
    \ n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n          ((= n 2)\
    \ c)\n          ((= n 3) d)\n          (else (fib4-iter (- n 1) b c d (+ a b c\
    \ d)))))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond [(= n 0) 0]\n        [(=\
    \ n 1) 0]\n        [(= n 2) 2]\n        [(= n 3) 0]\n        [else (+ (fib4 (-\
    \ n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2)\
    \ c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n   \
    \ [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond\n\
    \      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n\
    \      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n\
    \      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+\
    \ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n\
    \    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(=\
    \ n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n \
    \         [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n        \
    \  [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n\
    \              2\n              (if (= n 3)\n                  0\n           \
    \       (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4))))))))\n",
  "  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(= n 0) a]\n          [(=\
    \ n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n          [else (loop\
    \ (- n 1) b c d (+ a b c d))])))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n\
    \    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2))\
    \ (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(=\
    \ n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4\
    \ (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter n a b c\
    \ d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n   \
    \   [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond\n  \
    \    [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n  \
    \    [else (loop (- n 1) b c d (+ a b c d))])))\n", "  (define (fib4-iter n a\
    \ b c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n          ((= n 2) c)\n\
    \          ((= n 3) d)\n          (else (fib4-iter (- n 1) b c d (+ a b c d)))))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond\n  \
    \    [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n  \
    \    [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (define (fib4-iter n a b c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n\
    \          ((= n 2) c)\n          ((= n 3) d)\n          (else (fib4-iter (- n\
    \ 1) b c d (+ a b c d)))))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2)\
    \ c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter a b c d count)\n    (cond\
    \ ((= count 0) a)\n          ((= count 1) b)\n          ((= count 2) c)\n    \
    \      ((= count 3) d)\n          (else (fib4-iter b c d (+ a b c d) (- count\
    \ 1)))))\n  (fib4-iter 0 0 2 0 n))\n", "  (define (fib4-iter n a b c d)\n    (cond\
    \ ((= n 0) a)\n          ((= n 1) b)\n          ((= n 2) c)\n          ((= n 3)\
    \ d)\n          (else (fib4-iter (- n 1) b c d (+ a b c d)))))\n  (fib4-iter n\
    \ 0 0 2 0))\n", "  (if (< n 2)\n      0\n      (if (< n 3)\n          2\n    \
    \      (if (< n 4)\n              0\n              (+ (fib4 (- n 1)) (fib4 (-\
    \ n 2)) (fib4 (- n 3)) (fib4 (- n 4)))))))\n", "  (define (fib4-iter a b c d count)\n\
    \    (cond [(= count 0) a]\n          [(= count 1) b]\n          [(= count 2)\
    \ c]\n          [(= count 3) d]\n          [else (fib4-iter b c d (+ a b c d)\
    \ (- count 1))]))\n  (fib4-iter 0 0 2 0 n))\n", "  (cond\n    [(= n 0) 0]\n  \
    \  [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1))\
    \ (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0)\
    \ 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (-\
    \ n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (if (< n 4)\n\
    \      n\n      (+ (fib4 (- n 1))\n         (fib4 (- n 2))\n         (fib4 (-\
    \ n 3))\n         (fib4 (- n 4)))))\n", "  (define (fib4-iter n a b c d)\n   \
    \ (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n\
    \ 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n\
    \ 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n\
    \      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c\
    \ d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (letrec ([fib4-helper (lambda (n)\n\
    \                          (cond [(= n 0) 0]\n                               \
    \ [(= n 1) 0]\n                                [(= n 2) 2]\n                 \
    \               [(= n 3) 0]\n                                [else (+ (fib4-helper\
    \ (- n 1))\n                                         (fib4-helper (- n 2))\n \
    \                                        (fib4-helper (- n 3))\n             \
    \                            (fib4-helper (- n 4)))]))])\n    (fib4-helper n)))\n",
  "  (define (fib4-helper n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1)\
    \ b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper (- n 1) b\
    \ c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (define (fib4-iter n\
    \ a b c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n          ((= n 2) c)\n\
    \          ((= n 3) d)\n          (else (fib4-iter (- n 1) b c d (+ a b c d)))))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n    (cond [(=\
    \ n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n\
    \          [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n\
    \ 0 0 2 0))\n", "  (if (< n 4)\n      n\n      (+ (fib4 (- n 1))\n         (fib4\
    \ (- n 2))\n         (fib4 (- n 3))\n         (fib4 (- n 4)))))\n", "  (define\
    \ (fib4-iter n a b c d)\n    (cond ((= n 0) a)\n          ((= n 1) b)\n      \
    \    ((= n 2) c)\n          ((= n 3) d)\n          (else (fib4-iter (- n 1) b\
    \ c d (+ a b c d)))))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-helper n-1\
    \ n-2 n-3 n-4)\n    (cond [(= n 0) n-1]\n          [(= n 1) n-2]\n          [(=\
    \ n 2) n-3]\n          [(= n 3) n-4]\n          [else (fib4-helper (+ n-1 n-2\
    \ n-3 n-4) n-1 n-2 n-3)]))\n  (fib4-helper 0 0 2 0))\n", "  (define (fib4-helper\
    \ n-1 n-2 n-3 n-4)\n    (cond\n      [(= n 0) n-1]\n      [(= n 1) n-2]\n    \
    \  [(= n 2) n-3]\n      [(= n 3) n-4]\n      [else (fib4-helper (+ n-1 n-2 n-3\
    \ n-4) n-1 n-2 n-3)]))\n  (fib4-helper 0 0 2 0))\n", "  (define (fib4-iter a b\
    \ c d n)\n    (if (= n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (-\
    \ n 1))))\n  (fib4-iter 0 0 2 0 n))\n", "  (let loop ([n n] [a 0] [b 0] [c 2]\
    \ [d 0])\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n\
    \      [(= n 3) d]\n      [else (loop (- n 1) b c d (+ a b c d))])))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define\
    \ (fib4-iter n-1 n-2 n-3 n-4 n)\n    (cond\n      [(= n 0) n-1]\n      [(= n 1)\
    \ n-2]\n      [(= n 2) n-3]\n      [(= n 3) n-4]\n      [else (fib4-iter (+ n-1\
    \ n-2 n-3 n-4) n-1 n-2 n-3 (- n 1))]))\n  (fib4-iter 0 0 2 0 n))\n", "  (define\
    \ (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n   \
    \   [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a\
    \ b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n\
    \    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(=\
    \ n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (let ([a 0] [b 0] [c 2] [d 0])\n    (for ([i (in-range n)])\n\
    \      (let ([t (+ a b c d)])\n        (set! a b)\n        (set! b c)\n      \
    \  (set! c d)\n        (set! d t)))))\n", "  (define (fib4-iter a b c d n)\n \
    \   (if (= n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n\
    \  (fib4-iter 0 0 2 0 n))\n", "  (define (fib4-helper n a b c d)\n    (cond\n\
    \      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n\
    \      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0\
    \ 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(=\
    \ n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (-\
    \ n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n\
    \      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c\
    \ d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n  \
    \  (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n\
    \ 3) d]\n      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper\
    \ n 0 0 2 0))\n", "  (if (< n 2)\n      0\n      (if (= n 2)\n          2\n  \
    \        (if (= n 3)\n              0\n              (+ (fib4 (- n 1)) (fib4 (-\
    \ n 2)) (fib4 (- n 3)) (fib4 (- n 4)))))))\n", "  (cond\n    [(= n 0) 0]\n   \
    \ [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4\
    \ (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-helper n a b\
    \ c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n\
    \          [(= n 3) d]\n          [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-helper n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n \
    \   [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n\
    \    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2))\
    \ (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter a b c d n)\n   \
    \ (if (= n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter\
    \ 0 0 2 0 n))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0)\
    \ a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter\
    \ a b c d n)\n    (if (= n 0)\n        a\n        (fib4-iter b c d (+ a b c d)\
    \ (- n 1))))\n  (fib4-iter 0 0 2 0 n))\n", "  (cond\n    [(= n 0) 0]\n    [(=\
    \ n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4\
    \ (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-helper n a b\
    \ c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n \
    \     [(= n 3) d]\n      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper\
    \ n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n  \
    \        [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n         \
    \ [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (if (or (= n 0) (= n 1))\n      0\n      (if (= n 2)\n          2\n         \
    \ (if (= n 3)\n              0\n              (+ (fib4 (- n 1)) (fib4 (- n 2))\
    \ (fib4 (- n 3)) (fib4 (- n 4)))))))\n", "  (define (fib4-iter n a b c d)\n  \
    \  (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n\
    \ 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n\
    \ 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n \
    \         [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n        \
    \  [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (define (fib4-helper n)\n    (cond\n      [(= n 0) 0]\n      [(= n 1) 0]\n  \
    \    [(= n 2) 2]\n      [(= n 3) 0]\n      [else (+ (fib4-helper (- n 1)) (fib4-helper\
    \ (- n 2)) (fib4-helper (- n 3)) (fib4-helper (- n 4)))]))\n  (fib4-helper n))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-iter (- n\
    \ 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (letrec ([fib4-helper\
    \ (lambda (n)\n                          (cond [(= n 0) 0]\n                 \
    \               [(= n 1) 0]\n                                [(= n 2) 2]\n   \
    \                             [(= n 3) 0]\n                                [else\
    \ (+ (fib4-helper (- n 1))\n                                         (fib4-helper\
    \ (- n 2))\n                                         (fib4-helper (- n 3))\n \
    \                                        (fib4-helper (- n 4)))]))])\n    (fib4-helper\
    \ n)))\n", "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n         \
    \ [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-iter\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (if (< n 4)\n\
    \      (if (= n 2)\n          2\n          0)\n      (+ (fib4 (- n 1))\n     \
    \    (fib4 (- n 2))\n         (fib4 (- n 3))\n         (fib4 (- n 4)))))\n", " \
    \ (define (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1)\
    \ b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c\
    \ d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b\
    \ c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n\
    \          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (cond [(= n 0) 0]\n        [(= n 1) 0]\n    \
    \    [(= n 2) 2]\n        [(= n 3) 0]\n        [else (+ (fib4 (- n 1)) (fib4 (-\
    \ n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-helper n a b c\
    \ d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n   \
    \   [(= n 3) d]\n      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper\
    \ n 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n    (cond [(= n 0) a]\n\
    \          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n       \
    \   [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n",
  "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-iter (- n\
    \ 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0)\
    \ 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (-\
    \ n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c\
    \ d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter a b c d n)\n\
    \    (if (= n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n\
    \  (fib4-iter 0 0 2 0 n))\n", "  (define (fib4-iter n a b c d)\n    (cond\n  \
    \    [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n  \
    \    [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n \
    \   [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n",
  "  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond\n      [(= n 0) a]\n   \
    \   [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (loop (- n\
    \ 1) b c d (+ a b c d))])))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n \
    \   [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n\
    \    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2))\
    \ (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter a b c d n)\n\
    \    (if (= n 0) a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter\
    \ 0 0 2 0 n))\n", "  (define (fib4-iter a b c d n)\n    (if (= n 0)\n        a\n\
    \        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter 0 0 2 0 n))\n",
  "  (define (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-iter (- n\
    \ 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c\
    \ d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n\
    \    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n       \
    \   [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (let loop ([a 0] [b 0] [c 2] [d 0] [i n])\n    (cond [(=\
    \ i 0) a]\n          [(= i 1) b]\n          [(= i 2) c]\n          [(= i 3) d]\n\
    \          [else (loop b c d (+ a b c d) (- i 1))])))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c\
    \ d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond\
    \ [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3)\
    \ d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n\
    \ 0 0 2 0))\n", "  (let ([a 0] [b 0] [c 2] [d 0])\n    (for ([i (in-range n)])\n\
    \      (set! d (+ a b c))\n      (set! a b)\n      (set! b c)\n      (set! c d))\n\
    \    d))\n", "  (define (fib4-helper n a b c d)\n    (cond\n      [(= n 0) a]\n\
    \      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (cond\n   \
    \ [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+\
    \ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define\
    \ (fib4-iter n a b c d)\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n   \
    \   [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-iter (- n 1) b c d (+ a\
    \ b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (cond [(= n 0) 0]\n        [(= n\
    \ 1) 0]\n        [(= n 2) 2]\n        [(= n 3) 0]\n        [else (+ (fib4 (- n\
    \ 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (let loop ([n n]\
    \ [a 0] [b 0] [c 2] [d 0])\n    (cond\n      [(= n 0) a]\n      [(= n 1) b]\n\
    \      [(= n 2) c]\n      [(= n 3) d]\n      [else (loop (- n 1) b c d (+ a b\
    \ c d))])))\n", "  (cond [(= n 0) 0]\n        [(= n 1) 0]\n        [(= n 2) 2]\n\
    \        [(= n 3) 0]\n        [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (-\
    \ n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n    (cond\n \
    \     [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n \
    \     [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n",
  "  (define (fib4-helper n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n\
    \          [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-helper (-\
    \ n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (cond\n    [(=\
    \ n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4\
    \ (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter\
    \ n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2)\
    \ c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c\
    \ d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a b c d)\n    (cond\
    \ [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3)\
    \ d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter n\
    \ 0 0 2 0))\n", "  (define (fib4-helper n a b c d)\n    (cond\n      [(= n 0)\
    \ a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n      [else (fib4-helper\
    \ (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0 2 0))\n", "  (cond\n   \
    \ [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+\
    \ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (let\
    \ loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(= n 0) a]\n          [(= n\
    \ 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n          [else (loop (-\
    \ n 1) b c d (+ a b c d))])))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n\
    \    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2))\
    \ (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1)\
    \ 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n\
    \ 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter n a b c d)\n\
    \    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n       \
    \   [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n  (fib4-iter\
    \ n 0 0 2 0))\n", "  (let loop ([n n] [a 0] [b 0] [c 2] [d 0])\n    (cond [(=\
    \ n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n          [(= n 3) d]\n\
    \          [else (loop (- n 1) b c d (+ a b c d))])))\n", "  (cond\n    [(= n\
    \ 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4\
    \ (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n   \
    \ [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+\
    \ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (cond\n\
    \    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n    [(= n 3) 0]\n    [else\
    \ (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4 (- n 4)))]))\n", "  (define\
    \ (fib4-iter n a b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n      \
    \    [(= n 2) c]\n          [(= n 3) d]\n          [else (fib4-iter (- n 1) b\
    \ c d (+ a b c d))]))\n  (fib4-iter n 0 0 2 0))\n", "  (define (fib4-iter n a\
    \ b c d)\n    (cond [(= n 0) a]\n          [(= n 1) b]\n          [(= n 2) c]\n\
    \          [(= n 3) d]\n          [else (fib4-iter (- n 1) b c d (+ a b c d))]))\n\
    \  (fib4-iter n 0 0 2 0))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n   \
    \ [(= n 2) 2]\n    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-iter a b c d n)\n    (if (=\
    \ n 0)\n        a\n        (fib4-iter b c d (+ a b c d) (- n 1))))\n  (fib4-iter\
    \ 0 0 2 0 n))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 2]\n\
    \    [(= n 3) 0]\n    [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4 (- n 3)) (fib4\
    \ (- n 4)))]))\n", "  (cond [(= n 0) 0]\n        [(= n 1) 0]\n        [(= n 2)\
    \ 2]\n        [(= n 3) 0]\n        [else (+ (fib4 (- n 1)) (fib4 (- n 2)) (fib4\
    \ (- n 3)) (fib4 (- n 4)))]))\n", "  (define (fib4-helper n a b c d)\n    (cond\n\
    \      [(= n 0) a]\n      [(= n 1) b]\n      [(= n 2) c]\n      [(= n 3) d]\n\
    \      [else (fib4-helper (- n 1) b c d (+ a b c d))]))\n  (fib4-helper n 0 0\
    \ 2 0))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

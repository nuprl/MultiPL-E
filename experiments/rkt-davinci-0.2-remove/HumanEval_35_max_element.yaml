name: HumanEval_35_max_element
language: rkt
prompt: "#lang racket\n\n;; Return maximum element in the list.\n(define (max_element\
  \ l)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_element))\n\
  \    (check-equal? (candidate (list 1 2 3)) 3)\n    (check-equal? (candidate (list\
  \ 5 3 -5 2 -3 3 9 0 124 1 -10)) 124)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l))\
    \ (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n  \
    \  [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n  \
    \  [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list!\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element:\
    \ empty list\")\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n\
    \            max\n            (let ((x (car l)))\n              (if (&gt; x max)\n\
    \                  (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (if (null? l)\n     \
    \ (error \"Empty list\")\n      (if (null? (cdr l))\n          (car l)\n     \
    \     (let ((max (max_element (cdr l))))\n            (if (&gt; (car l) max)\n\
    \                (car l)\n                max)))))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      0\n      (let ((max (max_element (cdr\
    \ l))))\n        (if (&gt; (car l) max)\n            (car l)\n            max))))\n",
  "  (cond\n    [(null? l) #f]\n    [(null? (cdr l)) (car l)]\n    [else (max (car\
    \ l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest\
    \ l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(null? l) (error \"max_element: empty list\"\
    )]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n  \
    \    (error \"max_element: empty list\")\n      (foldl max (car l) (cdr l))))\n",
  "  (cond\n    [(empty? l) '()]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(null? l) #f]\n    [(null? (cdr l)) (car l)]\n    [else (max (car\
    \ l) (max_element (cdr l)))]))\n", "  (cond ((null? l) #f)\n        ((null? (cdr\
    \ l)) (car l))\n        (else (let ((max (max_element (cdr l))))\n           \
    \     (if (&gt; (car l) max)\n                    (car l)\n                  \
    \  max)))))\n", "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null?\
    \ (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car\
    \ l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l)\
    \ (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) (error \"max_element: empty list\")]\n    [(null? (cdr l)) (car l)]\n   \
    \ [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr\
    \ l))\n          (car l)\n          (if (&gt; (car l) (max_element (cdr l)))\n\
    \              (car l)\n              (max_element (cdr l))))))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond [(empty? l)\
    \ (error \"Empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else\
    \ (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element:\
    \ empty list\")\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n\
    \            max\n            (let ((x (car l)))\n              (if (&gt; x max)\n\
    \                  (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n",
  "  (if (null? l)\n      (error \"Empty list\")\n      (if (null? (cdr l))\n    \
    \      (car l)\n          (let ((max (max_element (cdr l))))\n            (if\
    \ (&gt; (car l) max)\n                (car l)\n                max)))))\n", " \
    \ (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n   \
    \       (car l)\n          (if (> (car l) (max_element (cdr l)))\n           \
    \   (car l)\n              (max_element (cdr l))))))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element: empty list\"\
    )\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n            max\n\
    \            (let ((x (car l)))\n              (if (&gt; x max)\n            \
    \      (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n", "  (if\
    \ (null? l)\n      (error \"Empty list\")\n      (let loop ((l l) (max (car l)))\n\
    \        (if (null? l)\n            max\n            (let ((x (car l)))\n    \
    \          (if (&gt; x max)\n                  (loop (cdr l) x)\n            \
    \      (loop (cdr l) max)))))))\n", "  (cond\n    [(empty? l) (error \"empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (if (null? l)\n      (error \"Empty list\")\n      (if (null?\
    \ (cdr l))\n          (car l)\n          (let ((max (max_element (cdr l))))\n\
    \            (if (&gt; (car l) max)\n                (car l)\n               \
    \ max)))))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n        \
    \  (car l)\n          (if (&gt; (car l) (max_element (cdr l)))\n             \
    \ (car l)\n              (max_element (cdr l))))))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list.\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(null? l) #f]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l)\
    \ (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element:\
    \ empty list\")\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n\
    \            max\n            (let ((x (car l)))\n              (if (&gt; x max)\n\
    \                  (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(null? l)\
    \ 0]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l)\
    \ (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond [(empty? l) (error \"max_element: empty list\")]\n        [(empty? (rest\
    \ l)) (first l)]\n        [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond [(empty? l) (error \"empty list\")]\n        [(empty? (rest l)) (first\
    \ l)]\n        [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(null? l) #f]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond [(empty? l)\
    \ (error \"Empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else\
    \ (max (first l) (max_element (rest l)))]))\n", "  (cond [(empty? l) (error \"\
    empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr\
    \ l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(null? l) (error \"max_element: empty list\"\
    )]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (if (null? l)\n      (error \"Empty list\")\n      (let loop ((l l) (max (car\
    \ l)))\n        (if (null? l)\n            max\n            (loop (cdr l) (if\
    \ (&gt; (car l) max) (car l) max))))))\n", "  (if (null? l)\n      0\n      (if\
    \ (null? (cdr l))\n          (car l)\n          (let ((max (max_element (cdr l))))\n\
    \            (if (&gt; (car l) max)\n                (car l)\n               \
    \ max)))))\n", "  (cond\n    [(null? l) (error \"max_element: empty list\")]\n\
    \    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest\
    \ l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(null? l) (error \"max_element: empty list\")]\n    [(null? (cdr l)) (car\
    \ l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond ((null? l) '())\n        ((null?\
    \ (cdr l)) (car l))\n        (else (if (&gt; (car l) (max_element (cdr l)))\n\
    \                 (car l)\n                 (max_element (cdr l))))))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element:\
    \ empty list\")\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n\
    \            max\n            (let ((cur (car l)))\n              (if (&gt; cur\
    \ max)\n                  (loop (cdr l) cur)\n                  (loop (cdr l)\
    \ max)))))))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n\
    \      0\n      (if (null? (cdr l))\n          (car l)\n          (if (&gt; (car\
    \ l) (max_element (cdr l)))\n              (car l)\n              (max_element\
    \ (cdr l))))))\n", "  (cond\n    [(null? l) (error \"max_element: empty list\"\
    )]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (if (null? l)\n      (error \"Empty list\")\n      (let loop ((l l) (max (car\
    \ l)))\n        (if (null? l)\n            max\n            (let ((x (car l)))\n\
    \              (if (&gt; x max)\n                  (loop (cdr l) x)\n        \
    \          (loop (cdr l) max)))))))\n", "  (cond\n    [(empty? l) (error \"Empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n    [else\n   \
    \  (let ([max (max_element (rest l))])\n       (if (&gt; (first l) max)\n    \
    \       (first l)\n           max))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element: empty list\"\
    )\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n            max\n\
    \            (let ((x (car l)))\n              (if (&gt; x max)\n            \
    \      (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n", "  (cond\n\
    \    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest l))\
    \ (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\
    \ ((null? l) #f)\n        ((null? (cdr l)) (car l))\n        (else (let ((max\
    \ (max_element (cdr l))))\n                (if (&gt; (car l) max)\n          \
    \          (car l)\n                    max)))))\n", "  (cond\n    [(empty? l)\
    \ (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element:\
    \ empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest\
    \ l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else\
    \ (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"List is empty\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (if (null? l)\n      (error \"Empty list\")\n      (let loop\
    \ ((l l) (max (car l)))\n        (if (null? l)\n            max\n            (loop\
    \ (cdr l) (if (&gt; (car l) max) (car l) max))))))\n", "  (cond [(empty? l) (error\
    \ \"empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n      0\n      (if\
    \ (null? (cdr l))\n          (car l)\n          (if (> (car l) (max_element (cdr\
    \ l)))\n              (car l)\n              (max_element (cdr l))))))\n", " \
    \ (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond [(empty?\
    \ l) (error \"Empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else\
    \ (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(null? l) (error \"max_element:\
    \ empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr\
    \ l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) (error \"max_element: empty list\")]\n    [(null? (cdr l)) (car l)]\n   \
    \ [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(null? l) (error \"Empty list\"\
    )]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (if (null? l)\n      (error \"max_element: empty list\")\n      (let loop ((l\
    \ l) (max (car l)))\n        (if (null? l)\n            max\n            (let\
    \ ((cur (car l)))\n              (if (&gt; cur max)\n                  (loop (cdr\
    \ l) cur)\n                  (loop (cdr l) max)))))))\n", "  (if (null? l)\n \
    \     0\n      (if (null? (cdr l))\n          (car l)\n          (if (&gt; (car\
    \ l) (max_element (cdr l)))\n              (car l)\n              (max_element\
    \ (cdr l))))))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (if (null? l)\n      0\n      (if (null? (cdr l))\n          (car l)\n      \
    \    (if (&gt; (car l) (max_element (cdr l)))\n              (car l)\n       \
    \       (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) (error \"Empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element: empty list\"\
    )\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n            max\n\
    \            (let ((x (car l)))\n              (if (&gt; x max)\n            \
    \      (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n      (error \"max_element:\
    \ empty list\")\n      (if (null? (cdr l))\n          (car l)\n          (max\
    \ (car l) (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) (error \"Empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      #f\n      (let loop ((l l) (max (car\
    \ l)))\n        (if (null? l)\n            max\n            (let ((x (car l)))\n\
    \              (if (&gt; x max)\n                  (loop (cdr l) x)\n        \
    \          (loop (cdr l) max)))))))\n", "  (cond\n    [(null? l) #f]\n    [(null?\
    \ (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list!\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (if (null? l)\n      (error \"Empty list\")\n      (if (null?\
    \ (cdr l))\n          (car l)\n          (max (car l) (max_element (cdr l))))))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) #f]\n   \
    \ [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (if (null? l)\n      #f\n      (let ([max (car l)])\n        (for ([x (cdr l)])\n\
    \          (if (&gt; x max)\n              (set! max x)))\n        max)))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n  \
    \    0\n      (if (null? (cdr l))\n          (car l)\n          (if (&gt; (car\
    \ l) (max_element (cdr l)))\n              (car l)\n              (max_element\
    \ (cdr l))))))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (if (null? l)\n     \
    \ (error \"max_element: empty list\")\n      (define (max_element_iter l max)\n\
    \        (if (null? l)\n            max\n            (if (&gt; (car l) max)\n\
    \                (max_element_iter (cdr l) (car l))\n                (max_element_iter\
    \ (cdr l) max))))\n      (max_element_iter l (car l))))\n", "  (cond\n    [(null?\
    \ l) (error \"max_element: empty list\")]\n    [(null? (cdr l)) (car l)]\n   \
    \ [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (if (null? l)\n     \
    \ (error \"Empty list\")\n      (let loop ((l l) (max (car l)))\n        (if (null?\
    \ l)\n            max\n            (let ((next (car l)))\n              (if (&gt;\
    \ next max)\n                  (loop (cdr l) next)\n                  (loop (cdr\
    \ l) max)))))))\n", "  (if (null? l)\n      (error \"max_element: empty list\"\
    )\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n            max\n\
    \            (let ((x (car l)))\n              (if (&gt; x max)\n            \
    \      (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) (error \"max_element: empty list\")]\n    [(null? (cdr l)) (car l)]\n   \
    \ [else (max (car l) (max_element (cdr l)))]))\n", "  (if (null? l)\n      0\n\
    \      (if (null? (cdr l))\n          (car l)\n          (if (&gt; (car l) (max_element\
    \ (cdr l)))\n              (car l)\n              (max_element (cdr l))))))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (if (null? l)\n      (error \"Empty list\")\n      (let loop ((l l) (max (car\
    \ l)))\n        (if (null? l)\n            max\n            (let ((x (car l)))\n\
    \              (if (&gt; x max)\n                  (loop (cdr l) x)\n        \
    \          (loop (cdr l) max)))))))\n", "  (if (null? l)\n      (error \"Empty\
    \ list\")\n      (let loop ((l l) (max (car l)))\n        (if (null? l)\n    \
    \        max\n            (let ((x (car l)))\n              (if (&gt; x max)\n\
    \                  (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null? l) #f]\n    [(null?\
    \ (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest l))\
    \ (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) #f]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond ((null?\
    \ l) #f)\n        ((null? (cdr l)) (car l))\n        (else (if (> (car l) (max_element\
    \ (cdr l)))\n                 (car l)\n                 (max_element (cdr l))))))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    ((null?\
    \ l) (error \"max_element: empty list\"))\n    ((null? (cdr l)) (car l))\n   \
    \ (else (max (car l) (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      (error \"Empty list\")\n      (if\
    \ (null? (cdr l))\n          (car l)\n          (max (car l) (max_element (cdr\
    \ l))))))\n", "  (if (null? l)\n      (error \"max_element: empty list\")\n  \
    \    (let loop ((l l) (max (car l)))\n        (if (null? l)\n            max\n\
    \            (let ((x (car l)))\n              (if (&gt; x max)\n            \
    \      (loop (cdr l) x)\n                  (loop (cdr l) max)))))))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond [(empty? l) (error \"max_element:\
    \ empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else (max (first\
    \ l) (max_element (rest l)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_102_choose_num
language: rkt
prompt: "#lang racket\n\n;; This function takes two positive numbers x and y and returns\
  \ the\n;; biggest even integer number that is in the range [x, y] inclusive. If\
  \ \n;; there's no such number, then the function should return -1.\n;; For example:\n\
  (define (choose_num x y)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate choose_num))\n\
  \    (check-equal? (candidate 12 15) 14)\n    (check-equal? (candidate 13 12) -1)\n\
  \    (check-equal? (candidate 33 12354) 12354)\n    (check-equal? (candidate 5234\
  \ 5233) -1)\n    (check-equal? (candidate 6 29) 28)\n    (check-equal? (candidate\
  \ 27 10) -1)\n    (check-equal? (candidate 7 7) -1)\n    (check-equal? (candidate\
  \ 546 546) 546)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n    [(and (even? x)\
    \ (odd? y)) x]\n    [(and (odd? x) (even? y)) y]\n    [(and (odd? x) (odd? y))\
    \ -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x\
    \ (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n\
    \    [(= x y) x]\n    [(even? x) (choose_num (+ x 2) y)]\n    [(even? y) (choose_num\
    \ x (- y 2))]\n    [else -1]))\n", "  (if (and (even? x) (even? y))\n      (if\
    \ (> x y)\n          y\n          x)\n      (if (and (even? x) (not (even? y)))\n\
    \          x\n          (if (and (not (even? x)) (even? y))\n              y\n\
    \              -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n   \
    \ [else -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x)\
    \ (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", " \
    \ (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? y) y]\n    [else (choose_num\
    \ x (- y 1))]))\n", "  (cond\n    [(and (even? x) (even? y)) (max x y)]\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? y)\
    \ y]\n    [else (choose_num x (- y 1))]))\n", "  (cond\n    [(even? x) x]\n  \
    \  [(even? y) y]\n    [else -1]))\n", "  (if (and (even? x) (even? y))\n     \
    \ (if (> x y)\n          y\n          x)\n      (if (even? x)\n          x\n \
    \         (if (even? y)\n              y\n              -1))))\n", "  (cond\n\
    \    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1)\
    \ y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even?\
    \ x)\n          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(even? x)\
    \ x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(< x y) (cond\n  \
    \             [(even? x) (cond\n                            [(even? y) y]\n  \
    \                          [else (choose_num (+ x 1) y)])]\n               [else\
    \ (choose_num (+ x 1) y)])]\n    [else -1]))\n", "  (if (and (even? x) (even?\
    \ y))\n      (if (> x y)\n          y\n          x)\n      (if (and (even? x)\
    \ (not (even? y)))\n          x\n          (if (and (not (even? x)) (even? y))\n\
    \              y\n              -1))))\n", "  (cond\n    [(= x y) (if (even? x)\
    \ x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(> x y) -1]\n    [(even? x) x]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x)\
    \ (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", " \
    \ (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (even? x)\n          x\n          (if (even? y)\n              y\n\
    \              -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n   \
    \ [else -1]))\n", "  (if (and (even? x) (even? y))\n      (if (> x y) y x)\n \
    \     (if (even? x) x\n          (if (even? y) y -1))))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even?\
    \ x)\n          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even?\
    \ y))\n      (if (> x y)\n          y\n          x)\n      (if (and (even? x)\
    \ (not (even? y)))\n          x\n          (if (and (not (even? x)) (even? y))\n\
    \              y\n              -1))))\n", "  (cond\n    [(even? x) x]\n    [(even?\
    \ y) y]\n    [else -1]))\n", "  (if (and (even? x) (even? y))\n      (if (> x\
    \ y)\n          y\n          x)\n      (if (and (even? x) (not (even? y)))\n \
    \         x\n          (if (and (not (even? x)) (even? y))\n              y\n\
    \              -1))))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n\
    \          y\n          x)\n      (if (and (even? x) (not (even? y)))\n      \
    \    x\n          (if (and (not (even? x)) (even? y))\n              y\n     \
    \         -1))))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even?\
    \ x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (even? x)\n          x\n          (if (even? y)\n              y\n\
    \              -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n   \
    \ [else -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x)\
    \ (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", " \
    \ (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num\
    \ (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x)\
    \ (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (and (even?\
    \ x) (not (even? y)))\n          x\n          (if (and (not (even? x)) (even?\
    \ y))\n              y\n              -1))))\n", "  (if (and (even? x) (even?\
    \ y))\n      (if (> x y)\n          y\n          x)\n      (if (even? x)\n   \
    \       x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(and (even?\
    \ x) (even? y)) (max x y)]\n    [(and (even? x) (odd? y)) x]\n    [(and (odd?\
    \ x) (even? y)) y]\n    [else -1]))\n", "  (cond\n    [(and (even? x) (even? y))\
    \ (if (> x y) x y)]\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n    [(even? x) x]\n\
    \    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(and (even? x) (even? y))\
    \ (if (> x y) x y)]\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x)\
    \ x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x)\
    \ (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", " \
    \ (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (and (even? x) (not (even? y)))\n          x\n          (if (and (not\
    \ (even? x)) (even? y))\n              y\n              -1))))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (even? x)\n          x\n          (if (even? y)\n              y\n         \
    \     -1))))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n       \
    \   y\n          x)\n      (if (and (even? x) (not (even? y)))\n          x\n\
    \          (if (and (not (even? x)) (even? y))\n              y\n            \
    \  -1))))\n", "  (cond\n    [(> x y) -1]\n    [(even? x) x]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else\
    \ -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x\
    \ (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (even? x)\n          x\n          (if (even? y)\n              y\n         \
    \     -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if\
    \ (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else\
    \ (choose_num (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (max\
    \ x y)]\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(and\
    \ (even? x) (even? y)) (if (> x y) x y)]\n    [(even? x) x]\n    [(even? y) y]\n\
    \    [else -1]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x\
    \ y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n  \
    \  [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x\
    \ -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(and\
    \ (even? x) (even? y)) (if (> x y) x y)]\n    [(and (even? x) (odd? y)) x]\n \
    \   [(and (odd? x) (even? y)) y]\n    [(and (odd? x) (odd? y)) -1]))\n", "  (cond\n\
    \    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1)\
    \ y))]\n    [else (choose_num (+ x 1) y)]))\n</code>\n", "  (if (and (even? x)\
    \ (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even? x)\n\
    \          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(and (even? x) (even? y)) (max x y)]\n    [(even? x) x]\n    [(even?\
    \ y) y]\n    [else -1]))\n", "  (if (and (even? x) (even? y))\n      (if (> x\
    \ y)\n          y\n          x)\n      (if (and (even? x) (not (even? y)))\n \
    \         x\n          (if (and (not (even? x)) (even? y))\n              y\n\
    \              -1))))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even?\
    \ x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (even? x)\n          x\n          (if (even? y)\n              y\n\
    \              -1))))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n\
    \          y\n          x)\n      (if (even? x)\n          x\n          (if (even?\
    \ y)\n              y\n              -1))))\n", "  (if (and (even? x) (even? y))\n\
    \      (if (> x y)\n          y\n          x)\n      (if (even? x)\n         \
    \ x\n          (if (even? y)\n              y\n              -1))))\n", "  (cond\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x\
    \ y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n  \
    \  [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(even? x) x]\n    [(even?\
    \ y) y]\n    [else -1]))\n", "  (if (&gt; x y)\n      -1\n      (if (even? x)\n\
    \          x\n          (choose_num (+ x 1) y))))\n</code>\nI'm not sure if this\
    \ is the best way to do it, but it works.\n\n\nA:\n\nI think you're on the right\
    \ track.  You could use <code>cond</code> instead of nested <code>if</code>s,\
    \ but that's a matter of taste.  The only thing I would change is to use <code>let</code>\
    \ to bind the result of the recursive call to a name, and then return that name.\
    \  This makes the code a little easier to read.\n<code>(define (choose-num x y)\n\
    \  (cond\n    [(&gt; x y) -1]\n    [(even? x) x]\n    [else (let ([n (choose-num\
    \ (+ x 1) y)])\n            n)]))\n</code>\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n      (if (&gt; x y)\n \
    \         y\n          x)\n      (if (and (even? x) (not (even? y)))\n       \
    \   x\n          (if (and (not (even? x)) (even? y))\n              y\n      \
    \        -1))))\n</code>\nI'm not sure if this is the best way to do it, but it\
    \ works.\n\n\nA:\n\nI think you can simplify your code a bit.\n<code>(define (choose-num\
    \ x y)\n  (cond ((and (even? x) (even? y))\n         (if (&gt; x y) y x))\n  \
    \      ((even? x) x)\n        ((even? y) y)\n        (else -1)))\n</code>\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even?\
    \ y))\n      (if (> x y)\n          y\n          x)\n      (if (even? x)\n   \
    \       x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (even? x)\n          x\n          (if (even? y)\n              y\n\
    \              -1))))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even?\
    \ x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x)\
    \ x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n    \
    \      y\n          x)\n      (if (and (even? x) (not (even? y)))\n          x\n\
    \          (if (and (not (even? x)) (even? y))\n              y\n            \
    \  -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if\
    \ (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else\
    \ (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n\
    \    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1)\
    \ y)]))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n  \
    \    (if (> x y)\n          y\n          x)\n      (if (and (even? x) (not (even?\
    \ y)))\n          x\n          (if (and (not (even? x)) (even? y))\n         \
    \     y\n              -1))))\n", "  (cond\n    [(> x y) -1]\n    [(even? x) x]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x)\
    \ x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x)\
    \ (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", " \
    \ (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (even? x)\n          x\n          (if (even? y)\n              y\n         \
    \     -1))))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max\
    \ x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (and (even? x) (not (even? y)))\n          x\n          (if (and (not (even?\
    \ x)) (even? y))\n              y\n              -1))))\n", "  (cond\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(and (even? x)\
    \ (even? y)) (if (> x y) x y)]\n    [(even? x) x]\n    [(even? y) y]\n    [else\
    \ -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x\
    \ (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (and\
    \ (even? x) (not (even? y)))\n          x\n          (if (and (not (even? x))\
    \ (even? y))\n              y\n              -1))))\n", "  (if (and (even? x)\
    \ (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (and (even?\
    \ x) (not (even? y)))\n          x\n          (if (and (not (even? x)) (even?\
    \ y))\n              y\n              -1))))\n", "  (if (and (even? x) (even?\
    \ y))\n      (if (> x y)\n          y\n          x)\n      (if (even? x)\n   \
    \       x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even?\
    \ y)) (if (> x y) x y)]\n    [(and (even? x) (odd? y)) x]\n    [(and (odd? x)\
    \ (even? y)) y]\n    [(and (odd? x) (odd? y)) -1]))\n", "  (cond\n    [(and (even?\
    \ x) (even? y)) (if (> x y) x y)]\n    [(even? x) x]\n    [(even? y) y]\n    [else\
    \ -1]))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (even? x)\n          x\n          (if (even? y)\n              y\n\
    \              -1))))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n\
    \          y\n          x)\n      (if (and (even? x) (not (even? y)))\n      \
    \    x\n          (if (and (not (even? x)) (even? y))\n              y\n     \
    \         -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else\
    \ -1]))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if\
    \ (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else\
    \ (choose_num (+ x 1) y)]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n\
    \    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1)\
    \ y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n    [(and\
    \ (even? x) (odd? y)) x]\n    [(and (odd? x) (even? y)) y]\n    [(and (odd? x)\
    \ (odd? y)) -1]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(= x y) x]\n    [(even? x) (choose_num (+ x\
    \ 2) y)]\n    [(even? y) (choose_num x (- y 2))]\n    [else -1]))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (even? x)\n          x\n          (if (even? y)\n              y\n         \
    \     -1))))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n       \
    \   y\n          x)\n      (if (even? x)\n          x\n          (if (even? y)\n\
    \              y\n              -1))))\n", "  (if (and (even? x) (even? y))\n\
    \      (if (> x y)\n          y\n          x)\n      (if (even? x)\n         \
    \ x\n          (if (even? y)\n              y\n              -1))))\n", "  (cond\n\
    \    [(and (even? x) (even? y)) (max x y)]\n    [(even? x) x]\n    [(even? y)\
    \ y]\n    [else -1]))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n   \
    \ [else -1]))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n      \
    \    y\n          x)\n      (if (and (even? x) (not (even? y)))\n          x\n\
    \          (if (and (not (even? x)) (even? y))\n              y\n            \
    \  -1))))\n", "  (cond\n    [(and (even? x) (even? y)) (max x y)]\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (and\
    \ (even? x) (not (even? y)))\n          x\n          (if (and (not (even? x))\
    \ (even? y))\n              y\n              -1))))\n", "  (cond\n    [(> x y)\
    \ -1]\n    [(even? x) x]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n \
    \   [(> x y) -1]\n    [(even? x) x]\n    [else (choose_num (+ x 1) y)]))\n", " \
    \ (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num\
    \ (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(> x y)\
    \ -1]\n    [(even? x) x]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n  \
    \    (if (> x y)\n          y\n          x)\n      (if (even? x)\n          x\n\
    \          (if (even? y)\n              y\n              -1))))\n", "  (cond\n\
    \    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1)\
    \ y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(even? x) x]\n\
    \    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even? x) x\
    \ -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even?\
    \ x)\n          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(even? x) x]\n    [(even?\
    \ y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n   \
    \ [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (and (even? x) (not (even? y)))\n          x\n          (if (and (not\
    \ (even? x)) (even? y))\n              y\n              -1))))\n", "  (cond\n\
    \    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1)\
    \ y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n\
    \      (if (> x y)\n          y\n          x)\n      (if (and (even? x) (not (even?\
    \ y)))\n          x\n          (if (and (not (even? x)) (even? y))\n         \
    \     y\n              -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y)\
    \ y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even?\
    \ x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (and (even? x) (not (even? y)))\n          x\n          (if (and (not\
    \ (even? x)) (even? y))\n              y\n              -1))))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (and (even? x) (not (even? y)))\n          x\n          (if (and (not (even?\
    \ x)) (even? y))\n              y\n              -1))))\n", "  (cond\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even? x) (even? y))\n\
    \      (if (> x y)\n          y\n          x)\n      (if (even? x)\n         \
    \ x\n          (if (even? y)\n              y\n              -1))))\n", "  (if\
    \ (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n  \
    \    (if (and (even? x) (not (even? y)))\n          x\n          (if (and (not\
    \ (even? x)) (even? y))\n              y\n              -1))))\n", "  (cond\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even?\
    \ x)\n          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even? x)\
    \ (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even? x)\n\
    \          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (and (even? x) (not (even? y)))\n          x\n          (if (and (not\
    \ (even? x)) (even? y))\n              y\n              -1))))\n", "  (cond\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (if (and (even?\
    \ x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if (even?\
    \ x)\n          x\n          (if (even? y)\n              y\n              -1))))\n",
  "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n    [(even? x) x]\n\
    \    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even? x) x\
    \ -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else\
    \ -1]))\n", "  (if (and (even? x) (even? y))\n      (if (> x y) (-1) y)\n    \
    \  (if (even? x) x\n          (if (even? y) y (-1)))))\n", "  (cond\n    [(= x\
    \ y) (if (even? x) x -1)]\n    [(> x y) -1]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+\
    \ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(even? x)\
    \ x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(even?\
    \ x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(= x y) (if (even?\
    \ x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (even? x) (even? y)) (max x y)]\n    [(and\
    \ (even? x) (odd? y)) x]\n    [(and (odd? x) (even? y)) y]\n    [else -1]))\n",
  "  (if (and (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n\
    \      (if (even? x)\n          x\n          (if (even? y)\n              y\n\
    \              -1))))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even?\
    \ x) (max x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond\n    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n \
    \   [(= x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n  \
    \    (if (> x y)\n          y\n          x)\n      (if (and (even? x) (not (even?\
    \ y)))\n          x\n          (if (and (not (even? x)) (even? y))\n         \
    \     y\n              -1))))\n", "  (cond\n    [(even? x) x]\n    [(even? y)\
    \ y]\n    [else -1]))\n", "  (if (and (even? x) (even? y))\n      (if (> x y)\n\
    \          y\n          x)\n      (if (even? x)\n          x\n          (if (even?\
    \ y)\n              y\n              -1))))\n", "  (if (and (even? x) (even? y))\n\
    \      (if (> x y)\n          y\n          x)\n      (if (even? x)\n         \
    \ x\n          (if (even? y)\n              y\n              -1))))\n", "  (cond\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(and\
    \ (even? x) (even? y)) (if (> x y) x y)]\n    [(even? x) x]\n    [(even? y) y]\n\
    \    [else -1]))\n", "  (cond\n    [(and (even? x) (even? y)) (if (> x y) x y)]\n\
    \    [(even? x) x]\n    [(even? y) y]\n    [else -1]))\n", "  (cond\n    [(> x\
    \ y) -1]\n    [(even? x) x]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (< x y)\n          y\n          x)\n      (if\
    \ (even? x)\n          x\n          (if (even? y)\n              y\n         \
    \     -1))))\n", "  (cond\n    [(= x y) (if (even? x) x -1)]\n    [(even? x) (max\
    \ x (choose_num (+ x 1) y))]\n    [else (choose_num (+ x 1) y)]))\n", "  (if (and\
    \ (even? x) (even? y))\n      (if (> x y)\n          y\n          x)\n      (if\
    \ (and (even? x) (not (even? y)))\n          x\n          (if (and (not (even?\
    \ x)) (even? y))\n              y\n              -1))))\n", "  (cond\n    [(=\
    \ x y) (if (even? x) x -1)]\n    [(even? x) (max x (choose_num (+ x 1) y))]\n\
    \    [else (choose_num (+ x 1) y)]))\n", "  (if (and (even? x) (even? y))\n  \
    \    (if (> x y)\n          y\n          x)\n      (if (even? x)\n          x\n\
    \          (if (even? y)\n              y\n              -1))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

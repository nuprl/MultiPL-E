name: HumanEval_138_is_equal_to_sum_even
language: rkt
prompt: "#lang racket\n\n;; Evaluate whether the given number n can be written as\
  \ the sum of exactly 4 positive even numbers\n;; Example\n(define (is_equal_to_sum_even\
  \ n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_equal_to_sum_even))\n\
  \    (check-equal? (candidate 4) #f)\n    (check-equal? (candidate 6) #f)\n    (check-equal?\
  \ (candidate 8) #t)\n    (check-equal? (candidate 10) #t)\n    (check-equal? (candidate\
  \ 11) #f)\n    (check-equal? (candidate 12) #t)\n    (check-equal? (candidate 13)\
  \ #f)\n    (check-equal? (candidate 16) #t)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 1))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((= n sum) (= count\
    \ 4))\n          ((= count 4) #f)\n          ((&gt; n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1)))\n          (else #f)))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i)\n\
    \    (cond ((= n 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n (* i 2)) i)\n                    (is_equal_to_sum_even_iter n (+ i 1))))))\n\
    \  (is_equal_to_sum_even_iter n 1))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n (+ (* 2 i) (* 2 (+ i 1)) (* 2 (+ i 2)) (* 2 (+ i 3))))\
    \ #t)\n          ((= i (/ n 2)) #f)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 1)))))\n  (is_equal_to_sum_even_iter n 1))\n", "  (define (sum_even a\
    \ b c d)\n    (+ (* 2 a) (* 2 b) (* 2 c) (* 2 d)))\n  (define (helper a b c d)\n\
    \    (cond ((= n (sum_even a b c d)) #t)\n          ((> a n) #f)\n          ((>\
    \ b n) (helper (+ a 1) a b c))\n          ((> c n) (helper a (+ b 1) b c))\n \
    \         ((> d n) (helper a b (+ c 1) c))\n          (else (helper a b c (+ d\
    \ 1)))))\n  (helper 0 0 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n\
    \    [else (or (is_equal_to_sum_even (- n 2))\n              (is_equal_to_sum_even\
    \ (- n 4))\n              (is_equal_to_sum_even (- n 6))\n              (is_equal_to_sum_even\
    \ (- n 8)))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n   \
    \ [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n\
    \    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(=\
    \ n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #f]\n    [(= n 11)\
    \ #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15)\
    \ #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19)\
    \ #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23)\
    \ #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27)\
    \ #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #f]\n    [(= n 31)\
    \ #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35)\
    \ #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39)\
    \ #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43)\
    \ #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47)\
    \ #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(< n 0) #f]\n      [(= i n) #f]\n\
    \      [else (or (is_equal_to_sum_even_iter (- n (* i 2)) (+ i 2))\n         \
    \       (is_equal_to_sum_even_iter n (+ i 2)))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n   \
    \ [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n    \
    \  [(= n 0) #t]\n      [(= i 0) #f]\n      [(= n i) #f]\n      [(= n (+ i (* 2\
    \ i))) #t]\n      [else (or (is_equal_to_sum_even_iter n (+ i 2))\n          \
    \      (is_equal_to_sum_even_iter n (- i 2)))]))\n  (is_equal_to_sum_even_iter\
    \ n n))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (define (is_equal_to_sum_even_iter n count)\n    (cond ((=\
    \ count 4) (= n 0))\n          ((= (remainder n 2) 0) (is_equal_to_sum_even_iter\
    \ (- n 2) (+ count 1)))\n          (else (is_equal_to_sum_even_iter (- n 1) count))))\n\
    \  (is_equal_to_sum_even_iter n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(and\
    \ (even? n) (&gt; n 0))\n     (or (is_equal_to_sum_even (- n 2))\n         (is_equal_to_sum_even\
    \ (- n 4))\n         (is_equal_to_sum_even (- n 6))\n         (is_equal_to_sum_even\
    \ (- n 8)))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n\
    \    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(=\
    \ n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10)\
    \ #f]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14)\
    \ #f]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18)\
    \ #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22)\
    \ #f]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26)\
    \ #f]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30)\
    \ #f]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34)\
    \ #f]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38)\
    \ #f]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42)\
    \ #f]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46)\
    \ #f]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50)\
    \ #", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i acc)\n\
    \    (cond\n      [(= n 0) (equal? acc 4)]\n      [(= i n) #f]\n      [(= (modulo\
    \ i 2) 0) (is_equal_to_sum_even_iter n (+ i 1) (+ acc 1))]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 1) acc)]))\n  (is_equal_to_sum_even_iter n 1 0))\n", "  (is_equal_to_sum_even_helper\
    \ n 0 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n    [else (or (is_equal_to_sum_even\
    \ (- n 2))\n              (is_equal_to_sum_even (- n 4))\n              (is_equal_to_sum_even\
    \ (- n 6))\n              (is_equal_to_sum_even (- n 8)))]))\n", "  (cond\n  \
    \  [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (and (even? n)\n       (is_equal_to_sum_even_helper n 4)))\n", "  (cond\n   \
    \ [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n   \
    \ [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((= n sum) (= count\
    \ 4))\n          ((or (< n sum) (< count 4)) #f)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1)))))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n   \
    \ [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n\
    \ 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n (* i 2)) (+ i 1))\n                    (is_equal_to_sum_even_iter n (+\
    \ i 1))))))\n  (is_equal_to_sum_even_iter n 1))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (define\
    \ (is_equal_to_sum_even_iter n i)\n    (cond\n      ((= n 0) #t)\n      ((= i\
    \ n) #f)\n      ((= n (+ i i)) #t)\n      ((= n (+ i i i)) #t)\n      ((= n (+\
    \ i i i i)) #t)\n      (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n \
    \   [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(=\
    \ n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #f]\n    [(= n 11)\
    \ #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15)\
    \ #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19)\
    \ #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23)\
    \ #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27)\
    \ #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #f]\n    [(= n 31)\
    \ #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35)\
    \ #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39)\
    \ #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43)\
    \ #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47)\
    \ #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #", "  (cond\n    [(=\
    \ n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n \
    \   [(= n 0) #t]\n    [(< n 0) #f]\n    [else\n     (or (is_equal_to_sum_even\
    \ (- n 2))\n         (is_equal_to_sum_even (- n 4))\n         (is_equal_to_sum_even\
    \ (- n 6))\n         (is_equal_to_sum_even (- n 8)))]))\n", "  (cond\n    [(=\
    \ n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4)\
    \ #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n\
    \    [(= n 9) #f]\n    [(= n 10) #f]\n    [(= n 11) #f]\n    [(= n 12) #t]\n \
    \   [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15) #f]\n    [(= n 16) #t]\n \
    \   [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n \
    \   [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23) #f]\n    [(= n 24) #t]\n \
    \   [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27) #f]\n    [(= n 28) #t]\n \
    \   [(= n 29) #f]\n    [(= n 30) #f]\n    [(= n 31) #f]\n    [(= n 32) #t]\n \
    \   [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35) #f]\n    [(= n 36) #t]\n \
    \   [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39) #f]\n    [(= n 40) #t]\n \
    \   [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43) #f]\n    [(= n 44) #t]\n \
    \   [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47) #f]\n    [(= n 48) #t]\n \
    \   [(= n 49) #f]\n    [(= n 50) #", "  (define (is_equal_to_sum_even_iter n sum\
    \ count)\n    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(= i 0) #f]\n      [(= n i) #f]\n      [(= n (- n i)) #f]\n \
    \     [(= n (+ n i)) #f]\n      [(is_equal_to_sum_even_iter (- n i) (- i 2)) #t]\n\
    \      [else (is_equal_to_sum_even_iter n (- i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n n))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= n i) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= n i) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i)\n   \
    \ (cond ((= n 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n i) (+ i 2))\n                    (is_equal_to_sum_even_iter n (+ i 2))))))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n (* i 2)) (+ i 1))\n                    (is_equal_to_sum_even_iter n (+\
    \ i 1))))))\n  (is_equal_to_sum_even_iter n 1))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum)\n    (cond\n      [(= n sum) #t]\n      [(> n sum) (or (is_equal_to_sum_even_iter\
    \ n (+ sum 2))\n                     (is_equal_to_sum_even_iter n (+ sum 4))\n\
    \                     (is_equal_to_sum_even_iter n (+ sum 6))\n              \
    \       (is_equal_to_sum_even_iter n (+ sum 8)))]\n      [else #f]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (if (= n 0)\n      #t\n      (if (even? n)\n\
    \          (is_equal_to_sum_even (- n 2))\n          #f)))\n", "  (define (helper\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(even? n) (helper\
    \ (- n 2) (+ sum 2) (+ count 1))]\n      [else (helper (- n 1) (+ sum 1) count)]))\n\
    \  (helper n 0 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n\
    \      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n    \
    \  [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n\
    \    [else (or (is_equal_to_sum_even (- n 2))\n              (is_equal_to_sum_even\
    \ (- n 4))\n              (is_equal_to_sum_even (- n 6))\n              (is_equal_to_sum_even\
    \ (- n 8)))]))\n", "  (cond\n    [(= n 0) #t]\n    [(or (= n 1) (= n 2)) #f]\n\
    \    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else (is_equal_to_sum_even\
    \ (- n 1))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n\
    \    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n sum)\n    (cond ((=\
    \ n sum) #t)\n          ((&gt; n sum) (or (is_equal_to_sum_even_iter n (+ sum\
    \ 2))\n                         (is_equal_to_sum_even_iter n (+ sum 4))\n    \
    \                     (is_equal_to_sum_even_iter n (+ sum 6))\n              \
    \           (is_equal_to_sum_even_iter n (+ sum 8))))\n          (else #f)))\n\
    \  (is_equal_to_sum_even_iter n 0))\n</code>\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= n i) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (cond ((= n 0) #t)\n        ((= n 2) #f)\n        ((= n 4) #t)\n\
    \        ((= n 6) #f)\n        ((= n 8) #t)\n        ((= n 10) #f)\n        ((=\
    \ n 12) #t)\n        ((= n 14) #f)\n        ((= n 16) #t)\n        ((= n 18) #f)\n\
    \        ((= n 20) #t)\n        ((= n 22) #f)\n        ((= n 24) #t)\n       \
    \ ((= n 26) #f)\n        ((= n 28) #t)\n        ((= n 30) #f)\n        ((= n 32)\
    \ #t)\n        ((= n 34) #f)\n        ((= n 36) #t)\n        ((= n 38) #f)\n \
    \       ((= n 40) #t)\n        ((= n 42) #f)\n        ((= n 44) #t)\n        ((=\
    \ n 46) #f)\n        ((= n 48) #t)\n        ((= n 50) #f)\n        ((= n 52) #t)\n\
    \        ((= n 54) #f)\n        ((= n 56) #t)\n        ((= n 58) #f)\n       \
    \ ((= n 60) #t)\n        ((= n 62) #f)\n        ((= n 64) #t)\n        ((= n 66)\
    \ #f)\n        ((= n 68) #t)\n        ((= n 70) #f)\n        ((= n 72) #t)\n \
    \       ((= n 74) #f)\n        ((= n 76) #t)\n        ((= n 78) #f)\n        ((=\
    \ n 80) #t)\n        ((= n 82) #f)\n        ((= n 84) #t)\n        ((= n 86) #f)\n\
    \        ((= n 88) #t)\n        ((= n 90) #f)\n        ((= n 92) #t)\n       \
    \ ((= n 94) #f)\n        ((= n 96) #t)\n        ((= n 98) #f)\n        ((= n 100)\
    \ #t)", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (define\
    \ (is_equal_to_sum_even_iter n sum)\n    (cond\n      [(zero? n) (= n sum)]\n\
    \      [(even? n) (is_equal_to_sum_even_iter (- n 2) (+ sum 2))]\n      [else\
    \ (is_equal_to_sum_even_iter (- n 1) (+ sum 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (cond ((= n 0) #t)\n        ((even? n) #f)\n        (else (is_equal_to_sum_even\
    \ (- n 2)))))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n\
    \      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter n\
    \ (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 0\
    \ 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((= count\
    \ 4) (= n sum))\n          ((even? n) (is_equal_to_sum_even_iter (- n 2) (+ sum\
    \ 2) (+ count 1)))\n          (else (is_equal_to_sum_even_iter (- n 1) (+ sum\
    \ 1) (+ count 1)))))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond ((= count 4) (= n sum))\n          ((= n sum) #t)\n\
    \          ((= n 0) #f)\n          ((= n 1) #f)\n          ((= n 2) #f)\n    \
    \      ((= n 3) #f)\n          ((= n 4) #f)\n          ((= n 5) #f)\n        \
    \  ((= n 6) #f)\n          ((= n 7) #f)\n          ((= n 8) #f)\n          ((=\
    \ n 9) #f)\n          ((= n 10) #f)\n          ((= n 11) #f)\n          ((= n\
    \ 12) #f)\n          ((= n 13) #f)\n          ((= n 14) #f)\n          ((= n 15)\
    \ #f)\n          ((= n 16) #f)\n          ((= n 17) #f)\n          ((= n 18) #f)\n\
    \          ((= n 19) #f)\n          ((= n 20) #f)\n          ((= n 21) #f)\n \
    \         ((= n 22) #f)\n          ((= n 23) #f)\n          ((= n 24) #f)\n  \
    \        ((= n 25) #f)\n          ((= n 26) #f)\n          ((= n 27) #f)\n   \
    \       ((= n 28) #f)\n          ((= n 29) #f)\n          ((= n 30) #f)\n    \
    \      ((= n 31) #f)\n          ((= n 32) #f)\n          ((= n 33) #f)\n     \
    \     ((= n 34) #f)\n          ((= n 35) #f)\n          ((= n 36) #f)\n      \
    \    ((= n 37) #f)\n          ((= n 38) #f)\n          ((= n 39) #f)\n       \
    \   ((= n 40) #f)\n          ((= n 41) #f)\n          ((= n 42) #f)\n        \
    \  ((= n 43) #f)\n          ((= n 44) #f)\n          ((= n 45) #f)\n         \
    \ ((= n 46) #f", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= i n)\
    \ #t)\n          ((= i (+ n 1)) #f)\n          ((= n (+ i (* 2 i))) #t)\n    \
    \      (else (is_equal_to_sum_even_iter n (+ i 1)))))\n  (is_equal_to_sum_even_iter\
    \ n 1))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n          ((=\
    \ i n) #f)\n          (else (or (is_equal_to_sum_even_iter (- n i) (+ i 2))\n\
    \                    (is_equal_to_sum_even_iter n (+ i 2))))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n\
    \    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(=\
    \ n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #f]\n    [(= n 11)\
    \ #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15)\
    \ #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19)\
    \ #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23)\
    \ #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27)\
    \ #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #f]\n    [(= n 31)\
    \ #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35)\
    \ #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39)\
    \ #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43)\
    \ #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47)\
    \ #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #", "  (cond\n    [(=\
    \ n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n   \
    \ [else #f]))\n", "  (define (is_equal_to_sum_even_iter n sum)\n    (cond ((=\
    \ n 0) (= sum n))\n          ((even? n) (or (is_equal_to_sum_even_iter (- n 2)\
    \ (+ sum 2))\n                         (is_equal_to_sum_even_iter (- n 4) (+ sum\
    \ 4))))\n          (else #f)))\n  (is_equal_to_sum_even_iter n 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n    \
    \  [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ (* 2 i) (* 2 (+ i 1)) (* 2\
    \ (+ i 2)) (* 2 (+ i 3)))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i\
    \ 1))]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (cond ((= n 0) #t)\n        ((even? n) (is_equal_to_sum_even\
    \ (- n 2)))\n        (else #f)))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n)\
    \ (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0)\
    \ #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n\
    \    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(=\
    \ n 9) #f]\n    [(= n 10) #f]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n\
    \ 13) #f]\n    [(= n 14) #f]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n\
    \ 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n\
    \ 21) #f]\n    [(= n 22) #f]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n\
    \ 25) #f]\n    [(= n 26) #f]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n\
    \ 29) #f]\n    [(= n 30) #f]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n\
    \ 33) #f]\n    [(= n 34) #f]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n\
    \ 37) #f]\n    [(= n 38) #f]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n\
    \ 41) #f]\n    [(= n 42) #f]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n\
    \ 45) #f]\n    [(= n 46) #f]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n\
    \ 49) #f]\n    [(= n 50) #", "  (define (is_equal_to_sum_even_iter n sum count)\n\
    \    (cond ((= n sum) (= count 4))\n          ((= count 4) #f)\n          ((=\
    \ n (+ sum (* 2 count))) #t)\n          ((= n (+ sum (* 2 count) 2)) #t)\n   \
    \       (else (is_equal_to_sum_even_iter n (+ sum (* 2 count)) (+ count 1)))))\n\
    \  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= i n) #f)\n          ((= n (+ i (* 2 i) (* 2 (+ i 1)) (*\
    \ 2 (+ i 2)) (* 2 (+ i 3)))) #t)\n          (else (is_equal_to_sum_even_iter n\
    \ (+ i 1)))))\n  (is_equal_to_sum_even_iter n 1))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(= (remainder n 2) 1) #f]\n    [(is_equal_to_sum_even (- n 2)) #t]\n   \
    \ [else (is_equal_to_sum_even (- n 4))]))\n", "  (cond\n    [(= n 0) #t]\n   \
    \ [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (cond\n \
    \   [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n    [else (or (is_equal_to_sum_even\
    \ (- n 2))\n              (is_equal_to_sum_even (- n 4))\n              (is_equal_to_sum_even\
    \ (- n 6))\n              (is_equal_to_sum_even (- n 8)))]))\n", "  (cond\n  \
    \  [(= n 0) #t]\n    [(< n 0) #f]\n    [else (or (is_equal_to_sum_even (- n 2))\n\
    \              (is_equal_to_sum_even (- n 4))\n              (is_equal_to_sum_even\
    \ (- n 6))\n              (is_equal_to_sum_even (- n 8)))]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n i) (+ i 2))\n                    (is_equal_to_sum_even_iter n (+ i 2))))))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (define (sum_even n)\n    (cond\n \
    \     [(= n 0) #t]\n      [(even? n) (sum_even (- n 2))]\n      [else #f]))\n\
    \  (sum_even n))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n \
    \     [(= n 0) #t]\n      [(= i 0) #f]\n      [(= (modulo n i) 0) (is_equal_to_sum_even_iter\
    \ (- n i) (- i 2))]\n      [else (is_equal_to_sum_even_iter n (- i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n n))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n\
    \    [else (is_equal_to_sum_even (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(even? n) #t]\n    [else #f]))\n", "  (and (even? n)\n       (or (= n 4)\n\
    \           (is_equal_to_sum_even (- n 4)))))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (define\
    \ (is_equal_to_sum_even_iter n sum count)\n    (cond\n      [(= count 4) (= n\
    \ sum)]\n      [(= n sum) #f]\n      [(= n (+ sum 2)) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n    [else\n     (or (is_equal_to_sum_even\
    \ (- n 2))\n         (is_equal_to_sum_even (- n 4))\n         (is_equal_to_sum_even\
    \ (- n 6))\n         (is_equal_to_sum_even (- n 8)))]))\n", "  (cond\n    [(=\
    \ n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #f]\n\
    \    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(=\
    \ n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #f]\n    [(= n 11) #f]\n    [(= n\
    \ 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15) #f]\n    [(= n\
    \ 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n\
    \ 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23) #f]\n    [(= n\
    \ 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27) #f]\n    [(= n\
    \ 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #f]\n    [(= n 31) #f]\n    [(= n\
    \ 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35) #f]\n    [(= n\
    \ 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39) #f]\n    [(= n\
    \ 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43) #f]\n    [(= n\
    \ 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47) #f]\n    [(= n\
    \ 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #", "  (cond\n    [(= n 0) #t]\n \
    \   [(even? n) #t]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (cond\n    [(= n\
    \ 0) #t]\n    [(< n 0) #f]\n    [else\n     (or (is_equal_to_sum_even (- n 2))\n\
    \         (is_equal_to_sum_even (- n 4))\n         (is_equal_to_sum_even (- n\
    \ 6))\n         (is_equal_to_sum_even (- n 8)))]))\n", "  (cond\n    [(= n 0)\
    \ #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n  \
    \  [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n 0) #t]\n    \
    \  [(= i n) #f]\n      [(= n (* i i)) #t]\n      [else (or (is_equal_to_sum_even_iter\
    \ (- n i) (+ i 2))\n                (is_equal_to_sum_even_iter n (+ i 2)))]))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n (* i 2)) i)\n                    (is_equal_to_sum_even_iter n (+ i 1))))))\n\
    \  (is_equal_to_sum_even_iter n 1))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond ((= count 4) (= n sum))\n          ((even? n) (is_equal_to_sum_even_iter\
    \ (- n 2) (+ sum 2) (+ count 1)))\n          (else (is_equal_to_sum_even_iter\
    \ (- n 1) (+ sum 1) (+ count 1)))))\n  (is_equal_to_sum_even_iter n 0 0))\n",
  "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((= count 4) (= n\
    \ sum))\n          ((even? n) (is_equal_to_sum_even_iter (- n 2) (+ sum 2) (+\
    \ count 1)))\n          (else (is_equal_to_sum_even_iter (- n 1) (+ sum 1) (+\
    \ count 1)))))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (cond\n    [(= n 0)\
    \ #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n  \
    \  [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(=\
    \ n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9)\
    \ #f]\n    [(= n 10) #f]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13)\
    \ #f]\n    [(= n 14) #f]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n 17)\
    \ #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21)\
    \ #f]\n    [(= n 22) #f]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25)\
    \ #f]\n    [(= n 26) #f]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n 29)\
    \ #f]\n    [(= n 30) #f]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33)\
    \ #f]\n    [(= n 34) #f]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n 37)\
    \ #f]\n    [(= n 38) #f]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n 41)\
    \ #f]\n    [(= n 42) #f]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45)\
    \ #f]\n    [(= n 46) #f]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49)\
    \ #f]\n    [(= n 50) #", "  (define (iter i)\n    (cond ((= i n) #t)\n       \
    \   ((= i (+ n 1)) #f)\n          ((even? i) (iter (+ i 2)))\n          (else\
    \ (iter (+ i 1)))))\n  (iter 0))\n", "  (define (is_equal_to_sum_even_iter n sum\
    \ count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n   \
    \   [(< n sum) #f]\n      [else (is_equal_to_sum_even_iter n (+ sum 2) (+ count\
    \ 1))]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i sum)\n    (cond ((= sum n) #t)\n          ((> sum n) #f)\n          ((=\
    \ i n) #f)\n          (else (is_equal_to_sum_even_iter n (+ i 2) (+ sum i)))))\n\
    \  (is_equal_to_sum_even_iter n 2 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i i\
    \ i i)) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n \
    \   [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(=\
    \ n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #f]\n    [(= n 11)\
    \ #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15)\
    \ #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19)\
    \ #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23)\
    \ #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27)\
    \ #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #f]\n    [(= n 31)\
    \ #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35)\
    \ #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39)\
    \ #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43)\
    \ #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47)\
    \ #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #", "  (cond\n    [(=\
    \ n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (define\
    \ (is_equal_to_sum_even_iter n sum)\n    (cond\n      [(= n sum) #t]\n      [(>\
    \ n sum) (is_equal_to_sum_even_iter n (+ sum 2))]\n      [else #f]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n  \
    \    [(= n sum) (= count 4)]\n      [(< n sum) #f]\n      [(= count 4) #f]\n \
    \     [else (is_equal_to_sum_even_iter n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else\
    \ (is_equal_to_sum_even (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (cond [(= n 0) #t]\n\
    \        [(even? n) (is_equal_to_sum_even (- n 2))]\n        [else #f]))\n", " \
    \ (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n    [else (or (is_equal_to_sum_even\
    \ (- n 2))\n              (is_equal_to_sum_even (- n 4))\n              (is_equal_to_sum_even\
    \ (- n 6))\n              (is_equal_to_sum_even (- n 8)))]))\n", "  (if (= n 0)\n\
    \      #t\n      (if (even? n)\n          (is_equal_to_sum_even (- n 4))\n   \
    \       #f)))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n          ((=\
    \ i n) #f)\n          (else (or (is_equal_to_sum_even_iter (- n i) (+ i 2))\n\
    \                    (is_equal_to_sum_even_iter n (+ i 2))))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (helper n count)\n    (cond\n      [(= count 4) (= n 0)]\n\
    \      [(even? n) (helper (- n 2) (+ count 1))]\n      [else #f]))\n  (helper\
    \ n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n\
    \    [else (is_equal_to_sum_even (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(= n 0) #t]\n    [(< n 0) #f]\n    [else (or\
    \ (is_equal_to_sum_even (- n 2))\n              (is_equal_to_sum_even (- n 4))\n\
    \              (is_equal_to_sum_even (- n 6))\n              (is_equal_to_sum_even\
    \ (- n 8)))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n\
    \    (cond\n      [(= n sum) (= count 4)]\n      [(= count 4) #f]\n      [(even?\
    \ n) (is_equal_to_sum_even_iter (- n 2) (+ sum 2) (+ count 1))]\n      [else (is_equal_to_sum_even_iter\
    \ (- n 1) (+ sum 1) count)]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (define (helper\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(even? n) (helper\
    \ (- n 2) (+ sum 2) (+ count 1))]\n      [else (helper (- n 1) (+ sum 1) count)]))\n\
    \  (helper n 0 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n  \
    \  (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (define (is_equal_to_sum_even_iter n sum)\n    (cond\n  \
    \    [(= n sum) #t]\n      [(> n sum) (is_equal_to_sum_even_iter n (+ sum 2))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (cond ((= n 0) #t)\n\
    \        ((= n 1) #f)\n        ((= n 2) #f)\n        ((= n 3) #f)\n        ((=\
    \ n 4) #t)\n        ((= n 5) #f)\n        ((= n 6) #t)\n        ((= n 7) #f)\n\
    \        ((= n 8) #t)\n        ((= n 9) #f)\n        ((= n 10) #t)\n        ((=\
    \ n 11) #f)\n        ((= n 12) #t)\n        ((= n 13) #f)\n        ((= n 14) #f)\n\
    \        ((= n 15) #f)\n        ((= n 16) #t)\n        ((= n 17) #f)\n       \
    \ ((= n 18) #t)\n        ((= n 19) #f)\n        ((= n 20) #t)\n        ((= n 21)\
    \ #f)\n        ((= n 22) #f)\n        ((= n 23) #f)\n        ((= n 24) #t)\n \
    \       ((= n 25) #f)\n        ((= n 26) #f)\n        ((= n 27) #f)\n        ((=\
    \ n 28) #t)\n        ((= n 29) #f)\n        ((= n 30) #t)\n        ((= n 31) #f)\n\
    \        ((= n 32) #t)\n        ((= n 33) #f)\n        ((= n 34) #f)\n       \
    \ ((= n 35) #f)\n        ((= n 36) #t)\n        ((= n 37) #f)\n        ((= n 38)\
    \ #f)\n        ((= n 39) #f)\n        ((= n 40) #t)\n        ((= n 41) #f)\n \
    \       ((= n 42) #f)\n        ((= n 43) #f)\n        ((= n 44) #t)\n        ((=\
    \ n 45) #f)\n        ((= n 46) #f)\n        ((= n 47) #f)\n        ((= n 48) #t)\n\
    \        ((= n 49) #f)\n        ((= n 50) #t)", "  (cond\n    [(= n 0) #t]\n \
    \   [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else (is_equal_to_sum_even\
    \ (- n 2))]))\n", "  (cond\n    [(zero? n) #t]\n    [(even? n) #t]\n    [else\
    \ #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          (else (or (is_equal_to_sum_even_iter\
    \ (- n (* i 2)) (+ i 1))\n                    (is_equal_to_sum_even_iter n (+\
    \ i 1))))))\n  (is_equal_to_sum_even_iter n 1))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i sum)\n    (cond\n      [(= i n) #f]\n      [(= sum n) #t]\n      [(= sum\
    \ (+ sum i)) (is_equal_to_sum_even_iter n (+ i 2) (+ sum i))]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2) sum)]))\n  (is_equal_to_sum_even_iter n 2 0))\n", "  (cond\n    [(=\
    \ n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4)\
    \ #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n\
    \    [(= n 9) #f]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n \
    \   [(= n 13) #f]\n    [(= n 14) #f]\n    [(= n 15) #f]\n    [(= n 16) #t]\n \
    \   [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n \
    \   [(= n 21) #f]\n    [(= n 22) #f]\n    [(= n 23) #f]\n    [(= n 24) #t]\n \
    \   [(= n 25) #f]\n    [(= n 26) #f]\n    [(= n 27) #f]\n    [(= n 28) #t]\n \
    \   [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n \
    \   [(= n 33) #f]\n    [(= n 34) #f]\n    [(= n 35) #f]\n    [(= n 36) #t]\n \
    \   [(= n 37) #f]\n    [(= n 38) #f]\n    [(= n 39) #f]\n    [(= n 40) #t]\n \
    \   [(= n 41) #f]\n    [(= n 42) #f]\n    [(= n 43) #f]\n    [(= n 44) #t]\n \
    \   [(= n 45) #f]\n    [(= n 46) #f]\n    [(= n 47) #f]\n    [(= n 48) #t]\n \
    \   [(= n 49) #f]\n    [(= n 50) #", "  (define (is_equal_to_sum_even_iter n count)\n\
    \    (cond ((= n 0) (= count 4))\n          ((= n 1) #f)\n          ((= n 2) #f)\n\
    \          ((= n 3) #f)\n          ((= n 4) #f)\n          ((= n 5) #f)\n    \
    \      ((= n 6) #f)\n          ((= n 7) #f)\n          ((= n 8) #f)\n        \
    \  ((= n 9) #f)\n          ((= n 10) #f)\n          ((= n 11) #f)\n          ((=\
    \ n 12) #f)\n          ((= n 13) #f)\n          ((= n 14) #f)\n          ((= n\
    \ 15) #f)\n          ((= n 16) #f)\n          ((= n 17) #f)\n          ((= n 18)\
    \ #f)\n          ((= n 19) #f)\n          ((= n 20) #f)\n          ((= n 21) #f)\n\
    \          ((= n 22) #f)\n          ((= n 23) #f)\n          ((= n 24) #f)\n \
    \         ((= n 25) #f)\n          ((= n 26) #f)\n          ((= n 27) #f)\n  \
    \        ((= n 28) #f)\n          ((= n 29) #f)\n          ((= n 30) #f)\n   \
    \       ((= n 31) #f)\n          ((= n 32) #f)\n          ((= n 33) #f)\n    \
    \      ((= n 34) #f)\n          ((= n 35) #f)\n          ((= n 36) #f)\n     \
    \     ((= n 37) #f)\n          ((= n 38) #f)\n          ((= n 39) #f)\n      \
    \    ((= n 40) #f)\n          ((= n 41) #f)\n          ((= n 42) #f)\n       \
    \   ((= n 43) #f)\n          ((= n 44) #f)\n          ((= n 45) #f)\n        \
    \  ((= n 46) #f)\n          ((= n 47) #f)\n          ((= n 48) #f)", "  (cond\
    \ [(= n 0) #t]\n        [(even? n) (is_equal_to_sum_even (- n 2))]\n        [else\
    \ #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n\
    \    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((=\
    \ n sum) (= count 4))\n          ((> n sum) (is_equal_to_sum_even_iter n (+ sum\
    \ 2) (+ count 1)))\n          ((< n sum) #f)))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n  \
    \    [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_iter n count)\n    (cond ((= n 0)\
    \ (= count 4))\n          ((even? n) (is_equal_to_sum_even_iter (- n 2) (+ count\
    \ 1)))\n          (else #f)))\n  (is_equal_to_sum_even_iter n 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(< n 0) #f]\n    [else (or (is_equal_to_sum_even (- n\
    \ 2))\n              (is_equal_to_sum_even (- n 4))\n              (is_equal_to_sum_even\
    \ (- n 6))\n              (is_equal_to_sum_even (- n 8)))]))\n", "  (define (helper\
    \ n i)\n    (cond\n      [(= n i) #t]\n      [(= n (+ i (* 2 i))) #t]\n      [(=\
    \ n (+ i (* 2 i) (* 2 (+ i (* 2 i))))) #t]\n      [(= n (+ i (* 2 i) (* 2 (+ i\
    \ (* 2 i))) (* 2 (+ i (* 2 i) (* 2 (+ i (* 2 i))))))) #t]\n      [else (helper\
    \ n (+ i 2))]))\n  (helper n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n)\
    \ #t]\n    [else (is_equal_to_sum_even (- n 2))]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i 0) #f)\n          ((= n i) #t)\n\
    \          ((&lt; n i) (is_equal_to_sum_even_iter n (- i 2)))\n          (else\
    \ (or (is_equal_to_sum_even_iter (- n i) (- i 2))\n                    (is_equal_to_sum_even_iter\
    \ n (- i 2))))))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i 0) #f)\n          ((= n i) #t)\n\
    \          ((= n (+ i (* 2 i))) #t)\n          ((= n (+ i (* 2 i) (* 2 i))) #t)\n\
    \          ((= n (+ i (* 2 i) (* 2 i) (* 2 i))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (- i 2)))))\n  (is_equal_to_sum_even_iter n n))\n", "  (cond\n    [(= n 0)\
    \ #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n    [(zero? n) #f]\n\
    \    [(even? n) #t]\n    [else (is_equal_to_sum_even (sub1 n))]))\n", "  (define\
    \ (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n          ((= n i)\
    \ #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (cond\n    [(= n 0)\
    \ #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", " \
    \ (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (cond\n    [(zero? n) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n \
    \   [else #f]))\n", "  (cond\n    [(zero? n) #f]\n    [(even? n) #t]\n    [else\
    \ (is_equal_to_sum_even (- n 1))]))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (cond\n    [(= n\
    \ 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (cond\n    [(= n 0) #t]\n    [(even? n) #t]\n    [else #f]))\n", "  (cond\n \
    \   [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n 0) #t]\n    \
    \  [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #f]\n\
    \      [(= n 0) #f]\n      [else (is_equal_to_sum_even_iter n (+ sum 2) (+ count\
    \ 1))]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (cond\n    [(= n 0) #t]\n\
    \    [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(=\
    \ n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9)\
    \ #f]\n    [(= n 10) #f]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13)\
    \ #f]\n    [(= n 14) #f]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n 17)\
    \ #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21)\
    \ #f]\n    [(= n 22) #f]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25)\
    \ #f]\n    [(= n 26) #f]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n 29)\
    \ #f]\n    [(= n 30) #f]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33)\
    \ #f]\n    [(= n 34) #f]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n 37)\
    \ #f]\n    [(= n 38) #f]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n 41)\
    \ #f]\n    [(= n 42) #f]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45)\
    \ #f]\n    [(= n 46) #f]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49)\
    \ #f]\n    [(= n 50) #"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

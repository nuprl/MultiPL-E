name: HumanEval_34_unique
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!elem(result, e))\n        {\n         \
    \   result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpviyyfhqg.d(14): Error: undefined identifier `elem`\\n/tmp/tmpviyyfhqg.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpviyyfhqg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n            result\
    \ ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqtxnxkrv.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpqtxnxkrv.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpqtxnxkrv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyajolmmt.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpyajolmmt.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyajolmmt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(i in result)\n            continue;\n\
    \        result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgkjlbxdo.d(14): Error: incompatible types for `(i) in (result)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgkjlbxdo.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(i in res)\n            continue;\n\
    \        res ~= i;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6mi57vlx.d(14): Error: incompatible types for `(i) in (res)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6mi57vlx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpflmxkclm.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpflmxkclm.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpflmxkclm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5khiiirm.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp5khiiirm.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp5khiiirm.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5khiiirm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4g9opkol.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp4g9opkol.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4g9opkol.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n\
    \    {\n        if(e in tmp)\n            continue;\n        tmp[i] = e;\n   \
    \     ret[i] = e;\n        i++;\n    }\n    return ret[0..i];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprylltabc.d(16): Error: incompatible types for `(e) in (tmp)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprylltabc.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjk4msrzn.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpjk4msrzn.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpjk4msrzn.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjk4msrzn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkv2di6mm.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpkv2di6mm.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpkv2di6mm.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkv2di6mm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfjusmpy7.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfjusmpy7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppe6dessc.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmppe6dessc.d(14): Error: incompatible\
    \ types for `(!e) in (ret)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppe6dessc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(!result.canFind(i))\n        {\n       \
    \     result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3r6y_mnh.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp3r6y_mnh.d(14): Error: no property\
    \ `canFind` for type `long[]`\\n/tmp/tmp3r6y_mnh.d(19): Error: no property `sort`\
    \ for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3r6y_mnh.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n            result\
    \ ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd4u5s3y3.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpd4u5s3y3.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpd4u5s3y3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnpixqt12.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpnpixqt12.d(14): Error: incompatible\
    \ types for `(!e) in (res)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpnpixqt12.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    int k = 0;\n    foreach(long i; l)\n    {\n        if(!res.canFind(i))\n\
    \        {\n            res[k] = i;\n            k++;\n        }\n    }\n    return\
    \ res[0..k];\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpztg5kyh7.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpztg5kyh7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!elem(e, res))\n            res ~= e;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ch129le.d(14): Error: undefined identifier `elem`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ch129le.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxzx3i94l.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpxzx3i94l.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpxzx3i94l.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxzx3i94l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps5b0_lfd.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmps5b0_lfd.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmps5b0_lfd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvwmcsazd.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvwmcsazd.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] sorted = sort(l);\n    long[] unique = new long[l.length];\n    long[]\
    \ unique_index = new long[l.length];\n    long[] unique_count = new long[l.length];\n\
    \    long[] unique_count_index = new long[l.length];\n    long[] unique_count_index_sorted\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_index = new long[l.length];\n   \
    \ long[] unique_count_index_sorted_unique_index_sorted = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_index_sorted_unique = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_index_sorted_unique_index = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted_unique\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted_unique_index\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted_unique_index_sorted\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted_unique_index_sorted_unique\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted_unique_index_sorted_unique_index\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_index_sorted_unique_index_sorted_unique_index_sorted_unique_index\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3npq9_6d.d(30): Error: semicolon expected, not `unittest`\\n/tmp/tmp3npq9_6d.d(30):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp3npq9_6d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz1mrt8su.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz1mrt8su.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    long[] u = new long[l.length];\n    long[] c = new long[l.length];\n    long[]\
    \ s = new long[l.length];\n    long[] t = new long[l.length];\n    long[] v =\
    \ new long[l.length];\n    long[] w = new long[l.length];\n    long[] x = new\
    \ long[l.length];\n    long[] y = new long[l.length];\n    long[] z = new long[l.length];\n\
    \    long[] a = new long[l.length];\n    long[] b = new long[l.length];\n    long[]\
    \ d = new long[l.length];\n    long[] e = new long[l.length];\n    long[] f =\
    \ new long[l.length];\n    long[] g = new long[l.length];\n    long[] h = new\
    \ long[l.length];\n    long[] i = new long[l.length];\n    long[] j = new long[l.length];\n\
    \    long[] k = new long[l.length];\n    long[] m = new long[l.length];\n    long[]\
    \ n = new long[l.length];\n    long[] o = new long[l.length];\n    long[] p =\
    \ new long[l.length];\n    long[] q = new long[l.length];\n    long[] u1 = new\
    \ long[l.length];\n    long[] u2 = new long[l.length];\n    long[] u3 = new long[l.length];\n\
    \    long[] u4 = new long[l.length];\n    long[] u5 = new long[l.length];\n  \
    \  long[] u6 = new long[l.length];\n    long[] u7 = new long[l.length];\n    long[]\
    \ u8 = new long[l.length];\n    long[] u9 = new long[l.length];\n    long[] u10\
    \ = new long[l.length];\n    long[] u11 = new long[l.length];\n    long[] u12\
    \ = new long[l.length];\n    long[] u13 = new long[l.length];\n    long\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7n4ygxru.d(50): Error: no identifier for declarator `long`\\\
    n/tmp/tmp7n4ygxru.d(50): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7n4ygxru.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return sort(result);\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsci87a6e.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpsci87a6e.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpsci87a6e.d(19): Error:\
    \ undefined identifier `sort`, did you mean function `sqrt`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsci87a6e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l) \n    {\n        if(!e in result) \n        {\n           \
    \ result ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8karhmm4.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp8karhmm4.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\n/tmp/tmp8karhmm4.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp8karhmm4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res;\n    foreach(e;\
    \ l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfdpbxxge.d(14): Error: incompatible types for `(!e) in (res)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdpbxxge.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    long[] u = new long[l.length];\n    long[] c = new long[l.length];\n    long[]\
    \ s = new long[l.length];\n    long[] t = new long[l.length];\n    long[] v =\
    \ new long[l.length];\n    long[] w = new long[l.length];\n    long[] x = new\
    \ long[l.length];\n    long[] y = new long[l.length];\n    long[] z = new long[l.length];\n\
    \    long[] a = new long[l.length];\n    long[] b = new long[l.length];\n    long[]\
    \ d = new long[l.length];\n    long[] e = new long[l.length];\n    long[] f =\
    \ new long[l.length];\n    long[] g = new long[l.length];\n    long[] h = new\
    \ long[l.length];\n    long[] i = new long[l.length];\n    long[] j = new long[l.length];\n\
    \    long[] k = new long[l.length];\n    long[] m = new long[l.length];\n    long[]\
    \ n = new long[l.length];\n    long[] o = new long[l.length];\n    long[] p =\
    \ new long[l.length];\n    long[] q = new long[l.length];\n    long[] A = new\
    \ long[l.length];\n    long[] B = new long[l.length];\n    long[] C = new long[l.length];\n\
    \    long[] D = new long[l.length];\n    long[] E = new long[l.length];\n    long[]\
    \ F = new long[l.length];\n    long[] G = new long[l.length];\n    long[] H =\
    \ new long[l.length];\n    long[] I = new long[l.length];\n    long[] J = new\
    \ long[l.length];\n    long[] K = new long[l.length];\n    long[] L = new long[l.length];\n\
    \    long[] M = new long[l.length];\n    long[] N = new long[l.length];\n    long\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1rr32b__.d(51): Error: no identifier for declarator `long`\\\
    n/tmp/tmp1rr32b__.d(51): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rr32b__.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in ret)\n            ret ~= e;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8mhtg00.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpo8mhtg00.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo8mhtg00.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] temp = new long[l.length];\n    long[] temp2 = new long[l.length];\n\
    \    long[] temp3 = new long[l.length];\n    long[] temp4 = new long[l.length];\n\
    \    long[] temp5 = new long[l.length];\n    long[] temp6 = new long[l.length];\n\
    \    long[] temp7 = new long[l.length];\n    long[] temp8 = new long[l.length];\n\
    \    long[] temp9 = new long[l.length];\n    long[] temp10 = new long[l.length];\n\
    \    long[] temp11 = new long[l.length];\n    long[] temp12 = new long[l.length];\n\
    \    long[] temp13 = new long[l.length];\n    long[] temp14 = new long[l.length];\n\
    \    long[] temp15 = new long[l.length];\n    long[] temp16 = new long[l.length];\n\
    \    long[] temp17 = new long[l.length];\n    long[] temp18 = new long[l.length];\n\
    \    long[] temp19 = new long[l.length];\n    long[] temp20 = new long[l.length];\n\
    \    long[] temp21 = new long[l.length];\n    long[] temp22 = new long[l.length];\n\
    \    long[] temp23 = new long[l.length];\n    long[] temp24 = new long[l.length];\n\
    \    long[] temp25 = new long[l.length];\n    long[] temp26 = new long[l.length];\n\
    \    long[] temp27 = new long[l.length];\n    long[] temp28 = new long[l.length];\n\
    \    long[] temp29 = new long[l.length];\n    long[] temp30 = new long[l.length];\n\
    \    long[] temp31 = new long[l.length];\n    long[] temp32 = new long[l.length];\n\
    \    long[] temp33 = new long[l.length];\n    long[] temp34 = new long[l.length];\n\
    \    long[] temp35 = new long[l.length];\n    long[] temp36 = new\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnsnrp17l.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpnsnrp17l.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpnsnrp17l.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpnsnrp17l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodhplp4h.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpodhplp4h.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpodhplp4h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l) \n    {\n        if(result.length == 0 || result[$-1]\
    \ != i) \n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpotuiokoc.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpotuiokoc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiampp095.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpiampp095.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpiampp095.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpiampp095.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzj1kylt2.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpzj1kylt2.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpzj1kylt2.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpzj1kylt2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n    foreach(e; l)\n\
    \    {\n        if(!e in r)\n            r ~= e;\n    }\n    return r;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbgif4j39.d(14): Error: incompatible types for `(!e) in (r)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbgif4j39.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l) \n    {\n        if(!e in res) \n        {\n            res\
    \ ~= e;\n        }\n    }\n    res.sort;\n    return res;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpojlabe59.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpojlabe59.d(14): Error: incompatible\
    \ types for `(!e) in (res)`: `bool` and `long[]`\\n/tmp/tmpojlabe59.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpojlabe59.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_bw2i7w0.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_bw2i7w0.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n    foreach(e;\
    \ l)\n    {\n        if(!e in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpae00dvht.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpae00dvht.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in res)\n            continue;\n     \
    \   res ~= e;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp233ddy90.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp233ddy90.d(14): Error: incompatible\
    \ types for `(e) in (res)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp233ddy90.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    long last = tmp[0];\n    ret[0] =\
    \ last;\n    long j = 1;\n    foreach(long i; tmp)\n    {\n        if(i != last)\n\
    \        {\n            ret[j] = i;\n            last = i;\n            j++;\n\
    \        }\n    }\n    return ret[0..j];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjz0_ax88.d(13): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjz0_ax88.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    ret[0] = tmp[0];\n    long j = 1;\n\
    \    foreach(long i; 1..tmp.length)\n    {\n        if(tmp[i] != tmp[i-1])\n \
    \       {\n            ret[j] = tmp[i];\n            j++;\n        }\n    }\n\
    \    ret.length = j;\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps8pmzhfe.d(13): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps8pmzhfe.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf3dbglme.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpf3dbglme.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpf3dbglme.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpf3dbglme.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ak5ocyt.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp3ak5ocyt.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp3ak5ocyt.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ak5ocyt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpntpejkbo.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpntpejkbo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgdaftec5.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpgdaftec5.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpgdaftec5.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgdaftec5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n            result\
    \ ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpthadd44b.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpthadd44b.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpthadd44b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\n/*\nReturn the number\
    \ of unique elements in a list\n    >>> unique_count([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123])\n    6\n*/\nlong unique_count(long[] l) \n{\n    return unique(l).length;\n\
    }\n/*\nReturn the number of unique elements in a list\n    >>> unique_count([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    6\n*/\nlong unique_count(long[] l) \n{\n   \
    \ return unique(l).length;\n}\n/*\nReturn the number of unique elements in a list\n\
    \    >>> unique_count([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    6\n*/\nlong unique_count(long[]\
    \ l) \n{\n    return unique(l).length;\n}\n/*\nReturn the number of unique elements\
    \ in a list\n    >>> unique_count([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    6\n*/\n\
    long unique_count(long[] l) \n{\n    return unique(l).length;\n}\n/*\nReturn the\
    \ number of unique elements in a list\n    >>> unique_count([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123])\n    6\n*/\nlong unique_count(long[] l) \n{\n    return unique(l).length;\n\
    }\n/*\nReturn the number of unique elements in a list\n    >>> unique_count([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    6\n*/\nlong unique_count(long[] l) \n{\n   \
    \ return unique(l).length;\n}\n/*\nReturn the number of unique elements in a list\n\
    \    >>> unique_count([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    6\n*/\nlong unique_count(long[]\
    \ l) \n{\n    return\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl57ygiso.d(83): Error: expression expected, not `unittest`\\\
    n/tmp/tmpl57ygiso.d(84): Error: found `{` when expecting `;` following `return`\
    \ statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl57ygiso.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpku8yl6_m.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpku8yl6_m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp58o7lo_1.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp58o7lo_1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n    foreach(e;\
    \ l)\n    {\n        if(!e in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkaebybyf.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkaebybyf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(ret[$-1]\
    \ != i)\n            {\n                ret ~= i;\n            }\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpouboj24b.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpouboj24b.__unittest_L28_C1()\
    \ [0x428020]\\n??:? void tmpouboj24b.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0x56a7c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpduwc3dk7.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmpduwc3dk7.d(49): Error: semicolon expected, not `{`\\n/tmp/tmpduwc3dk7.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduwc3dk7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcc_8yl9s.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpcc_8yl9s.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpcc_8yl9s.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpcc_8yl9s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    ret.length\
    \ = l.length;\n    ret[0] = l[0];\n    long i = 1;\n    foreach(e; l)\n    {\n\
    \        if(e != ret[i-1])\n        {\n            ret[i] = e;\n            i++;\n\
    \        }\n    }\n    ret.length = i;\n    return ret;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph1_37prm.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428385]\\n??:? void tmph1_37prm.__unittest_L26_C1()\
    \ [0x428054]\\n??:? void tmph1_37prm.__modtest() [0x428104]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42d4d7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42c36a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4317a9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431c58]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431735]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42c341]\\n??:? runModuleUnitTests [0x42d2ad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428848]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cf]\\n??:? _d_run_main [0x42873a]\\n??:? main [0x428117]\\\
    n??:? __libc_start_main [0xeddd0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(ret[$-1]\
    \ != i)\n            {\n                ret ~= i;\n            }\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf9tydl9o.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpf9tydl9o.__unittest_L28_C1()\
    \ [0x428020]\\n??:? void tmpf9tydl9o.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0xeb5ff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = [];\n    foreach(e;\
    \ l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9pavj4rz.d(14): Error: incompatible types for `(!e) in (res)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9pavj4rz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!elem(result, e))\n        {\n         \
    \   result ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3dukcoec.d(14): Error: undefined identifier `elem`\\n/tmp/tmp3dukcoec.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp3dukcoec.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l) \n    {\n        if(!e in result) \n        {\n           \
    \ result ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp00qan02s.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp00qan02s.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\n/tmp/tmp00qan02s.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp00qan02s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps7h1j4nk.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmps7h1j4nk.d(49): Error: semicolon expected, not `{`\\n/tmp/tmps7h1j4nk.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7h1j4nk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0m4dle03.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp0m4dle03.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmp0m4dle03.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0m4dle03.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr4ruvvfb.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr4ruvvfb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj_p_rzxn.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\n/tmp/tmpj_p_rzxn.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj_p_rzxn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2,\
    \ 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n        {\n   \
    \         result ~= e;\n        }\n    }\n    return result.sort;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\
    \    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n        {\n\
    \            result ~= e;\n        }\n    }\n    return result.sort;\n}\n/*\n\
    Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n\
    \    long[] result = new long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n\
    \        {\n            result ~= e;\n        }\n    }\n    return result.sort;\n\
    }\n/*\nReturn sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l)\
    \ \n{\n    long[] result = new long[];\n    foreach(e; l)\n    {\n        if(e\
    \ !in result\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpry32kgv0.d(87): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpry32kgv0.d(93): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpry32kgv0.d(93): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpry32kgv0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l) \n    {\n        if(!e in ret) \n        {\n            ret ~= e;\n     \
    \   }\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1vjw3axx.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vjw3axx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpib_isy8k.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpib_isy8k.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpib_isy8k.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpib_isy8k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcpu2h9ab.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\n/tmp/tmpcpu2h9ab.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcpu2h9ab.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    long last = tmp[0];\n    result[0]\
    \ = last;\n    long i = 1;\n    foreach(long e; tmp)\n    {\n        if(e != last)\n\
    \        {\n            result[i] = e;\n            last = e;\n            i++;\n\
    \        }\n    }\n    return result[0..i];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg82jvmf5.d(13): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg82jvmf5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk1pxrr0c.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpk1pxrr0c.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpk1pxrr0c.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpk1pxrr0c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!elem(result, e))\n        {\n         \
    \   result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4gsddh4.d(14): Error: undefined identifier `elem`\\n/tmp/tmpb4gsddh4.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb4gsddh4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppvzo5t0y.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmppvzo5t0y.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvzo5t0y.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(e !in ret)\n            ret ~= e;\n    }\n\
    \    ret.sort;\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt56zl3c3.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\n/tmp/tmpt56zl3c3.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt56zl3c3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = [];\n    foreach(e;\
    \ l)\n    {\n        if(!e in result)\n        {\n            result ~= e;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9srw8mex.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9srw8mex.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else\n        {\n            bool\
    \ found = false;\n            foreach(long j; result)\n            {\n       \
    \         if(i == j)\n                {\n                    found = true;\n \
    \                   break;\n                }\n            }\n            if(!found)\n\
    \            {\n                result ~= i;\n            }\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc2tx00gk.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpc2tx00gk.__unittest_L37_C1()\
    \ [0x428064]\\n??:? void tmpc2tx00gk.__modtest() [0x428114]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdeb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430755]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc55]\\n??:? runModuleUnitTests [0x42cbc1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x428127]\\\
    n??:? __libc_start_main [0x45a5e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!elem(result, e))\n        {\n         \
    \   result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph09f8ovc.d(14): Error: undefined identifier `elem`\\n/tmp/tmph09f8ovc.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmph09f8ovc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz2inigbg.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz2inigbg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in ret)\n            ret ~= e;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxmuusu8.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpyxmuusu8.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyxmuusu8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l) \n    {\n        if(ret.length == 0 || ret[$-1] != i)\
    \ \n        {\n            ret ~= i;\n        }\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcelgua42.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428325]\\n??:? void tmpcelgua42.__unittest_L21_C1()\
    \ [0x427ff4]\\n??:? void tmpcelgua42.__modtest() [0x4280a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdef]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc82]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307cd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c7c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430759]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc59]\\n??:? runModuleUnitTests [0x42cbc5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876f]\\n??:? _d_run_main [0x4286da]\\n??:? main [0x4280b7]\\\
    n??:? __libc_start_main [0xc1de1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphnwkk25k.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmphnwkk25k.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmphnwkk25k.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphnwkk25k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6fk6et7g.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fk6et7g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjm50_5rt.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpjm50_5rt.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpjm50_5rt.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjm50_5rt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(!result.canFind(i))\n        {\n       \
    \     result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5xj33_ke.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp5xj33_ke.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp5xj33_ke.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxzdovyef.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpxzdovyef.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpxzdovyef.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxzdovyef.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(!result.canFind(i))\n        {\n       \
    \     result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp88fptw4j.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp88fptw4j.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp88fptw4j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjgcbc0r5.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjgcbc0r5.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    int j = 0;\n    for (int i = 0; i <\
    \ l.length; i++) \n    {\n        if (tmp[l[i]] == 0) \n        {\n          \
    \  tmp[l[i]] = 1;\n            result[j] = l[i];\n            j++;\n        }\n\
    \    }\n    return result[0..j];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmptujm6n8z.d(16): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x42846e]\\n??:? long[] tmptujm6n8z.unique(long[]) [0x427eb6]\\\
    n??:? void tmptujm6n8z.__unittest_L25_C1() [0x428015]\\n??:? void tmptujm6n8z.__modtest()\
    \ [0x42813c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c49b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b32e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305b9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430545]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b305]\\n??:? runModuleUnitTests [0x42c271]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428880]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428807]\\n??:? _d_run_main [0x428772]\\n??:? main [0x42814f]\\\
    n??:? __libc_start_main [0x3a6ad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else\n        {\n            if(result[$-1]\
    \ != i)\n            {\n                result ~= i;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwt7vfuum.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpwt7vfuum.__unittest_L28_C1()\
    \ [0x428020]\\n??:? void tmpwt7vfuum.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0x36a8a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0 || result[$-1] !=\
    \ i)\n            result ~= i;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg2sh0xfa.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpg2sh0xfa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbavhqdgk.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbavhqdgk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9k7mqnaq.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmp9k7mqnaq.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmp9k7mqnaq.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9k7mqnaq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = [];\n    long[]\
    \ tmp = l.dup;\n    tmp.sort;\n    foreach(long i; tmp)\n    {\n        if(ret.length\
    \ == 0 || ret[$-1] != i)\n            ret ~= i;\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpulm3cbuu.d(13): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpulm3cbuu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(i in ret)\n            continue;\n\
    \        ret ~= i;\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l, alias less) \n{\n    long[] ret = new\
    \ long[0];\n    foreach(long i; l)\n    {\n        if(i in ret)\n            continue;\n\
    \        ret ~= i;\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l, alias less, alias equal) \n{\n    long[]\
    \ ret = new long[0];\n    foreach(long i; l)\n    {\n        if(i in ret)\n  \
    \          continue;\n        ret ~= i;\n    }\n    return ret;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\
    \    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l, alias less, alias\
    \ equal, alias hash) \n{\n    long[] ret = new long[0];\n    foreach(long i; l)\n\
    \    {\n        if(i in ret)\n            continue;\n        ret ~= i;\n    }\n\
    \    return ret;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l, alias less, alias equal, alias hash, alias isInputRange) \n{\n    long[]\
    \ ret = new long[0\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmgcaj2uc.d(26): Error: basic type expected, not `alias`\\n/tmp/tmpmgcaj2uc.d(26):\
    \ Error: found `alias` when expecting `)`\\n/tmp/tmpmgcaj2uc.d(26): Error: semicolon\
    \ expected following function declaration\\n/tmp/tmpmgcaj2uc.d(26): Error: no\
    \ identifier for declarator `less`\\n/tmp/tmpmgcaj2uc.d(26): Error: declaration\
    \ expected, not `)`\\n/tmp/tmpmgcaj2uc.d(29): Error: declaration expected, not\
    \ `foreach`\\n/tmp/tmpmgcaj2uc.d(29): Error: no identifier for declarator `l`\\\
    n/tmp/tmpmgcaj2uc.d(29): Error: declaration expected, not `)`\\n/tmp/tmpmgcaj2uc.d(33):\
    \ Error: no identifier for declarator `ret`\\n/tmp/tmpmgcaj2uc.d(33): Error: declaration\
    \ expected, not `~=`\\n/tmp/tmpmgcaj2uc.d(34): Error: unrecognized declaration\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmgcaj2uc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu40z06aa.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpu40z06aa.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpu40z06aa.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu40z06aa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkk2qi6vr.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpkk2qi6vr.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpkk2qi6vr.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkk2qi6vr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!elem(result, e))\n            result ~=\
    \ e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpskp7ux3r.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpskp7ux3r.d(14): Error: undefined\
    \ identifier `elem`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpskp7ux3r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    ret.sort;\n    return ret;\n}\n/*\nReturn sorted unique elements in\
    \ a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n\
    \    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n \
    \   {\n        if(e in ret)\n            continue;\n        ret ~= e;\n    }\n\
    \    ret.sort;\n    return ret;\n}\n/*\nReturn sorted unique elements in a list\n\
    \    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n   \
    \ \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n\
    \        if(e in ret)\n            continue;\n        ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        if(e in ret)\n  \
    \          continue;\n        ret ~= e;\n    }\n    ret.sort;\n    return ret;\n\
    }\n/*\nReturn sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        if(e in ret)\n     \
    \       continue;\n        ret ~= e;\n    }\n   \nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt3baxryu.d(91): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3baxryu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0 || result[$-1] !=\
    \ i)\n            result ~= i;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1j7e9ilt.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1j7e9ilt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\n/*\nReturn sorted unique\
    \ elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2,\
    \ 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n        {\n   \
    \         result ~= e;\n        }\n    }\n    return result.sort();\n}\n/*\nReturn\
    \ sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\
    \    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n        {\n\
    \            result ~= e;\n        }\n    }\n    return result.sort();\n}\n/*\n\
    Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n\
    \    long[] result = new long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n\
    \        {\n            result ~= e;\n        }\n    }\n    return result.sort();\n\
    }\n/*\nReturn sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l)\
    \ \n{\n    long[] result = new long[];\n    foreach(e; l)\n    {\n        if(e\
    \ !in result\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxm7d9vx3.d(87): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpxm7d9vx3.d(93): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpxm7d9vx3.d(93): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxm7d9vx3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmbvouozb.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpmbvouozb.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmbvouozb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    int i = 0;\n    for (long e : l)\n\
    \    {\n        if (e in tmp)\n            continue;\n        ret[i] = e;\n  \
    \      tmp[i] = e;\n        i++;\n    }\n    return ret[0..i];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp44mmjm2y.d(14): Error: semicolon expected, not `:`\\n/tmp/tmp44mmjm2y.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp44mmjm2y.d(14): Error: found `l`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp44mmjm2y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else\n        {\n            if(result[$-1]\
    \ != i)\n            {\n                result ~= i;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8z9bytnh.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp8z9bytnh.__unittest_L28_C1()\
    \ [0x428020]\\n??:? void tmp8z9bytnh.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0xc54b9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpin68gyet.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\n/tmp/tmpin68gyet.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpin68gyet.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaf8nkn3t.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpaf8nkn3t.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpaf8nkn3t.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpaf8nkn3t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    int n = 0;\n    foreach(long i; l)\n\
    \    {\n        if(n == 0 || ret[n-1] != i)\n        {\n            ret[n] = i;\n\
    \            n++;\n        }\n    }\n    return ret[0..n];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpazcywqak.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42835d]\\n??:? void tmpazcywqak.__unittest_L24_C1()\
    \ [0x42802c]\\n??:? void tmpazcywqak.__modtest() [0x4280dc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c43b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430559]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a08]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2a5]\\n??:? runModuleUnitTests [0x42c211]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428820]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a7]\\n??:? _d_run_main [0x428712]\\n??:? main [0x4280ef]\\\
    n??:? __libc_start_main [0x4bf95554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(!result.canFind(i))\n        {\n       \
    \     result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkqvini16.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpkqvini16.d(14): Error: no property\
    \ `canFind` for type `long[]`\\n/tmp/tmpkqvini16.d(19): Error: no property `sort`\
    \ for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkqvini16.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp68w6_2pn.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp68w6_2pn.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp68w6_2pn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdfpqogwy.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpdfpqogwy.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpdfpqogwy.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdfpqogwy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in res)\n            continue;\n     \
    \   res ~= e;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_w5fo3xz.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp_w5fo3xz.d(14): Error: incompatible\
    \ types for `(e) in (res)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_w5fo3xz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l) \n    {\n        if(!result.canFind(i)) \n        {\n\
    \            result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzrrr0tmb.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpzrrr0tmb.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzrrr0tmb.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7xidnsbu.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp7xidnsbu.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmp7xidnsbu.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7xidnsbu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] sorted = sort(l);\n    long[] unique = new long[l.length];\n    long[]\
    \ unique_index = new long[l.length];\n    long[] unique_count = new long[l.length];\n\
    \    long[] unique_count_index = new long[l.length];\n    long[] unique_count_index_sorted\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_count = new long[l.length];\n   \
    \ long[] unique_count_index_sorted_unique_count_index = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_count_index_sorted = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_count_index_sorted_unique = new long[l.length];\n\
    \    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count =\
    \ new long[l.length];\n    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count_index\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count_index_sorted\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count_index_sorted_unique\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count_index_sorted_unique_count\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count_index_sorted_unique_count_index\
    \ = new long[l.length];\n    long[] unique_count_index_sorted_unique_count_index_sorted_unique_count_index_sorted_unique_count_index_sorted\
    \ = new long[\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc2_x1loo.d(30): Error: expression expected, not `unittest`\\\
    n/tmp/tmpc2_x1loo.d(31): Error: found `{` when expecting `]`\\n/tmp/tmpc2_x1loo.d(32):\
    \ Error: semicolon expected, not `alias`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc2_x1loo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6sniz1s7.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp6sniz1s7.d(14): Error: incompatible\
    \ types for `(!e) in (ret)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6sniz1s7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd5y7etv2.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpd5y7etv2.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpd5y7etv2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n\
    \    return res.sort();\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsolbnhs0.d(14): Error: incompatible types for `(!e) in (res)`:\
    \ `bool` and `long[]`\\n/tmp/tmpsolbnhs0.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsolbnhs0.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfnbm0h2r.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpfnbm0h2r.d(14): Error: incompatible\
    \ types for `(!e) in (res)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpfnbm0h2r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n    foreach(e;\
    \ l)\n    {\n        if(!e in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgymaa_4_.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgymaa_4_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    ret[0] = l[0];\n    long j = 1;\n    for (long i = 1; i < l.length; i++)\n\
    \    {\n        if (l[i] != l[i-1])\n        {\n            ret[j] = l[i];\n \
    \           j++;\n        }\n    }\n    return ret[0..j];\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl6w77rkr.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpl6w77rkr.__unittest_L24_C1()\
    \ [0x428070]\\n??:? void tmpl6w77rkr.__modtest() [0x428120]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x428133]\\\
    n??:? __libc_start_main [0x52a8e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] temp = new long[l.length];\n    long[] temp2 = new long[l.length];\n\
    \    long[] temp3 = new long[l.length];\n    long[] temp4 = new long[l.length];\n\
    \    long[] temp5 = new long[l.length];\n    long[] temp6 = new long[l.length];\n\
    \    long[] temp7 = new long[l.length];\n    long[] temp8 = new long[l.length];\n\
    \    long[] temp9 = new long[l.length];\n    long[] temp10 = new long[l.length];\n\
    \    long[] temp11 = new long[l.length];\n    long[] temp12 = new long[l.length];\n\
    \    long[] temp13 = new long[l.length];\n    long[] temp14 = new long[l.length];\n\
    \    long[] temp15 = new long[l.length];\n    long[] temp16 = new long[l.length];\n\
    \    long[] temp17 = new long[l.length];\n    long[] temp18 = new long[l.length];\n\
    \    long[] temp19 = new long[l.length];\n    long[] temp20 = new long[l.length];\n\
    \    long[] temp21 = new long[l.length];\n    long[] temp22 = new long[l.length];\n\
    \    long[] temp23 = new long[l.length];\n    long[] temp24 = new long[l.length];\n\
    \    long[] temp25 = new long[l.length];\n    long[] temp26 = new long[l.length];\n\
    \    long[] temp27 = new long[l.length];\n    long[] temp28 = new long[l.length];\n\
    \    long[] temp29 = new long[l.length];\n    long[] temp30 = new long[l.length];\n\
    \    long[] temp31 = new long[l.length];\n    long[] temp32 = new long[l.length];\n\
    \    long[] temp33 = new long[l.length];\n    long[] temp34 = new long[l.length];\n\
    \    long[] temp35 = new long[l.length];\n    long[] temp36 = new\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbeou6j7.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpfbeou6j7.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpfbeou6j7.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpfbeou6j7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk_m3eev3.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmpk_m3eev3.d(49): Error: semicolon expected, not `{`\\n/tmp/tmpk_m3eev3.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_m3eev3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = [];\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ugv25b3.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ugv25b3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r = new long[];\n  \
    \  foreach(e; l)\n    {\n        if(e in r)\n            continue;\n        r\
    \ ~= e;\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpddz85mzm.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpddz85mzm.d(14): Error: incompatible\
    \ types for `(e) in (r)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpddz85mzm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(!ret.canFind(i))\n\
    \            {\n                ret ~= i;\n            }\n        }\n    }\n \
    \   return ret;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l, alias less) \n{\n    long[] ret = new long[0];\n    foreach(long i; l)\n\
    \    {\n        if(ret.length == 0)\n        {\n            ret ~= i;\n      \
    \  }\n        else\n        {\n            if(!ret.canFind(i, less))\n       \
    \     {\n                ret ~= i;\n            }\n        }\n    }\n    return\
    \ ret;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l, alias less, alias equal) \n{\n    long[] ret = new long[0];\n    foreach(long\
    \ i; l)\n    {\n        if(ret.length == 0)\n        {\n            ret ~= i;\n\
    \        }\n        else\n        {\n            if(!ret.canFind(i, less, equal))\n\
    \            {\n                ret ~= i;\n            }\n        }\n    }\n \
    \   return ret;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l, alias less, alias equal, alias hash) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy_ywmgbb.d(34): Error: basic type expected, not `alias`\\n/tmp/tmpy_ywmgbb.d(34):\
    \ Error: found `alias` when expecting `)`\\n/tmp/tmpy_ywmgbb.d(34): Error: semicolon\
    \ expected following function declaration\\n/tmp/tmpy_ywmgbb.d(34): Error: no\
    \ identifier for declarator `less`\\n/tmp/tmpy_ywmgbb.d(34): Error: declaration\
    \ expected, not `)`\\n/tmp/tmpy_ywmgbb.d(37): Error: declaration expected, not\
    \ `foreach`\\n/tmp/tmpy_ywmgbb.d(37): Error: no identifier for declarator `l`\\\
    n/tmp/tmpy_ywmgbb.d(37): Error: declaration expected, not `)`\\n/tmp/tmpy_ywmgbb.d(42):\
    \ Error: unrecognized declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpy_ywmgbb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxul4gjy.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpyxul4gjy.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpyxul4gjy.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyxul4gjy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp23_rrthw.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp23_rrthw.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmp23_rrthw.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp23_rrthw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(e; l) \n    {\n        if(e !in result) \n        {\n           \
    \ result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxrdt6qet.d(14): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\n/tmp/tmpxrdt6qet.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrdt6qet.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzmeopcpt.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzmeopcpt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1bouckb7.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmp1bouckb7.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1bouckb7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    long[] u = new long[l.length];\n    long[] c = new long[l.length];\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long n = 0;\n    long m = 0;\n\
    \    for (i = 0; i < l.length; i++)\n    {\n        for (j = 0; j < i; j++)\n\
    \        {\n            if (l[i] == l[j])\n            {\n                break;\n\
    \            }\n        }\n        if (i == j)\n        {\n            r[n] =\
    \ l[i];\n            n++;\n        }\n    }\n    for (i = 0; i < n; i++)\n   \
    \ {\n        for (j = 0; j < n - i - 1; j++)\n        {\n            if (r[j]\
    \ > r[j + 1])\n            {\n                k = r[j];\n                r[j]\
    \ = r[j + 1];\n                r[j + 1] = k;\n            }\n        }\n    }\n\
    \    for (i = 0; i < n; i++)\n    {\n        for (j = 0; j < n; j++)\n       \
    \ {\n            if (r[i] == l[j])\n            {\n                c[m]++;\n \
    \           }\n        }\n        if (c[m] == 1)\n        {\n            u[m]\
    \ = r[i];\n            m++;\n        }\n        c[m] = 0;\n    }\n    return u[0..m];\n\
    }\n/*\nReturn sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l)\
    \ \n{\n    long[] r = new long[l.length];\n    long[] u = new long[l.length];\n\
    \    long[] c = new long[l.length];\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkzkg6kjy.d(79): Error: no identifier for declarator `long`\\\
    n/tmp/tmpkzkg6kjy.d(79): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzkg6kjy.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(!elem(ret, e))\n            ret ~= e;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbmachvu.d(14): Error: undefined identifier `elem`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfbmachvu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else if(result[$-1] != i)\n      \
    \  {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxmixuu_5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpxmixuu_5.__unittest_L25_C1()\
    \ [0x428020]\\n??:? void tmpxmixuu_5.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0xe1ce9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e !in ret)\n            ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8_ipgvpb.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\n/tmp/tmp8_ipgvpb.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8_ipgvpb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9z5mb09b.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmp9z5mb09b.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmp9z5mb09b.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9z5mb09b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] uniq = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in uniq)\n            uniq ~= e;\n  \
    \  }\n    return uniq;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiz4u4tqe.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpiz4u4tqe.d(14): Error: incompatible\
    \ types for `(e) in (uniq)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiz4u4tqe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(ret[$-1]\
    \ != i)\n            {\n                ret ~= i;\n            }\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm6buep0q.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpm6buep0q.__unittest_L28_C1()\
    \ [0x428020]\\n??:? void tmpm6buep0q.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0x3ce02554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcbx3sd1i.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpcbx3sd1i.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpcbx3sd1i.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpcbx3sd1i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n    r.length = l.length;\n\
    \    long i = 0;\n    foreach(e; l)\n    {\n        if(e in r)\n            continue;\n\
    \        r[i] = e;\n        i++;\n    }\n    r.length = i;\n    return r;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1h3n4edi.d(16): Error: incompatible types for `(e) in (r)`: `long`\
    \ and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1h3n4edi.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l) {\n        if(!e in result) {\n            result ~= e;\n \
    \       }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa_e2p6ut.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpa_e2p6ut.d(13): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\n/tmp/tmpa_e2p6ut.d(17):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpa_e2p6ut.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpln7m3agu.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpln7m3agu.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpln7m3agu.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpln7m3agu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpobpwugqp.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpobpwugqp.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpobpwugqp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l) \n    {\n        if(!e in result) \n        {\n           \
    \ result ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk09f21pj.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpk09f21pj.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\n/tmp/tmpk09f21pj.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpk09f21pj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpjpmywc.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpvpjpmywc.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpjpmywc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    int j = 0;\n    for (int i = 0; i <\
    \ l.length; i++)\n    {\n        if (i == 0)\n        {\n            ret[j] =\
    \ l[i];\n            j++;\n        }\n        else\n        {\n            if\
    \ (l[i] != l[i-1])\n            {\n                ret[j] = l[i];\n          \
    \      j++;\n            }\n        }\n    }\n    return ret[0..j];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkw0kv42k.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpkw0kv42k.__unittest_L32_C1()\
    \ [0x42809c]\\n??:? void tmpkw0kv42k.__modtest() [0x42814c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4ab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b33e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305c9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430555]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b315]\\n??:? runModuleUnitTests [0x42c281]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428890]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428817]\\n??:? _d_run_main [0x428782]\\n??:? main [0x42815f]\\\
    n??:? __libc_start_main [0x4a4be554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in ret) continue;\n        ret ~= e;\n\
    \    }\n    ret.sort;\n    return ret;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb5c4ukf0.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpb5c4ukf0.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\n/tmp/tmpb5c4ukf0.d(17): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpb5c4ukf0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hg5ias9.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp7hg5ias9.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp7hg5ias9.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hg5ias9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpard2715m.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpard2715m.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpard2715m.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpard2715m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l) \n    {\n        if(!e in result) \n        {\n           \
    \ result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7c2nzed3.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp7c2nzed3.d(14): Error: incompatible\
    \ types for `(!e) in (result)`: `bool` and `long[]`\\n/tmp/tmp7c2nzed3.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7c2nzed3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(i in result)\n            continue;\n  \
    \      result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8f8sizea.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp8f8sizea.d(14): Error: incompatible\
    \ types for `(i) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp8f8sizea.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l) \n    {\n        if(e in ret) continue;\n        ret ~= e;\n\
    \    }\n    ret.sort;\n    return ret;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpow3vvvmv.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpow3vvvmv.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\n/tmp/tmpow3vvvmv.d(17): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpow3vvvmv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] temp = new long[l.length];\n    long[] temp2 = new long[l.length];\n\
    \    long[] temp3 = new long[l.length];\n    long[] temp4 = new long[l.length];\n\
    \    long[] temp5 = new long[l.length];\n    long[] temp6 = new long[l.length];\n\
    \    long[] temp7 = new long[l.length];\n    long[] temp8 = new long[l.length];\n\
    \    long[] temp9 = new long[l.length];\n    long[] temp10 = new long[l.length];\n\
    \    long[] temp11 = new long[l.length];\n    long[] temp12 = new long[l.length];\n\
    \    long[] temp13 = new long[l.length];\n    long[] temp14 = new long[l.length];\n\
    \    long[] temp15 = new long[l.length];\n    long[] temp16 = new long[l.length];\n\
    \    long[] temp17 = new long[l.length];\n    long[] temp18 = new long[l.length];\n\
    \    long[] temp19 = new long[l.length];\n    long[] temp20 = new long[l.length];\n\
    \    long[] temp21 = new long[l.length];\n    long[] temp22 = new long[l.length];\n\
    \    long[] temp23 = new long[l.length];\n    long[] temp24 = new long[l.length];\n\
    \    long[] temp25 = new long[l.length];\n    long[] temp26 = new long[l.length];\n\
    \    long[] temp27 = new long[l.length];\n    long[] temp28 = new long[l.length];\n\
    \    long[] temp29 = new long[l.length];\n    long[] temp30 = new long[l.length];\n\
    \    long[] temp31 = new long[l.length];\n    long[] temp32 = new long[l.length];\n\
    \    long[] temp33 = new long[l.length];\n    long[] temp34 = new long[l.length];\n\
    \    long[] temp35 = new long[l.length];\n    long[] temp36 = new\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpff2n1czd.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpff2n1czd.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpff2n1czd.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpff2n1czd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjo2xlc_j.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjo2xlc_j.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdyoty60y.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpdyoty60y.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdyoty60y.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = [];\n    foreach(e;\
    \ l) \n    {\n        if(!e in result) \n        {\n            result ~= e;\n\
    \        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpri0i3uxf.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\n/tmp/tmpri0i3uxf.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpri0i3uxf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptluwkal8.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmptluwkal8.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmptluwkal8.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmptluwkal8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n    foreach(e; l)\n\
    \        r ~= e;\n    r.sort;\n    r.length = r.length - 1;\n    foreach(e; r)\n\
    \        if(e == r[$-1])\n            r.length = r.length - 1;\n    return r;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkfw1k9r0.d(14): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkfw1k9r0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n    foreach(e;\
    \ l)\n    {\n        if(!e in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfw9g1768.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfw9g1768.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbozq_97t.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbozq_97t.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    int i = 0;\n    foreach(long x; l)\n    {\n        if (i == 0 || x != result[i-1])\n\
    \        {\n            result[i] = x;\n            i++;\n        }\n    }\n \
    \   return result[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphf7zcmfx.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmphf7zcmfx.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmphf7zcmfx.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x476c4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    size_t i = 0;\n    foreach(e; l)\n    {\n        if(i == 0 || e != result[i-1])\n\
    \        {\n            result[i] = e;\n            i++;\n        }\n    }\n \
    \   return result[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg9nda6bx.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpg9nda6bx.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpg9nda6bx.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x703b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbwmdhxp1.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpbwmdhxp1.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbwmdhxp1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n    foreach(i;\
    \ l)\n    {\n        if(!result.canFind(i))\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq7ebswb5.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpq7ebswb5.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq7ebswb5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmporwy5rq_.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmporwy5rq_.d(49): Error: semicolon expected, not `{`\\n/tmp/tmporwy5rq_.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmporwy5rq_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpajph_2qs.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpajph_2qs.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpajph_2qs.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp20exymkh.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp20exymkh.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcwqhe24o.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpcwqhe24o.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpcwqhe24o.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpcwqhe24o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l) {\n        if(e !in ret) {\n            ret ~= e;\n       \
    \ }\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptc2umu8z.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmptc2umu8z.d(13): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmptc2umu8z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprtu5bsi3.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprtu5bsi3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n    long[] u;\n\
    \    long[] v;\n    long i;\n    long j;\n    long k;\n    long n;\n    long m;\n\
    \    long p;\n    long q;\n    long t;\n    long[] x;\n    long[] y;\n    long[]\
    \ z;\n    long[] w;\n    long[] a;\n    long[] b;\n    long[] c;\n    long[] d;\n\
    \    long[] e;\n    long[] f;\n    long[] g;\n    long[] h;\n    long[] ii;\n\
    \    long[] jj;\n    long[] kk;\n    long[] ll;\n    long[] mm;\n    long[] nn;\n\
    \    long[] oo;\n    long[] pp;\n    long[] qq;\n    long[] rr;\n    long[] ss;\n\
    \    long[] tt;\n    long[] uu;\n    long[] vv;\n    long[] ww;\n    long[] xx;\n\
    \    long[] yy;\n    long[] zz;\n    long[] aa;\n    long[] bb;\n    long[] cc;\n\
    \    long[] dd;\n    long[] ee;\n    long[] ff;\n    long[] gg;\n    long[] hh;\n\
    \    long[] iii;\n    long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[]\
    \ mmm;\n    long[] nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n \
    \   long[] rrr;\n    long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[]\
    \ vvv;\n    long[] www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n \
    \   long[] aaaa;\n    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[]\
    \ eeee;\n    long[] ffff;\n    long[] gggg;\n    long[] hhhh;\n    long[] iiii;\n\
    \    long[] jjjj;\n    long[] kkkk\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjv3l2flh.d(89): Error: semicolon expected, not `unittest`\\n/tmp/tmpjv3l2flh.d(89):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjv3l2flh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    size_t result_size = 0;\n    foreach (long x; l)\n    {\n        if (result_size\
    \ == 0 || x != result[result_size - 1])\n        {\n            result[result_size]\
    \ = x;\n            result_size++;\n        }\n    }\n    return result[0 .. result_size];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd2804g1r.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpd2804g1r.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpd2804g1r.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0xd0cdb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.canFind(i))\n            continue;\n\
    \        ret ~= i;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ihi7ytj.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ihi7ytj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] l2 = l.dup;\n    l2.sort;\n\
    \    l2.length = l2.length - 1;\n    return l2;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeveur6k_.d(12): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeveur6k_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in res)\n            continue;\n     \
    \   res ~= e;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp66evos4g.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp66evos4g.d(14): Error: incompatible\
    \ types for `(e) in (res)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp66evos4g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = [];\n    foreach(e;\
    \ l) \n    {\n        if(!e in result) \n        {\n            result ~= e;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfccgcmgz.d(14): Error: incompatible types for `(!e) in (result)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfccgcmgz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    int n = 0;\n    foreach(i; l)\n    {\n        if(n == 0 || result[n-1] !=\
    \ i)\n        {\n            result[n] = i;\n            n++;\n        }\n   \
    \ }\n    return result[0..n];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuqk7dxnm.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpuqk7dxnm.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpuqk7dxnm.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x4fb2f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptc2k99pn.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptc2k99pn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp\
    \ = l.dup;\n    tmp.sort;\n    ret ~= tmp[0];\n    foreach(i, e; tmp) \n    {\n\
    \        if (e != ret[$-1]) \n        {\n            ret ~= e;\n        }\n  \
    \  }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbhccxf1e.d(13): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhccxf1e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(!ret.canFind(i))\n\
    \            {\n                ret ~= i;\n            }\n        }\n    }\n \
    \   ret.sort();\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpap91hhts.d(20): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpap91hhts.d(26): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpap91hhts.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!ret.canFind(i))\n            ret ~=\
    \ i;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1m3neat4.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1m3neat4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq5pox238.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpq5pox238.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\n/tmp/tmpq5pox238.d(19): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpq5pox238.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else if(result[$-1] != i)\n      \
    \  {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl9z4bpwz.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpl9z4bpwz.__unittest_L25_C1()\
    \ [0x428020]\\n??:? void tmpl9z4bpwz.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0x47d62554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqa8ygecf.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqa8ygecf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdxjbmbf9.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpdxjbmbf9.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpdxjbmbf9.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdxjbmbf9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long x; l) \n    {\n        if(!result.canFind(x)) \n        {\n\
    \            result ~= x;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptxkxcbr8.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmptxkxcbr8.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptxkxcbr8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n     \
    \   ret ~= e;\n    }\n    ret.sort;\n    return ret;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplld151n2.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmplld151n2.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\n/tmp/tmplld151n2.d(18): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplld151n2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0 || result[$-1] !=\
    \ i)\n            result ~= i;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpix14wp5l.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpix14wp5l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(!result.canFind(i))\n        {\n       \
    \     result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprv58olff.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmprv58olff.d(14): Error: no property\
    \ `canFind` for type `long[]`\\n/tmp/tmprv58olff.d(19): Error: no property `sort`\
    \ for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprv58olff.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n            result ~= e;\n\
    \    }\n    return result;\n}\n/*\nReturn sorted unique elements in a list\n \
    \   >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n\
    */\nlong[] unique(long[] l) \n{\n    auto result = new long[];\n    foreach(e;\
    \ l)\n    {\n        if(e !in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    auto result = new long[];\n    foreach(e; l)\n    {\n        if(e\
    \ !in result)\n            result ~= e;\n    }\n    return result;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\
    \    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto result\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e !in result)\n        \
    \    result ~= e;\n    }\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e !in result)\n            result ~= e;\n\
    \    }\n    return result;\n}\n/*\nReturn sorted unique elements in a list\n \
    \   >>> unique([5, 3,\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph18x1wcq.d(83): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph18x1wcq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    int i = 0;\n    foreach(e; l)\n    {\n        if(e in result)\n         \
    \   continue;\n        result[i++] = e;\n    }\n    return result[0..i];\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpshwm7p77.d(15): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshwm7p77.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwas12ss8.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpwas12ss8.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpwas12ss8.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpwas12ss8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5adw5fr2.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5adw5fr2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(ret[$-1]\
    \ != i)\n            {\n                ret ~= i;\n            }\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgqvqocwj.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpgqvqocwj.__unittest_L28_C1()\
    \ [0x428020]\\n??:? void tmpgqvqocwj.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0x87b2c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp94vqr3ru.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmp94vqr3ru.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp94vqr3ru.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgf3a6obi.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\n/tmp/tmpgf3a6obi.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgf3a6obi.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[];\n\
    \    foreach(e; l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpapyhqaep.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpapyhqaep.d(14): Error: incompatible\
    \ types for `(!e) in (res)`: `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpapyhqaep.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n  \
    \      result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeysj3et2.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpeysj3et2.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpeysj3et2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.sort().uniq;\n}\n\
    /*\nReturn sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcu1ppse0.d(11): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcu1ppse0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_0nluut4.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmp_0nluut4.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmp_0nluut4.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_0nluut4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!i in ret)\n            ret ~= i;\n\
    \    }\n    ret.sort();\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeibz6od8.d(14): Error: incompatible types for `(!i) in (ret)`:\
    \ `bool` and `long[]`\\n/tmp/tmpeibz6od8.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeibz6od8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx8rjro6k.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx8rjro6k.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps_c_sv7h.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmps_c_sv7h.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_c_sv7h.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else\n        {\n            if(result[$-1]\
    \ != i)\n            {\n                result ~= i;\n            }\n        }\n\
    \    }\n    return result;\n}\n/*\nReturn sorted unique elements in a list\n \
    \   >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n\
    */\nlong[] unique(long[] l) \n{\n    long[] result = new long[0];\n    foreach(long\
    \ i; l)\n    {\n        if(result.length == 0)\n        {\n            result\
    \ ~= i;\n        }\n        else\n        {\n            if(result[$-1] != i)\n\
    \            {\n                result ~= i;\n            }\n        }\n    }\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] result = new long[0];\n    foreach(long i; l)\n    {\n  \
    \      if(result.length == 0)\n        {\n            result ~= i;\n        }\n\
    \        else\n        {\n            if(result[$-1] != i)\n            {\n  \
    \              result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nlong[] unique(long[] l)\
    \ \n{\n    long[] result = new long[0];\n    foreach(long i; l)\n    {\n     \
    \   if(result.length == 0)\n        {\n            result ~=\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe7r66rp9.d(92): Error: expression expected, not `unittest`\\\
    n/tmp/tmpe7r66rp9.d(93): Error: found `{` when expecting `;` following statement\\\
    n/tmp/tmpe7r66rp9.d(98): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpe7r66rp9.d(98): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpe7r66rp9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiewpwopo.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpiewpwopo.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpiewpwopo.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiewpwopo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

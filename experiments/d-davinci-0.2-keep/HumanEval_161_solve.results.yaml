name: HumanEval_161_solve
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (isAlpha(c))\n        {\n            if (isUpper(c))\n           \
    \     result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxq9afnk6.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpxq9afnk6.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpxq9afnk6.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpxq9afnk6.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxq9afnk6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_8dm9vex.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp_8dm9vex.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_8dm9vex.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_8dm9vex.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8dm9vex.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if(isAlpha(c))\n        {\n            if(isLower(c))\n             \
    \   result ~= toUpper(c);\n            else\n                result ~= toLower(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2al9yvc9.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp2al9yvc9.d(24):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmp2al9yvc9.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp2al9yvc9.d(27): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2al9yvc9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy9bwwejt.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpy9bwwejt.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpy9bwwejt.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpy9bwwejt.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy9bwwejt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if(isAlpha(c))\n        {\n            if(isUpper(c))\n             \
    \   result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1svzdl3m.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp1svzdl3m.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp1svzdl3m.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp1svzdl3m.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1svzdl3m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isLetter(c))\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphe42igwv.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmphe42igwv.d(24):\
    \ Error: no property `isUpper` for type `immutable(char)`\\n/tmp/tmphe42igwv.d(25):\
    \ Error: no property `toLower` for type `immutable(char)`\\n/tmp/tmphe42igwv.d(27):\
    \ Error: no property `toUpper` for type `immutable(char)`\\nFailed: [\"dmd\",\
    \ \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphe42igwv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   if(result.length == 0)\n        return s;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmporycyv75.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmporycyv75.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmporycyv75.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmporycyv75.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmporycyv75.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp13g6jod4.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp13g6jod4.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp13g6jod4.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp13g6jod4.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp13g6jod4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8tj6h3q.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpo8tj6h3q.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpo8tj6h3q.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpo8tj6h3q.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo8tj6h3q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi6f9ggaa.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpi6f9ggaa.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpi6f9ggaa.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpi6f9ggaa.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi6f9ggaa.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8542i0hl.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp8542i0hl.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp8542i0hl.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp8542i0hl.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8542i0hl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            result ~= to!string(toUpper(s[i]));\n        }\n     \
    \   else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result ~= to!string(toLower(s[i]));\n\
    \        }\n        else\n        {\n            result ~= s[i];\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7jucwxj8.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp7jucwxj8.d(26): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7jucwxj8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp92cl0svn.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp92cl0svn.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp92cl0svn.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp92cl0svn.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92cl0svn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= toUpper(c);\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc6rv1r7p.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpc6rv1r7p.d(22):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc6rv1r7p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if (s.length == 0)\n        return res;\n    foreach(c; s)\n    {\n      \
    \  if (isAlpha(c))\n        {\n            if (isUpper(c))\n                res\
    \ ~= toLower(c);\n            else\n                res ~= toUpper(c);\n     \
    \   }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpykb1920k.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpykb1920k.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpykb1920k.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpykb1920k.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpykb1920k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6hql9au5.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp6hql9au5.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp6hql9au5.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp6hql9au5.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6hql9au5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isLetter(c))\n        {\n            if(isUpper(c))\n               \
    \ result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyusmzmhy.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmpyusmzmhy.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpyusmzmhy.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpyusmzmhy.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyusmzmhy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    if(result.length ==\
    \ s.length)\n        return result;\n    else\n        return s.reverse;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphoqcbai7.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmphoqcbai7.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmphoqcbai7.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmphoqcbai7.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmphoqcbai7.d(35): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmphoqcbai7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptqqt91d1.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmptqqt91d1.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmptqqt91d1.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmptqqt91d1.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptqqt91d1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n     \
    \   if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7z916zor.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7z916zor.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp7z916zor.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7z916zor.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7z916zor.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgpt3sl0e.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpgpt3sl0e.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpgpt3sl0e.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpgpt3sl0e.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgpt3sl0e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptekxa3mw.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmptekxa3mw.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmptekxa3mw.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmptekxa3mw.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptekxa3mw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdwyc8pxd.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpdwyc8pxd.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpdwyc8pxd.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpdwyc8pxd.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdwyc8pxd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result\
    \ ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result.length > 0 ? result : s.dup.reverse;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1liyln80.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp1liyln80.d(22): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp1liyln80.d(29): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp1liyln80.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz1cajcrt.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpz1cajcrt.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpz1cajcrt.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpz1cajcrt.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz1cajcrt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper) result ~= c.toLower;\n            else result\
    \ ~= c.toUpper;\n        }\n        else result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpil2i5xaw.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpil2i5xaw.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpil2i5xaw.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpil2i5xaw.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpil2i5xaw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if(s.length == 0) return res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c)) res ~= toLower(c);\n            else res\
    \ ~= toUpper(c);\n        }\n        else res ~= c;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbdkn3y5h.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpbdkn3y5h.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpbdkn3y5h.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpbdkn3y5h.d(24): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbdkn3y5h.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_hn9u4ho.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp_hn9u4ho.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_hn9u4ho.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_hn9u4ho.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_hn9u4ho.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hyzuoyi.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp7hyzuoyi.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp7hyzuoyi.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp7hyzuoyi.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hyzuoyi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpojd9t221.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpojd9t221.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpojd9t221.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpojd9t221.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojd9t221.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeeyph_d2.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpeeyph_d2.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpeeyph_d2.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpeeyph_d2.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeeyph_d2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqj1y13ga.d(21): Error: undefined identifier `isLetter`\\n/tmp/tmpqj1y13ga.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpqj1y13ga.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpqj1y13ga.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqj1y13ga.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (s.empty) return s;\n\
    \    string result = \"\";\n    foreach (c; s)\n    {\n        if (isAlpha(c))\n\
    \        {\n            if (isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb15j0dw2.d(17): Error: no property `empty` for type `string`\\\
    n/tmp/tmpb15j0dw2.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpb15j0dw2.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpb15j0dw2.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpb15j0dw2.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb15j0dw2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if (c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2s0us0rz.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp2s0us0rz.d(23): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2s0us0rz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptequkye2.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmptequkye2.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmptequkye2.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmptequkye2.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptequkye2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result\
    \ ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result.length == 0 ? s.dup.reverse : result.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1pegw2zq.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp1pegw2zq.d(22): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp1pegw2zq.d(29): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp1pegw2zq.d(29):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pegw2zq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb081c6e2.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpb081c6e2.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpb081c6e2.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpb081c6e2.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb081c6e2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp26xys0qg.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp26xys0qg.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp26xys0qg.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp26xys0qg.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26xys0qg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    if(s.length == 1)\n      \
    \  return s[0].isLetter ? s[0].toUpper : s[0].toLower;\n    foreach(i, c; s)\n\
    \    {\n        if(c.isLetter)\n            result ~= c.isUpper ? c.toLower :\
    \ c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppgo7eacc.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmppgo7eacc.d(21): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmppgo7eacc.d(21): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmppgo7eacc.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmppgo7eacc.d(25): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmppgo7eacc.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmppgo7eacc.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppgo7eacc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n     \
    \   if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphpiyay1f.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmphpiyay1f.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmphpiyay1f.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmphpiyay1f.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphpiyay1f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isAlpha)\n        {\n            if (c.isUpper)\n             \
    \   result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphq43cac9.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmphq43cac9.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmphq43cac9.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmphq43cac9.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq43cac9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxfurdm7l.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpxfurdm7l.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpxfurdm7l.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpxfurdm7l.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxfurdm7l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isLetter)\n        {\n            if (c.isUpper)\n              \
    \  result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4avqv6wt.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp4avqv6wt.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp4avqv6wt.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp4avqv6wt.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4avqv6wt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpewygdz28.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpewygdz28.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpewygdz28.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpewygdz28.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpewygdz28.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx2dqgn8g.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpx2dqgn8g.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpx2dqgn8g.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpx2dqgn8g.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx2dqgn8g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n        {\n\
    \            result ~= to!string(toUpper(s[i]));\n        }\n        else\n  \
    \      {\n            result ~= to!string(toLower(s[i]));\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgc8yo27h.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpgc8yo27h.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpgc8yo27h.d(26): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpgc8yo27h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpog6wdwq7.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpog6wdwq7.d(23): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpog6wdwq7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isAlpha)\n        {\n            if (c.isUpper)\n             \
    \   result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpduivpt14.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpduivpt14.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpduivpt14.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpduivpt14.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduivpt14.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    bool hasLetter = false;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            hasLetter = true;\n            result ~= to!string(c ^\
    \ ' ');\n        }\n        else\n        {\n            result ~= to!string(c);\n\
    \        }\n    }\n    if(!hasLetter)\n    {\n        result = result.dup.reverse;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbz8bg7ok.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpbz8bg7ok.d(24):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpbz8bg7ok.d(28): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpbz8bg7ok.d(33): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpbz8bg7ok.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n       \
    \ if (c.isLetter)\n        {\n            if (c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzcyunyup.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpzcyunyup.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpzcyunyup.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpzcyunyup.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzcyunyup.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return result;\n    foreach (i, c; s)\n    {\n       \
    \ if (c.isLetter)\n        {\n            if (c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjyq_2chu.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpjyq_2chu.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpjyq_2chu.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpjyq_2chu.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjyq_2chu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqmt2svie.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpqmt2svie.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpqmt2svie.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpqmt2svie.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmt2svie.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnk4xo7x9.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpnk4xo7x9.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpnk4xo7x9.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpnk4xo7x9.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpnk4xo7x9.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpnk4xo7x9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isAlpha)\n        {\n            if (c.isUpper)\n               \
    \ result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxrunnzws.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpxrunnzws.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpxrunnzws.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpxrunnzws.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpxrunnzws.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrunnzws.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n       \
    \ if (isAlpha(c))\n        {\n            if (isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9urifwx8.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp9urifwx8.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp9urifwx8.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp9urifwx8.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9urifwx8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpds407zi9.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpds407zi9.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpds407zi9.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpds407zi9.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpds407zi9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy2dn5nys.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpy2dn5nys.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpy2dn5nys.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpy2dn5nys.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2dn5nys.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n    \
    \    if (isAlpha(c))\n        {\n            if (isUpper(c))\n               \
    \ result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjhbibie7.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpjhbibie7.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpjhbibie7.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpjhbibie7.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjhbibie7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplt17grf8.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmplt17grf8.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmplt17grf8.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmplt17grf8.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt17grf8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoh3kdico.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpoh3kdico.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpoh3kdico.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpoh3kdico.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoh3kdico.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfmbcrb3y.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpfmbcrb3y.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpfmbcrb3y.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpfmbcrb3y.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfmbcrb3y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if(isAlpha(c))\n        {\n            if(isUpper(c))\n             \
    \   result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps26r1sba.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmps26r1sba.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmps26r1sba.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmps26r1sba.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps26r1sba.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c)) result ~= toLower(c);\n            else\
    \ result ~= toUpper(c);\n        }\n        else result ~= c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp8009rwx.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpp8009rwx.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpp8009rwx.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpp8009rwx.d(24): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp8009rwx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1otv3ova.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp1otv3ova.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp1otv3ova.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp1otv3ova.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1otv3ova.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if (s.length == 0) return res;\n    foreach (c; s)\n    {\n        if (c.isAlpha)\n\
    \        {\n            if (c.isUpper)\n                res ~= c.toLower;\n  \
    \          else\n                res ~= c.toUpper;\n        }\n        else\n\
    \            res ~= c;\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_nrmp8i9.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp_nrmp8i9.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp_nrmp8i9.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp_nrmp8i9.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_nrmp8i9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt9w17xg6.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpt9w17xg6.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt9w17xg6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isLetter)\n        {\n            if (c.isUpper)\n            \
    \    result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph5_9x5io.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmph5_9x5io.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmph5_9x5io.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmph5_9x5io.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph5_9x5io.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp80m7izdg.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp80m7izdg.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp80m7izdg.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp80m7izdg.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp80m7izdg.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp80m7izdg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n \
    \   if(s.length == 0)\n        return ret;\n    foreach(c; s)\n    {\n       \
    \ if(c.isLetter)\n        {\n            if(c.isUpper)\n                ret ~=\
    \ c.toLower;\n            else\n                ret ~= c.toUpper;\n        }\n\
    \        else\n            ret ~= c;\n    }\n    return ret;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp05ph2_kj.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp05ph2_kj.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp05ph2_kj.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp05ph2_kj.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp05ph2_kj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo30uro3f.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpo30uro3f.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpo30uro3f.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpo30uro3f.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo30uro3f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isLetter(c))\n        {\n            if(isUpper(c))\n               \
    \ result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp71ifu_bv.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmp71ifu_bv.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp71ifu_bv.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp71ifu_bv.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp71ifu_bv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3rtt7bxw.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp3rtt7bxw.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp3rtt7bxw.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp3rtt7bxw.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp3rtt7bxw.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rtt7bxw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnit9yy_b.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpnit9yy_b.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpnit9yy_b.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpnit9yy_b.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnit9yy_b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length == 0)\n  \
    \      return s;\n    string result = \"\";\n    foreach(c; s)\n    {\n      \
    \  if(isLetter(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpomveeupu.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmpomveeupu.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpomveeupu.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpomveeupu.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpomveeupu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo2nd_xbq.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpo2nd_xbq.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpo2nd_xbq.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpo2nd_xbq.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2nd_xbq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c;\
    \ s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf92rqrb_.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpf92rqrb_.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpf92rqrb_.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpf92rqrb_.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf92rqrb_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_01t0cgo.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp_01t0cgo.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_01t0cgo.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_01t0cgo.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_01t0cgo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n     \
    \   if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwg1mn0ee.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpwg1mn0ee.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpwg1mn0ee.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpwg1mn0ee.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwg1mn0ee.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res;\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= to!string(c\
    \ ^ ' ');\n        }\n        else\n        {\n            res ~= c;\n       \
    \ }\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptuh4hxh7.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmptuh4hxh7.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptuh4hxh7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isAlpha)\n        {\n            if (c.isUpper)\n               \
    \ result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_26xcjn.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpg_26xcjn.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpg_26xcjn.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpg_26xcjn.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_26xcjn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c;\
    \ s)\n    {\n        if(isLetter(c))\n        {\n            result ~= toUpper(c);\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvw8t5fgn.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpvw8t5fgn.d(22):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpvw8t5fgn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwkdb8aad.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpwkdb8aad.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpwkdb8aad.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpwkdb8aad.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwkdb8aad.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjaja6tbe.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpjaja6tbe.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpjaja6tbe.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpjaja6tbe.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpjaja6tbe.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpjaja6tbe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result\
    \ ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result.length == 0 ? s\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9_5gfpy4.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp9_5gfpy4.d(22):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp9_5gfpy4.d(22): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp9_5gfpy4.d(22): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9_5gfpy4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result\
    \ ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps79f9mmv.d(20): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmps79f9mmv.d(22): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps79f9mmv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (isLetter(c))\n        {\n            if (isUpper(c))\n            \
    \    result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprhp4qp9n.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmprhp4qp9n.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmprhp4qp9n.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmprhp4qp9n.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprhp4qp9n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isLetter)\n        {\n            if (c.isUpper)\n              \
    \  result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1t63nfl9.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp1t63nfl9.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp1t63nfl9.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp1t63nfl9.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1t63nfl9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1bnc01sk.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp1bnc01sk.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1bnc01sk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxszz311a.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpxszz311a.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpxszz311a.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpxszz311a.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxszz311a.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr4hc5bl4.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpr4hc5bl4.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpr4hc5bl4.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpr4hc5bl4.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr4hc5bl4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppvg7w7h8.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmppvg7w7h8.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmppvg7w7h8.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmppvg7w7h8.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvg7w7h8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n     \
    \   if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpomvm1g08.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpomvm1g08.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpomvm1g08.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpomvm1g08.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpomvm1g08.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n       \
    \ if (isAlpha(c))\n        {\n            if (isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_3dw75xs.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp_3dw75xs.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_3dw75xs.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_3dw75xs.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_3dw75xs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpht5a4wma.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpht5a4wma.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpht5a4wma.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpht5a4wma.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpht5a4wma.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcgczdf7u.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpcgczdf7u.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpcgczdf7u.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpcgczdf7u.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcgczdf7u.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptw_8xgm0.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmptw_8xgm0.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmptw_8xgm0.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmptw_8xgm0.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptw_8xgm0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwu1pjmay.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpwu1pjmay.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpwu1pjmay.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpwu1pjmay.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwu1pjmay.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc56fg__a.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpc56fg__a.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpc56fg__a.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpc56fg__a.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc56fg__a.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdry5qual.d(20): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpdry5qual.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpdry5qual.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpdry5qual.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpdry5qual.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpdry5qual.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpekb152km.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpekb152km.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpekb152km.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpekb152km.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpekb152km.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n    \
    \    if (c.isLetter)\n        {\n            if (c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpev8r7q6j.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpev8r7q6j.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpev8r7q6j.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpev8r7q6j.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpev8r7q6j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx9n51bfm.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpx9n51bfm.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpx9n51bfm.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpx9n51bfm.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx9n51bfm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp728lswkc.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmp728lswkc.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp728lswkc.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp728lswkc.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp728lswkc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuj83y_1x.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpuj83y_1x.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpuj83y_1x.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpuj83y_1x.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuj83y_1x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc15rh2jb.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpc15rh2jb.d(23): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc15rh2jb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzo8snpto.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpzo8snpto.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzo8snpto.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    if(s.length == 1)\n      \
    \  return s;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n\
    \            if(c.isUpper)\n                result ~= c.toLower;\n           \
    \ else\n                result ~= c.toUpper;\n        }\n        else\n      \
    \      result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpebl08bf6.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpebl08bf6.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpebl08bf6.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpebl08bf6.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpebl08bf6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmp5h_wc_.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpmp5h_wc_.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmp5h_wc_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaxdeem1a.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpaxdeem1a.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaxdeem1a.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxuo823fi.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpxuo823fi.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpxuo823fi.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpxuo823fi.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxuo823fi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2p66bya5.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp2p66bya5.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp2p66bya5.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp2p66bya5.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2p66bya5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (isAlpha(c))\n        {\n            if (isUpper(c))\n             \
    \   result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_179_dpv.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp_179_dpv.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_179_dpv.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_179_dpv.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_179_dpv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if(s.length == 0)\n        return res;\n    foreach(i, c; s)\n    {\n    \
    \    if(c.isLetter)\n        {\n            if(c.isUpper)\n                res\
    \ ~= c.toLower;\n            else\n                res ~= c.toUpper;\n       \
    \ }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq9ogpe5_.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpq9ogpe5_.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpq9ogpe5_.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpq9ogpe5_.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9ogpe5_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa1wr585i.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpa1wr585i.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpa1wr585i.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpa1wr585i.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa1wr585i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   if(result.length == 0)\n        return s;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp88rml7gq.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp88rml7gq.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp88rml7gq.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp88rml7gq.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp88rml7gq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isLetter)\n        {\n            if (c.isUpper)\n              \
    \  result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl_myv8bu.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpl_myv8bu.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpl_myv8bu.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpl_myv8bu.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_myv8bu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuzqqncu3.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpuzqqncu3.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpuzqqncu3.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpuzqqncu3.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuzqqncu3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0q0tdixc.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp0q0tdixc.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0q0tdixc.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_foco5z2.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp_foco5z2.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp_foco5z2.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp_foco5z2.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_foco5z2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuvs_tnex.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpuvs_tnex.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpuvs_tnex.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpuvs_tnex.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuvs_tnex.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpugv38_7u.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpugv38_7u.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpugv38_7u.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpugv38_7u.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpugv38_7u.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpugv38_7u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpglqz1tnm.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpglqz1tnm.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpglqz1tnm.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpglqz1tnm.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglqz1tnm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper) result ~= c.toLower;\n            else result\
    \ ~= c.toUpper;\n        }\n        else result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg00e8aup.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpg00e8aup.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpg00e8aup.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpg00e8aup.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg00e8aup.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3kdnssbj.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp3kdnssbj.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp3kdnssbj.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp3kdnssbj.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3kdnssbj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return result;\n    foreach (c; s)\n    {\n        if\
    \ (c.isAlpha)\n        {\n            if (c.isUpper)\n                result ~=\
    \ c.toLower;\n            else\n                result ~= c.toUpper;\n       \
    \ }\n        else\n            result ~= c;\n    }\n    if (result.length == s.length)\n\
    \        return result;\n    else\n        return s.dup.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvx7ust18.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpvx7ust18.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpvx7ust18.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpvx7ust18.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpvx7ust18.d(34): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpvx7ust18.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if (s.length == 0) return res;\n    foreach (c; s)\n    {\n        if (c.isAlpha)\n\
    \        {\n            res ~= c.toUpper;\n        }\n        else\n        {\n\
    \            res ~= c;\n        }\n    }\n    return res.length == 0 ? s.dup.reverse\
    \ : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp44k4c127.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp44k4c127.d(23): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp44k4c127.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp44k4c127.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c)\
    \ == c ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n      \
    \      result ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp25g9vcij.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp25g9vcij.d(22):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp25g9vcij.d(22): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp25g9vcij.d(22): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp25g9vcij.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpthw0iw2o.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpthw0iw2o.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpthw0iw2o.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpthw0iw2o.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthw0iw2o.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbz34fkkm.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpbz34fkkm.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpbz34fkkm.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpbz34fkkm.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbz34fkkm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n     \
    \   if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfz7zgd5o.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpfz7zgd5o.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpfz7zgd5o.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpfz7zgd5o.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfz7zgd5o.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpipitm7_0.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpipitm7_0.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpipitm7_0.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpipitm7_0.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipitm7_0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if(s.length == 0) return res;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                res ~= c.toLower;\n   \
    \         else\n                res ~= c.toUpper;\n        }\n        else\n \
    \           res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7uned0w0.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7uned0w0.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp7uned0w0.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7uned0w0.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7uned0w0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(ch; s)\n    {\n       \
    \ if(ch.isLetter)\n        {\n            if(ch.isUpper)\n                result\
    \ ~= ch.toLower;\n            else\n                result ~= ch.toUpper;\n  \
    \      }\n        else\n            result ~= ch;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmiisp0sc.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpmiisp0sc.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpmiisp0sc.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpmiisp0sc.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmiisp0sc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isLetter)\n        {\n            if (c.isUpper)\n              \
    \  result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdxa7oe1f.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpdxa7oe1f.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpdxa7oe1f.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpdxa7oe1f.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxa7oe1f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n \
    \               result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlboohes.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpvlboohes.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpvlboohes.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpvlboohes.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlboohes.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7aui1h6p.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7aui1h6p.d(22): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp7aui1h6p.d(23): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7aui1h6p.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp7aui1h6p.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7aui1h6p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result\
    \ ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    if(result.length == 0)\n    {\n        return s.reverse;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyzqxzgal.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpyzqxzgal.d(22): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpyzqxzgal.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzqxzgal.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isAlpha)\n        {\n            if (c.isUpper)\n             \
    \   result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4i9nc13t.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp4i9nc13t.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp4i9nc13t.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp4i9nc13t.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4i9nc13t.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu_ipzq_v.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpu_ipzq_v.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpu_ipzq_v.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpu_ipzq_v.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_ipzq_v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n        {\n            result\
    \ ~= toUpper(ch);\n        }\n        else\n        {\n            result ~= ch;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzlayli1t.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpzlayli1t.d(22):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpzlayli1t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(ch; s)\n    {\n      \
    \  if (isAlpha(ch))\n        {\n            if (isUpper(ch))\n               \
    \ result ~= toLower(ch);\n            else\n                result ~= toUpper(ch);\n\
    \        }\n        else\n            result ~= ch;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqdtxlay0.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpqdtxlay0.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpqdtxlay0.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpqdtxlay0.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqdtxlay0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   if(s.length == 0) return res;\n    if(s.length == 1) return s[0].isLetter\
    \ ? s[0].toUpper : s[0].toLower;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            res ~= c.isUpper ? c.toLower : c.toUpper;\n        }\n\
    \        else\n        {\n            res ~= c;\n        }\n    }\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7okk7yg1.d(19): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7okk7yg1.d(19): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp7okk7yg1.d(19): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7okk7yg1.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7okk7yg1.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp7okk7yg1.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7okk7yg1.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7okk7yg1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr8g816s6.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpr8g816s6.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpr8g816s6.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpr8g816s6.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpr8g816s6.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpr8g816s6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            result ~= to!string(s[i]).toUpper();\n        }\n    \
    \    else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result ~= to!string(s[i]).toLower();\n\
    \        }\n        else\n        {\n            result ~= to!string(s[i]);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwf7q7_ek.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpwf7q7_ek.d(26): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpwf7q7_ek.d(30):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwf7q7_ek.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isLetter(c))\n        {\n            if(isUpper(c))\n               \
    \ result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgjwq8n1n.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmpgjwq8n1n.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpgjwq8n1n.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpgjwq8n1n.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjwq8n1n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result\
    \ ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    if(result.length == 0)\n    {\n        return reverse(s);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzga5uifv.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpzga5uifv.d(22):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpzga5uifv.d(31): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpzga5uifv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmvfxybv1.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpmvfxybv1.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpmvfxybv1.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpmvfxybv1.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvfxybv1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n        {\n\
    \            if(isUpper(s[i]))\n                result ~= toLower(s[i]);\n   \
    \         else\n                result ~= toUpper(s[i]);\n        }\n        else\n\
    \            result ~= s[i];\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9__eqxwl.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp9__eqxwl.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp9__eqxwl.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp9__eqxwl.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9__eqxwl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return result;\n    foreach (c; s)\n    {\n        if\
    \ (c.isLetter)\n        {\n            if (c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb0e4kqvw.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpb0e4kqvw.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpb0e4kqvw.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpb0e4kqvw.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0e4kqvw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpikt_zalj.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpikt_zalj.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpikt_zalj.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpikt_zalj.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpikt_zalj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzb7mkae7.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpzb7mkae7.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpzb7mkae7.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpzb7mkae7.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzb7mkae7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ekstumc.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7ekstumc.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp7ekstumc.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7ekstumc.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ekstumc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n \
    \               result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1olx4pe6.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp1olx4pe6.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp1olx4pe6.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp1olx4pe6.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1olx4pe6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpldxyr7be.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpldxyr7be.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpldxyr7be.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpldxyr7be.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldxyr7be.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isLetter)\n        {\n            if (c.isUpper)\n              \
    \  result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm8h8te7v.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpm8h8te7v.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpm8h8te7v.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpm8h8te7v.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8h8te7v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isLetter(c))\n        {\n            if(isUpper(c))\n               \
    \ result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8fkr_ads.d(22): Error: undefined identifier `isLetter`\\n/tmp/tmp8fkr_ads.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp8fkr_ads.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp8fkr_ads.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8fkr_ads.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n \
    \   foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            ret\
    \ ~= to!string(c).toUpper();\n        }\n        else\n        {\n           \
    \ ret ~= to!string(c).toLower();\n        }\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgz88_qr0.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpgz88_qr0.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpgz88_qr0.d(26): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpgz88_qr0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isLetter)\n        {\n            if (c.isUpper)\n            \
    \    result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7uxax4ox.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp7uxax4ox.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp7uxax4ox.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp7uxax4ox.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp7uxax4ox.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7uxax4ox.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n \
    \   if(s.length == 0) return ret;\n    foreach(c; s)\n    {\n        if(c.isLetter)\
    \ ret ~= c.toUpper;\n        else ret ~= c;\n    }\n    return ret.length == 0\
    \ ? s.reverse : ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0biwpu8_.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp0biwpu8_.d(21): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp0biwpu8_.d(24): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp0biwpu8_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp88d2c79f.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp88d2c79f.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp88d2c79f.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp88d2c79f.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp88d2c79f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstc9jc1m.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpstc9jc1m.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpstc9jc1m.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpstc9jc1m.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpstc9jc1m.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpstc9jc1m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp35fc0qsq.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp35fc0qsq.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp35fc0qsq.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp35fc0qsq.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35fc0qsq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr_ap02gv.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpr_ap02gv.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpr_ap02gv.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpr_ap02gv.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpr_ap02gv.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpr_ap02gv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(i,\
    \ c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphwpla7qq.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmphwpla7qq.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmphwpla7qq.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmphwpla7qq.d(25): Error: undefined identifier `toUpper`\\\
    n/tmp/tmphwpla7qq.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmphwpla7qq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzk8ei6yy.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpzk8ei6yy.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpzk8ei6yy.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpzk8ei6yy.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzk8ei6yy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isLetter)\n        {\n            if (c.isUpper)\n            \
    \    result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    if (result.length\
    \ == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgqsim5mx.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpgqsim5mx.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpgqsim5mx.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpgqsim5mx.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpgqsim5mx.d(33): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpgqsim5mx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result\
    \ ~= toLower(c) == c ? toUpper(c) : toLower(c);\n        }\n        else\n   \
    \     {\n            result ~= c;\n        }\n    }\n    return result.length\
    \ == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp36pgu1em.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp36pgu1em.d(22):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp36pgu1em.d(22): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp36pgu1em.d(22): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36pgu1em.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return s;\n    foreach(c; s)\n    {\n        if (c.isAlpha)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj4nzs0e3.d(21): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpj4nzs0e3.d(23): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4nzs0e3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (isAlpha(c))\n        {\n            if (isUpper(c))\n           \
    \     result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgfy0ug_7.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpgfy0ug_7.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpgfy0ug_7.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpgfy0ug_7.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgfy0ug_7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result\
    \ ~= toUpper(c);\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfkzwidv5.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpfkzwidv5.d(22):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfkzwidv5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n       \
    \ if (c.isLetter)\n        {\n            if (c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwc30y7cq.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpwc30y7cq.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpwc30y7cq.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpwc30y7cq.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwc30y7cq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n    \
    \    if (isAlpha(c))\n        {\n            if (isUpper(c))\n               \
    \ result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5hah60t_.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp5hah60t_.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp5hah60t_.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp5hah60t_.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5hah60t_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n    \
    \    if (c.isAlpha)\n        {\n            result ~= c.toLower.toUpper;\n   \
    \     }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpggp6iofj.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpggp6iofj.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpggp6iofj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            result ~= to!string(s[i]).toUpper();\n        }\n    \
    \    else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result ~= to!string(s[i]).toLower();\n\
    \        }\n        else\n        {\n            result ~= to!string(s[i]);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ri6c5sx.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp1ri6c5sx.d(26): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp1ri6c5sx.d(30):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ri6c5sx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ktr7x0d.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp1ktr7x0d.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp1ktr7x0d.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp1ktr7x0d.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ktr7x0d.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i;0..s.length)\n    {\n        if(isAlpha(s[i]))\n        {\n   \
    \         if(isUpper(s[i]))\n                result ~= toLower(s[i]);\n      \
    \      else\n                result ~= toUpper(s[i]);\n        }\n        else\n\
    \            result ~= s[i];\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpic98ju1p.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpic98ju1p.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpic98ju1p.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpic98ju1p.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpic98ju1p.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsyv3koi5.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpsyv3koi5.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpsyv3koi5.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpsyv3koi5.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsyv3koi5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n       \
    \ if (c.isLetter)\n        {\n            if (c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt0vor3dx.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpt0vor3dx.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpt0vor3dx.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpt0vor3dx.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt0vor3dx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcf1h0gvb.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpcf1h0gvb.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpcf1h0gvb.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpcf1h0gvb.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcf1h0gvb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n\
    \        if (isAlpha(c))\n        {\n            if (isUpper(c))\n           \
    \     result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4_6ku9ir.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp4_6ku9ir.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp4_6ku9ir.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp4_6ku9ir.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4_6ku9ir.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            res\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            res\
    \ ~= c;\n        }\n    }\n    return res.length == 0 ? reverse(s) : res;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwzmrlcme.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpwzmrlcme.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpwzmrlcme.d(29): Error: template `std.typecons.reverse` cannot\
    \ deduce function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpwzmrlcme.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphoe7ifkx.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmphoe7ifkx.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmphoe7ifkx.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmphoe7ifkx.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphoe7ifkx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ma48i7z.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp4ma48i7z.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp4ma48i7z.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp4ma48i7z.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ma48i7z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy_ccwvxf.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpy_ccwvxf.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpy_ccwvxf.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpy_ccwvxf.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_ccwvxf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result\
    \ ~= c.toLower;\n            else\n                result ~= c.toUpper;\n    \
    \    }\n        else\n            result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeo3hb7gw.d(22): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpeo3hb7gw.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpeo3hb7gw.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpeo3hb7gw.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeo3hb7gw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n     \
    \   if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptj7un411.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmptj7un411.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmptj7un411.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmptj7un411.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptj7un411.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl19mkqwv.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpl19mkqwv.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpl19mkqwv.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpl19mkqwv.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl19mkqwv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result.length > 0 ? result\
    \ : s.dup.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl9gg9o6x.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmpl9gg9o6x.d(22):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpl9gg9o6x.d(22): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpl9gg9o6x.d(22): Error: undefined identifier `toLower`\\\
    n/tmp/tmpl9gg9o6x.d(29): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpl9gg9o6x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result\
    \ ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1bn9ipnn.d(20): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp1bn9ipnn.d(22): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1bn9ipnn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj9984god.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpj9984god.d(23): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpj9984god.d(24): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpj9984god.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9984god.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            result ~= to!string(toUpper(s[i]));\n        }\n     \
    \   else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result ~= to!string(toLower(s[i]));\n\
    \        }\n        else\n        {\n            result ~= s[i];\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2rqxx1f2.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp2rqxx1f2.d(26): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rqxx1f2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(c.isLetter)\n        {\n            result ~= c.toUpper;\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9y09hbo8.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp9y09hbo8.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9y09hbo8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result\
    \ ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp54vofy0n.d(20): Error: undefined identifier `isLetter`\\n/tmp/tmp54vofy0n.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp54vofy0n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            result ~= to!string(toUpper(s[i]));\n        }\n     \
    \   else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result ~= to!string(toLower(s[i]));\n\
    \        }\n        else\n        {\n            result ~= s[i];\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6_wwyfps.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp6_wwyfps.d(26): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_wwyfps.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n \
    \               result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8ae9zbuo.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp8ae9zbuo.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp8ae9zbuo.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp8ae9zbuo.d(25): Error: undefined identifier `toUpper`\\\
    n/tmp/tmp8ae9zbuo.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ae9zbuo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n  \
    \      if (c.isLetter)\n        {\n            if (c.isUpper)\n              \
    \  result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjtjrgnzc.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpjtjrgnzc.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpjtjrgnzc.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpjtjrgnzc.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjtjrgnzc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            result ~= s[i].toUpper;\n        }\n        else if(s[i]\
    \ >= 'A' && s[i] <= 'Z')\n        {\n            result ~= s[i].toLower;\n   \
    \     }\n        else\n        {\n            result ~= s[i];\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaey927rb.d(22): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpaey927rb.d(26): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaey927rb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n   \
    \     if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl1jgtu4q.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmpl1jgtu4q.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpl1jgtu4q.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpl1jgtu4q.d(27): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1jgtu4q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return result;\n    foreach (c; s)\n    {\n        if\
    \ (isAlpha(c))\n        {\n            if (isUpper(c))\n                result\
    \ ~= toLower(c);\n            else\n                result ~= toUpper(c);\n  \
    \      }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg6xqu299.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmpg6xqu299.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpg6xqu299.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpg6xqu299.d(26): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg6xqu299.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkpowdj1k.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpkpowdj1k.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpkpowdj1k.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpkpowdj1k.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkpowdj1k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

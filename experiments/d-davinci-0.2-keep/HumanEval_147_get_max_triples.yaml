name: HumanEval_147_get_max_triples
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
  \ integer n. You have to create an integer array a of length n.\n        For each\
  \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the\
  \ number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j]\
  \ + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output:\
  \ 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid\
  \ triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long n) \n"
tests: "unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
  \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
  \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
completions: ["{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           result++;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    for (long i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j\
    \ < n; j++) \n        {\n            for (long k = j + 1; k < n; k++) \n     \
    \       {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n             \
    \   {\n                    result++;\n                }\n            }\n     \
    \   }\n    }\n    return result;\n}", "{\n    long res = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n\
    \            foreach(k; j + 1 .. n)\n            {\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n \
    \               }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    auto a = new int[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long count\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i * i - i + 1;\n    long\
    \ count = 0;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n            foreach(k;\
    \ j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n               \
    \     count++;\n    return count;\n}", "{\n    long result = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\n/*\n    Time Complexity: O(n^3)\n   \
    \ Space Complexity: O(n)\n*/", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    for (long i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j\
    \ < n; j++) \n        {\n            for (long k = j + 1; k < n; k++) \n     \
    \       {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n             \
    \   {\n                    result++;\n                }\n            }\n     \
    \   }\n    }\n    return result;\n}", "{\n    long res = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n\
    \            foreach(k; j + 1 .. n)\n            {\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n \
    \               }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n - 1; i++) \n    {\n        for\
    \ (long j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k\
    \ <= n; k++) \n            {\n                if ((i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0) \n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (int i = 0; i < n; i++)\n\
    \    {\n        for (int j = i + 1; j < n; j++)\n        {\n            for (int\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long max_triples\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    max_triples++;\n         \
    \       }\n            }\n        }\n    }\n    return max_triples;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long max_triples\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    max_triples++;\n         \
    \       }\n            }\n        }\n    }\n    return max_triples;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\
    \ \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\
    \ \n    {\n        for (long j = i + 1; j < n; j++) \n        {\n            for\
    \ (long k = j + 1; k < n; k++) \n            {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 == 0) \n                {\n                    res++;\n        \
    \        }\n            }\n        }\n    }\n    return res;\n}", "{\n    long\
    \ count = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long res\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i *\
    \ i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n            foreach(k;\
    \ j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n               \
    \     res++;\n    return res;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long count = 0;\n    for (long\
    \ i = 1; i < n - 1; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n\
    \        {\n            for (long k = j + 1; k <= n; k++) \n            {\n  \
    \              if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) \n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n  \
    \  long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long count = 0;\n \
    \   long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n       \
    \ a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    foreach(i; 0..n)\n    {\n        foreach(j; i+1..n)\n\
    \        {\n            foreach(k; j+1..n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i * i - i +\
    \ 1;\n    long count = 0;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    count++;\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i * i - i + 1;\n    long\
    \ max_triples = 0;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n       \
    \     foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                    max_triples++;\n    return max_triples;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n  \
    \      a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j;\
    \ i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n      \
    \              result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for\
    \ (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n   \
    \ for (long i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++)\
    \ \n        {\n            for (long k = j + 1; k < n; k++) \n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n    \
    \                result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long count = 0;\n \
    \   for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    count++;\n                }\n         \
    \   }\n        }\n    }\n    return count;\n}", "{\n    long res = 0;\n    for\
    \ (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    res++;\n                }\n           \
    \ }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ arr = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        arr[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((arr[i] + arr[j] + arr[k]) % 3\
    \ == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nlong get_max_triples_fast(long\
    \ n) \n{\n    long result = 0;\n    long[] arr = new long[n];\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        arr[i] = i * i - i + 1;\n    }\n    long[]\
    \ prefix = new long[n];\n    prefix[0] = arr[0];\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        prefix[i] = prefix[i - 1] + arr[i];\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            if ((prefix[j] - prefix[i]) % 3 == 0)\n            {\n     \
    \           result += (j - i - 1);\n            }\n        }\n    }\n    return\
    \ result;\n}\nlong get_max_triples_fastest(long n) \n{\n    long result = 0;\n\
    \    long[] arr = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    arr[i] = i * i - i + 1;\n    }\n    long[] prefix = new long[n];\n    prefix[0]\
    \ = arr[0];\n    for (long i = 1; i < n; i++)\n    {\n        prefix[i] = prefix[i\
    \ - 1] + arr[i];\n", "{\n    long[] a = new long[n];\n    long count = 0;\n  \
    \  for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               res++;\n                }\n            }\n        }\n    }\n \
    \   return res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    if (n < 3)\n        return 0;\n    long cnt =\
    \ 0;\n    for (long i = 1; i < n - 1; i++)\n    {\n        long sum = i * i -\
    \ i + 1;\n        for (long j = i + 1; j < n; j++)\n        {\n            sum\
    \ += j * j - j + 1;\n            if (sum % 3 == 0)\n                cnt++;\n \
    \       }\n    }\n    return cnt;\n}", "{\n    long[] a = new long[n];\n    foreach(i;\
    \ 0..n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0..n)\n\
    \        foreach(j; i+1..n)\n            foreach(k; j+1..n)\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}",
  "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i\
    \ < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n    \
    \        for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    for (long i = 1; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) \n                {\n                    count++;\n \
    \               }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i * i - i +\
    \ 1;\n    long count = 0;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    count++;\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result += 1;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               res++;\n                }\n            }\n        }\n    }\n \
    \   return res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long count = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long sum = 0;\n    long[] a = new long[n];\n    for\
    \ (i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (i\
    \ = 0; i < n; i++)\n    {\n        for (j = i + 1; j < n; j++)\n        {\n  \
    \          for (k = j + 1; k < n; k++)\n            {\n                sum = a[i]\
    \ + a[j] + a[k];\n                if (sum % 3 == 0)\n                {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               res++;\n                }\n            }\n        }\n    }\n \
    \   return res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long count = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n - 2; i++)\n    {\n        for (long j = i + 1; j <\
    \ n - 1; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n              \
    \  {\n                    count++;\n                }\n            }\n       \
    \ }\n    }\n    return count;\n}", "{\n    long max_triples = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}", "{\n    long[] a = new long[n];\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n  \
    \  long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    long sum = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n        sum += a[i];\n    }\n    long max_triples = 0;\n    if\
    \ (sum % 3 == 0)\n    {\n        long[] dp = new long[sum / 3 + 1];\n        dp[0]\
    \ = 1;\n        for (long i = 0; i < n; i++)\n        {\n            for (long\
    \ j = sum / 3; j >= a[i]; j--)\n            {\n                dp[j] += dp[j -\
    \ a[i]];\n            }\n        }\n        max_triples = dp[sum / 3];\n    }\n\
    \    return max_triples;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] a = new long[n];\n    long[] b = new long[n];\n\
    \    long[] c = new long[n];\n    long[] d = new long[n];\n    long[] e = new\
    \ long[n];\n    long[] f = new long[n];\n    long[] g = new long[n];\n    long[]\
    \ h = new long[n];\n    long[] i = new long[n];\n    long[] j = new long[n];\n\
    \    long[] k = new long[n];\n    long[] l = new long[n];\n    long[] m = new\
    \ long[n];\n    long[] o = new long[n];\n    long[] p = new long[n];\n    long[]\
    \ q = new long[n];\n    long[] r = new long[n];\n    long[] s = new long[n];\n\
    \    long[] t = new long[n];\n    long[] u = new long[n];\n    long[] v = new\
    \ long[n];\n    long[] w = new long[n];\n    long[] x = new long[n];\n    long[]\
    \ y = new long[n];\n    long[] z = new long[n];\n    long[] aa = new long[n];\n\
    \    long[] ab = new long[n];\n    long[] ac = new long[n];\n    long[] ad = new\
    \ long[n];\n    long[] ae = new long[n];\n    long[] af = new long[n];\n    long[]\
    \ ag = new long[n];\n    long[] ah = new long[n];\n    long[] ai = new long[n];\n\
    \    long[] aj = new long[n];\n    long[] ak = new long[n];\n    long[] al = new\
    \ long[n];\n    long[] am = new long[n];\n    long[] ao = new long[n];\n    long[]\
    \ ap = new long[n];\n    long[] aq = new long[n];\n    long[] ar = new long[n];\n\
    \    long[] as = new long[n];\n    long[] at = new long[n];\n    long[] au = new\
    \ long[n];\n    long[] av = new long[", "{\n    long result = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long ans = 0;\n    long[] a\
    \ = new long[n];\n    foreach(i; 0..n)\n        a[i] = i * i - i + 1;\n    foreach(i;\
    \ 0..n-2)\n        foreach(j; i+1..n-1)\n            foreach(k; j+1..n)\n    \
    \            if((a[i] + a[j] + a[k]) % 3 == 0)\n                    ans++;\n \
    \   return ans;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nlong get_max_triples_2(long n) \n{\n    long result =\
    \ 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}\nlong get_max_triples_3(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 ..\
    \ n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n  \
    \  {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1\
    \ .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n  \
    \              {\n                    result++;\n                }\n         \
    \   }\n        }\n    }\n    return result;\n}", "{\n    long count = 0;\n   \
    \ long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n  \
    \  long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i * i - i +\
    \ 1;\n    foreach(i; 0..n-2)\n        foreach(j; i+1..n-1)\n            foreach(k;\
    \ j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n               \
    \     res++;\n    return res;\n}", "{\n    long[] a = new long[n];\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    for (long i = 0; i < n - 2; i++)\n    {\n        for (long j = i +\
    \ 1; j < n - 1; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    count++;\n                }\n            }\n  \
    \      }\n    }\n    return count;\n}", "{\n    long result = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0..n)\n    {\n        foreach(j;\
    \ i+1..n)\n        {\n            foreach(k; j+1..n)\n            {\n        \
    \        if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) \n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    long count = 0;\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}", "{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           result++;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n \
    \   long sum = 0;\n    long[] arr = new long[n];\n    for (i = 0; i < n; i++)\n\
    \    {\n        arr[i] = i * i - i + 1;\n    }\n    for (i = 0; i < n; i++)\n\
    \    {\n        for (j = i + 1; j < n; j++)\n        {\n            for (k = j\
    \ + 1; k < n; k++)\n            {\n                a = arr[i];\n             \
    \   b = arr[j];\n                c = arr[k];\n                sum = a + b + c;\n\
    \                if (sum % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    for (long i = 1; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) \n                {\n                    res++;\n   \
    \             }\n            }\n        }\n    }\n    return res;\n}", "{\n  \
    \  long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long res\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i *\
    \ i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n            foreach(k;\
    \ j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n               \
    \     res++;\n    return res;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    long result = 0;\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long[] a = new long[n];\n    long count = 0;\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n - 2; i++)\n    {\n        for (long j = i + 1; j < n - 1; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long max_triples = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return max_triples;\n\
    }", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i\
    \ + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1\
    \ .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n                    count++;\n    return count;\n}", "{\n \
    \   long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n      \
    \  a[i] = i * i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n \
    \           foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n - 2; i++)\n\
    \    {\n        for (long j = i + 1; j < n - 1; j++)\n        {\n            for\
    \ (long k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                {\n                    count++;\n       \
    \         }\n            }\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    for (long i = 1; i < n; i++) \n    {\n        for (long j =\
    \ i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n; k++)\
    \ \n            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0) \n                {\n                    count++;\n     \
    \           }\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    long result = 0;\n    long sum = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n\
    \    }\n    if (sum % 3 != 0)\n        return 0;\n    long[] dp = new long[sum\
    \ / 3 + 1];\n    dp[0] = 1;\n    foreach (var i; a)\n    {\n        for (long\
    \ j = sum / 3; j >= i; j--)\n        {\n            dp[j] += dp[j - i];\n    \
    \    }\n    }\n    return dp[sum / 3];\n}", "{\n    long[] a = new long[n];\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long max_triples = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    max_triples++;\n           \
    \     }\n            }\n        }\n    }\n    return max_triples;\n}", "{\n  \
    \  long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n      \
    \  a[i] = i * i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n \
    \           foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}", "{\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    long count = 0;\n    for (long i = 0; i < n; i++) \n    {\n\
    \        for (long j = i + 1; j < n; j++) \n        {\n            for (long k\
    \ = j + 1; k < n; k++) \n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0) \n                {\n                    count++;\n              \
    \  }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    long count = 0;\n    for (long i = 0; i < n; i++)\n  \
    \  {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long res\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n  \
    \  long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n \
    \           foreach(k; j + 1 .. n)\n                if((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                    count++;\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               res++;\n                }\n            }\n        }\n    }\n \
    \   return res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               res++;\n                }\n            }\n        }\n    }\n \
    \   return res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_98_count_upper
language: humaneval_to_dlang.py
results:
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpafgruscu.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpafgruscu.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpafgruscu.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xaf9e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n      \
    \      count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjhlst1ie.d(17): Error: incompatible types for `(c) in (\"AEIOU\"\
    )`: `immutable(char)` and `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpjhlst1ie.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe4jkef9k.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpe4jkef9k.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpe4jkef9k.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe865e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp51nmbgon.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp51nmbgon.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp51nmbgon.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x11e7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7bsq_x_n.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp7bsq_x_n.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp7bsq_x_n.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc1017554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkb6g3p8j.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpkb6g3p8j.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpkb6g3p8j.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x9c00a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7808yv9s.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp7808yv9s.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp7808yv9s.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x374e2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp148n6p6u.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp148n6p6u.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3wif8o0u.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp3wif8o0u.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp3wif8o0u.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x764f3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy_tyglwm.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpy_tyglwm.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpy_tyglwm.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe58c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp79zosgv_.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp79zosgv_.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp79zosgv_.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x742c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_2zzbmwu.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp_2zzbmwu.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp_2zzbmwu.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xd0df554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (int i\
    \ = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && isupper(s[i]))\n \
    \       {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjjuf5kf2.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjjuf5kf2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr4spxz_p.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpr4spxz_p.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpr4spxz_p.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x8d19a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] >= 'A' && s[i]\
    \ <= 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprt1ylf7x.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmprt1ylf7x.__unittest_L24_C1()\
    \ [0x427ae2]\\n??:? void tmprt1ylf7x.__modtest() [0x427bf0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc2d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa71]\\n??:? runModuleUnitTests [0x42b9dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428330]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b7]\\n??:? _d_run_main [0x428222]\\n??:? main [0x427c03]\\\
    n??:? __libc_start_main [0x55cdf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprfyxmbxz.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmprfyxmbxz.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmprfyxmbxz.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x906d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] >= 'A' && s[i]\
    \ <= 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjdz3iuxk.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmpjdz3iuxk.__unittest_L24_C1()\
    \ [0x427ae2]\\n??:? void tmpjdz3iuxk.__modtest() [0x427bf0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc2d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa71]\\n??:? runModuleUnitTests [0x42b9dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428330]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b7]\\n??:? _d_run_main [0x428222]\\n??:? main [0x427c03]\\\
    n??:? __libc_start_main [0x86e26554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpel9lor_b.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpel9lor_b.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmpel9lor_b.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0xc4741554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbj5epva5.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpbj5epva5.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpbj5epva5.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x53df0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbc792tds.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpbc792tds.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpbc792tds.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc7bb7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxn477s1n.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpxn477s1n.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpxn477s1n.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xccfa6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp59mf38th.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59mf38th.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnkpfw6za.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmpnkpfw6za.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmpnkpfw6za.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0x492db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7gysyinp.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7gysyinp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe_nc2ol5.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpe_nc2ol5.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpe_nc2ol5.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe1153554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6r4qh_fa.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp6r4qh_fa.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp6r4qh_fa.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xaabc3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppj1rux_l.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmppj1rux_l.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmppj1rux_l.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0xcf290554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6lkdhecw.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6lkdhecw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] >= 'A' && s[i]\
    \ <= 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpflxcy7av.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmpflxcy7av.__unittest_L24_C1()\
    \ [0x427ada]\\n??:? void tmpflxcy7av.__modtest() [0x427be8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa92]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc25]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa69]\\n??:? runModuleUnitTests [0x42b9d5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428328]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282af]\\n??:? _d_run_main [0x42821a]\\n??:? main [0x427bfb]\\\
    n??:? __libc_start_main [0xedfcd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdp_tzlrk.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpdp_tzlrk.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpdp_tzlrk.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xd87e4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmcjhq5aw.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpmcjhq5aw.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpmcjhq5aw.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x59183554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnecg7j69.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnecg7j69.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjpc6k9wn.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpjpc6k9wn.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpjpc6k9wn.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x55480554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6mmn6az0.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp6mmn6az0.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp6mmn6az0.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x7b1f2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdy0o_m7z.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpdy0o_m7z.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpdy0o_m7z.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xfa167554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8mjnb7_h.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmp8mjnb7_h.__unittest_L24_C1()\
    \ [0x427b0e]\\n??:? void tmp8mjnb7_h.__modtest() [0x427bc8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bdb]\\\
    n??:? __libc_start_main [0xf7a0c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx7oiorc7.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpx7oiorc7.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpx7oiorc7.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xf4349554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw1x0d4iv.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpw1x0d4iv.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpw1x0d4iv.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xf6ad2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppvt_ri2r.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmppvt_ri2r.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmppvt_ri2r.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xb95b6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] >= 'A' && s[i]\
    \ <= 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl_kwip_5.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmpl_kwip_5.__unittest_L24_C1()\
    \ [0x427ae2]\\n??:? void tmpl_kwip_5.__modtest() [0x427bf0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc2d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa71]\\n??:? runModuleUnitTests [0x42b9dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428330]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b7]\\n??:? _d_run_main [0x428222]\\n??:? main [0x427c03]\\\
    n??:? __libc_start_main [0x9503d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (int i\
    \ = 0; i < s.length; i++)\n    {\n        if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            if (i % 2 == 0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2uuo6tga.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp2uuo6tga.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp2uuo6tga.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x5c5ae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkf9zm46f.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkf9zm46f.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfmxpayt6.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpfmxpayt6.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpfmxpayt6.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x5665c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpae1dgsrh.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpae1dgsrh.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpae1dgsrh.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x1dc3c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmb4kybu6.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmb4kybu6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (int i\
    \ = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp43_7pfsf.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ef5]\\n??:? void tmp43_7pfsf.__unittest_L24_C1()\
    \ [0x427bbe]\\n??:? void tmp43_7pfsf.__modtest() [0x427c78]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc8f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab22]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcb5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aaf9]\\n??:? runModuleUnitTests [0x42ba65]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283b8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42833f]\\n??:? _d_run_main [0x4282aa]\\n??:? main [0x427c8b]\\\
    n??:? __libc_start_main [0xdf0fe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppnl3cz3h.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmppnl3cz3h.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmppnl3cz3h.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0x42db8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcnejz4oq.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpcnejz4oq.__unittest_L24_C1()\
    \ [0x427b0e]\\n??:? void tmpcnejz4oq.__modtest() [0x427bc8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bdb]\\\
    n??:? __libc_start_main [0x5d107554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmheytgts.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpmheytgts.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpmheytgts.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x46db4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeycqpgsb.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpeycqpgsb.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpeycqpgsb.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x1673e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpetc6ztbh.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpetc6ztbh.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpetc6ztbh.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x23dd6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) ==\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\"\
    ) == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpet2ep92g.d(17): Error: no property `indexOf` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpet2ep92g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1vzo4_uo.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vzo4_uo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxl3fto5f.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpxl3fto5f.__unittest_L24_C1()\
    \ [0x427b0e]\\n??:? void tmpxl3fto5f.__modtest() [0x427bc8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bdb]\\\
    n??:? __libc_start_main [0x141c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgvolr5wz.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpgvolr5wz.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpgvolr5wz.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe3aa1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplr9d8tqp.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmplr9d8tqp.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmplr9d8tqp.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xec86a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppi_zvvhs.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmppi_zvvhs.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmppi_zvvhs.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x13540554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n      \
    \          count++;\n            }\n        }\n        count++;\n    }\n    return\
    \ count / 2;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuy0do9xm.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e75]\\n??:? void tmpuy0do9xm.__unittest_L28_C1()\
    \ [0x427ae6]\\n??:? void tmpuy0do9xm.__modtest() [0x427bf4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430070]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa05]\\n??:? runModuleUnitTests [0x42b971]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42824b]\\n??:? _d_run_main [0x4281b6]\\n??:? main [0x427c07]\\\
    n??:? __libc_start_main [0xdcc67554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_pjhjaae.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp_pjhjaae.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp_pjhjaae.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x26435554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(isupper(c) && (s.indexof(c) % 2 == 0))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl2eimjv3.d(17): Error: undefined identifier `isupper`\\n/tmp/tmpl2eimjv3.d(17):\
    \ Error: no property `indexof` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpl2eimjv3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpougwjt_w.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpougwjt_w.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpougwjt_w.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xb6f19554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ char c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2mp01v6n.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2mp01v6n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if (c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) ==\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\"\
    ) == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu3_ytxbg.d(17): Error: no property `indexOf` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu3_ytxbg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9__0dc67.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp9__0dc67.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp9__0dc67.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x2446f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7j4w1ei0.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp7j4w1ei0.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp7j4w1ei0.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x3ff23554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) ==\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\"\
    ) == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4wdtscsy.d(17): Error: no property `indexOf` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4wdtscsy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvp0yp8lk.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpvp0yp8lk.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmpvp0yp8lk.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0xf2104554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(isUpper(c) && (s.indexOf(c) % 2 == 0))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp11l20t_p.d(17): Error: undefined identifier `isUpper`\\n/tmp/tmp11l20t_p.d(17):\
    \ Error: no property `indexOf` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp11l20t_p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp142ngujm.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp142ngujm.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfza6jqpn.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpfza6jqpn.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpfza6jqpn.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x97237554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr9lvlu98.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpr9lvlu98.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpr9lvlu98.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x377f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8_1nkfq9.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp8_1nkfq9.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp8_1nkfq9.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x47174554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxipupca_.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpxipupca_.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpxipupca_.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xb4d7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0ss9zudi.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp0ss9zudi.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp0ss9zudi.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x47392554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkh7gs9h2.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkh7gs9h2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm1645jhg.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpm1645jhg.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpm1645jhg.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x7513c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv1qhpgzg.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv1qhpgzg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp086gl5l3.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp086gl5l3.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp086gl5l3.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x475ec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpob9xogx6.d(19): Error: no property `indexOf` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpob9xogx6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpre0me3qk.d(17): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpre0me3qk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3_n5r70m.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp3_n5r70m.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp3_n5r70m.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x156b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            if (i % 2\
    \ == 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(isUpper(c) && (s.indexOf(c) % 2 == 0))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0y2cgamo.d(17): Error: undefined identifier `isUpper`\\n/tmp/tmp0y2cgamo.d(17):\
    \ Error: no property `indexOf` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0y2cgamo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdz_dgheq.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpdz_dgheq.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmpdz_dgheq.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0x8ddc0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2jz5bb1q.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp2jz5bb1q.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp2jz5bb1q.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x44220554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwzfj4y0u.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpwzfj4y0u.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpwzfj4y0u.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc9dd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp22n6yid2.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp22n6yid2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx1s82tqx.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpx1s82tqx.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpx1s82tqx.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x7c1f9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmps42fi3.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpmps42fi3.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpmps42fi3.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xd5808554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps15hqiu7.d(17): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps15hqiu7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (int i\
    \ = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] >= 'A' && s[i]\
    \ <= 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqrzid6q3.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmpqrzid6q3.__unittest_L24_C1()\
    \ [0x427ae2]\\n??:? void tmpqrzid6q3.__modtest() [0x427bf0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa9a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc2d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa71]\\n??:? runModuleUnitTests [0x42b9dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428330]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b7]\\n??:? _d_run_main [0x428222]\\n??:? main [0x427c03]\\\
    n??:? __libc_start_main [0x68b3f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqx9rod_i.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpqx9rod_i.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpqx9rod_i.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x2123a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp54ajddck.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp54ajddck.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp54ajddck.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xb18cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c.isUpper)\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5uhx2l8x.d(17): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5uhx2l8x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq5iqz0e5.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmpq5iqz0e5.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmpq5iqz0e5.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0xc414c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5r5zp7nx.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5r5zp7nx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjpsyd7zo.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpjpsyd7zo.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpjpsyd7zo.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x4f26a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ char c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgc06a2yi.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpgc06a2yi.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpgc06a2yi.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x949b7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3t5vssma.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp3t5vssma.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp3t5vssma.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc8148554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp45twlt__.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp45twlt__.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp45twlt__.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x56499554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqud8dt75.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpqud8dt75.__unittest_L24_C1()\
    \ [0x427b0e]\\n??:? void tmpqud8dt75.__modtest() [0x427bc8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bdb]\\\
    n??:? __libc_start_main [0xb0e73554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpckluzcmn.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmpckluzcmn.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmpckluzcmn.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0xc2ca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(isUpper(c) && (s.indexOf(c) % 2 == 0))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpevzlniac.d(17): Error: undefined identifier `isUpper`\\n/tmp/tmpevzlniac.d(17):\
    \ Error: no property `indexOf` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpevzlniac.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpib7y8ox9.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpib7y8ox9.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpib7y8ox9.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x21361554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjqeqdhvo.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpjqeqdhvo.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpjqeqdhvo.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xf273e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvghfprlr.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpvghfprlr.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpvghfprlr.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xb2f62554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp7a7c3z1.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpp7a7c3z1.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpp7a7c3z1.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x8545a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpetk94w9q.d(19): Error: no property `indexOf` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpetk94w9q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (isupper(s[i]) && i % 2 == 0)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbsut2i9m.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsut2i9m.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s) \n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi84v2e_3.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpi84v2e_3.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpi84v2e_3.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x4e195554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpttokewt4.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpttokewt4.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpttokewt4.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xda2a7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwwgkhe6c.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpwwgkhe6c.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpwwgkhe6c.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x80158554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy_78ysk1.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpy_78ysk1.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpy_78ysk1.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x24dc0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n          \
    \  count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp96tqc_k9.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp96tqc_k9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnpdtdvcy.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpnpdtdvcy.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpnpdtdvcy.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x28795554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpble3lpze.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpble3lpze.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpble3lpze.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x2f8d9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8xneuydh.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmp8xneuydh.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmp8xneuydh.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0xab627554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm3zk_vpm.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpm3zk_vpm.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpm3zk_vpm.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc8952554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3w4um5yr.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp3w4um5yr.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp3w4um5yr.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xd6de5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbh1ajwcd.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpbh1ajwcd.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpbh1ajwcd.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x157e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgw4g1mb1.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpgw4g1mb1.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpgw4g1mb1.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xade33554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphtrc69j7.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmphtrc69j7.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmphtrc69j7.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xaead0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ozvxnjl.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6ozvxnjl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc9yy8h53.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc9yy8h53.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmdj6w44o.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpmdj6w44o.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpmdj6w44o.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xdc7d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n          \
    \  count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_dkglx1k.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_dkglx1k.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8gtpo7f5.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp8gtpo7f5.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp8gtpo7f5.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x2ce8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwwuf8mx8.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpwwuf8mx8.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpwwuf8mx8.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x4ac01554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy7d5jq4n.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpy7d5jq4n.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpy7d5jq4n.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x30bfd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpae_uw6_u.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpae_uw6_u.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpae_uw6_u.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x11b5b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplab_z8wt.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmplab_z8wt.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmplab_z8wt.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x53889554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbz1nv0ec.d(17): Error: undefined identifier `toupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbz1nv0ec.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptw5kf9gy.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmptw5kf9gy.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmptw5kf9gy.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc5317554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppcf1jm69.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmppcf1jm69.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmppcf1jm69.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0x93d0c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqk51dlsc.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpqk51dlsc.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpqk51dlsc.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x46940554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpms0u585a.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpms0u585a.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpms0u585a.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x4743a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr6idatai.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpr6idatai.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpr6idatai.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xbcebd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && isupper(s[i]))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptwb1ovkf.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwb1ovkf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr1953f4r.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpr1953f4r.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpr1953f4r.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x167ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj4a1iqlx.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpj4a1iqlx.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpj4a1iqlx.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x28e41554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_gtt1bft.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp_gtt1bft.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp_gtt1bft.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xc5bf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpohr10q7i.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpohr10q7i.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpohr10q7i.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x114f8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2nvprrwc.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp2nvprrwc.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp2nvprrwc.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x81bd0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0dpafl1d.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0dpafl1d.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpni2icqbq.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpni2icqbq.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpni2icqbq.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xbe976554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0c27r5l6.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0c27r5l6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmswmrene.d(17): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmswmrene.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp290hjnol.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp290hjnol.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp290hjnol.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x42a34554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz5q8y886.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpz5q8y886.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpz5q8y886.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x36b28554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n          \
    \  count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz1cpllwn.d(17): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz1cpllwn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppymk0u6n.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmppymk0u6n.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmppymk0u6n.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x46707554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt3dh0k8r.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpt3dh0k8r.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpt3dh0k8r.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe823554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy16dfcim.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpy16dfcim.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpy16dfcim.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x8b1c1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk15gfyz1.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpk15gfyz1.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpk15gfyz1.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xde4fd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if (i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwnslhkne.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpwnslhkne.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmpwnslhkne.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0x95433554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo6a948dz.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpo6a948dz.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpo6a948dz.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe4473554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpic6ed2l1.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpic6ed2l1.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpic6ed2l1.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x1fccb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n        {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprglqwu7l.d(17): Error: undefined identifier `toupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprglqwu7l.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpijwtnrf_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpijwtnrf_.__unittest_L24_C1()\
    \ [0x427b1a]\\n??:? void tmpijwtnrf_.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0x80655554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            if (i % 2\
    \ == 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n          \
    \  count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8c_rx17o.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8c_rx17o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ char c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiupt6htl.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpiupt6htl.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpiupt6htl.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x4bfd8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpug_kbdfl.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpug_kbdfl.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpug_kbdfl.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x2695b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ char c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqpm3ny59.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpqpm3ny59.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpqpm3ny59.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xb93a3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1qudlt2f.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmp1qudlt2f.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmp1qudlt2f.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0x3ca80554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwadpot7p.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpwadpot7p.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpwadpot7p.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xa1748554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (int i\
    \ = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfkhxud4p.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ef5]\\n??:? void tmpfkhxud4p.__unittest_L24_C1()\
    \ [0x427bbe]\\n??:? void tmpfkhxud4p.__modtest() [0x427c78]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc8f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab22]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcb5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aaf9]\\n??:? runModuleUnitTests [0x42ba65]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283b8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42833f]\\n??:? _d_run_main [0x4282aa]\\n??:? main [0x427c8b]\\\
    n??:? __libc_start_main [0xa43c3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ipglids.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp3ipglids.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp3ipglids.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xa6b45554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppl1wyrb7.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppl1wyrb7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9vko4up1.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9vko4up1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgjcfxmmx.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpgjcfxmmx.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpgjcfxmmx.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x5584c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7y71sawt.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp7y71sawt.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp7y71sawt.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe0437554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8a4wmnoi.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp8a4wmnoi.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp8a4wmnoi.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xb0a8d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsgmkdsda.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpsgmkdsda.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpsgmkdsda.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x97f76554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxl2i8t2b.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpxl2i8t2b.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmpxl2i8t2b.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xb9bc4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s) \n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z') \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpscb7tnmp.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpscb7tnmp.__unittest_L24_C1()\
    \ [0x427ab2]\\n??:? void tmpscb7tnmp.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xf05b7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd2lbt0f8.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpd2lbt0f8.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpd2lbt0f8.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x55cf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (int i\
    \ = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7dr_68hr.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ef5]\\n??:? void tmp7dr_68hr.__unittest_L24_C1()\
    \ [0x427bbe]\\n??:? void tmp7dr_68hr.__modtest() [0x427c78]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc8f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab22]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcb5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aaf9]\\n??:? runModuleUnitTests [0x42ba65]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283b8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42833f]\\n??:? _d_run_main [0x4282aa]\\n??:? main [0x427c8b]\\\
    n??:? __libc_start_main [0x8c996554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ char c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1958ofpa.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1958ofpa.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpro7h66aj.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpro7h66aj.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpro7h66aj.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x71f15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm1u3vulz.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmpm1u3vulz.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmpm1u3vulz.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0xda1aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph2z7w3_6.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmph2z7w3_6.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmph2z7w3_6.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xe854d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg17jcexq.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpg17jcexq.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpg17jcexq.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0xd5cb3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm4dyba5c.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427efd]\\n??:? void tmpm4dyba5c.__unittest_L24_C1()\
    \ [0x427bc2]\\n??:? void tmpm4dyba5c.__modtest() [0x427c7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc97]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcbd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab01]\\n??:? runModuleUnitTests [0x42ba6d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428347]\\n??:? _d_run_main [0x4282b2]\\n??:? main [0x427c8f]\\\
    n??:? __libc_start_main [0xddf29554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm9rh00yn.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmpm9rh00yn.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmpm9rh00yn.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x380f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9s195b9x.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmp9s195b9x.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmp9s195b9x.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0x35adc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgzypmb5z.d(17): Error: undefined identifier `isupper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgzypmb5z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n          \
    \  count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2930e5k_.d(17): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2930e5k_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphmn9m9wf.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmphmn9m9wf.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmphmn9m9wf.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x19d5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpap12vwue.d(17): Error: incompatible types for `(c) in ([\\'A\\\
    ', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])`: `immutable(char)` and `char[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpap12vwue.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns\
    \ 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n\
    \    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw4rxfhlf.d(17): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw4rxfhlf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

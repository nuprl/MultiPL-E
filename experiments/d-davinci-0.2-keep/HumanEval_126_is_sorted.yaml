name: HumanEval_126_is_sorted
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given a list of numbers,\
  \ return whether or not they are sorted\n    in ascending order. If list has more\
  \ than 1 duplicate of the same\n    number, return False. Assume no negative numbers\
  \ and only integers.\n\n    Examples\n    is_sorted([5]) \u279E True\n    is_sorted([1,\
  \ 2, 3, 4, 5]) \u279E True\n    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1,\
  \ 2, 3, 4, 5, 6]) \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n\
  \    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3,\
  \ 4]) \u279E True\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \n*/\nbool\
  \ is_sorted(long[] lst) \n"
tests: "unittest\n{\n    alias candidate = is_sorted;\n\n    assert(candidate([5L])\
  \ == true);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n    assert(candidate([1L,\
  \ 3L, 2L, 4L, 5L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L]) ==\
  \ true);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L]) == true);\n    assert(candidate([1L,\
  \ 3L, 2L, 4L, 5L, 6L, 7L]) == false);\n    assert(candidate([]) == true);\n    assert(candidate([1L])\
  \ == true);\n    assert(candidate([3L, 2L, 1L]) == false);\n    assert(candidate([1L,\
  \ 2L, 2L, 2L, 3L, 4L]) == false);\n    assert(candidate([1L, 2L, 3L, 3L, 3L, 4L])\
  \ == false);\n    assert(candidate([1L, 2L, 2L, 3L, 3L, 4L]) == true);\n    assert(candidate([1L,\
  \ 2L, 3L, 4L]) == true);\n}\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

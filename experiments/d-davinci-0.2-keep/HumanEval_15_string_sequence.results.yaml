name: HumanEval_15_string_sequence
language: humaneval_to_dlang.py
results:
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgm2u0v1m.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgm2u0v1m.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbl93i3b_.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbl93i3b_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxt63xf4o.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxt63xf4o.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz5gjpu2u.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz5gjpu2u.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo9l70jqv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9l70jqv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjx7hr6cj.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjx7hr6cj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_w4c1lau.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp_w4c1lau.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_w4c1lau.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmvzlqsv6.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvzlqsv6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n    {\n        s ~= i.to!string;\n\
    \        s ~= \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj2bv9is8.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj2bv9is8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmporn0f4j3.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmporn0f4j3.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmporn0f4j3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsah_8cvq.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpsah_8cvq.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsah_8cvq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu6zvbccu.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6zvbccu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf_fwzzzm.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_fwzzzm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph29fa2k3.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmph29fa2k3.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph29fa2k3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_gymvqtz.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gymvqtz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzvfc_hpp.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvfc_hpp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiomo5s_u.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiomo5s_u.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2difczh7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp2difczh7.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2difczh7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    for (long i = 0; i <= n; i++)\n    {\n        s ~=\
    \ to!string(i);\n        if (i < n)\n            s ~= \" \";\n    }\n    return\
    \ s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfnrf5sgy.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfnrf5sgy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5t23r6rd.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5t23r6rd.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ccwnqs4.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ccwnqs4.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmlgxwwuj.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmlgxwwuj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpebde36ri.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpebde36ri.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpebde36ri.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_2uag3bb.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp_2uag3bb.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_2uag3bb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg1qw7ft9.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1qw7ft9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpce_nydl8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpce_nydl8.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpce_nydl8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplebv44c5.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplebv44c5.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2qe4s3wy.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2qe4s3wy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbhnjsvgd.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpbhnjsvgd.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhnjsvgd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9nrs3g7c.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp9nrs3g7c.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9nrs3g7c.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpen8qgp7u.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpen8qgp7u.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptdpekccp.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptdpekccp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpapszuk9c.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpapszuk9c.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpapszuk9c.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdmhns2ax.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdmhns2ax.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3gdlbh4o.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3gdlbh4o.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdka1nnzv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdka1nnzv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5dv3d225.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5dv3d225.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.trim();\n}\n\
    unittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvq4nrr1p.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpvq4nrr1p.d(17): Error: no property `trim` for\
    \ type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvq4nrr1p.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp48y_4u4z.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp48y_4u4z.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp48y_4u4z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwaiin2bl.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwaiin2bl.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt5h8m9_g.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt5h8m9_g.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp739use4e.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp739use4e.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg4jsc3tw.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg4jsc3tw.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps7y4km69.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7y4km69.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcodj30a6.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpcodj30a6.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcodj30a6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfxg7x249.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpfxg7x249.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxg7x249.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp84rcyj8g.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp84rcyj8g.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp66k43v8i.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp66k43v8i.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66k43v8i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2xkvk23i.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2xkvk23i.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7au0q3iy.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7au0q3iy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ i.to!string ~ \" \";\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgp7rznfp.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgp7rznfp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzk129n6u.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzk129n6u.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7h53fke3.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp7h53fke3.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7h53fke3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4ijpo1b.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4ijpo1b.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2auvfnpd.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp2auvfnpd.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2auvfnpd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvv5fj95c.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvv5fj95c.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9719zar7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9719zar7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppf7t48s3.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppf7t48s3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq7a9m19a.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq7a9m19a.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4didej6z.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4didej6z.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\n/*\n Return a string\
    \ containing space-delimited numbers starting from 0 upto n inclusive.\n    >>>\
    \ string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n\
    \    \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n   \
    \ foreach (i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n\
    \    return result;\n}\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\n/*\n Return a string\
    \ containing space-delimited numbers starting from 0 upto n inclusive.\n    >>>\
    \ string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n\
    \    \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n   \
    \ foreach (i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n\
    \    return result;\n}\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ztri8pu.d(84): Error: found `unittest` instead of statement\\\
    n/tmp/tmp4ztri8pu.d(92): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ztri8pu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= i;\n        if (i < n) \n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp91cbt3u5.d(15): Error: cannot append type `long` to type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp91cbt3u5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp80hxk0qt.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp80hxk0qt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp55hw6jms.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp55hw6jms.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp55hw6jms.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpxi455n.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpxi455n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5wnpv_g3.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5wnpv_g3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphpuzqkba.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphpuzqkba.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt4ki54jq.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpt4ki54jq.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4ki54jq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp97ugipku.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp97ugipku.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp97ugipku.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i);\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxmd1xsw1.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxmd1xsw1.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1dld6y61.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp1dld6y61.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dld6y61.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    for (long i = 0; i <= n; i++)\n    {\n        s ~=\
    \ to!string(i);\n        if (i != n)\n            s ~= \" \";\n    }\n    return\
    \ s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe2z1pzgc.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe2z1pzgc.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphrvjj1l8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphrvjj1l8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpagm0tst7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpagm0tst7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk8hws13a.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk8hws13a.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4sv1jgax.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4sv1jgax.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbcmkvu0x.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbcmkvu0x.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjsbxf4up.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsbxf4up.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp14yreumr.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp14yreumr.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8u7xhapg.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8u7xhapg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n + 1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3regj19a.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3regj19a.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps3bxyvdf.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps3bxyvdf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ss_gpex.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ss_gpex.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5db0b2sl.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5db0b2sl.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n        s ~= i ~ \" \";\n  \
    \  return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqw6otw7x.d(14): Error: incompatible types for `(i) ~ (\" \")`:\
    \ `long` and `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqw6otw7x.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjhl522m8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjhl522m8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpokhmx38p.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpokhmx38p.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp98bm1ww_.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98bm1ww_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    for (long i = 0; i <= n; i++) \n    {\n        s\
    \ ~= to!string(i);\n        if (i < n) \n        {\n            s ~= \" \";\n\
    \        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmv9xmyjq.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmv9xmyjq.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxodkxj4l.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpxodkxj4l.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxodkxj4l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3admyi0i.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp3admyi0i.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3admyi0i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnkkrwb4g.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkkrwb4g.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8xcnq6b1.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp8xcnq6b1.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xcnq6b1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw3_5dnpm.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpw3_5dnpm.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw3_5dnpm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpachs_2hh.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpachs_2hh.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpachs_2hh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdw8uo9qb.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpdw8uo9qb.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdw8uo9qb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0iednang.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0iednang.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i);\n        if (i < n)\n            result ~= \" \";\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxjd_fza.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyxjd_fza.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1j06q3z7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1j06q3z7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdcfzrgqe.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpdcfzrgqe.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdcfzrgqe.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmbgwkaq7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmbgwkaq7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiyrsx42e.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiyrsx42e.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1dyp28hh.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dyp28hh.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaid__xkk.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpaid__xkk.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaid__xkk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj7qtcvof.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7qtcvof.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkqz5byxq.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpkqz5byxq.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkqz5byxq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp17xjbt4v.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp17xjbt4v.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo4ogk1ww.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4ogk1ww.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptanfyews.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptanfyews.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqosr4f5g.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqosr4f5g.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsjirsbcv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpsjirsbcv.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjirsbcv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf46_0ix9.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpf46_0ix9.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf46_0ix9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppoey2qnz.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppoey2qnz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaicb87x6.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaicb87x6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc9edd1ut.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc9edd1ut.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwy2j21wk.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwy2j21wk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp_nclm94.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpp_nclm94.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp_nclm94.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp04ldwyrv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp04ldwyrv.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp04ldwyrv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2zt74h1n.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2zt74h1n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8v_qn7nu.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp8v_qn7nu.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8v_qn7nu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjxabj8z1.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpjxabj8z1.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjxabj8z1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgo3vozb3.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgo3vozb3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpactpuug1.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpactpuug1.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpactpuug1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf5y2i1tg.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf5y2i1tg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpptdcwguz.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpptdcwguz.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpptdcwguz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= i;\n        if (i < n)\n            result ~= \" \";\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz38v2g31.d(15): Error: cannot append type `long` to type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz38v2g31.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp55332og3.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp55332og3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcso2y5mi.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpcso2y5mi.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcso2y5mi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    for (long i = 0; i <= n; i++)\n    {\n        s ~=\
    \ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvp4sacjv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvp4sacjv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpklvpc_vb.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpklvpc_vb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf4omtvcx.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpf4omtvcx.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4omtvcx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvf58hosd.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvf58hosd.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpobc15u.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpobc15u.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsgjrtjlv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsgjrtjlv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0jvt2ce.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0jvt2ce.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_yp8saei.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yp8saei.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz494t5gb.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpz494t5gb.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz494t5gb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ao54oa0.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp4ao54oa0.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ao54oa0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpykzjc46s.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpykzjc46s.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkxdo2md9.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkxdo2md9.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ i ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqtv5hm90.d(15): Error: incompatible types for `(result) ~ (i)`:\
    \ `string` and `long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtv5hm90.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj4w1vpsn.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpj4w1vpsn.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4w1vpsn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzkn4s0_3.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzkn4s0_3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf2crnyfp.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpf2crnyfp.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf2crnyfp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4wlg30t6.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4wlg30t6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt78dswjn.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpt78dswjn.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt78dswjn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc6smu6tq.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc6smu6tq.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpovr0f20n.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpovr0f20n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0thzsklz.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0thzsklz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0mwvxidn.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp0mwvxidn.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0mwvxidn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= i;\n        if (i < n)\n            result ~= \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqy5rib11.d(15): Error: cannot append type `long` to type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqy5rib11.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3iek29ta.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp3iek29ta.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3iek29ta.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3norykce.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp3norykce.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3norykce.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp136uolb7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp136uolb7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6k14jxn.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpj6k14jxn.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6k14jxn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    for (long i = 0; i <= n; i++)\n    {\n        s ~=\
    \ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvnav528m.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvnav528m.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ze25dt8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ze25dt8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbsbkmzpd.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpbsbkmzpd.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsbkmzpd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_wsb8gx.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpb_wsb8gx.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_wsb8gx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpea3d5nsi.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpea3d5nsi.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpea3d5nsi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgy9fo4q7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgy9fo4q7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5_8e_202.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp5_8e_202.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_8e_202.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5oc37i7k.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp5oc37i7k.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5oc37i7k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_r7g4lm.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm_r7g4lm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpham86_k5.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpham86_k5.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpham86_k5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmr_2sq3u.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmr_2sq3u.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprw3m0c3m.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmprw3m0c3m.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw3m0c3m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5spw5z0l.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp5spw5z0l.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5spw5z0l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvmfgkzw7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmfgkzw7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaajv5iw_.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaajv5iw_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq6gstzu8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq6gstzu8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphaqdoxy7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphaqdoxy7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmt1359tu.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmt1359tu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0lbhyxj8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0lbhyxj8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpperis75j.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpperis75j.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq5_p3flr.d(15): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5_p3flr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp94lgf77d.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp94lgf77d.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnwz277d_.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnwz277d_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4x4lz_y.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpb4x4lz_y.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4x4lz_y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi8968q0v.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi8968q0v.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc2k9sqrx.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpc2k9sqrx.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc2k9sqrx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i != n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmwjuna8e.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpmwjuna8e.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwjuna8e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdqdgir25.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdqdgir25.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo5jap67n.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo5jap67n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpleykr6db.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleykr6db.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb7lhjocv.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb7lhjocv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string ret;\n    for (long i = 0; i <= n; i++)\n    {\n        ret\
    \ ~= to!string(i);\n        if (i < n)\n            ret ~= \" \";\n    }\n   \
    \ return ret;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptjljnms8.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjljnms8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr1zvamgg.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpr1zvamgg.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr1zvamgg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn4qr83ao.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn4qr83ao.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2ly5bdzh.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp2ly5bdzh.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ly5bdzh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5i_uvq_j.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp5i_uvq_j.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5i_uvq_j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzoa49xko.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzoa49xko.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6jgkclvo.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp6jgkclvo.d(18): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6jgkclvo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6pnd5taa.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp6pnd5taa.d(17): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6pnd5taa.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppms8ipqf.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppms8ipqf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfn2hpwsb.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfn2hpwsb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp969ba2j7.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp969ba2j7.d(17): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp969ba2j7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0..n+1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmponwnougd.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmponwnougd.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd8b7xjwg.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd8b7xjwg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n+1)\n    {\n        result ~=\
    \ to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprceajnif.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprceajnif.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

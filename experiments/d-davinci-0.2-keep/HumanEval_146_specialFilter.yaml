name: HumanEval_146_specialFilter
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes an\
  \ array of numbers as input and returns \n    the number of elements in the array\
  \ that are greater than 10 and both \n    first and last digits of a number are\
  \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
  \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \n*/\nlong specialFilter(long[]\
  \ nums) \n"
tests: "unittest\n{\n    alias candidate = specialFilter;\n\n    assert(candidate([5L,\
  \ -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n\
  \    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L,\
  \ -12L, 93L, 125L, 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L,\
  \ 21L, 19L]) == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([])\
  \ == 0L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num\
    \ > 10 && num.to!string().front.to!long() % 2 != 0 && num.to!string().back.to!long()\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num.to!string()[0] % 2 != 0 && num.to!string()[$-1] % 2 != 0)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.front.isOdd\
    \ && num.back.isOdd)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 != 0)\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits[0]\
    \ % 2 != 0 && num.digits[$-1] % 2 != 0)\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1]\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 != 0)\n        {\n        \
    \    count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / 10\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num % 2 == 1 && num / 10 % 2 == 1)\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num.to!string()[0] % 2 != 0 && num.to!string()[$-1]\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num % 2 == 1 && num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n \
    \           count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits.front.isOdd\
    \ && num.digits.back.isOdd)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(n; nums)\n    {\n        if(n > 10 && (n % 2 == 1) && (n / 10\
    \ % 2 == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num % 2 != 0 && num / pow(10, floor(log10(num))) % 2 != 0)\n        {\n \
    \           count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string().front.to!long()\
    \ % 2 != 0 && num.to!string().back.to!long() % 2 != 0)\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / pow(10,\
    \ floor(log10(num))) % 2 == 1)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(i; nums)\n    {\n        if(i > 10 && i.to!string[0]\
    \ % 2 && i.to!string[$-1] % 2)\n            count++;\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num.digits.front % 2 != 0 && num.digits.back % 2 != 0)\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string[0]\
    \ % 2 != 0 && num.to!string[$-1] % 2 != 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(n;\
    \ nums)\n    {\n        if(n > 10 && n.to!string().front.to!long() % 2 != 0 &&\
    \ n.to!string().back.to!long() % 2 != 0)\n        {\n            count++;\n  \
    \      }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 == 1 && num % 10 == 1)\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 == 1 && num / 10 % 2 == 1)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 &&\
    \ num / 10 % 2 == 1)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 != 0)\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 ==\
    \ 1 && num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / 10 % 2 == 1)\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(n; nums)\n    {\n        if(n > 10 && n % 2\
    \ != 0 && n % 10 != 0)\n        {\n            count++;\n        }\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            long first = num / 10;\n       \
    \     long last = num % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}", "{\n    long result = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            auto first = num / 10;\n       \
    \     auto last = num % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n\
    \            {\n                result++;\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            long firstDigit = num / 10;\n  \
    \          long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            if(num.toString().length\
    \ > 1)\n            {\n                if(num.toString()[0].to!long % 2 != 0 &&\
    \ num.toString()[num.toString().length - 1].to!long % 2 != 0)\n              \
    \  {\n                    count++;\n                }\n            }\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n\
    \    {\n        if(n > 10)\n        {\n            auto first = n / pow(10, floor(log10(n)));\n\
    \            auto last = n % 10;\n            if(first % 2 != 0 && last % 2 !=\
    \ 0)\n            {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num % 2 == 1 && num / pow(10, ceil(log10(num))) == 1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && (num\
    \ % 2 != 0) && (num / 10 % 2 != 0))\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 == 1 && num % 10 == 1)\n        {\n   \
    \         count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n     \
    \       long first = num / 10;\n            long last = num % 10;\n          \
    \  if(first % 2 != 0 && last % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n       \
    \     long firstDigit = num / 10;\n            long lastDigit = num % 10;\n  \
    \          if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n    \
    \            count++;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if (num > 10 &&\
    \ num.toString().front.to!long % 2 != 0 && num.toString().back.to!long % 2 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / pow(10, floor(log10(num))) % 2 != 0)\n        {\n        \
    \    count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    foreach(n; nums)\n    {\n        if(n > 10)\n        {\n\
    \            long first = n / pow(10, floor(log10(n)));\n            long last\
    \ = n % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n            {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n\
    \        {\n            long firstDigit = num / 10;\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    foreach(num; nums)\n    {\n      \
    \  if(num > 10)\n        {\n            auto digits = to!string(num);\n      \
    \      if(digits[0] % 2 != 0 && digits[$-1] % 2 != 0)\n            {\n       \
    \         result++;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if (num > 10 &&\
    \ num % 2 != 0 && num % 10 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / 10;\n\
    \            long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 &&\
    \ lastDigit % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / pow(10, floor(log10(num)))\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num % 10 != 0)\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n\
    \            long first = num / 10;\n            long last = num % 10;\n     \
    \       if(first % 2 != 0 && last % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n       \
    \     int firstDigit = num % 10;\n            int lastDigit = num / pow(10, floor(log10(num)));\n\
    \            if(firstDigit % 2 == 1 && lastDigit % 2 == 1)\n            {\n  \
    \              count++;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n \
    \       {\n            long first = num / pow(10, floor(log10(num)));\n      \
    \      long last = num % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            long first = num / 10;\n       \
    \     long last = num % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num % 2 == 1 && num / 10 % 2 == 1)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n       \
    \     long first = num / 10;\n            long last = num % 10;\n            if(first\
    \ % 2 != 0 && last % 2 != 0)\n            {\n                count++;\n      \
    \      }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n \
    \   foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n     \
    \   {\n            long first = num / 10;\n            long last = num % 10;\n\
    \            if(first % 2 != 0 && last % 2 != 0)\n            {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num % 10 != 0)\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long first = num / 10;\n\
    \            long last = num % 10;\n            if(first % 2 != 0 && last % 2\
    \ != 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long first = num / pow(10,\
    \ floor(log10(num)));\n            long last = num % 10;\n            if(first\
    \ % 2 != 0 && last % 2 != 0)\n            {\n                count++;\n      \
    \      }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n \
    \   foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            auto\
    \ firstDigit = num / pow(10, floor(log10(num)));\n            auto lastDigit =\
    \ num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    foreach(num; nums)\n    {\n      \
    \  if(num > 10)\n        {\n            long firstDigit = num / 10;\n        \
    \    long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0)\n            {\n                result++;\n            }\n       \
    \ }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            if(num.toString().length\
    \ > 1)\n            {\n                if(num.toString()[0].to!long % 2 != 0 &&\
    \ num.toString()[$-1].to!long % 2 != 0)\n                {\n                 \
    \   count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n\
    \        {\n            auto firstDigit = num / 10;\n            auto lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10)\n        {\n            long firstDigit = num / 10;\n         \
    \   long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / pow(10,\
    \ floor(log10(num)));\n            long lastDigit = num % 10;\n            if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0)\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;\n}", "{\n   \
    \ long result = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n    \
    \    {\n            long first = num / pow(10, floor(log10(num)));\n         \
    \   long last = num % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n \
    \           {\n                result++;\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            auto firstDigit = num / 10;\n  \
    \          auto lastDigit = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long first = num / 10;\n\
    \            long last = num % 10;\n            if(first % 2 != 0 && last % 2\
    \ != 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n\
    \    {\n        if(n > 10)\n        {\n            auto digits = to!string(n);\n\
    \            if(digits[0] % 2 != 0 && digits[$-1] % 2 != 0)\n            {\n \
    \               count++;\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num % 2 == 1 && num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n \
    \           count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n     \
    \       long firstDigit = num / 10;\n            long lastDigit = num % 10;\n\
    \            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n  \
    \              count++;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n \
    \       {\n            long first = num / 10;\n            long last = num % 10;\n\
    \            if(first % 2 != 0 && last % 2 != 0)\n            {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    foreach(n; nums)\n    {\n        if(n > 10)\n        {\n\
    \            if(n % 2 != 0)\n            {\n                if(n / 10 % 2 != 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10 && num.to!string().front.to!long()\
    \ % 2 != 0 && num.to!string().back.to!long() % 2 != 0)\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            if(num\
    \ % 2 == 1)\n            {\n                if(num / 10 % 2 == 1)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long firstDigit =\
    \ num / pow(10, (int)log10(num));\n            long lastDigit = num % 10;\n  \
    \          if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n    \
    \            count++;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n \
    \       {\n            long first = num / 10;\n            long last = num % 10;\n\
    \            if(first % 2 != 0 && last % 2 != 0)\n            {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num % 10 != 0)\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n  \
    \  {\n        if(n > 10)\n        {\n            auto digits = to!string(n);\n\
    \            if(digits[0] % 2 != 0 && digits[$-1] % 2 != 0)\n            {\n \
    \               count++;\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n\
    \        {\n            long firstDigit = num / 10;\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10)\n        {\n            long first = num / pow(10, floor(log10(num)));\n\
    \            long last = num % 10;\n            if(first % 2 != 0 && last % 2\
    \ != 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits.front.isOdd && num.digits.back.isOdd)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits.front.isOdd && num.digits.back.isOdd)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits.front % 2 != 0 && num.digits.back %\
    \ 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num.digits.front % 2 != 0 && num.digits.back % 2 != 0)\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 &&\
    \ num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long firstDigit =\
    \ num / 10;\n            long lastDigit = num % 10;\n            if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0)\n            {\n                result++;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long count =\
    \ 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits().front\
    \ % 2 != 0 && num.digits().back % 2 != 0)\n        {\n            count++;\n \
    \       }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string()[0]\
    \ % 2 != 0 && num.to!string()[$-1] % 2 != 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ nums)\n    {\n        if(i > 10 && (i % 2 != 0) && (i / 10 % 2 != 0))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n    \
    \    {\n            if(num % 2 == 1)\n            {\n                long first\
    \ = num;\n                long last = num % 10;\n                while(first >\
    \ 10)\n                {\n                    first /= 10;\n                }\n\
    \                if(first % 2 == 1 && last % 2 == 1)\n                {\n    \
    \                count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 != 0)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(n; nums)\n    {\n        if(n > 10)\n      \
    \  {\n            auto first = n % 10;\n            auto last = n / pow(10, ceil(log10(n)));\n\
    \            if(first % 2 != 0 && last % 2 != 0)\n            {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n    \
    \    {\n            long firstDigit = num / 10;\n            long lastDigit =\
    \ num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 == 1 && num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n        \
    \    count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string[0] % 2 !=\
    \ 0 && num.to!string[$-1] % 2 != 0)\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 &&\
    \ num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num.to!string()[0] % 2 != 0 && num.to!string()[$-1]\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 != 0)\n        {\n        \
    \    count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.digits[0] % 2 != 0\
    \ && num.digits[$-1] % 2 != 0)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits().front % 2 != 0 && num.digits().back\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n\
    \        {\n            long firstDigit = num / 10;\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n    {\n        auto\
    \ digits = to!string(n);\n        if(digits.length > 1 && digits[0] % 2 != 0 &&\
    \ digits[$-1] % 2 != 0 && n > 10)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / 10;\n\
    \            long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 &&\
    \ lastDigit % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            auto digits = num.toString.split(\"\
    \").map!(a => a.to!long).array;\n            if(digits[0] % 2 != 0 && digits[$-1]\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / pow(10,\
    \ floor(log10(num)));\n            long lastDigit = num % 10;\n            if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0)\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            if(num\
    \ % 2 == 1)\n            {\n                long first = num;\n              \
    \  long last = num % 10;\n                if(first % 2 == 1 && last % 2 == 1)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n     \
    \   {\n            long firstDigit = num / 10;\n            long lastDigit = num\
    \ % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n         \
    \   {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n\
    \        {\n            long first = num / 10;\n            long last = num %\
    \ 10;\n            if(first % 2 != 0 && last % 2 != 0)\n            {\n      \
    \          count++;\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n  \
    \      {\n            long firstDigit = num / 10;\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10)\n        {\n            long firstDigit = num / pow(10, floor(log10(num)));\n\
    \            long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 &&\
    \ lastDigit % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(n;\
    \ nums)\n    {\n        if(n > 10)\n        {\n            auto digits = n.to!string.split(\"\
    \").map!(to!long);\n            if(digits[0] % 2 != 0 && digits[$-1] % 2 != 0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            long firstDigit = num / pow(10,\
    \ floor(log10(num)));\n            long lastDigit = num % 10;\n            if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0)\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n     \
    \   {\n            long first = num / 10;\n            long last = num % 10;\n\
    \            if(first % 2 != 0 && last % 2 != 0)\n            {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n    \
    \    {\n            if(num % 2 == 1)\n            {\n                long num2\
    \ = num;\n                long first = num2 % 10;\n                long last =\
    \ num2 / 10;\n                if(first % 2 == 1 && last % 2 == 1)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long first = num\
    \ / 10;\n            long last = num % 10;\n            if(first % 2 != 0 && last\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 == 1 && num % 10 == 1 || num % 10 == 3 || num % 10 == 5 || num % 10 == 7\
    \ || num % 10 == 9)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n    {\n        if(n\
    \ > 10)\n        {\n            if(n % 2 == 1)\n            {\n              \
    \  long lastDigit = n % 10;\n                long firstDigit = n;\n          \
    \      while(firstDigit > 10)\n                {\n                    firstDigit\
    \ /= 10;\n                }\n                if(firstDigit % 2 == 1)\n       \
    \         {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long first = num\
    \ / 10;\n            long last = num % 10;\n            if(first % 2 != 0 && last\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            if(num % 2 != 0)\n      \
    \      {\n                long first = num;\n                long last = num;\n\
    \                while(first > 10)\n                {\n                    first\
    \ = first / 10;\n                }\n                while(last < -10)\n      \
    \          {\n                    last = last / 10;\n                }\n     \
    \           if(first % 2 != 0 && last % 2 != 0)\n                {\n         \
    \           count++;\n                }\n            }\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10)\n        {\n            long first = num / pow(10, floor(log10(num)));\n\
    \            long last = num % 10;\n            if(first % 2 != 0 && last % 2\
    \ != 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            auto first = num / 10;\n\
    \            auto last = num % 10;\n            if(first % 2 != 0 && last % 2\
    \ != 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / 10;\n\
    \            long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 &&\
    \ lastDigit % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long first = num\
    \ / 10;\n            long last = num % 10;\n            if(first % 2 != 0 && last\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n\
    \    {\n        if(n > 10)\n        {\n            if(n % 2 == 1)\n          \
    \  {\n                long temp = n;\n                long first = temp % 10;\n\
    \                while(temp > 0)\n                {\n                    temp\
    \ /= 10;\n                }\n                if(first % 2 == 1)\n            \
    \    {\n                    count++;\n                }\n            }\n     \
    \   }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long firstDigit =\
    \ num / pow(10, floor(log10(num)));\n            long lastDigit = num % 10;\n\
    \            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n  \
    \              count++;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n \
    \       {\n            long firstDigit = num / 10;\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10)\n        {\n            auto digits = to!string(num);\n       \
    \     if(digits[0] % 2 != 0 && digits[$-1] % 2 != 0)\n            {\n        \
    \        count++;\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n  \
    \      {\n            long firstDigit = num / 10;\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10)\n        {\n            long firstDigit = num / 10;\n         \
    \   long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 == 1 && num / 10 % 2 == 1)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 == 1 && num / pow(10, floor(log10(num)))\
    \ % 2 == 1)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(n; nums)\n    {\n        if(n > 10)\n      \
    \  {\n            if(n.to!string()[0] % 2 != 0 && n.to!string()[$-1] % 2 != 0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits[0] % 2\
    \ != 0 && num.digits[$-1] % 2 != 0)\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.isOdd && num.digits.front.isOdd\
    \ && num.digits.back.isOdd)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num.to!string[0] % 2 != 0 && num.to!string[$-1] % 2 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 == 1 && num / 10 % 2 == 1)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 &&\
    \ num / pow(10, floor(log10(num))) % 2 == 1)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num.to!string().front.to!long() % 2 !=\
    \ 0 && num.to!string().back.to!long() % 2 != 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num.digits.front.isOdd && num.digits.back.isOdd)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.front.isOdd\
    \ && num.back.isOdd)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10 && num.digits[0] % 2 != 0 && num.digits[$-1] % 2 != 0)\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits.front.isOdd\
    \ && num.digits.back.isOdd)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n\
    \        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits[0] % 2\
    \ != 0 && num.digits[$-1] % 2 != 0)\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.to!string().front.to!long() % 2 != 0 && num.to!string().back.to!long()\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10\
    \ && num.digits.front.isOdd && num.digits.back.isOdd)\n        {\n           \
    \ count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string[0] % 2 !=\
    \ 0 && num.to!string[$-1] % 2 != 0)\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long counter = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            if(num % 2 != 0)\n\
    \            {\n                long firstDigit = num / pow(10, floor(log10(num)));\n\
    \                if(firstDigit % 2 != 0)\n                {\n                \
    \    counter++;\n                }\n            }\n        }\n    }\n    return\
    \ counter;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n     \
    \   if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n        {\n           \
    \ count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.digits().front.isOdd\
    \ && num.digits().back.isOdd)\n        {\n            count++;\n        }\n  \
    \  }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10 && num.to!string().front.to!long() % 2 != 0 && num.to!string().back.to!long()\
    \ % 2 != 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n\
    \        {\n            long first = num / 10;\n            long last = num %\
    \ 10;\n            if(first % 2 != 0 && last % 2 != 0)\n            {\n      \
    \          count++;\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10)\n  \
    \      {\n            if(num % 2 == 1)\n            {\n                if(num\
    \ % 10 == 1 || num % 10 == 3 || num % 10 == 5 || num % 10 == 7 || num % 10 ==\
    \ 9)\n                {\n                    count++;\n                }\n   \
    \         }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            if(num\
    \ % 2 == 1)\n            {\n                long first = num;\n              \
    \  long last = num % 10;\n                if(first % 2 == 1 && last % 2 == 1)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ foreach(num; nums)\n    {\n        if(num > 10 && num % 2 != 0 && num % 10 !=\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits[0]\
    \ % 2 != 0 && num.digits[$-1] % 2 != 0)\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && (num % 2 != 0) && (num / 10 % 2 != 0))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.digits().front\
    \ % 2 != 0 && num.digits().back % 2 != 0)\n        {\n            count++;\n \
    \       }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            long first = num\
    \ / 10;\n            long last = num % 10;\n            if(first % 2 != 0 && last\
    \ % 2 != 0)\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / pow(10,\
    \ floor(log10(num)));\n            long lastDigit = num % 10;\n            if(firstDigit\
    \ % 2 == 1 && lastDigit % 2 == 1)\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            if(num\
    \ % 2 != 0)\n            {\n                long lastDigit = num % 10;\n     \
    \           long firstDigit = num;\n                while(firstDigit > 10)\n \
    \               {\n                    firstDigit /= 10;\n                }\n\
    \                if(firstDigit % 2 != 0)\n                {\n                \
    \    count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(n; nums)\n    {\n        if(n\
    \ > 10)\n        {\n            long first = n / 10;\n            long last =\
    \ n % 10;\n            if(first % 2 != 0 && last % 2 != 0)\n            {\n  \
    \              count++;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num.front.isOdd\
    \ && num.back.isOdd)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n    {\n       \
    \ if(num > 10)\n        {\n            if(num % 2 != 0)\n            {\n     \
    \           long first = num / pow(10, floor(log10(num)));\n                long\
    \ last = num % 10;\n                if(first % 2 != 0 && last % 2 != 0)\n    \
    \            {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10 && num % 2 != 0 && num / 10 % 2 != 0)\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(num; nums)\n    {\n        if(num > 10 && num\
    \ % 2 != 0 && num / 10 % 2 != 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            if(num.toString().length\
    \ > 1)\n            {\n                if(num.toString()[0].to!long % 2 != 0 &&\
    \ num.toString()[$-1].to!long % 2 != 0)\n                {\n                 \
    \   count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(n; nums)\n    {\n        if(n > 10)\n\
    \        {\n            if(n % 2 == 1)\n            {\n                long temp\
    \ = n;\n                long first = temp % 10;\n                long last = temp\
    \ / 10;\n                if(first % 2 == 1 && last % 2 == 1)\n               \
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            auto first = num / 10;\n\
    \            auto last = num % 10;\n            if(first % 2 != 0 && last % 2\
    \ != 0)\n            {\n                count++;\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num; nums)\n\
    \    {\n        if(num > 10)\n        {\n            long firstDigit = num / 10;\n\
    \            long lastDigit = num % 10;\n            if(firstDigit % 2 != 0 &&\
    \ lastDigit % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(num;\
    \ nums)\n    {\n        if(num > 10)\n        {\n            auto firstDigit =\
    \ num / 10;\n            auto lastDigit = num % 10;\n            if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0)\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

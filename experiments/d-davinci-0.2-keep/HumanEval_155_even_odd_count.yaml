name: HumanEval_155_even_odd_count
language: humaneval_to_dlang.py
prompt: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a tuple\
  \ that has the number of even and odd digits respectively.\n\n     Example:\n  \
  \      even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
  \    \n*/\nTuple!(long, long) even_odd_count(long num) \n"
tests: "unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
  \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
  \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
  \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
  \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
completions: ["{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n \
    \   {\n        if (num % 2 == 0) \n        {\n            even++;\n        } \n\
    \        else \n        {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        long\
    \ digit = abs_num % 10;\n        if(digit % 2 == 0)\n            even++;\n   \
    \     else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n\
    \    while(absNum > 0)\n    {\n        long digit = absNum % 10;\n        if(digit\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n        absNum /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n\
    \    {\n        if (abs(num) % 2 == 0)\n            even++;\n        else\n  \
    \          odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n}",
  "{\n    long even = 0, odd = 0;\n    foreach(d; num.toString())\n    {\n       \
    \ if(d.isDigit)\n        {\n            if(d.to!long % 2 == 0)\n             \
    \   even++;\n            else\n                odd++;\n        }\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(i;\
    \ 0 .. abs(num).countDigits())\n    {\n        if((num.abs.digits[i] % 2) == 0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n        if (abs(num\
    \ % 10) % 2 == 0) \n        {\n            even++;\n        } \n        else \n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num\
    \ = abs(num);\n    while(abs_num > 0)\n    {\n        if(abs_num % 2 == 0)\n \
    \           even++;\n        else\n            odd++;\n        abs_num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        if(abs_num\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n       \
    \ if (num % 2 == 0) \n        {\n            even++;\n        }\n        else\
    \ \n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n        {\n     \
    \       even++;\n        }\n        else\n        {\n            odd++;\n    \
    \    }\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd =\
    \ 0;\n    while (num != 0) {\n        if (num % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n\
    \    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        if(abs_num\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    long absNum = abs(num);\n    while(absNum > 0)\n    {\n\
    \        long digit = absNum % 10;\n        if(digit % 2 == 0)\n        {\n  \
    \          even++;\n        }\n        else\n        {\n            odd++;\n \
    \       }\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0, odd = 0;\n    long absNum = abs(num);\n    while(absNum >\
    \ 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        long digit = abs_num % 10;\n        if(digit\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    num = abs(num);\n    while(num > 0)\n    {\n        if(num\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    foreach(d; num.digits)\n    {\n        if(d % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs = abs(num);\n\
    \    while(abs > 0)\n    {\n        long digit = abs % 10;\n        if(digit %\
    \ 2 == 0)\n            even++;\n        else\n            odd++;\n        abs\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n  \
    \  {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n   \
    \     }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit;\
    \ num.toString())\n    {\n        if(digit.to!long % 2 == 0)\n        {\n    \
    \        even++;\n        }\n        else\n        {\n            odd++;\n   \
    \     }\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd =\
    \ 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit;\
    \ num.toString())\n    {\n        if(digit.to!long % 2 == 0)\n        {\n    \
    \        even++;\n        }\n        else\n        {\n            odd++;\n   \
    \     }\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n   \
    \ long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long abs = abs(num);\n    while(abs\
    \ > 0)\n    {\n        long digit = abs % 10;\n        if(digit % 2 == 0)\n  \
    \          even++;\n        else\n            odd++;\n        abs /= 10;\n   \
    \ }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd =\
    \ 0;\n    while (num != 0) \n    {\n        if (num % 2 == 0) \n        {\n  \
    \          even++;\n        }\n        else \n        {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num\
    \ > 0)\n    {\n        long digit = abs_num % 10;\n        if(digit % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        abs_num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    while (num != 0) \n    {\n        if ((num % 10) % 2 == 0) \n    \
    \    {\n            even++;\n        }\n        else \n        {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0, odd = 0;\n    foreach(d; num.toString())\n    {\n \
    \       if(d.to!long % 2 == 0)\n            even++;\n        else\n          \
    \  odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n \
    \   long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0)\n    {\n        if\
    \ (num % 2 == 0)\n            even++;\n        else\n            odd++;\n    \
    \    num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even =\
    \ 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum > 0)\n\
    \    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n     \
    \       odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n}",
  "{\n    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ > 0)\n    {\n        long digit = absNum % 10;\n        if(digit % 2 == 0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n\
    \        if (abs(num % 10) % 2 == 0) \n        {\n            even++;\n      \
    \  } \n        else \n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long\
    \ odd = 0;\n    foreach(digit; num.toString)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n  \
    \  {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n   \
    \     }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    num =\
    \ abs(num);\n    while(num > 0)\n    {\n        if(num % 2 == 0)\n           \
    \ even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num\
    \ = abs(num);\n    while(abs_num > 0)\n    {\n        long digit = abs_num % 10;\n\
    \        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        abs_num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num\
    \ > 0)\n    {\n        if(abs_num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n    {\n \
    \       if ((num % 10) % 2 == 0)\n            even++;\n        else\n        \
    \    odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0, odd = 0;\n    while (num != 0) {\n        if (num % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n        if (num % 2 ==\
    \ 0) \n        {\n            even++;\n        }\n        else \n        {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(d; num.toString())\n\
    \    {\n        if(d.to!long % 2 == 0)\n            even++;\n        else\n  \
    \          odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum > 0)\n\
    \    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n     \
    \       odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n}",
  "{\n    long even = 0, odd = 0;\n    foreach(d; num.to!string)\n    {\n        if(d.to!long\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n  \
    \  return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n \
    \   long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        if(abs_num\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n       \
    \ if (num % 2 == 0) \n        {\n            even++;\n        } \n        else\
    \ \n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long absNum\
    \ = abs(num);\n    while(absNum > 0)\n    {\n        long digit = absNum % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        absNum /= 10;\n  \
    \  }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(d;\
    \ num.abs.digits)\n    {\n        if(d % 2 == 0)\n            even++;\n      \
    \  else\n            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n   \
    \ long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n    {\n\
    \        if(digit.to!long % 2 == 0)\n        {\n            even++;\n        }\n\
    \        else\n        {\n            odd++;\n        }\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num != 0)\n    {\n        if (abs(num % 10) % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.abs.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n  \
    \  long absNum = abs(num);\n    while(absNum > 0)\n    {\n        if(absNum %\
    \ 2 == 0)\n            even++;\n        else\n            odd++;\n        absNum\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n   \
    \         even++;\n        else\n            odd++;\n        num /= 10;\n    }\n\
    \    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n\
    \    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0;\n    long odd = 0;\n    if (num < 0)\n        num = -num;\n    while\
    \ (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        long digit = abs_num % 10;\n        if(digit\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    while (num != 0) \n    {\n        if (abs(num % 10) % 2\
    \ == 0) \n        {\n            even++;\n        } \n        else \n        {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n\
    \    {\n        if (num % 2 == 0)\n            even++;\n        else\n       \
    \     odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n    {\n     \
    \   if(digit.to!long % 2 == 0)\n            even++;\n        else\n          \
    \  odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n \
    \   long odd = 0;\n    while (num != 0)\n    {\n        if (abs(num % 10) % 2\
    \ == 0)\n            even++;\n        else\n            odd++;\n        num /=\
    \ 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long\
    \ odd = 0;\n    long n = abs(num);\n    while(n > 0)\n    {\n        if(n % 2\
    \ == 0)\n            even++;\n        else\n            odd++;\n        n /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    while (num != 0)\n    {\n        if (abs(num % 10) % 2 == 0)\n   \
    \         even++;\n        else\n            odd++;\n        num /= 10;\n    }\n\
    \    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n       \
    \ if (num % 2 == 0) \n        {\n            even++;\n        } \n        else\
    \ \n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2\
    \ == 0)\n        {\n            even++;\n        }\n        else\n        {\n\
    \            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        long digit = abs_num % 10;\n        if(digit\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n   \
    \         even++;\n        else\n            odd++;\n        num /= 10;\n    }\n\
    \    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n\
    \    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num\
    \ > 0)\n    {\n        long digit = abs_num % 10;\n        if(digit % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        abs_num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    while (num != 0)\n    {\n        if ((num % 10) % 2 == 0)\n      \
    \      even++;\n        else\n            odd++;\n        num /= 10;\n    }\n\
    \    return tuple(even, odd);\n}", "{\n    long even_count = 0;\n    long odd_count\
    \ = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        if(abs_num\
    \ % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n\
    \        abs_num /= 10;\n    }\n    return tuple(even_count, odd_count);\n}",
  "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n \
    \   {\n        if (digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    long n = abs(num);\n    while(n > 0)\n    {\n \
    \       if((n % 10) % 2 == 0)\n            even++;\n        else\n           \
    \ odd++;\n        n /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0, odd = 0;\n    long absNum = abs(num);\n    while(absNum > 0)\n   \
    \ {\n        if(absNum % 2 == 0)\n            even++;\n        else\n        \
    \    odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n\
    \        if (num % 2 == 0) \n        {\n            even++;\n        } \n    \
    \    else \n        {\n            odd++;\n        }\n        num /= 10;\n   \
    \ }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n \
    \   while(absNum > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        absNum /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n\
    \    {\n        if (abs(num % 10) % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    foreach(d; num.to!string)\n\
    \    {\n        if(d.to!long % 2 == 0)\n            even++;\n        else\n  \
    \          odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n        if ((num % 10)\
    \ % 2 == 0) \n        {\n            even++;\n        } \n        else \n    \
    \    {\n            odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n\
    \    {\n        if (abs(num % 10) % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n\
    \        if (num % 2 == 0) \n        {\n            even++;\n        } \n    \
    \    else \n        {\n            odd++;\n        }\n        num /= 10;\n   \
    \ }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd =\
    \ 0;\n    while (num != 0) \n    {\n        if (abs(num % 10) % 2 == 0) \n   \
    \     {\n            even++;\n        } \n        else \n        {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n \
    \   while(absNum > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        absNum /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        if(abs_num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.abs.digits)\n\
    \    {\n        if(digit % 2 == 0)\n            even++;\n        else\n      \
    \      odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num\
    \ > 0)\n    {\n        if(abs_num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n    {\n\
    \        if(digit.to!long % 2 == 0)\n            even++;\n        else\n     \
    \       odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    long temp = abs(num);\n    while(temp != 0)\n    {\n \
    \       if(temp % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        temp /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n        if (num % 2 ==\
    \ 0) \n        {\n            even++;\n        }\n        else \n        {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        if(abs_num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0, odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n  \
    \  return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ != 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num != 0) \n    {\n        if (num % 2 == 0) \n        {\n         \
    \   even++;\n        } \n        else \n        {\n            odd++;\n      \
    \  }\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0, odd = 0;\n    while (num != 0) {\n        if (num % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    while (num != 0)\n    {\n        if (abs(num % 10) % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    while (num != 0) \n    {\n        if (num % 2 == 0) \n        {\n\
    \            even++;\n        } \n        else \n        {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n  \
    \  {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n   \
    \     }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    if (num\
    \ < 0)\n        num = -num;\n    while (num > 0)\n    {\n        if (num % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2\
    \ == 0)\n        {\n            even++;\n        }\n        else\n        {\n\
    \            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    if (num < 0) \n    {\n        num\
    \ = -num;\n    }\n    while (num > 0) \n    {\n        if (num % 2 == 0) \n  \
    \      {\n            even++;\n        }\n        else \n        {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n \
    \   while(absNum > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        absNum /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n\
    \    {\n        if (abs(num % 10) % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n  \
    \  while (num != 0)\n    {\n        if (abs(num % 10) % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n\
    \    {\n        if (abs(num % 10) % 2 == 0) \n        {\n            even++;\n\
    \        } \n        else \n        {\n            odd++;\n        }\n       \
    \ num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long odd = 0;\n\
    \    long even = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n  \
    \  {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n   \
    \     }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long absNum\
    \ = abs(num);\n    while(absNum > 0)\n    {\n        if(absNum % 2 == 0)\n   \
    \         even++;\n        else\n            odd++;\n        absNum /= 10;\n \
    \   }\n    return tuple(even, odd);\n}", "{\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    while(num != 0)\n    {\n        if(abs(num % 10) % 2 == 0)\n\
    \        {\n            evenCount++;\n        }\n        else\n        {\n   \
    \         oddCount++;\n        }\n        num /= 10;\n    }\n    return tuple(evenCount,\
    \ oddCount);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit;\
    \ num.toString())\n    {\n        if(digit.to!long % 2 == 0)\n        {\n    \
    \        even++;\n        }\n        else\n        {\n            odd++;\n   \
    \     }\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n   \
    \ long odd = 0;\n    while (num != 0) \n    {\n        if (num % 2 == 0) \n  \
    \      {\n            even++;\n        }\n        else \n        {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        if(abs_num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0, odd = 0;\n    while (num != 0) \n    {\n \
    \       if (num % 2 == 0) \n        {\n            even++;\n        }\n      \
    \  else \n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n\
    \    while (num != 0)\n    {\n        if (num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    foreach(n; num.abs.digits)\n    {\n\
    \        if(n % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n  \
    \  foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0, odd = 0;\n    if (num < 0)\n        num =\
    \ -num;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n\
    \    {\n        if (num % 2 == 0) \n        {\n            even++;\n        }\
    \ \n        else \n        {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2\
    \ == 0)\n        {\n            even++;\n        }\n        else\n        {\n\
    \            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ != 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n\
    \        if (abs(num % 10) % 2 == 0) \n        {\n            even++;\n      \
    \  } \n        else \n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long\
    \ odd = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n    \
    \    if(abs_num % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        abs_num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n        if (num\
    \ % 2 == 0) \n        {\n            even++;\n        }\n        else \n     \
    \   {\n            odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n\
    \    {\n        if (abs(num % 10) % 2 == 0) \n        {\n            even++;\n\
    \        } \n        else \n        {\n            odd++;\n        }\n       \
    \ num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n       \
    \ if (abs(num % 10) % 2 == 0) \n        {\n            even++;\n        }\n  \
    \      else \n        {\n            odd++;\n        }\n        num /= 10;\n \
    \   }\n    return tuple(even, odd);\n}", "{\n    long even_count = 0;\n    long\
    \ odd_count = 0;\n    foreach(digit; num.abs.digits) \n    {\n        if(digit\
    \ % 2 == 0) \n        {\n            even_count++;\n        }\n        else \n\
    \        {\n            odd_count++;\n        }\n    }\n    return tuple(even_count,\
    \ odd_count);\n}", "{\n    long even = 0;\n    long odd = 0;\n    num = abs(num);\n\
    \    while(num > 0)\n    {\n        if(num % 2 == 0)\n            even++;\n  \
    \      else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n\
    \    {\n        if (abs(num % 10) % 2 == 0) \n        {\n            even++;\n\
    \        } \n        else \n        {\n            odd++;\n        }\n       \
    \ num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    foreach(digit; num.abs.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n  \
    \  return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n \
    \   if (num < 0)\n        num = -num;\n    while (num > 0)\n    {\n        if\
    \ (num % 2 == 0)\n            even++;\n        else\n            odd++;\n    \
    \    num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even =\
    \ 0, odd = 0;\n    foreach(digit; num.abs.digits)\n    {\n        if(digit % 2\
    \ == 0)\n            even++;\n        else\n            odd++;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long absNum\
    \ = abs(num);\n    while(absNum > 0)\n    {\n        if(absNum % 2 == 0)\n   \
    \         even++;\n        else\n            odd++;\n        absNum /= 10;\n \
    \   }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n   \
    \ while (num != 0) \n    {\n        if (num % 2 == 0) \n        {\n          \
    \  even++;\n        } \n        else \n        {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long\
    \ even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n    {\n   \
    \     if(digit.to!long % 2 == 0)\n        {\n            even++;\n        }\n\
    \        else\n        {\n            odd++;\n        }\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    num = abs(num);\n\
    \    while(num > 0)\n    {\n        if(num % 2 == 0)\n            even++;\n  \
    \      else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0)\n\
    \    {\n        if (num % 2 == 0)\n            even++;\n        else\n       \
    \     odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum\
    \ > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0, odd = 0;\n    foreach(c; num.to!string())\n    {\n\
    \        if(c.to!long() % 2 == 0)\n            even++;\n        else\n       \
    \     odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    while (num != 0) \n    {\n        if (abs(num % 10) %\
    \ 2 == 0)\n            even++;\n        else\n            odd++;\n        num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    foreach(i; 0 .. abs(num).digits)\n    {\n        if(num.digits[i]\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n  \
    \  return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    while (num\
    \ != 0) {\n        if ((num % 10) % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n  \
    \  long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        long digit\
    \ = abs_num % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    if (num < 0)\n        num =\
    \ -num;\n    while (num > 0)\n    {\n        if (num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n\
    \    {\n        if (num % 2 == 0) \n        {\n            even++;\n        }\
    \ \n        else \n        {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        long\
    \ digit = abs_num % 10;\n        if(digit % 2 == 0)\n            even++;\n   \
    \     else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    foreach(digit; num.toString().to!long[])\n    {\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long absNum = abs(num);\n\
    \    while(absNum > 0)\n    {\n        if(absNum % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        absNum /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    foreach(digit; num.toString())\n    {\n       \
    \ if(digit.to!long % 2 == 0)\n        {\n            even++;\n        }\n    \
    \    else\n        {\n            odd++;\n        }\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(i; 0 .. abs(num).to!long.stringof.length)\n\
    \    {\n        if(abs(num).to!long.stringof[i].to!long % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if (digit.to!long\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n  \
    \  return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n \
    \   while (num != 0)\n    {\n        if (abs(num % 10) % 2 == 0)\n           \
    \ even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    long absNum = abs(num);\n    while(absNum > 0)\n\
    \    {\n        if(absNum % 2 == 0)\n            even++;\n        else\n     \
    \       odd++;\n        absNum /= 10;\n    }\n    return tuple(even, odd);\n}",
  "{\n    long even = 0;\n    long odd = 0;\n    if (num == 0)\n    {\n        even\
    \ = 1;\n    }\n    else\n    {\n        num = abs(num);\n        while (num >\
    \ 0)\n        {\n            if (num % 2 == 0)\n            {\n              \
    \  even++;\n            }\n            else\n            {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n\
    \    {\n        if (num % 2 == 0) \n        {\n            even++;\n        }\
    \ \n        else \n        {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2\
    \ == 0)\n        {\n            even++;\n        }\n        else\n        {\n\
    \            odd++;\n        }\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0, odd = 0;\n    foreach(digit; num.to!string.byChunk(\"\"))\n\
    \    {\n        if(digit.to!long % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n\
    \    {\n        long digit = abs_num % 10;\n        if(digit % 2 == 0)\n     \
    \       even++;\n        else\n            odd++;\n        abs_num /= 10;\n  \
    \  }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd =\
    \ 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n        long\
    \ digit = abs_num % 10;\n        if(digit % 2 == 0)\n            even++;\n   \
    \     else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n\
    \    while(abs_num > 0)\n    {\n        long digit = abs_num % 10;\n        if(digit\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        abs_num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num > 0)\n    {\n\
    \        long digit = abs_num % 10;\n        if(digit % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(d; num.to!string)\n\
    \    {\n        if(d.to!long % 2 == 0)\n            even++;\n        else\n  \
    \          odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even\
    \ = 0, odd = 0;\n    foreach(digit; num.to!string)\n    {\n        if(digit.to!long\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n  \
    \  return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0)\n    {\n        if\
    \ (num % 2 == 0)\n            even++;\n        else\n            odd++;\n    \
    \    num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even =\
    \ 0;\n    long odd = 0;\n    while (num != 0)\n    {\n        if (num % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        num /= 10;\n \
    \   }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n   \
    \ foreach(digit; num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n \
    \           even++;\n        else\n            odd++;\n    }\n    return tuple(even,\
    \ odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    foreach(digit; num.to!string)\n\
    \    {\n        if(digit.to!long % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n    }\n   \
    \ return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n  \
    \  long absNum = abs(num);\n    while(absNum > 0)\n    {\n        long digit =\
    \ absNum % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n \
    \       }\n        else\n        {\n            odd++;\n        }\n        absNum\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n  \
    \  long odd = 0;\n    long n = abs(num);\n    while(n > 0)\n    {\n        long\
    \ digit = n % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        n /= 10;\n    }\n    return tuple(even, odd);\n}",
  "{\n    long even = 0, odd = 0;\n    foreach(digit; num.to!string)\n    {\n    \
    \    if(digit.to!long % 2 == 0)\n            even++;\n        else\n         \
    \   odd++;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n\
    \    long odd = 0;\n    long n = abs(num);\n    while(n != 0)\n    {\n       \
    \ if(n % 2 == 0)\n            even++;\n        else\n            odd++;\n    \
    \    n /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n    long even = 0,\
    \ odd = 0;\n    foreach(d; num.to!string)\n    {\n        if(d.to!long % 2 ==\
    \ 0)\n            even++;\n        else\n            odd++;\n    }\n    return\
    \ tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd = 0;\n    long abs_num\
    \ = abs(num);\n    while(abs_num > 0)\n    {\n        if(abs_num % 2 == 0)\n \
    \           even++;\n        else\n            odd++;\n        abs_num /= 10;\n\
    \    }\n    return tuple(even, odd);\n}", "{\n    long even = 0;\n    long odd\
    \ = 0;\n    while (num != 0) \n    {\n        if (num % 2 == 0) \n        {\n\
    \            even++;\n        } \n        else \n        {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return tuple(even, odd);\n}", "{\n\
    \    long even = 0;\n    long odd = 0;\n    long abs_num = abs(num);\n    while(abs_num\
    \ != 0)\n    {\n        if(abs_num % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n        abs_num /= 10;\n    }\n    return tuple(even, odd);\n\
    }", "{\n    long even = 0;\n    long odd = 0;\n    while (num != 0) \n    {\n\
    \        if (num % 2 == 0) \n        {\n            even++;\n        } \n    \
    \    else \n        {\n            odd++;\n        }\n        num /= 10;\n   \
    \ }\n    return tuple(even, odd);\n}", "{\n    long even = 0, odd = 0;\n    foreach(digit;\
    \ num.to!string)\n    {\n        if(digit.to!long % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return tuple(even, odd);\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_147_get_max_triples
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt5jlrbsc.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpt5jlrbsc.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpt5jlrbsc.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x4e52c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0h370nip.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmp0h370nip.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmp0h370nip.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0xd75f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n    {\n     \
    \   for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j +\
    \ 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcwv1p7ox.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpcwv1p7ox.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmpcwv1p7ox.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xf51aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9_25slw1.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp9_25slw1.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp9_25slw1.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x6dc40554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6f_g296v.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp6f_g296v.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp6f_g296v.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xcce4d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeshtlbh2.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpeshtlbh2.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpeshtlbh2.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xc8d39554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu7o37z7w.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpu7o37z7w.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpu7o37z7w.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xba79554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprgpblapi.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmprgpblapi.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmprgpblapi.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x6a4dc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps6wtfuu9.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmps6wtfuu9.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmps6wtfuu9.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x76b03554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    auto a = new int[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmyqrondl.d(24): Error: cannot implicitly convert expression `i\
    \ * i - i + 1L` of type `long` to `int`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpmyqrondl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj0y5_bpi.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpj0y5_bpi.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpj0y5_bpi.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xdb6d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa9xpfve6.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpa9xpfve6.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpa9xpfve6.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x60508554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7jbbjifl.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp7jbbjifl.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp7jbbjifl.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x2754e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9ymmlujb.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp9ymmlujb.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp9ymmlujb.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xd3d1d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjlx3__o2.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpjlx3__o2.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpjlx3__o2.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x28dd3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwk5cjlth.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpwk5cjlth.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpwk5cjlth.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x34f81554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmbmgocpq.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpmbmgocpq.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpmbmgocpq.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x57269554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2k9mmoc5.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp2k9mmoc5.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp2k9mmoc5.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x1768b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi2zuey3p.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpi2zuey3p.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpi2zuey3p.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x53383554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i\
    \ * i - i + 1;\n    long count = 0;\n    foreach(i; 0..n)\n        foreach(j;\
    \ i+1..n)\n            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1i8s3rja.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmp1i8s3rja.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmp1i8s3rja.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0xf4d85554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp1y4lc1z.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpp1y4lc1z.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpp1y4lc1z.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xba761554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n/*\n\
    \    Time Complexity: O(n^3)\n    Space Complexity: O(n)\n*/\nunittest\n{\n  \
    \  alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n  \
    \  assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsva02xvq.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpsva02xvq.__unittest_L45_C1()\
    \ [0x427e44]\\n??:? void tmpsva02xvq.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x41cba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptmou2evi.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmptmou2evi.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmptmou2evi.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x7a05554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpie5in4pm.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpie5in4pm.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpie5in4pm.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x21f15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdnq4acfa.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpdnq4acfa.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpdnq4acfa.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xcecc8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    for (long i = 1; i < n - 1; i++) \n    {\n\
    \        for (long j = i + 1; j < n; j++) \n        {\n            for (long k\
    \ = j + 1; k <= n; k++) \n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0) \n                {\n             \
    \       result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfxvlo0_t.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpfxvlo0_t.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpfxvlo0_t.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf0fe3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzx1ng4m2.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpzx1ng4m2.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpzx1ng4m2.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x5ae13554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxsbuz9oa.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpxsbuz9oa.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpxsbuz9oa.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x34828554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    int[] a = new int[n];\n    for (int i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (int i = 0;\
    \ i < n; i++)\n    {\n        for (int j = i + 1; j < n; j++)\n        {\n   \
    \         for (int k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprk_r3e2p.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42811d]\\n??:? void tmprk_r3e2p.__unittest_L41_C1()\
    \ [0x427e28]\\n??:? void tmprk_r3e2p.__modtest() [0x427ea0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c0f7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42af8a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430215]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4306c4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301a1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af61]\\n??:? runModuleUnitTests [0x42becd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285e0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428567]\\n??:? _d_run_main [0x4284d2]\\n??:? main [0x427eb3]\\\
    n??:? __libc_start_main [0x38587554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyjm0p_4z.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpyjm0p_4z.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpyjm0p_4z.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb7006554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long max_triples = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return max_triples;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9jbj6bn4.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp9jbj6bn4.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp9jbj6bn4.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x1ebd6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpffxlvjua.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpffxlvjua.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpffxlvjua.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x37d11554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp41kxd7dy.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp41kxd7dy.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp41kxd7dy.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf9701554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_fihxqo5.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp_fihxqo5.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp_fihxqo5.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x700e4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long max_triples = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return max_triples;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp93r3vitd.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp93r3vitd.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp93r3vitd.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xca166554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1n60qttp.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp1n60qttp.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp1n60qttp.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x9d2e5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n        {\n\
    \            for (long k = j + 1; k < n; k++) \n            {\n              \
    \  if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n                  \
    \  res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphbel8u1u.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmphbel8u1u.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmphbel8u1u.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x2000554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxlex8la4.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpxlex8la4.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpxlex8la4.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x79879554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \        a[i] = i * i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgou9h4tr.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpgou9h4tr.__unittest_L31_C1()\
    \ [0x427e8c]\\n??:? void tmpgou9h4tr.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xbca6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp20_r9oh7.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp20_r9oh7.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp20_r9oh7.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x2f5e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuevmkiet.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpuevmkiet.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpuevmkiet.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x4d36f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwxja0q0s.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpwxja0q0s.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpwxja0q0s.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x67082554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    for (long i = 1; i < n - 1; i++) \n    {\n\
    \        for (long j = i + 1; j < n; j++) \n        {\n            for (long k\
    \ = j + 1; k <= n; k++) \n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0) \n                {\n             \
    \       count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplsqxm13l.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmplsqxm13l.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmplsqxm13l.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x92031554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpti297lgh.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpti297lgh.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpti297lgh.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xde13e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0..n)\n    {\n  \
    \      foreach(j; i+1..n)\n        {\n            foreach(k; j+1..n)\n       \
    \     {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8eaz6d1x.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp8eaz6d1x.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp8eaz6d1x.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x8500e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnra0fa04.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpnra0fa04.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpnra0fa04.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb250554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpou1ym1u9.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpou1ym1u9.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpou1ym1u9.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xbff46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp24h6iuic.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp24h6iuic.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp24h6iuic.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x816c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz7kgnmpt.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpz7kgnmpt.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpz7kgnmpt.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x552db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphxdka44e.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmphxdka44e.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmphxdka44e.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x170af554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i\
    \ * i - i + 1;\n    long count = 0;\n    foreach(i; 0..n)\n        foreach(j;\
    \ i+1..n)\n            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptq2bfd28.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmptq2bfd28.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmptq2bfd28.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0xe5fdb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu9pehd3d.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpu9pehd3d.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpu9pehd3d.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x87364554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i\
    \ * i - i + 1;\n    long max_triples = 0;\n    foreach(i; 0..n)\n        foreach(j;\
    \ i+1..n)\n            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    max_triples++;\n    return max_triples;\n}\n\
    unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8ee9ta_8.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmp8ee9ta_8.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmp8ee9ta_8.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0xada6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_dhd8us0.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp_dhd8us0.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp_dhd8us0.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xaf838554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbygjhx9l.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpbygjhx9l.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpbygjhx9l.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x2a872554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7tm9puby.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp7tm9puby.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp7tm9puby.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xb5d3a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuyqwhsh1.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpuyqwhsh1.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpuyqwhsh1.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xc7ff6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9tkycnpm.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp9tkycnpm.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp9tkycnpm.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xa2e9b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp6fwovwy.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpp6fwovwy.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpp6fwovwy.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x4a551554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n    {\n     \
    \   for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j +\
    \ 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptdmqjpa6.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmptdmqjpa6.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmptdmqjpa6.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x25790554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n    {\n       \
    \ for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1;\
    \ k < n; k++)\n            {\n                if ((i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpybcjfq4v.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpybcjfq4v.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmpybcjfq4v.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xb3561554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplcqn_x3k.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmplcqn_x3k.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmplcqn_x3k.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xa410f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf0us4irq.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpf0us4irq.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpf0us4irq.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x79de6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] arr = new long[n];\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        arr[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((arr[i] + arr[j] + arr[k]) % 3 == 0)\n                {\n         \
    \           result++;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}\nlong get_max_triples_fast(long n) \n{\n    long result =\
    \ 0;\n    long[] arr = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        arr[i] = i * i - i + 1;\n    }\n    long[] prefix = new long[n];\n  \
    \  prefix[0] = arr[0];\n    for (long i = 1; i < n; i++)\n    {\n        prefix[i]\
    \ = prefix[i - 1] + arr[i];\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            if ((prefix[j]\
    \ - prefix[i]) % 3 == 0)\n            {\n                result += (j - i - 1);\n\
    \            }\n        }\n    }\n    return result;\n}\nlong get_max_triples_fastest(long\
    \ n) \n{\n    long result = 0;\n    long[] arr = new long[n];\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        arr[i] = i * i - i + 1;\n    }\n    long[]\
    \ prefix = new long[n];\n    prefix[0] = arr[0];\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        prefix[i] = prefix[i - 1] + arr[i];\n\nunittest\n{\n  \
    \  alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n  \
    \  assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ztmai_2.d(81): Error: found `unittest` instead of statement\\\
    n/tmp/tmp4ztmai_2.d(90): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ztmai_2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpefn8lim6.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpefn8lim6.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpefn8lim6.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0xd23d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphyxvig9j.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmphyxvig9j.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmphyxvig9j.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xd767b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmploadshwh.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmploadshwh.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmploadshwh.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xe11e9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnhe9brby.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpnhe9brby.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpnhe9brby.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x6219f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpefj5ap9n.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpefj5ap9n.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpefj5ap9n.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xcc530554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkx_sdoic.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpkx_sdoic.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpkx_sdoic.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xe8b23554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf6pf3ud7.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpf6pf3ud7.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpf6pf3ud7.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x3b62d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpir9cpklb.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpir9cpklb.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpir9cpklb.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x91b12554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzkpjcf5a.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpzkpjcf5a.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpzkpjcf5a.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x4908c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    if (n < 3)\n        return 0;\n    long cnt = 0;\n    for (long\
    \ i = 1; i < n - 1; i++)\n    {\n        long sum = i * i - i + 1;\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            sum += j * j - j + 1;\n\
    \            if (sum % 3 == 0)\n                cnt++;\n        }\n    }\n   \
    \ return cnt;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvcp6oilu.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpvcp6oilu.__unittest_L35_C1()\
    \ [0x427ae9]\\n??:? void tmpvcp6oilu.__modtest() [0x427b40]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b53]\\\
    n??:? __libc_start_main [0x8fd10554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i\
    \ * i - i + 1;\n    long count = 0;\n    foreach(i; 0..n)\n        foreach(j;\
    \ i+1..n)\n            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppfivpnrh.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmppfivpnrh.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmppfivpnrh.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0x1cbf2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2f9wkzv1.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp2f9wkzv1.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp2f9wkzv1.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x482f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    for (long i = 1; i < n; i++) \n    {\n    \
    \    for (long j = i + 1; j < n; j++) \n        {\n            for (long k = j\
    \ + 1; k < n; k++) \n            {\n                if ((i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0) \n                {\n                   \
    \ count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpto8ioo0p.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpto8ioo0p.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmpto8ioo0p.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x1744554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0..n)\n        a[i] = i\
    \ * i - i + 1;\n    long count = 0;\n    foreach(i; 0..n)\n        foreach(j;\
    \ i+1..n)\n            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5ut688a7.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmp5ut688a7.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmp5ut688a7.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0x18c4c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu12_hj06.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpu12_hj06.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpu12_hj06.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf078e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6l_2j8lb.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp6l_2j8lb.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp6l_2j8lb.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xbdc4a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnaqpgyim.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpnaqpgyim.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpnaqpgyim.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb09fd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result += 1;\n                }\n    \
    \        }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt2qt91qr.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpt2qt91qr.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpt2qt91qr.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xacb67554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqqhycmd0.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpqqhycmd0.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpqqhycmd0.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x4b8c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7ekj0daf.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp7ekj0daf.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp7ekj0daf.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x55cbf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphjak5f1k.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmphjak5f1k.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmphjak5f1k.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf8502554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long sum = 0;\n    long[] a = new long[n];\n    for (i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (i = 0; i < n; i++)\n  \
    \  {\n        for (j = i + 1; j < n; j++)\n        {\n            for (k = j +\
    \ 1; k < n; k++)\n            {\n                sum = a[i] + a[j] + a[k];\n \
    \               if (sum % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxkvb4o_z.d(50): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428145]\\n??:? void tmpxkvb4o_z.__unittest_L46_C1()\
    \ [0x427e50]\\n??:? void tmpxkvb4o_z.__modtest() [0x427ec8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c143]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afd6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430261]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430710]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afad]\\n??:? runModuleUnitTests [0x42bf19]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428608]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42858f]\\n??:? _d_run_main [0x4284fa]\\n??:? main [0x427edb]\\\
    n??:? __libc_start_main [0xde40f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpee1n8wbr.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpee1n8wbr.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpee1n8wbr.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x4a366554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4diqt0ue.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp4diqt0ue.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp4diqt0ue.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xa46e7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwu_5id0t.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpwu_5id0t.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpwu_5id0t.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x3d05e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp58sosf3p.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp58sosf3p.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp58sosf3p.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xd3343554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n - 2; i++)\n    {\n        for (long j = i + 1; j < n - 1; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           count++;\n                }\n            }\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n  \
    \  assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnj5q9a46.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428145]\\n??:? void tmpnj5q9a46.__unittest_L41_C1()\
    \ [0x427e4c]\\n??:? void tmpnj5q9a46.__modtest() [0x427ec4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c143]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afd6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430261]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430710]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afad]\\n??:? runModuleUnitTests [0x42bf19]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428608]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42858f]\\n??:? _d_run_main [0x4284fa]\\n??:? main [0x427ed7]\\\
    n??:? __libc_start_main [0xf94a0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long max_triples = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return max_triples;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmsg3p0ec.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpmsg3p0ec.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpmsg3p0ec.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xe71d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5egggi5i.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmp5egggi5i.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmp5egggi5i.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x7cd02554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4ianqsjy.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp4ianqsjy.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp4ianqsjy.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xc6f67554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long sum = 0;\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n  \
    \  }\n    long max_triples = 0;\n    if (sum % 3 == 0)\n    {\n        long[]\
    \ dp = new long[sum / 3 + 1];\n        dp[0] = 1;\n        for (long i = 0; i\
    \ < n; i++)\n        {\n            for (long j = sum / 3; j >= a[i]; j--)\n \
    \           {\n                dp[j] += dp[j - a[i]];\n            }\n       \
    \ }\n        max_triples = dp[sum / 3];\n    }\n    return max_triples;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeysr6rhq.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428205]\\n??:? void tmpeysr6rhq.__unittest_L43_C1()\
    \ [0x427f10]\\n??:? void tmpeysr6rhq.__modtest() [0x427f88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c203]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b096]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430321]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4307d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4302ad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b06d]\\n??:? runModuleUnitTests [0x42bfd9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4286c8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42864f]\\n??:? _d_run_main [0x4285ba]\\n??:? main [0x427f9b]\\\
    n??:? __libc_start_main [0x2bab6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmprp6tif.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpmprp6tif.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpmprp6tif.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xdf986554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long[] b = new long[n];\n    long[]\
    \ c = new long[n];\n    long[] d = new long[n];\n    long[] e = new long[n];\n\
    \    long[] f = new long[n];\n    long[] g = new long[n];\n    long[] h = new\
    \ long[n];\n    long[] i = new long[n];\n    long[] j = new long[n];\n    long[]\
    \ k = new long[n];\n    long[] l = new long[n];\n    long[] m = new long[n];\n\
    \    long[] o = new long[n];\n    long[] p = new long[n];\n    long[] q = new\
    \ long[n];\n    long[] r = new long[n];\n    long[] s = new long[n];\n    long[]\
    \ t = new long[n];\n    long[] u = new long[n];\n    long[] v = new long[n];\n\
    \    long[] w = new long[n];\n    long[] x = new long[n];\n    long[] y = new\
    \ long[n];\n    long[] z = new long[n];\n    long[] aa = new long[n];\n    long[]\
    \ ab = new long[n];\n    long[] ac = new long[n];\n    long[] ad = new long[n];\n\
    \    long[] ae = new long[n];\n    long[] af = new long[n];\n    long[] ag = new\
    \ long[n];\n    long[] ah = new long[n];\n    long[] ai = new long[n];\n    long[]\
    \ aj = new long[n];\n    long[] ak = new long[n];\n    long[] al = new long[n];\n\
    \    long[] am = new long[n];\n    long[] ao = new long[n];\n    long[] ap = new\
    \ long[n];\n    long[] aq = new long[n];\n    long[] ar = new long[n];\n    long[]\
    \ as = new long[n];\n    long[] at = new long[n];\n    long[] au = new long[n];\n\
    \    long[] av = new long[\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph_irtl3n.d(66): Error: expression expected, not `unittest`\\\
    n/tmp/tmph_irtl3n.d(67): Error: found `{` when expecting `]`\\n/tmp/tmph_irtl3n.d(68):\
    \ Error: semicolon expected, not `alias`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmph_irtl3n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpumfjfske.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpumfjfske.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpumfjfske.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xe0dfa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe31wsutd.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpe31wsutd.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpe31wsutd.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb52f1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzohprqhm.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpzohprqhm.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpzohprqhm.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x67814554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long ans = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \        a[i] = i * i - i + 1;\n    foreach(i; 0..n-2)\n        foreach(j; i+1..n-1)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    ans++;\n    return ans;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjd0h0639.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42818d]\\n??:? void tmpjd0h0639.__unittest_L31_C1()\
    \ [0x427e94]\\n??:? void tmpjd0h0639.__modtest() [0x427f0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c18b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b01e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430758]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430235]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aff5]\\n??:? runModuleUnitTests [0x42bf61]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428650]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285d7]\\n??:? _d_run_main [0x428542]\\n??:? main [0x427f1f]\\\
    n??:? __libc_start_main [0xfdd43554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nlong\
    \ get_max_triples_2(long n) \n{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nlong get_max_triples_3(long n) \n{\n    long result =\
    \ 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjkm6ctnf.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjkm6ctnf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbj_hj5kn.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpbj_hj5kn.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpbj_hj5kn.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x13077554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfifk0amf.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpfifk0amf.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpfifk0amf.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x8f7fc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdc1tj1de.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpdc1tj1de.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpdc1tj1de.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x1137a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpriu3ch0q.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpriu3ch0q.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpriu3ch0q.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb37ed554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2bm80_it.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp2bm80_it.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp2bm80_it.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xcba38554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp38wus004.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp38wus004.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp38wus004.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x3bbff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \        a[i] = i * i - i + 1;\n    foreach(i; 0..n-2)\n        foreach(j; i+1..n-1)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps0ld_7qa.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42818d]\\n??:? void tmps0ld_7qa.__unittest_L31_C1()\
    \ [0x427e94]\\n??:? void tmps0ld_7qa.__modtest() [0x427f0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c18b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b01e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430758]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430235]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aff5]\\n??:? runModuleUnitTests [0x42bf61]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428650]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285d7]\\n??:? _d_run_main [0x428542]\\n??:? main [0x427f1f]\\\
    n??:? __libc_start_main [0x173db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n - 2; i++)\n    {\n        for (long j = i + 1; j < n - 1; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           count++;\n                }\n            }\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n  \
    \  assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprtpzl9gz.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmprtpzl9gz.__unittest_L41_C1()\
    \ [0x427e48]\\n??:? void tmprtpzl9gz.__modtest() [0x427ec0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ed3]\\\
    n??:? __libc_start_main [0x7f895554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd46d2f4z.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpd46d2f4z.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpd46d2f4z.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x3070b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbs6qrxzb.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpbs6qrxzb.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpbs6qrxzb.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x9decc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp88o05oj5.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp88o05oj5.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp88o05oj5.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x84d6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiu2z7rkc.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpiu2z7rkc.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpiu2z7rkc.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x75310554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyzcxbf4v.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpyzcxbf4v.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpyzcxbf4v.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x25d53554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp2iqc9_u.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpp2iqc9_u.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpp2iqc9_u.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x74cd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4lhi10ck.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp4lhi10ck.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp4lhi10ck.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xc522f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_i8iohdp.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp_i8iohdp.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp_i8iohdp.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xc4bf2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx9b_ojkw.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpx9b_ojkw.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpx9b_ojkw.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xc02c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0..n)\n    {\n  \
    \      foreach(j; i+1..n)\n        {\n            foreach(k; j+1..n)\n       \
    \     {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp205tmk3h.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp205tmk3h.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp205tmk3h.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x735cc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n    \
    \    for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplcbdu_wq.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmplcbdu_wq.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmplcbdu_wq.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xedc7e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpshj_9yb4.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpshj_9yb4.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpshj_9yb4.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf325a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsnd5gacw.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpsnd5gacw.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpsnd5gacw.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xe9205554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    for (long i = 1; i < n; i++) \n    {\n   \
    \     for (long j = i + 1; j < n; j++) \n        {\n            for (long k =\
    \ j + 1; k < n; k++) \n            {\n                if ((i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0) \n                {\n                 \
    \   result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy54a0uoa.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpy54a0uoa.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmpy54a0uoa.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe2685554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp38qj68x6.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp38qj68x6.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp38qj68x6.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xee19b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkybnyy9a.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpkybnyy9a.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpkybnyy9a.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0xe6725554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2nyawu8z.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp2nyawu8z.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp2nyawu8z.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x2dac8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpog85w3rr.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpog85w3rr.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpog85w3rr.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x1184f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long max_triples = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return max_triples;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgaorsi9o.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpgaorsi9o.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpgaorsi9o.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xdd610554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp76_edbkz.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp76_edbkz.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp76_edbkz.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x55dc7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu1yna9e7.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpu1yna9e7.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpu1yna9e7.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xdc13e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp66qotwny.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp66qotwny.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp66qotwny.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x33112554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx4zjmhbx.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpx4zjmhbx.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpx4zjmhbx.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xe2d2f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long sum = 0;\n \
    \   long[] arr = new long[n];\n    for (i = 0; i < n; i++)\n    {\n        arr[i]\
    \ = i * i - i + 1;\n    }\n    for (i = 0; i < n; i++)\n    {\n        for (j\
    \ = i + 1; j < n; j++)\n        {\n            for (k = j + 1; k < n; k++)\n \
    \           {\n                a = arr[i];\n                b = arr[j];\n    \
    \            c = arr[k];\n                sum = a + b + c;\n                if\
    \ (sum % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzmi5xjyv.d(56): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42814d]\\n??:? void tmpzmi5xjyv.__unittest_L52_C1()\
    \ [0x427e54]\\n??:? void tmpzmi5xjyv.__modtest() [0x427ecc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c14b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afde]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430269]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430718]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301f5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afb5]\\n??:? runModuleUnitTests [0x42bf21]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428610]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428597]\\n??:? _d_run_main [0x428502]\\n??:? main [0x427edf]\\\
    n??:? __libc_start_main [0x398a8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwsnep3ue.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpwsnep3ue.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpwsnep3ue.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x5aeeb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    for (long i = 1; i < n; i++) \n    {\n      \
    \  for (long j = i + 1; j < n; j++) \n        {\n            for (long k = j +\
    \ 1; k < n; k++) \n            {\n                if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0) \n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzfc03yng.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpzfc03yng.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmpzfc03yng.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xd0825554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5n35rkjh.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp5n35rkjh.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp5n35rkjh.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x38d3a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptj6t2v53.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmptj6t2v53.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmptj6t2v53.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x4c314554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9l09bu8u.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp9l09bu8u.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp9l09bu8u.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x9a1e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_9f2i_fo.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmp_9f2i_fo.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmp_9f2i_fo.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x2bddc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \        a[i] = i * i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc3qupd41.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpc3qupd41.__unittest_L31_C1()\
    \ [0x427e8c]\\n??:? void tmpc3qupd41.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xfe81a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkgq0zwxj.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpkgq0zwxj.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpkgq0zwxj.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xae485554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt4s4zl2m.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpt4s4zl2m.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmpt4s4zl2m.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x70e8a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3dclzyys.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp3dclzyys.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp3dclzyys.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x23b7f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long result = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmujb7xu2.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpmujb7xu2.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpmujb7xu2.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x9d0a0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppox893_3.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmppox893_3.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmppox893_3.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x8d932554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkvavj3v0.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpkvavj3v0.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpkvavj3v0.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x7a075554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7cumg0va.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp7cumg0va.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp7cumg0va.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x26ed2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpokkanftg.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpokkanftg.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpokkanftg.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x80698554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n - 2; i++)\n    {\n        for (long j = i + 1; j < n - 1; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           count++;\n                }\n            }\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n  \
    \  assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnk64vna1.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428145]\\n??:? void tmpnk64vna1.__unittest_L41_C1()\
    \ [0x427e4c]\\n??:? void tmpnk64vna1.__modtest() [0x427ec4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c143]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afd6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430261]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430710]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afad]\\n??:? runModuleUnitTests [0x42bf19]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428608]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42858f]\\n??:? _d_run_main [0x4284fa]\\n??:? main [0x427ed7]\\\
    n??:? __libc_start_main [0x2b217554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsz5bflvf.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpsz5bflvf.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpsz5bflvf.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x5254b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk8ro_hqb.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpk8ro_hqb.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpk8ro_hqb.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xdb12a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphocckxw4.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmphocckxw4.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmphocckxw4.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x86205554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long max_triples = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return max_triples;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4e4bku7_.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp4e4bku7_.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp4e4bku7_.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x63d98554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9udrvv1m.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp9udrvv1m.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp9udrvv1m.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb6f48554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgn8fvnn1.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpgn8fvnn1.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpgn8fvnn1.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x8b91c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq11athqo.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpq11athqo.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpq11athqo.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x63fad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] =\
    \ i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j;\
    \ i + 1 .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}\n\
    unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkz27z65f.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmpkz27z65f.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmpkz27z65f.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0xb6708554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_5vo3f1t.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp_5vo3f1t.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp_5vo3f1t.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x877c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] =\
    \ i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j;\
    \ i + 1 .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}\n\
    unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp78_i8eg7.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmp78_i8eg7.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmp78_i8eg7.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0xc9d87554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp85bxetnr.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp85bxetnr.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp85bxetnr.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x387eb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \        a[i] = i * i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpraxczhu6.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpraxczhu6.__unittest_L31_C1()\
    \ [0x427e8c]\\n??:? void tmpraxczhu6.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xdc9c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn2s1u54m.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpn2s1u54m.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpn2s1u54m.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xddcd5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfwt2khpz.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpfwt2khpz.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpfwt2khpz.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x60aa6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n - 2; i++)\n    {\n        for (long j = i + 1; j < n - 1; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           count++;\n                }\n            }\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n  \
    \  assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgmz_tl4c.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428145]\\n??:? void tmpgmz_tl4c.__unittest_L41_C1()\
    \ [0x427e4c]\\n??:? void tmpgmz_tl4c.__modtest() [0x427ec4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c143]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afd6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430261]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430710]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afad]\\n??:? runModuleUnitTests [0x42bf19]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428608]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42858f]\\n??:? _d_run_main [0x4284fa]\\n??:? main [0x427ed7]\\\
    n??:? __libc_start_main [0x6ed95554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long count = 0;\n    for (long i = 1; i < n; i++) \n    {\n    \
    \    for (long j = i + 1; j < n; j++) \n        {\n            for (long k = j\
    \ + 1; k < n; k++) \n            {\n                if ((i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0) \n                {\n                   \
    \ count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe364o83s.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpe364o83s.__unittest_L36_C1()\
    \ [0x427b05]\\n??:? void tmpe364o83s.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x61c58554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsohsmdx_.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpsohsmdx_.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpsohsmdx_.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x55e34554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp40am5ifl.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp40am5ifl.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp40am5ifl.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x61698554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl46b5307.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpl46b5307.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpl46b5307.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf82ce554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbr9dxllf.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpbr9dxllf.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpbr9dxllf.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x155cc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuhxh8u67.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpuhxh8u67.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpuhxh8u67.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0xd6d41554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdvkops96.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpdvkops96.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpdvkops96.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x359e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv3sfwj8r.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpv3sfwj8r.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpv3sfwj8r.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x93071554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwq3c3w5y.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpwq3c3w5y.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpwq3c3w5y.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xa75f7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnzwhl_4c.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpnzwhl_4c.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpnzwhl_4c.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0xb9aa1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyi41hrgj.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpyi41hrgj.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpyi41hrgj.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xde9d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long result = 0;\n    long sum = 0;\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    \
    \    sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return 0;\n    long[]\
    \ dp = new long[sum / 3 + 1];\n    dp[0] = 1;\n    foreach (var i; a)\n    {\n\
    \        for (long j = sum / 3; j >= i; j--)\n        {\n            dp[j] +=\
    \ dp[j - i];\n        }\n    }\n    return dp[sum / 3];\n}\nunittest\n{\n    alias\
    \ candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcp2bg972.d(32): Error: undefined identifier `var`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcp2bg972.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqgtahs68.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpqgtahs68.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpqgtahs68.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x325a5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long max_triples = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return max_triples;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxgyag4ml.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpxgyag4ml.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpxgyag4ml.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xcae86554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0amltc44.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp0amltc44.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp0amltc44.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xb10b9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1h8ly78d.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp1h8ly78d.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp1h8ly78d.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x75772554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n\
    \        a[i] = i * i - i + 1;\n    foreach(i; 0..n)\n        foreach(j; i+1..n)\n\
    \            foreach(k; j+1..n)\n                if((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                    res++;\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdadwt7av.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmpdadwt7av.__unittest_L31_C1()\
    \ [0x427e8c]\\n??:? void tmpdadwt7av.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0x6703e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++) \n   \
    \ {\n        a[i] = i * i - i + 1;\n    }\n    long count = 0;\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvsc7givn.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmpvsc7givn.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmpvsc7givn.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x6bb03554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzoj1qaw5.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpzoj1qaw5.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpzoj1qaw5.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x5635d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    long count = 0;\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7h29m7ho.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428135]\\n??:? void tmp7h29m7ho.__unittest_L41_C1()\
    \ [0x427e40]\\n??:? void tmp7h29m7ho.__modtest() [0x427eb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c133]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afc6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430251]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430700]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af9d]\\n??:? runModuleUnitTests [0x42bf09]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4285f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42857f]\\n??:? _d_run_main [0x4284ea]\\n??:? main [0x427ecb]\\\
    n??:? __libc_start_main [0x2d38a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdx1t7yiw.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpdx1t7yiw.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpdx1t7yiw.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x96f59554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpod3lzmyy.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpod3lzmyy.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpod3lzmyy.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xf7031554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4ywxkz88.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp4ywxkz88.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp4ywxkz88.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x514e9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpixxciy2r.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpixxciy2r.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpixxciy2r.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xe7cf0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2tv_kx3i.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp2tv_kx3i.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp2tv_kx3i.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x6895c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] =\
    \ i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j;\
    \ i + 1 .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}\n\
    unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcgs3w8jt.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428175]\\n??:? void tmpcgs3w8jt.__unittest_L31_C1()\
    \ [0x427e7c]\\n??:? void tmpcgs3w8jt.__modtest() [0x427ef4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c173]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b006]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430291]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43021d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afdd]\\n??:? runModuleUnitTests [0x42bf49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428638]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285bf]\\n??:? _d_run_main [0x42852a]\\n??:? main [0x427f07]\\\
    n??:? __libc_start_main [0x2a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0\
    \ .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2l6ggz49.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428185]\\n??:? void tmp2l6ggz49.__unittest_L41_C1()\
    \ [0x427e8c]\\n??:? void tmp2l6ggz49.__modtest() [0x427f04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c183]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b016]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4302a1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430750]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43022d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afed]\\n??:? runModuleUnitTests [0x42bf59]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428648]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285cf]\\n??:? _d_run_main [0x42853a]\\n??:? main [0x427f17]\\\
    n??:? __libc_start_main [0xf0a31554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6o20mn2n.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmp6o20mn2n.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmp6o20mn2n.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xd6267554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwwv4_z17.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpwwv4_z17.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpwwv4_z17.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x9c3f3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa2w69uk0.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpa2w69uk0.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpa2w69uk0.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x7770554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplf0lsz32.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmplf0lsz32.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmplf0lsz32.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xddb23554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpldgbmhvs.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpldgbmhvs.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpldgbmhvs.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0xbbc01554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n \
    \       Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n    \
    \    The only valid triple is (1, 7, 13).\n    \n*/\nlong get_max_triples(long\
    \ n) \n{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmuu_vuxj.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42813d]\\n??:? void tmpmuu_vuxj.__unittest_L41_C1()\
    \ [0x427e44]\\n??:? void tmpmuu_vuxj.__modtest() [0x427ebc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c13b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430259]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42afa5]\\n??:? runModuleUnitTests [0x42bf11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428600]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428587]\\n??:? _d_run_main [0x4284f2]\\n??:? main [0x427ecf]\\\
    n??:? __libc_start_main [0x33a9c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

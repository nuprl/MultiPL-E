name: HumanEval_21_rescale_to_unit
language: humaneval_to_dlang.py
results:
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given a list of numbers, return a list of tuples,\
    \ where each tuple is of the form (number, index)\n    >>> enumerate([6, 0, 2])\n\
    \    [(6, 0), (0, 1), (2, 2)]\n*/\nTuple!(float, int)[] enumerate(float[] numbers)\
    \ \n{\n    Tuple!(float, int)[] result = new Tuple!(float, int)[numbers.length];\n\
    \    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = tuple(numbers[i],\
    \ i);\n    }\n    return result;\n}\n/*\n Given a list of numbers, return a list\
    \ of tuples, where each tuple is of the form (number, index)\n    >>> enumerate([6,\
    \ 0, 2])\n    [(6, 0), (0, 1), (2, 2)]\n*/\nTuple!(float, int)[] enumerate(float[]\
    \ numbers) \n{\n    Tuple!(float, int)[] result = new Tuple!(float, int)[numbers.length];\n\
    \    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = tuple(numbers[i],\
    \ i);\n    }\n    return result;\n}\n/*\n Given a list of tuples, return a list\
    \ of the first elements of each tuple\n    >>> firsts([(6, 0), (0, 1), (2, 2)])\n\
    \    [6, 0, 2]\n*/\nfloat[] firsts(Tuple!(float, int)[] tuples) \n{\n    float[]\
    \ result = new float[tuples.length];\n    for (int i = 0; i < tuples.length; i++)\n\
    \    {\n        result[i] = tuples[i\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp69abq6hw.d(60): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmp69abq6hw.d(70): Error: found `void` when expecting `,`\\n/tmp/tmp69abq6hw.d(70):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmp69abq6hw.d(70): Error: expression\
    \ expected, not `}`\\n/tmp/tmp69abq6hw.d(70): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmp69abq6hw.d(70): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmp69abq6hw.d(70): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmp69abq6hw.d(70): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmp69abq6hw.d(70): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69abq6hw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfntd21j2.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfntd21j2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu8uhi0pf.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpu8uhi0pf.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpu8uhi0pf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpom_5y1m7.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpom_5y1m7.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpom_5y1m7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp96ity_tq.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp96ity_tq.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp96ity_tq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        if (numbers[i] < min) \n        {\n            min = numbers[i];\n\
    \        }\n        if (numbers[i] > max) \n        {\n            max = numbers[i];\n\
    \        }\n    }\n    for (int i = 0; i < numbers.length; i++) \n    {\n    \
    \    result[i] = (numbers[i] - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[];\n    float min = min(numbers);\n\
    \    float max = max(numbers);\n    foreach(n; numbers)\n    {\n        result\
    \ ~= (n - min) / (max - min);\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4r026yh.d(12): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `float[]`\\'s\\n/tmp/tmpb4r026yh.d(13): Error: undefined\
    \ identifier `min`, did you mean function `main`?\\n/tmp/tmpb4r026yh.d(14): Error:\
    \ undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4r026yh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk6qv0lc8.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpk6qv0lc8.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpk6qv0lc8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfxbo_9ek.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpfxbo_9ek.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpfxbo_9ek.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx1fgi3cz.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpx1fgi3cz.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpx1fgi3cz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpme_twzhr.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpme_twzhr.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpme_twzhr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbrp0myvq.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpbrp0myvq.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpbrp0myvq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_6kdftaj.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_6kdftaj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpvxwrco.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpvpvxwrco.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpvpvxwrco.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    auto min_max = minmax(numbers);\n    auto min_value = min_max[0];\n\
    \    auto max_value = min_max[1];\n    auto range = max_value - min_value;\n \
    \   return numbers.map!((x) => (x - min_value) / range);\n}\nunittest\n{\n   \
    \ alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdskapil0.d(12): Error: undefined identifier `minmax`\\n/tmp/tmpdskapil0.d(16):\
    \ Error: no property `map` for type `float[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdskapil0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpilul3rkj.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpilul3rkj.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpilul3rkj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpki8qvg9n.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpki8qvg9n.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpki8qvg9n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float range = max_value\
    \ - min_value;\n    foreach(i, number; numbers)\n    {\n        result[i] = (number\
    \ - min_value) / range;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvp59u9an.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpvp59u9an.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpvp59u9an.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8vofygfz.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8vofygfz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpikj9pe1a.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpikj9pe1a.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpikj9pe1a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    foreach(float number; numbers)\n\
    \    {\n        if(number < min)\n            min = number;\n        if(number\
    \ > max)\n            max = number;\n    }\n    foreach(int i; 0 .. numbers.length)\n\
    \    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjxu6l9x6.d(22): Error: cannot implicitly convert expression `numbers.length`\
    \ of type `ulong` to `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpjxu6l9x6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6bqfqnqy.d(12): Error: undefined identifier `minElement`\\n/tmp/tmp6bqfqnqy.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp6bqfqnqy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_num = min(numbers);\n    float max_num = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_num) / (max_num - min_num);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodoqnqn1.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpodoqnqn1.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpodoqnqn1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3jmdgjgp.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp3jmdgjgp.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp3jmdgjgp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_num = min(numbers);\n    float max_num = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_num) / (max_num - min_num);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl0eieize.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpl0eieize.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpl0eieize.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float range = max_value\
    \ - min_value;\n    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i]\
    \ = (numbers[i] - min_value) / range;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpykbwa4u_.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpykbwa4u_.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpykbwa4u_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwsyjilla.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpwsyjilla.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpwsyjilla.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkx9gekm2.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpkx9gekm2.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpkx9gekm2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn2wz_seq.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpn2wz_seq.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpn2wz_seq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpms9i9m_6.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpms9i9m_6.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpms9i9m_6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvyj0d14l.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpvyj0d14l.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpvyj0d14l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7lmqzpu6.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp7lmqzpu6.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7lmqzpu6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float range = max_value\
    \ - min_value;\n    for (int i = 0; i < numbers.length; i++) \n    {\n       \
    \ result[i] = (numbers[i] - min_value) / range;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw52xh6k6.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpw52xh6k6.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpw52xh6k6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_val) / (max_val - min_val);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqybch7xm.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpqybch7xm.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpqybch7xm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float delta = max_value\
    \ - min_value;\n    for (int i = 0; i < numbers.length; i++) \n    {\n       \
    \ result[i] = (numbers[i] - min_value) / delta;\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float[] result = new float[numbers.length];\n    float min_value = min(numbers);\n\
    \    float max_value = max(numbers);\n    float delta = max_value - min_value;\n\
    \    for (int i = 0; i < numbers.length; i++) \n    {\n        result[i] = (numbers[i]\
    \ - min_value) / delta;\n    }\n    return result;\n}\n/*\n Given list of numbers\
    \ (of at least two elements), apply a linear transform to that list,\n    such\
    \ that the smallest number will become 0 and the largest will become 1\n    >>>\
    \ rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n{\n    float[] result =\
    \ new float[numbers.length];\n    float min_value = min(numbers);\n    float max_value\
    \ = max(numbers);\n    float delta = max_value - min_value;\n    for (int i =\
    \ 0; i < numbers.length; i++) \n    {\n        result[i] = (\nunittest\n{\n  \
    \  alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy9o8eqtg.d(57): Error: expression expected, not `unittest`\\\
    n/tmp/tmpy9o8eqtg.d(56): Error: found `{` when expecting `)`\\n/tmp/tmpy9o8eqtg.d(59):\
    \ Error: found `alias` when expecting `;` following statement\\n/tmp/tmpy9o8eqtg.d(67):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy9o8eqtg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv1h4hfj4.d(56): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv1h4hfj4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_number\
    \ = min(numbers);\n    float max_number = max(numbers);\n    float range = max_number\
    \ - min_number;\n    for (int i = 0; i < numbers.length; i++) \n    {\n      \
    \  result[i] = (numbers[i] - min_number) / range;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4w1jv12y.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4w1jv12y.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4w1jv12y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0ypbd2c.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpg0ypbd2c.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpg0ypbd2c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsbksgdff.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpsbksgdff.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpsbksgdff.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkyzbebk4.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpkyzbebk4.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpkyzbebk4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5gxyjw_i.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp5gxyjw_i.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp5gxyjw_i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe6mv2y3b.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpe6mv2y3b.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpe6mv2y3b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe9zwfpc2.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpe9zwfpc2.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpe9zwfpc2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_number\
    \ = min(numbers);\n    float max_number = max(numbers);\n    float range = max_number\
    \ - min_number;\n    foreach(i, number; numbers)\n    {\n        result[i] = (number\
    \ - min_number) / range;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppiv2ot6n.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmppiv2ot6n.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmppiv2ot6n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, val; numbers)\n\
    \    {\n        result[i] = (val - min_val) / (max_val - min_val);\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9ezf6fi.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpd9ezf6fi.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpd9ezf6fi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_xjbon2b.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xjbon2b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7mnkt8wh.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp7mnkt8wh.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7mnkt8wh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyd5yoo3d.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpyd5yoo3d.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpyd5yoo3d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = numbers[0];\n    float max_value = numbers[0];\n    foreach(float number;\
    \ numbers)\n    {\n        if(number < min_value)\n            min_value = number;\n\
    \        if(number > max_value)\n            max_value = number;\n    }\n    float\
    \ range = max_value - min_value;\n    foreach(int i, float number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / range;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_number) / (max_number -\
    \ min_number);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp62tewn7o.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp62tewn7o.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp62tewn7o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp25tqa8f.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpp25tqa8f.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpp25tqa8f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo3s6lz7b.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpo3s6lz7b.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpo3s6lz7b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_number\
    \ = min(numbers);\n    float max_number = max(numbers);\n    float range = max_number\
    \ - min_number;\n    for (int i = 0; i < numbers.length; i++)\n    {\n       \
    \ result[i] = (numbers[i] - min_number) / range;\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple contains\
    \ the original index of the number and the number itself\n    >>> enumerate_list([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [(0, 1.0), (1, 2.0), (2, 3.0), (3, 4.0), (4, 5.0)]\n\
    */\nTuple!(int, float)[] enumerate_list(float[] numbers) \n{\n    Tuple!(int,\
    \ float)[] result = new Tuple!(int, float)[numbers.length];\n    for (int i =\
    \ 0; i < numbers.length; i++)\n    {\n        result[i] = tuple(i, numbers[i]);\n\
    \    }\n    return result;\n}\n/*\n Given a list of tuples, return a list of tuples,\
    \ where each tuple contains the original index of the number and the number itself\n\
    \    >>> enumerate_list([(1.0, 1.0), (2.0, 2.0), (3.0, 3.0), (4.0, 4.0), (5.0,\
    \ 5.0)])\n    [(0, 1.0), (1, 2.0), (2, 3.0), (3, 4.0), (4, 5.0)]\n*/\nTuple!(int,\
    \ float)[] enumerate_list(Tuple!(float, float)[] numbers) \n{\n    Tuple!(int,\
    \ float)[] result = new Tuple!(int, float)[numbers.length];\n    for (int i =\
    \ 0; i < numbers.length; i++)\n    {\n        result[i] = tuple(i, numbers[i].field1\n\
    unittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc279_ld_.d(47): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmpc279_ld_.d(57): Error: found `void` when expecting `,`\\n/tmp/tmpc279_ld_.d(57):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpc279_ld_.d(57): Error: expression\
    \ expected, not `}`\\n/tmp/tmpc279_ld_.d(57): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpc279_ld_.d(57): Error: found `End of File` when expecting\
    \ `)`\\n/tmp/tmpc279_ld_.d(57): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmpc279_ld_.d(57): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpc279_ld_.d(57): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc279_ld_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_n = min(numbers);\n    float max_n = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, n; numbers)\n\
    \    {\n        result[i] = (n - min_n) / (max_n - min_n);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8b4q2dw.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpf8b4q2dw.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpf8b4q2dw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptm47g04o.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmptm47g04o.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmptm47g04o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaskw74ua.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpaskw74ua.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpaskw74ua.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the largest number\n    replaced by 1, and the smallest\
    \ replaced by 0\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit_2(float[] numbers)\
    \ \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the largest number\n    replaced by 1, and the smallest\
    \ replaced by 0\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit_3(float[] numbers)\
    \ \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the largest number\n    replaced by 1, and the smallest\
    \ replaced\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3le2sxmh.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3le2sxmh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwva4r8kl.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpwva4r8kl.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpwva4r8kl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, n; numbers)\n\
    \    {\n        result[i] = (n - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, n; numbers)\n    {\n        result[i]\
    \ = (n - min) / (max - min);\n    }\n    return result;\n}\n/*\n Given list of\
    \ numbers (of at least two elements), apply a linear transform to that list,\n\
    \    such that the smallest number will become 0 and the largest will become 1\n\
    \    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75,\
    \ 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n{\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        result[i] = (n - min) / (max - min);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.\n\
    unittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzt0qw1r1.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzt0qw1r1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmmcdbyew.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpmmcdbyew.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpmmcdbyew.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9367bir.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpd9367bir.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpd9367bir.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphofxtml9.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmphofxtml9.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmphofxtml9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuja2b0ef.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpuja2b0ef.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpuja2b0ef.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4i_1xw57.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4i_1xw57.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4i_1xw57.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float max = numbers[0];\n    float min = numbers[0];\n   \
    \ foreach(n; numbers)\n    {\n        if(n > max)\n            max = n;\n    \
    \    if(n < min)\n            min = n;\n    }\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        result[i] = (n - min) / (max - min);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers, float min, float max) \n{\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        result[i] = (n - min) / (max - min);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers, float min, float max, float new_min, float new_max) \n{\n    float[]\
    \ result = new float[numbers.length];\n    foreach(i, n; numbers)\n    {\n   \
    \     result[i] = (n - min) / (max - min) * (new_max - new_min) + new_min;\n \
    \   }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_urqtyrx.d(60): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_urqtyrx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple contains\
    \ the original index and the number\n    >>> enumerate([1.0, 2.0, 3.0, 4.0, 5.0])\n\
    \    [(0, 1.0), (1, 2.0), (2, 3.0), (3, 4.0), (4, 5.0)]\n*/\nTuple!(size_t, float)[]\
    \ enumerate(float[] numbers) \n{\n    Tuple!(size_t, float)[] result = new Tuple!(size_t,\
    \ float)[numbers.length];\n    foreach(i, number; numbers)\n    {\n        result[i]\
    \ = tuple(i, number);\n    }\n    return result;\n}\n/*\n Given a list of tuples,\
    \ return a list of tuples, where each tuple contains the original index and the\
    \ number\n    >>> enumerate([(0, 1.0), (1, 2.0), (2, 3.0), (3, 4.0), (4, 5.0)])\n\
    \    [(0, 1.0), (1, 2.0), (2, 3.0), (3, 4.0), (4, 5.0)]\n*/\nTuple!(size_t, float)[]\
    \ enumerate(Tuple!(size_t, float)[] tuples) \n{\n    Tuple!(size_t, float)[] result\
    \ = new Tuple!(size_t, float)[tuples.length];\n    foreach(i, tuple; tuples)\n\
    \    {\n        result[i] = tuple(i, tuple[1]);\n    }\n    return result;\n}\n\
    /*\n Given a list of tuples, return a list of tuples, where each tuple contains\
    \ the original index and the number\n    >>> enumerate([(0, 1.0), (1\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp05xa_yli.d(49): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp05xa_yli.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv67gwvmt.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpv67gwvmt.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpv67gwvmt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_val) / (max_val - min_val);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk1inmspk.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpk1inmspk.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpk1inmspk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5yfghaoi.d(12): Error: undefined identifier `minElement`\\n/tmp/tmp5yfghaoi.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp5yfghaoi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    foreach(n; numbers)\n    {\n\
    \        if(n < min)\n            min = n;\n        if(n > max)\n            max\
    \ = n;\n    }\n    float range = max - min;\n    foreach(i, n; numbers)\n    {\n\
    \        result[i] = (n - min) / range;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        if (numbers[i] < min) \n        {\n            min = numbers[i];\n\
    \        }\n        if (numbers[i] > max) \n        {\n            max = numbers[i];\n\
    \        }\n    }\n    for (int i = 0; i < numbers.length; i++) \n    {\n    \
    \    result[i] = (numbers[i] - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn4nw7aub.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpn4nw7aub.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpn4nw7aub.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpomwk3tbm.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpomwk3tbm.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpomwk3tbm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphxhb364d.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmphxhb364d.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmphxhb364d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float range = max_value\
    \ - min_value;\n    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i]\
    \ = (numbers[i] - min_value) / range;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfw0vtzln.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpfw0vtzln.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpfw0vtzln.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4i01e9p_.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4i01e9p_.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4i01e9p_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpskplr83t.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpskplr83t.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpskplr83t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuosg266m.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpuosg266m.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpuosg266m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv71xk4_y.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpv71xk4_y.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpv71xk4_y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_val\
    \ = min(numbers);\n    float max_val = max(numbers);\n    float range = max_val\
    \ - min_val;\n    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i]\
    \ = (numbers[i] - min_val) / range;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwssmckwf.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpwssmckwf.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpwssmckwf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqwa2_2fa.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpqwa2_2fa.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpqwa2_2fa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1uwg006u.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1uwg006u.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1uwg006u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeq5ohp0p.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpeq5ohp0p.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpeq5ohp0p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp10n7rkqb.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp10n7rkqb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgzs4a3c0.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpgzs4a3c0.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpgzs4a3c0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpebfqwfez.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpebfqwfez.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpebfqwfez.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp44uc7pib.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp44uc7pib.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp44uc7pib.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpji_3ma2x.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpji_3ma2x.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpji_3ma2x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptwvhp8ms.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmptwvhp8ms.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmptwvhp8ms.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg9wlzxqv.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpg9wlzxqv.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpg9wlzxqv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpougslsb9.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpougslsb9.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpougslsb9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplmhm100v.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmplmhm100v.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmplmhm100v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\
    \ \n    {\n        result[i] = (number - min) / (max - min);\n    }\n    return\
    \ result;\n}\n/*\n Given a list of numbers, return the mean (average) of those\
    \ numbers\n    >>> mean([1.0, 2.0, 3.0, 4.0, 5.0])\n    3.0\n*/\nfloat mean(float[]\
    \ numbers) \n{\n    float sum = 0.0;\n    foreach(number; numbers) \n    {\n \
    \       sum += number;\n    }\n    return sum / numbers.length;\n}\n/*\n Given\
    \ a list of numbers, return the median (middle) of those numbers\n    >>> median([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    3.0\n*/\nfloat median(float[] numbers) \n{\n    float[]\
    \ sorted_numbers = numbers.dup.sort;\n    if(sorted_numbers.length % 2 == 1) \n\
    \    {\n        return sorted_numbers[sorted_numbers.length / 2];\n    }\n   \
    \ else \n    {\n        return (sorted_numbers[sorted_numbers.length / 2 - 1]\
    \ + sorted_numbers[sorted_numbers.length / 2]) / 2;\n    }\n}\n/*\n Given a list\
    \ of numbers, return the mode (most common) of those numbers\n    >>> mode([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    1.0\n*/\nfloat mode(float[] numbers) \n{\n    float[]\
    \ sorted_numbers = numbers.dup.sort;\n    float[] counts = new float[sorted_numbers.length];\n\
    \    foreach(i, number; sorted_numbers) \n    {\n        if(i == 0) \n       \
    \ {\n            counts[i] = 1;\n        }\n        else \n        {\n       \
    \     if(sorted_numbers[i] ==\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmproijc0eu.d(70): Error: expression expected, not `unittest`\\\
    n/tmp/tmproijc0eu.d(71): Error: found `{` when expecting `)`\\n/tmp/tmproijc0eu.d(80):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmproijc0eu.d(80): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmproijc0eu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfhlnflr3.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpfhlnflr3.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpfhlnflr3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8uxkz_42.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp8uxkz_42.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp8uxkz_42.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcu45ofed.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpcu45ofed.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpcu45ofed.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9bn2q02b.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp9bn2q02b.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp9bn2q02b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6zkgh5u0.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp6zkgh5u0.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp6zkgh5u0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp78cm1mz1.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp78cm1mz1.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp78cm1mz1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, n; numbers)\n\
    \    {\n        result[i] = (n - min_val) / (max_val - min_val);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2qg8ldno.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp2qg8ldno.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp2qg8ldno.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float range = max - min;\n\
    \    foreach(i, number; numbers) \n    {\n        result[i] = (number - min) /\
    \ range;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3nof4b_u.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp3nof4b_u.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp3nof4b_u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, n; numbers)\n\
    \    {\n        result[i] = (n - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ew6kwng.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp7ew6kwng.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7ew6kwng.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_n\
    \ = min(numbers);\n    float max_n = max(numbers);\n    float range = max_n -\
    \ min_n;\n    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i]\
    \ = (numbers[i] - min_n) / range;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb6fd4gzy.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpb6fd4gzy.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpb6fd4gzy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpftp15mq7.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpftp15mq7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpit48g98u.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpit48g98u.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpit48g98u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    foreach(float number; numbers)\n\
    \    {\n        if(number < min)\n            min = number;\n        if(number\
    \ > max)\n            max = number;\n    }\n    float scale = 1.0f / (max - min);\n\
    \    foreach(int i, float number; numbers)\n    {\n        result[i] = (number\
    \ - min) * scale;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsaz1svcf.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpsaz1svcf.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpsaz1svcf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpshsjc6_8.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshsjc6_8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2fbynjsw.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp2fbynjsw.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp2fbynjsw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfs1dfheg.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpfs1dfheg.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpfs1dfheg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_num\
    \ = min(numbers);\n    float max_num = max(numbers);\n    float range = max_num\
    \ - min_num;\n    foreach(i, num; numbers)\n    {\n        result[i] = (num -\
    \ min_num) / range;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj867h3pv.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpj867h3pv.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpj867h3pv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnsq46pn2.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpnsq46pn2.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpnsq46pn2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpebwq205w.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpebwq205w.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpebwq205w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo2vwp6wm.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpo2vwp6wm.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpo2vwp6wm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4zwxt903.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4zwxt903.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4zwxt903.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb1dxna5e.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpb1dxna5e.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpb1dxna5e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuo8elku6.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpuo8elku6.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpuo8elku6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairwise([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3,\
    \ 4)]\n*/\nTuple!(float, float)[] pairwise(float[] numbers) \n{\n    Tuple!(float,\
    \ float)[] result = new Tuple!(float, float)[numbers.length - 1];\n    foreach(i,\
    \ number; numbers)\n    {\n        if (i > 0)\n        {\n            result[i\
    \ - 1] = tuple(numbers[i - 1], number);\n        }\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairwise([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3,\
    \ 4)]\n*/\nTuple!(float, float)[] pairwise(float[] numbers) \n{\n    Tuple!(float,\
    \ float)[] result = new Tuple!(float, float)[numbers.length - 1];\n    foreach(i,\
    \ number; numbers)\n    {\n        if (i > 0)\n        {\n            result[i\
    \ - 1] = tuple(numbers[i - 1], number);\n        }\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairwise([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3,\
    \ 4)]\n*/\nTuple!(float, float)[] pairwise(float[] numbers) \n{\n    Tuple!(float,\
    \ float)[] result = new Tuple!(float, float)[numbers.length - 1];\nunittest\n\
    {\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9])\
    \ == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp99q5sgei.d(63): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp99q5sgei.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr_7rcim4.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpr_7rcim4.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpr_7rcim4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptpk6pikw.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmptpk6pikw.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmptpk6pikw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    assert(numbers.length >= 2);\n    float min = minElement(numbers);\n\
    \    float max = maxElement(numbers);\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        result[i] = (number - min) /\
    \ (max - min);\n    }\n    return result;\n}\n/*\n Given a list of numbers, apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    assert(numbers.length >= 2);\n    float min = minElement(numbers);\n\
    \    float max = maxElement(numbers);\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        result[i] = (number - min) /\
    \ (max - min);\n    }\n    return result;\n}\n/*\n Given a list of numbers, apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    assert(numbers.length >= 2);\n    float min = minElement(numbers);\n\
    \    float max = maxElement(numbers);\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        result[i] = (number - min) /\
    \ (max - min);\n    }\n    return result;\n}\n/*\n Given a list of numbers, apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq20clffz.d(60): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq20clffz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxaojhp5j.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpxaojhp5j.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpxaojhp5j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph20b803z.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmph20b803z.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmph20b803z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp97rqxnor.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp97rqxnor.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp97rqxnor.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp63x6fbs9.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp63x6fbs9.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp63x6fbs9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvhscbhm4.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpvhscbhm4.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpvhscbhm4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmfvddxls.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpmfvddxls.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpmfvddxls.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result;\n    float min_value = min(numbers);\n   \
    \ float max_value = max(numbers);\n    float scale = 1.0f / (max_value - min_value);\n\
    \    foreach(number; numbers) \n    {\n        result ~= (number - min_value)\
    \ * scale;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1zmidibq.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1zmidibq.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1zmidibq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmoljwqwf.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpmoljwqwf.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpmoljwqwf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpftm0sh9q.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpftm0sh9q.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpftm0sh9q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy2qp80br.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpy2qp80br.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpy2qp80br.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqiazl5v4.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpqiazl5v4.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpqiazl5v4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_number\
    \ = min(numbers);\n    float max_number = max(numbers);\n    float range = max_number\
    \ - min_number;\n    foreach(i, number; numbers)\n    {\n        result[i] = (number\
    \ - min_number) / range;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw5f4c79u.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpw5f4c79u.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpw5f4c79u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_number\
    \ = min(numbers);\n    float max_number = max(numbers);\n    float range = max_number\
    \ - min_number;\n    for (int i = 0; i < numbers.length; i++) \n    {\n      \
    \  result[i] = (numbers[i] - min_number) / range;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcqd7cqi_.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpcqd7cqi_.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpcqd7cqi_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_qd8cs6l.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp_qd8cs6l.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp_qd8cs6l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    foreach(float number; numbers)\n\
    \    {\n        if(number < min)\n            min = number;\n        if(number\
    \ > max)\n            max = number;\n    }\n    float range = max - min;\n   \
    \ foreach(int i; 0 .. numbers.length)\n    {\n        result[i] = (numbers[i]\
    \ - min) / range;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4cb1t77v.d(23): Error: cannot implicitly convert expression `numbers.length`\
    \ of type `ulong` to `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp4cb1t77v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ia3tqnc.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1ia3tqnc.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1ia3tqnc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float range = max - min;\n\
    \    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = (numbers[i]\
    \ - min) / range;\n    }\n    return result;\n}\n/*\n Given a list of numbers,\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float range = max - min;\n\
    \    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = (numbers[i]\
    \ - min) / range;\n    }\n    return result;\n}\n/*\n Given a list of numbers,\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float range = max - min;\n\
    \    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = (numbers[i]\
    \ - min) / range;\n    }\n    return result;\n}\n/*\n Given a list of numbers,\
    \ apply a linear transform to that list,\n    such\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk5eoii2q.d(60): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk5eoii2q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1af7xgwl.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp1af7xgwl.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp1af7xgwl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float range = max - min;\n\
    \    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = (numbers[i]\
    \ - min) / range;\n    }\n    return result;\n}\n/*\n Given a list of numbers,\
    \ return a list of the same numbers, but with the largest number\n    first and\
    \ the smallest number last.\n    >>> sort_by_magnitude([1.0, 2.0, 3.0, 4.0, 5.0])\n\
    \    [5.0, 4.0, 3.0, 2.0, 1.0]\n*/\nfloat[] sort_by_magnitude(float[] numbers)\
    \ \n{\n    float[] result = new float[numbers.length];\n    float[] sorted = numbers.dup;\n\
    \    sorted.sort;\n    for (int i = 0; i < numbers.length; i++)\n    {\n     \
    \   result[i] = sorted[numbers.length - 1 - i];\n    }\n    return result;\n}\n\
    /*\n Given a list of numbers, return a list of the same numbers, but with the\
    \ largest number\n    first and the smallest number last.\n    >>> sort_by_magnitude([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [5.0, 4.0, 3.0, 2.0, 1.0]\n*/\nfloat[] sort_by_magnitude(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float[] sorted\
    \ = numbers.dup;\n    sorted.sort;\n    for (int i = 0; i < numbers.length; i++)\n\
    \    {\n        result[i] = sorted[numbers.length - 1 - i];\n    }\n    return\
    \ result;\n}\n/*\n Given a list of numbers, return a list of the same numbers,\
    \ but with the largest number\n    first and the smallest number last.\n    >>>\
    \ sort_by_magnitude([1.0, 2.0,\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9k6ipglj.d(56): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k6ipglj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5257yixu.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp5257yixu.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp5257yixu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnv7m2dar.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpnv7m2dar.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpnv7m2dar.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, val; numbers)\n\
    \    {\n        result[i] = (val - min_val) / (max_val - min_val);\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaj1kht4s.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpaj1kht4s.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpaj1kht4s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6r7xdmk_.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp6r7xdmk_.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp6r7xdmk_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_number) / (max_number -\
    \ min_number);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppa__g0cx.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmppa__g0cx.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmppa__g0cx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp24kfrc_c.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp24kfrc_c.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp24kfrc_c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0vbt_dg9.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp0vbt_dg9.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp0vbt_dg9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, n; numbers)\n\
    \    {\n        result[i] = (n - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyhfig_dm.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpyhfig_dm.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpyhfig_dm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, val; numbers)\n\
    \    {\n        result[i] = (val - min_val) / (max_val - min_val);\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5_ik9lkf.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp5_ik9lkf.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp5_ik9lkf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairs([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3, 4)]\n\
    */\nTuple!(float, float)[] pairs(float[] numbers) \n{\n    Tuple!(float, float)[]\
    \ result = new Tuple!(float, float)[numbers.length - 1];\n    foreach(i, number;\
    \ numbers)\n    {\n        if (i < numbers.length - 1)\n        {\n          \
    \  result[i] = tuple(number, numbers[i + 1]);\n        }\n    }\n    return result;\n\
    }\n/*\n Given a list of tuples, return a list of numbers, where each number is\
    \ the average of the two numbers in the tuple\n    >>> averages([(1, 2), (2, 3),\
    \ (3, 4)])\n    [1.5, 2.5, 3.5]\n*/\nfloat[] averages(Tuple!(float, float)[] tuples)\
    \ \n{\n    float[] result = new float[tuples.length];\n    foreach(i, tuple; tuples)\n\
    \    {\n        result[i] = (tuple[0] + tuple[1]) / 2;\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of numbers, where each number is\
    \ the average of the two numbers in the tuple\n    >>> averages([1, 2, 3, 4])\n\
    \    [1.5, 2.5, 3.5]\n*/\nfloat[] averages(float[] numbers) \n{\n    return averages(pairs(numbers));\n\
    }\n/*\n Given a list of numbers, return a list of numbers, where each number is\
    \ the average of the two numbers in the tuple\n    >>> averages([1, 2, 3, 4])\n\
    unittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw64zy04g.d(61): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw64zy04g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_val) / (max_val - min_val);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkhr9e2jv.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpkhr9e2jv.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpkhr9e2jv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj2ij8muv.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpj2ij8muv.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpj2ij8muv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7yeply9y.d(12): Error: undefined identifier `minElement`\\n/tmp/tmp7yeply9y.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp7yeply9y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq42ymsdu.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpq42ymsdu.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpq42ymsdu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjij2tyop.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpjij2tyop.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpjij2tyop.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_val) / (max_val - min_val);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpverb_5ck.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpverb_5ck.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpverb_5ck.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpudv6ytpz.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpudv6ytpz.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpudv6ytpz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2tirqj0g.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp2tirqj0g.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp2tirqj0g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_val) / (max_val - min_val);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu_c3y7af.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpu_c3y7af.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpu_c3y7af.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz08oy0pq.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpz08oy0pq.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpz08oy0pq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_number = min(numbers);\n    float max_number = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\
    \ \n    {\n        result[i] = (number - min_number) / (max_number - min_number);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8vguqw8z.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp8vguqw8z.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp8vguqw8z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float max = numbers[0];\n    float min = numbers[0];\n   \
    \ foreach(n; numbers) \n    {\n        if (n > max) \n        {\n            max\
    \ = n;\n        }\n        if (n < min) \n        {\n            min = n;\n  \
    \      }\n    }\n    float[] result = new float[numbers.length];\n    foreach(i,\
    \ n; numbers) \n    {\n        result[i] = (n - min) / (max - min);\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprmba4856.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmprmba4856.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmprmba4856.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float range = max_value\
    \ - min_value;\n    for (int i = 0; i < numbers.length; i++) \n    {\n       \
    \ result[i] = (numbers[i] - min_value) / range;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi_ra9fzn.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpi_ra9fzn.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpi_ra9fzn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairwise([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3,\
    \ 4)]\n*/\nTuple!(float, float)[] pairwise(float[] numbers) \n{\n    Tuple!(float,\
    \ float)[] result = new Tuple!(float, float)[numbers.length - 1];\n    foreach(i,\
    \ number; numbers)\n    {\n        if (i > 0)\n        {\n            result[i\
    \ - 1] = tuple(numbers[i - 1], number);\n        }\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairwise([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3,\
    \ 4)]\n*/\nTuple!(float, float)[] pairwise(float[] numbers) \n{\n    Tuple!(float,\
    \ float)[] result = new Tuple!(float, float)[numbers.length - 1];\n    foreach(i,\
    \ number; numbers)\n    {\n        if (i > 0)\n        {\n            result[i\
    \ - 1] = tuple(numbers[i - 1], number);\n        }\n    }\n    return result;\n\
    }\n/*\n Given a list of numbers, return a list of tuples, where each tuple is\
    \ a pair of numbers\n    >>> pairwise([1, 2, 3, 4])\n    [(1, 2), (2, 3), (3,\
    \ 4)]\n*/\nTuple!(float, float)[] pairwise(float[] numbers) \n{\n    Tuple!(float,\
    \ float)[] result = new Tuple!(float, float)[numbers.length -\nunittest\n{\n \
    \   alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprfyvafte.d(63): Error: expression expected, not `unittest`\\\
    n/tmp/tmprfyvafte.d(64): Error: found `{` when expecting `]`\\n/tmp/tmprfyvafte.d(65):\
    \ Error: semicolon expected, not `alias`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmprfyvafte.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\
    \ \n    {\n        result[i] = (number - min) / (max - min);\n    }\n    return\
    \ result;\n}\n/*\n Given list of numbers (of at least two elements), apply a linear\
    \ transform to that list,\n    such that the smallest number will become 0 and\
    \ the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n\
    \    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers)\
    \ \n{\n    float min = min(numbers);\n    float max = max(numbers);\n    float[]\
    \ result = new float[numbers.length];\n    foreach(i, number; numbers) \n    {\n\
    \        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers) \n    {\n    \
    \    result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx0cjclbj.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx0cjclbj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp__6wtjvc.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp__6wtjvc.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp__6wtjvc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd4w8erzv.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpd4w8erzv.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpd4w8erzv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7gx4tq_u.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp7gx4tq_u.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7gx4tq_u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float max = numbers[0];\n    float min = numbers[0];\n   \
    \ foreach(n; numbers)\n    {\n        if(n > max)\n            max = n;\n    \
    \    if(n < min)\n            min = n;\n    }\n    float[] result = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        result[i] = (n - min) / (max - min);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_val\
    \ = min(numbers);\n    float max_val = max(numbers);\n    float range = max_val\
    \ - min_val;\n    for (int i = 0; i < numbers.length; i++)\n    {\n        result[i]\
    \ = (numbers[i] - min_val) / range;\n    }\n    return result;\n}\n/*\n Given\
    \ list of numbers (of at least two elements), apply a linear transform to that\
    \ list,\n    such that the smallest number will become 0 and the largest will\
    \ become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25,\
    \ 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n{\n  \
    \  float[] result = new float[numbers.length];\n    float min_val = min(numbers);\n\
    \    float max_val = max(numbers);\n    float range = max_val - min_val;\n   \
    \ for (int i = 0; i < numbers.length; i++)\n    {\n        result[i] = (numbers[i]\
    \ - min_val) / range;\n    }\n    return result;\n}\n/*\n Given list of numbers\
    \ (of at least two elements), apply a linear transform to that list,\n    such\
    \ that the smallest number will become 0 and the largest will become 1\n    >>>\
    \ rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n{\n    float[] result =\
    \ new float[numbers.length];\n    float min_val = min(numbers);\n    float max_val\
    \ = max(numbers);\n    float range = max_val - min_val;\n    for (int i = 0; i\
    \ < numbers.length; i++)\n    {\n        result[i] = (numbers[\nunittest\n{\n\
    \    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6574s0vi.d(57): Error: expression expected, not `unittest`\\\
    n/tmp/tmp6574s0vi.d(58): Error: found `{` when expecting `,`\\n/tmp/tmp6574s0vi.d(59):\
    \ Error: expression expected, not `alias`\\n/tmp/tmp6574s0vi.d(59): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmp6574s0vi.d(59): Error: expression expected,\
    \ not `=`\\n/tmp/tmp6574s0vi.d(59): Error: found `rescale_to_unit` when expecting\
    \ `,`\\n/tmp/tmp6574s0vi.d(59): Error: expression expected, not `;`\\n/tmp/tmp6574s0vi.d(61):\
    \ Error: found `assert` when expecting `,`\\n/tmp/tmp6574s0vi.d(61): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmp6574s0vi.d(62): Error: found `;` when expecting\
    \ `,`\\n/tmp/tmp6574s0vi.d(63): Error: found `;` when expecting `,`\\n/tmp/tmp6574s0vi.d(64):\
    \ Error: found `;` when expecting `,`\\n/tmp/tmp6574s0vi.d(65): Error: found `;`\
    \ when expecting `,`\\n/tmp/tmp6574s0vi.d(66): Error: expression expected, not\
    \ `}`\\n/tmp/tmp6574s0vi.d(67): Error: found `void` when expecting `,`\\n/tmp/tmp6574s0vi.d(67):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmp6574s0vi.d(67): Error: expression\
    \ expected, not `}`\\n/tmp/tmp6574s0vi.d(67): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmp6574s0vi.d(67): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmp6574s0vi.d(56): Error: found `End of File` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6574s0vi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9kg8gthp.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp9kg8gthp.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp9kg8gthp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo7hlxw9u.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpo7hlxw9u.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpo7hlxw9u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps5pylcv0.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmps5pylcv0.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmps5pylcv0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpydgbeiue.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpydgbeiue.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp61iof6i8.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp61iof6i8.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp61iof6i8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers) \n\
    {\n    float min = min(numbers);\n    float max = max(numbers);\n    float[] result\
    \ = new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n     \
    \   result[i] = (number - min) / (max - min);\n    }\n    return result;\n}\n\
    /*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4u7odej8.d(57): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4u7odej8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsbkrhpy3.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpsbkrhpy3.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpsbkrhpy3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\
    \ \n    {\n        result[i] = (number - min) / (max - min);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfwp_ymw7.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpfwp_ymw7.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpfwp_ymw7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxipxjft5.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpxipxjft5.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpxipxjft5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = minElement(numbers);\n    float max = maxElement(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf1ikb9cm.d(12): Error: undefined identifier `minElement`\\n/tmp/tmpf1ikb9cm.d(13):\
    \ Error: undefined identifier `maxElement`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpf1ikb9cm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given a list of numbers, return a list of tuples,\
    \ where each tuple contains the original index of the number,\n    the number\
    \ itself, and the number of times the number appears in the list\n    >>> list_with_counts([1,\
    \ 2, 3, 1, 2, 1, 1, 2, 3, 3, 3, 4, 5, 4, 6])\n    [(0, 1, 4), (1, 2, 3), (2, 3,\
    \ 3), (3, 4, 2), (4, 5, 1), (5, 6, 1)]\n*/\nTuple!(int, float, int)[] list_with_counts(float[]\
    \ numbers) \n{\n    Tuple!(int, float, int)[] result = new Tuple!(int, float,\
    \ int)[numbers.length];\n    for (int i = 0; i < numbers.length; i++) \n    {\n\
    \        int count = 0;\n        for (int j = 0; j < numbers.length; j++) \n \
    \       {\n            if (numbers[i] == numbers[j]) \n            {\n       \
    \         count++;\n            }\n        }\n        result[i] = tuple(i, numbers[i],\
    \ count);\n    }\n    return result;\n}\n/*\n Given a list of numbers, return\
    \ a list of tuples, where each tuple contains the original index of the number,\n\
    \    the number itself, and the number of times the number appears in the list\n\
    \    >>> list_with_counts([1, 2, 3, 1, 2, 1, 1, 2, 3, 3, 3, 4, 5, 4, 6])\n   \
    \ [(0, 1, 4), (1, 2, 3), (2, 3, 3), (3, 4, 2), (4, 5, 1), (5, 6, 1)]\n*/\nT\n\
    unittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz7cvopiy.d(51): Error: no identifier for declarator `T`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz7cvopiy.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkj2dzx3m.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpkj2dzx3m.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpkj2dzx3m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmple119xxm.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmple119xxm.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmple119xxm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result;\n    float max = max(numbers);\n    float\
    \ min = min(numbers);\n    float range = max - min;\n    foreach(i, number; numbers)\n\
    \    {\n        result ~= (number - min) / range;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp743dn5f0.d(13): Error: undefined identifier `max`, did you mean\
    \ function `fmax`?\\n/tmp/tmp743dn5f0.d(14): Error: undefined identifier `min`,\
    \ did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp743dn5f0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaglznrwh.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpaglznrwh.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpaglznrwh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the first element moved to the end.\n    >>> rotate_list([1,\
    \ 2, 3, 4, 5])\n    [2, 3, 4, 5, 1]\n*/\nfloat[] rotate_list(float[] numbers)\
    \ \n{\n    float[] result = new float[numbers.length];\n    for (int i = 0; i\
    \ < numbers.length; i++)\n    {\n        result[i] = numbers[(i + 1) % numbers.length];\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the first element moved to the end.\n    >>> rotate_list([1,\
    \ 2, 3, 4, 5])\n    [2, 3, 4, 5, 1]\n*/\nfloat[] rotate_list(float[] numbers)\
    \ \n{\n    float[] result = new float[numbers.length];\n    for (int i = 0; i\
    \ < numbers.length; i++)\n    {\n        result[i] = numbers[(i + 1) % numbers.length];\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the first element moved to the end.\n    >>> rotate_list([1,\
    \ 2, 3, 4, 5])\n    [2, 3, 4, 5, 1]\n*/\nfloat[] rotate_list(float[] numbers)\
    \ \n{\n    float[] result = new float[numbers.length];\n    for (int i = 0; i\
    \ < numbers.length; i++)\n    {\n        result[i] = numbers[(i + 1) % numbers.length];\n\
    \    }\n    return result;\n}\n/*\n Given a list\nunittest\n{\n    alias candidate\
    \ = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n  \
    \  assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmply6d9awb.d(63): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmply6d9awb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min_value\
    \ = min(numbers);\n    float max_value = max(numbers);\n    float range = max_value\
    \ - min_value;\n    for (int i = 0; i < numbers.length; i++) \n    {\n       \
    \ result[i] = (numbers[i] - min_value) / range;\n    }\n    return result;\n}\n\
    /*\n Given a list of numbers, return a list of the same numbers, but with the\
    \ first element moved to the end of the list.\n    >>> rotate_list([1, 2, 3, 4,\
    \ 5])\n    [2, 3, 4, 5, 1]\n*/\nfloat[] rotate_list(float[] numbers) \n{\n   \
    \ float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = numbers[(i + 1) % numbers.length];\n    }\n\
    \    return result;\n}\n/*\n Given a list of numbers, return a list of the same\
    \ numbers, but with the first element moved to the end of the list.\n    >>> rotate_list([1,\
    \ 2, 3, 4, 5])\n    [2, 3, 4, 5, 1]\n*/\nfloat[] rotate_list(float[] numbers)\
    \ \n{\n    float[] result = new float[numbers.length];\n    for (int i = 0; i\
    \ < numbers.length; i++) \n    {\n        result[i] = numbers[(i + 1) % numbers.length];\n\
    \    }\n    return result;\n}\n/*\n Given a list of numbers, return a list of\
    \ the same numbers, but with the first element moved to the end of the list.\n\
    \    >>> rotate_list([1, 2, 3, 4, 5])\n    [2, 3, 4, 5, 1]\n*/\nfloat[] rotate_list(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        result[i] = numbers[(i + 1)\
    \ % numbers\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmkcx4707.d(61): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmpmkcx4707.d(71): Error: found `void` when expecting `,`\\n/tmp/tmpmkcx4707.d(71):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpmkcx4707.d(71): Error: expression\
    \ expected, not `}`\\n/tmp/tmpmkcx4707.d(71): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpmkcx4707.d(71): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmpmkcx4707.d(71): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmpmkcx4707.d(71): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpmkcx4707.d(71): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmkcx4707.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    foreach(i, number; numbers)\n\
    \    {\n        if(number < min)\n            min = number;\n        if(number\
    \ > max)\n            max = number;\n    }\n    float range = max - min;\n   \
    \ foreach(i, number; numbers)\n    {\n        result[i] = (number - min) / range;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\n/*\n Given list of numbers (of at least two elements),\
    \ apply a linear transform to that list,\n    such that the smallest number will\
    \ become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n   \nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp80mmqsle.d(56): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp80mmqsle.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = numbers[0];\n    float max = numbers[0];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        if (numbers[i] < min) \n        {\n            min = numbers[i];\n\
    \        }\n        if (numbers[i] > max) \n        {\n            max = numbers[i];\n\
    \        }\n    }\n    for (int i = 0; i < numbers.length; i++) \n    {\n    \
    \    result[i] = (numbers[i] - min) / (max - min);\n    }\n    return result;\n\
    }\n/*\n Given list of numbers (of at least two elements), apply a linear transform\
    \ to that list,\n    such that the smallest number will become 0 and the largest\
    \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[] numbers, float\
    \ min, float max) \n{\n    float[] result = new float[numbers.length];\n    for\
    \ (int i = 0; i < numbers.length; i++) \n    {\n        result[i] = (numbers[i]\
    \ - min) / (max - min);\n    }\n    return result;\n}\n/*\n Given list of numbers\
    \ (of at least two elements), apply a linear transform to that list,\n    such\
    \ that the smallest number will become 0 and the largest will become 1\n    >>>\
    \ rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    \n*/\nfloat[] rescale_to_unit(float[] numbers, float[] min, float[] max)\
    \ \n{\n    float[] result = new float[numbers.length];\n    for (int i = 0; i\
    \ < numbers.length; i++) \n    {\n        result[i] =\nunittest\n{\n    alias\
    \ candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n\
    \    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpasnboaqe.d(61): Error: expression expected, not `unittest`\\\
    n/tmp/tmpasnboaqe.d(62): Error: found `{` when expecting `;` following statement\\\
    n/tmp/tmpasnboaqe.d(71): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpasnboaqe.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\n/*\n Given a list of numbers, return a list of the same\
    \ numbers,\n    but with the largest number in the list at the front\n    >>>\
    \ move_largest_to_front([1.0, 2.0, 3.0, 4.0, 5.0])\n    [5.0, 1.0, 2.0, 3.0, 4.0]\n\
    */\nfloat[] move_largest_to_front(float[] numbers) \n{\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    int index = 0;\n    for\
    \ (int i = 0; i < numbers.length; i++)\n    {\n        if (numbers[i] == max)\n\
    \        {\n            index = i;\n        }\n    }\n    result[0] = max;\n \
    \   int j = 1;\n    for (int i = 0; i < numbers.length; i++)\n    {\n        if\
    \ (i != index)\n        {\n            result[j] = numbers[i];\n            j++;\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a list of numbers, return\
    \ a list of the same numbers,\n    but with the largest number in the list at\
    \ the back\n    >>> move_largest_to_back([1.0, 2.0, 3.0, 4.0, 5.0])\n    [1.0,\
    \ 2.0, 3.0, 4.0, 5.0]\n*/\nfloat[] move_largest_to_back(float[] numbers) \n{\n\
    \    float max = max(numbers);\n    float[] result = new float[numbers.length];\n\
    \    int index = 0;\n    for (int i = 0; i < numbers.length; i++)\n    {\n   \
    \     if (numbers[i] == max)\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3rawzqx.d(65): Error: found `unittest` instead of statement\\\
    n/tmp/tmpn3rawzqx.d(75): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3rawzqx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min) / (max - min);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n\
    \    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4oz9wyo9.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4oz9wyo9.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4oz9wyo9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_val = min(numbers);\n    float max_val = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_val) / (max_val - min_val);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4s5sbc_h.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp4s5sbc_h.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4s5sbc_h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float min\
    \ = min(numbers);\n    float max = max(numbers);\n    float range = max - min;\n\
    \    foreach(i, number; numbers)\n    {\n        result[i] = (number - min) /\
    \ range;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyh1y_ryx.d(13): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpyh1y_ryx.d(14): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpyh1y_ryx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp12eyfmfm.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp12eyfmfm.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp12eyfmfm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float[] result = new float[numbers.length];\n    float max\
    \ = numbers[0];\n    float min = numbers[0];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        if (numbers[i] > max)\n        {\n            max = numbers[i];\n\
    \        }\n        if (numbers[i] < min)\n        {\n            min = numbers[i];\n\
    \        }\n    }\n    for (int i = 0; i < numbers.length; i++)\n    {\n     \
    \   result[i] = (numbers[i] - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min = min(numbers);\n    float max = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        result[i] = (number - min) / (max - min);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n\
    \    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n\
    \    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n\
    \    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3_xcx1_t.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp3_xcx1_t.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp3_xcx1_t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp55i3v4tz.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp55i3v4tz.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp55i3v4tz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Given list of numbers (of\
    \ at least two elements), apply a linear transform to that list,\n    such that\
    \ the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \n*/\nfloat[] rescale_to_unit(float[]\
    \ numbers) \n{\n    float min_value = min(numbers);\n    float max_value = max(numbers);\n\
    \    float[] result = new float[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++)\n    {\n        result[i] = (numbers[i] - min_value) / (max_value - min_value);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\
    \n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0,\
    \ 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphueplaex.d(12): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmphueplaex.d(13): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmphueplaex.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
